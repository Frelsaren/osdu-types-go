// Code generated from JSON Schema using quicktype. DO NOT EDIT.
// To parse and unparse this JSON data, add this code to your project and do:
//
//    activity, err := UnmarshalActivity(bytes)
//    bytes, err = activity.Marshal()
//
//    aquiferInterpretation, err := UnmarshalAquiferInterpretation(bytes)
//    bytes, err = aquiferInterpretation.Marshal()
//
//    biostratigraphicStudy, err := UnmarshalBiostratigraphicStudy(bytes)
//    bytes, err = biostratigraphicStudy.Marshal()
//
//    cementJob, err := UnmarshalCementJob(bytes)
//    bytes, err = cementJob.Marshal()
//
//    collaborationProjectCollection, err := UnmarshalCollaborationProjectCollection(bytes)
//    bytes, err = collaborationProjectCollection.Marshal()
//
//    columnBasedTable, err := UnmarshalColumnBasedTable(bytes)
//    bytes, err = columnBasedTable.Marshal()
//
//    dataQuality, err := UnmarshalDataQuality(bytes)
//    bytes, err = dataQuality.Marshal()
//
//    dataQualitySummary, err := UnmarshalDataQualitySummary(bytes)
//    bytes, err = dataQualitySummary.Marshal()
//
//    document, err := UnmarshalDocument(bytes)
//    bytes, err = document.Marshal()
//
//    downtimeEvent, err := UnmarshalDowntimeEvent(bytes)
//    bytes, err = downtimeEvent.Marshal()
//
//    earthModelInterpretation, err := UnmarshalEarthModelInterpretation(bytes)
//    bytes, err = earthModelInterpretation.Marshal()
//
//    faultInterpretation, err := UnmarshalFaultInterpretation(bytes)
//    bytes, err = faultInterpretation.Marshal()
//
//    faultSystem, err := UnmarshalFaultSystem(bytes)
//    bytes, err = faultSystem.Marshal()
//
//    flowTest, err := UnmarshalFlowTest(bytes)
//    bytes, err = flowTest.Marshal()
//
//    fluidBoundaryInterpretation, err := UnmarshalFluidBoundaryInterpretation(bytes)
//    bytes, err = fluidBoundaryInterpretation.Marshal()
//
//    formationIntegrityTest, err := UnmarshalFormationIntegrityTest(bytes)
//    bytes, err = formationIntegrityTest.Marshal()
//
//    genericImage, err := UnmarshalGenericImage(bytes)
//    bytes, err = genericImage.Marshal()
//
//    genericProperty, err := UnmarshalGenericProperty(bytes)
//    bytes, err = genericProperty.Marshal()
//
//    genericRepresentation, err := UnmarshalGenericRepresentation(bytes)
//    bytes, err = genericRepresentation.Marshal()
//
//    geoLabelSet, err := UnmarshalGeoLabelSet(bytes)
//    bytes, err = geoLabelSet.Marshal()
//
//    geoReferencedImage, err := UnmarshalGeoReferencedImage(bytes)
//    bytes, err = geoReferencedImage.Marshal()
//
//    geobodyBoundaryInterpretation, err := UnmarshalGeobodyBoundaryInterpretation(bytes)
//    bytes, err = geobodyBoundaryInterpretation.Marshal()
//
//    geobodyInterpretation, err := UnmarshalGeobodyInterpretation(bytes)
//    bytes, err = geobodyInterpretation.Marshal()
//
//    geologicUnitOccurrenceInterpretation, err := UnmarshalGeologicUnitOccurrenceInterpretation(bytes)
//    bytes, err = geologicUnitOccurrenceInterpretation.Marshal()
//
//    gpGridRepresentation, err := UnmarshalGpGridRepresentation(bytes)
//    bytes, err = gpGridRepresentation.Marshal()
//
//    gridConnectionSetRepresentation, err := UnmarshalGridConnectionSetRepresentation(bytes)
//    bytes, err = gridConnectionSetRepresentation.Marshal()
//
//    horizonInterpretation, err := UnmarshalHorizonInterpretation(bytes)
//    bytes, err = horizonInterpretation.Marshal()
//
//    ijkGridNumericalAquiferRepresentation, err := UnmarshalIjkGridNumericalAquiferRepresentation(bytes)
//    bytes, err = ijkGridNumericalAquiferRepresentation.Marshal()
//
//    ijkGridRepresentation, err := UnmarshalIjkGridRepresentation(bytes)
//    bytes, err = ijkGridRepresentation.Marshal()
//
//    localBoundaryFeature, err := UnmarshalLocalBoundaryFeature(bytes)
//    bytes, err = localBoundaryFeature.Marshal()
//
//    localModelCompoundCRS, err := UnmarshalLocalModelCompoundCRS(bytes)
//    bytes, err = localModelCompoundCRS.Marshal()
//
//    localModelFeature, err := UnmarshalLocalModelFeature(bytes)
//    bytes, err = localModelFeature.Marshal()
//
//    localRockVolumeFeature, err := UnmarshalLocalRockVolumeFeature(bytes)
//    bytes, err = localRockVolumeFeature.Marshal()
//
//    notionalSeismicLine, err := UnmarshalNotionalSeismicLine(bytes)
//    bytes, err = notionalSeismicLine.Marshal()
//
//    pPFGDataset, err := UnmarshalPPFGDataset(bytes)
//    bytes, err = pPFGDataset.Marshal()
//
//    persistedCollection, err := UnmarshalPersistedCollection(bytes)
//    bytes, err = persistedCollection.Marshal()
//
//    plannedLithology, err := UnmarshalPlannedLithology(bytes)
//    bytes, err = plannedLithology.Marshal()
//
//    processedInSAR, err := UnmarshalProcessedInSAR(bytes)
//    bytes, err = processedInSAR.Marshal()
//
//    productionValues, err := UnmarshalProductionValues(bytes)
//    bytes, err = productionValues.Marshal()
//
//    reservoirCompartmentInterpretation, err := UnmarshalReservoirCompartmentInterpretation(bytes)
//    bytes, err = reservoirCompartmentInterpretation.Marshal()
//
//    reservoirEstimatedVolumes, err := UnmarshalReservoirEstimatedVolumes(bytes)
//    bytes, err = reservoirEstimatedVolumes.Marshal()
//
//    reservoirModelScenario, err := UnmarshalReservoirModelScenario(bytes)
//    bytes, err = reservoirModelScenario.Marshal()
//
//    rockFluidOrganizationInterpretation, err := UnmarshalRockFluidOrganizationInterpretation(bytes)
//    bytes, err = rockFluidOrganizationInterpretation.Marshal()
//
//    rockFluidUnitInterpretation, err := UnmarshalRockFluidUnitInterpretation(bytes)
//    bytes, err = rockFluidUnitInterpretation.Marshal()
//
//    rockImage, err := UnmarshalRockImage(bytes)
//    bytes, err = rockImage.Marshal()
//
//    rockSampleAnalysis, err := UnmarshalRockSampleAnalysis(bytes)
//    bytes, err = rockSampleAnalysis.Marshal()
//
//    sampleImage, err := UnmarshalSampleImage(bytes)
//    bytes, err = sampleImage.Marshal()
//
//    samplesAnalysesReport, err := UnmarshalSamplesAnalysesReport(bytes)
//    bytes, err = samplesAnalysesReport.Marshal()
//
//    samplesAnalysis, err := UnmarshalSamplesAnalysis(bytes)
//    bytes, err = samplesAnalysis.Marshal()
//
//    sealedSurfaceFramework, err := UnmarshalSealedSurfaceFramework(bytes)
//    bytes, err = sealedSurfaceFramework.Marshal()
//
//    sealedVolumeFramework, err := UnmarshalSealedVolumeFramework(bytes)
//    bytes, err = sealedVolumeFramework.Marshal()
//
//    seismicAcquisitionDocuments, err := UnmarshalSeismicAcquisitionDocuments(bytes)
//    bytes, err = seismicAcquisitionDocuments.Marshal()
//
//    seismicBinGrid, err := UnmarshalSeismicBinGrid(bytes)
//    bytes, err = seismicBinGrid.Marshal()
//
//    seismicFault, err := UnmarshalSeismicFault(bytes)
//    bytes, err = seismicFault.Marshal()
//
//    seismicFieldTraceData, err := UnmarshalSeismicFieldTraceData(bytes)
//    bytes, err = seismicFieldTraceData.Marshal()
//
//    seismicHorizon, err := UnmarshalSeismicHorizon(bytes)
//    bytes, err = seismicHorizon.Marshal()
//
//    seismicLineGeometry, err := UnmarshalSeismicLineGeometry(bytes)
//    bytes, err = seismicLineGeometry.Marshal()
//
//    seismicTraceData, err := UnmarshalSeismicTraceData(bytes)
//    bytes, err = seismicTraceData.Marshal()
//
//    soilGasMonitoring, err := UnmarshalSoilGasMonitoring(bytes)
//    bytes, err = soilGasMonitoring.Marshal()
//
//    stimulationJob, err := UnmarshalStimulationJob(bytes)
//    bytes, err = stimulationJob.Marshal()
//
//    stimulationStage, err := UnmarshalStimulationStage(bytes)
//    bytes, err = stimulationStage.Marshal()
//
//    stratigraphicColumn, err := UnmarshalStratigraphicColumn(bytes)
//    bytes, err = stratigraphicColumn.Marshal()
//
//    stratigraphicColumnRankInterpretation, err := UnmarshalStratigraphicColumnRankInterpretation(bytes)
//    bytes, err = stratigraphicColumnRankInterpretation.Marshal()
//
//    stratigraphicUnitInterpretation, err := UnmarshalStratigraphicUnitInterpretation(bytes)
//    bytes, err = stratigraphicUnitInterpretation.Marshal()
//
//    structuralOrganizationInterpretation, err := UnmarshalStructuralOrganizationInterpretation(bytes)
//    bytes, err = structuralOrganizationInterpretation.Marshal()
//
//    subRepresentation, err := UnmarshalSubRepresentation(bytes)
//    bytes, err = subRepresentation.Marshal()
//
//    timeSeries, err := UnmarshalTimeSeries(bytes)
//    bytes, err = timeSeries.Marshal()
//
//    tubularAssembly, err := UnmarshalTubularAssembly(bytes)
//    bytes, err = tubularAssembly.Marshal()
//
//    tubularComponent, err := UnmarshalTubularComponent(bytes)
//    bytes, err = tubularComponent.Marshal()
//
//    tubularExternalComponent, err := UnmarshalTubularExternalComponent(bytes)
//    bytes, err = tubularExternalComponent.Marshal()
//
//    tubularUmbilical, err := UnmarshalTubularUmbilical(bytes)
//    bytes, err = tubularUmbilical.Marshal()
//
//    unsealedSurfaceFramework, err := UnmarshalUnsealedSurfaceFramework(bytes)
//    bytes, err = unsealedSurfaceFramework.Marshal()
//
//    unstructuredColumnLayerGridRepresentation, err := UnmarshalUnstructuredColumnLayerGridRepresentation(bytes)
//    bytes, err = unstructuredColumnLayerGridRepresentation.Marshal()
//
//    unstructuredGridRepresentation, err := UnmarshalUnstructuredGridRepresentation(bytes)
//    bytes, err = unstructuredGridRepresentation.Marshal()
//
//    velocityModeling, err := UnmarshalVelocityModeling(bytes)
//    bytes, err = velocityModeling.Marshal()
//
//    voidageGroupInterpretation, err := UnmarshalVoidageGroupInterpretation(bytes)
//    bytes, err = voidageGroupInterpretation.Marshal()
//
//    wellFluidsReport, err := UnmarshalWellFluidsReport(bytes)
//    bytes, err = wellFluidsReport.Marshal()
//
//    wellLog, err := UnmarshalWellLog(bytes)
//    bytes, err = wellLog.Marshal()
//
//    wellMAASP, err := UnmarshalWellMAASP(bytes)
//    bytes, err = wellMAASP.Marshal()
//
//    wellOperationsReport, err := UnmarshalWellOperationsReport(bytes)
//    bytes, err = wellOperationsReport.Marshal()
//
//    wellOpsNonProductiveTime, err := UnmarshalWellOpsNonProductiveTime(bytes)
//    bytes, err = wellOpsNonProductiveTime.Marshal()
//
//    wellPressureTestRawMeasurement, err := UnmarshalWellPressureTestRawMeasurement(bytes)
//    bytes, err = wellPressureTestRawMeasurement.Marshal()
//
//    wellboreIntervalSet, err := UnmarshalWellboreIntervalSet(bytes)
//    bytes, err = wellboreIntervalSet.Marshal()
//
//    wellboreMarkerSet, err := UnmarshalWellboreMarkerSet(bytes)
//    bytes, err = wellboreMarkerSet.Marshal()
//
//    wellboreTrajectory, err := UnmarshalWellboreTrajectory(bytes)
//    bytes, err = wellboreTrajectory.Marshal()

package workproductcomponent

import "bytes"
import "errors"
import "time"

import "encoding/json"

func UnmarshalActivity(data []byte) (Activity, error) {
	var r Activity
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Activity) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalAquiferInterpretation(data []byte) (AquiferInterpretation, error) {
	var r AquiferInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *AquiferInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBiostratigraphicStudy(data []byte) (BiostratigraphicStudy, error) {
	var r BiostratigraphicStudy
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BiostratigraphicStudy) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalCementJob(data []byte) (CementJob, error) {
	var r CementJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *CementJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalCollaborationProjectCollection(data []byte) (CollaborationProjectCollection, error) {
	var r CollaborationProjectCollection
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *CollaborationProjectCollection) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalColumnBasedTable(data []byte) (ColumnBasedTable, error) {
	var r ColumnBasedTable
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ColumnBasedTable) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalDataQuality(data []byte) (DataQuality, error) {
	var r DataQuality
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *DataQuality) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalDataQualitySummary(data []byte) (DataQualitySummary, error) {
	var r DataQualitySummary
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *DataQualitySummary) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalDocument(data []byte) (Document, error) {
	var r Document
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Document) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalDowntimeEvent(data []byte) (DowntimeEvent, error) {
	var r DowntimeEvent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *DowntimeEvent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalEarthModelInterpretation(data []byte) (EarthModelInterpretation, error) {
	var r EarthModelInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *EarthModelInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFaultInterpretation(data []byte) (FaultInterpretation, error) {
	var r FaultInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FaultInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFaultSystem(data []byte) (FaultSystem, error) {
	var r FaultSystem
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FaultSystem) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFlowTest(data []byte) (FlowTest, error) {
	var r FlowTest
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FlowTest) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFluidBoundaryInterpretation(data []byte) (FluidBoundaryInterpretation, error) {
	var r FluidBoundaryInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FluidBoundaryInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFormationIntegrityTest(data []byte) (FormationIntegrityTest, error) {
	var r FormationIntegrityTest
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FormationIntegrityTest) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGenericImage(data []byte) (GenericImage, error) {
	var r GenericImage
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GenericImage) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGenericProperty(data []byte) (GenericProperty, error) {
	var r GenericProperty
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GenericProperty) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGenericRepresentation(data []byte) (GenericRepresentation, error) {
	var r GenericRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GenericRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeoLabelSet(data []byte) (GeoLabelSet, error) {
	var r GeoLabelSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeoLabelSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeoReferencedImage(data []byte) (GeoReferencedImage, error) {
	var r GeoReferencedImage
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeoReferencedImage) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeobodyBoundaryInterpretation(data []byte) (GeobodyBoundaryInterpretation, error) {
	var r GeobodyBoundaryInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeobodyBoundaryInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeobodyInterpretation(data []byte) (GeobodyInterpretation, error) {
	var r GeobodyInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeobodyInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeologicUnitOccurrenceInterpretation(data []byte) (GeologicUnitOccurrenceInterpretation, error) {
	var r GeologicUnitOccurrenceInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeologicUnitOccurrenceInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGpGridRepresentation(data []byte) (GpGridRepresentation, error) {
	var r GpGridRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GpGridRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGridConnectionSetRepresentation(data []byte) (GridConnectionSetRepresentation, error) {
	var r GridConnectionSetRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GridConnectionSetRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalHorizonInterpretation(data []byte) (HorizonInterpretation, error) {
	var r HorizonInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *HorizonInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalIjkGridNumericalAquiferRepresentation(data []byte) (IjkGridNumericalAquiferRepresentation, error) {
	var r IjkGridNumericalAquiferRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *IjkGridNumericalAquiferRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalIjkGridRepresentation(data []byte) (IjkGridRepresentation, error) {
	var r IjkGridRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *IjkGridRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalLocalBoundaryFeature(data []byte) (LocalBoundaryFeature, error) {
	var r LocalBoundaryFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *LocalBoundaryFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalLocalModelCompoundCRS(data []byte) (LocalModelCompoundCRS, error) {
	var r LocalModelCompoundCRS
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *LocalModelCompoundCRS) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalLocalModelFeature(data []byte) (LocalModelFeature, error) {
	var r LocalModelFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *LocalModelFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalLocalRockVolumeFeature(data []byte) (LocalRockVolumeFeature, error) {
	var r LocalRockVolumeFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *LocalRockVolumeFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalNotionalSeismicLine(data []byte) (NotionalSeismicLine, error) {
	var r NotionalSeismicLine
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *NotionalSeismicLine) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPPFGDataset(data []byte) (PPFGDataset, error) {
	var r PPFGDataset
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PPFGDataset) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPersistedCollection(data []byte) (PersistedCollection, error) {
	var r PersistedCollection
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PersistedCollection) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPlannedLithology(data []byte) (PlannedLithology, error) {
	var r PlannedLithology
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PlannedLithology) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalProcessedInSAR(data []byte) (ProcessedInSAR, error) {
	var r ProcessedInSAR
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ProcessedInSAR) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalProductionValues(data []byte) (ProductionValues, error) {
	var r ProductionValues
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ProductionValues) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReservoirCompartmentInterpretation(data []byte) (ReservoirCompartmentInterpretation, error) {
	var r ReservoirCompartmentInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ReservoirCompartmentInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReservoirEstimatedVolumes(data []byte) (ReservoirEstimatedVolumes, error) {
	var r ReservoirEstimatedVolumes
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ReservoirEstimatedVolumes) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReservoirModelScenario(data []byte) (ReservoirModelScenario, error) {
	var r ReservoirModelScenario
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ReservoirModelScenario) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockFluidOrganizationInterpretation(data []byte) (RockFluidOrganizationInterpretation, error) {
	var r RockFluidOrganizationInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockFluidOrganizationInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockFluidUnitInterpretation(data []byte) (RockFluidUnitInterpretation, error) {
	var r RockFluidUnitInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockFluidUnitInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockImage(data []byte) (RockImage, error) {
	var r RockImage
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockImage) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockSampleAnalysis(data []byte) (RockSampleAnalysis, error) {
	var r RockSampleAnalysis
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockSampleAnalysis) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSampleImage(data []byte) (SampleImage, error) {
	var r SampleImage
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SampleImage) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSamplesAnalysesReport(data []byte) (SamplesAnalysesReport, error) {
	var r SamplesAnalysesReport
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SamplesAnalysesReport) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSamplesAnalysis(data []byte) (SamplesAnalysis, error) {
	var r SamplesAnalysis
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SamplesAnalysis) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSealedSurfaceFramework(data []byte) (SealedSurfaceFramework, error) {
	var r SealedSurfaceFramework
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SealedSurfaceFramework) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSealedVolumeFramework(data []byte) (SealedVolumeFramework, error) {
	var r SealedVolumeFramework
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SealedVolumeFramework) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicAcquisitionDocuments(data []byte) (SeismicAcquisitionDocuments, error) {
	var r SeismicAcquisitionDocuments
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicAcquisitionDocuments) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicBinGrid(data []byte) (SeismicBinGrid, error) {
	var r SeismicBinGrid
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicBinGrid) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicFault(data []byte) (SeismicFault, error) {
	var r SeismicFault
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicFault) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicFieldTraceData(data []byte) (SeismicFieldTraceData, error) {
	var r SeismicFieldTraceData
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicFieldTraceData) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicHorizon(data []byte) (SeismicHorizon, error) {
	var r SeismicHorizon
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicHorizon) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicLineGeometry(data []byte) (SeismicLineGeometry, error) {
	var r SeismicLineGeometry
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicLineGeometry) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicTraceData(data []byte) (SeismicTraceData, error) {
	var r SeismicTraceData
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicTraceData) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSoilGasMonitoring(data []byte) (SoilGasMonitoring, error) {
	var r SoilGasMonitoring
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SoilGasMonitoring) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStimulationJob(data []byte) (StimulationJob, error) {
	var r StimulationJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StimulationJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStimulationStage(data []byte) (StimulationStage, error) {
	var r StimulationStage
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StimulationStage) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStratigraphicColumn(data []byte) (StratigraphicColumn, error) {
	var r StratigraphicColumn
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StratigraphicColumn) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStratigraphicColumnRankInterpretation(data []byte) (StratigraphicColumnRankInterpretation, error) {
	var r StratigraphicColumnRankInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StratigraphicColumnRankInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStratigraphicUnitInterpretation(data []byte) (StratigraphicUnitInterpretation, error) {
	var r StratigraphicUnitInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StratigraphicUnitInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStructuralOrganizationInterpretation(data []byte) (StructuralOrganizationInterpretation, error) {
	var r StructuralOrganizationInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StructuralOrganizationInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSubRepresentation(data []byte) (SubRepresentation, error) {
	var r SubRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SubRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTimeSeries(data []byte) (TimeSeries, error) {
	var r TimeSeries
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TimeSeries) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularAssembly(data []byte) (TubularAssembly, error) {
	var r TubularAssembly
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularAssembly) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularComponent(data []byte) (TubularComponent, error) {
	var r TubularComponent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularComponent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularExternalComponent(data []byte) (TubularExternalComponent, error) {
	var r TubularExternalComponent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularExternalComponent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularUmbilical(data []byte) (TubularUmbilical, error) {
	var r TubularUmbilical
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularUmbilical) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalUnsealedSurfaceFramework(data []byte) (UnsealedSurfaceFramework, error) {
	var r UnsealedSurfaceFramework
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *UnsealedSurfaceFramework) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalUnstructuredColumnLayerGridRepresentation(data []byte) (UnstructuredColumnLayerGridRepresentation, error) {
	var r UnstructuredColumnLayerGridRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *UnstructuredColumnLayerGridRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalUnstructuredGridRepresentation(data []byte) (UnstructuredGridRepresentation, error) {
	var r UnstructuredGridRepresentation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *UnstructuredGridRepresentation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalVelocityModeling(data []byte) (VelocityModeling, error) {
	var r VelocityModeling
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *VelocityModeling) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalVoidageGroupInterpretation(data []byte) (VoidageGroupInterpretation, error) {
	var r VoidageGroupInterpretation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *VoidageGroupInterpretation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellFluidsReport(data []byte) (WellFluidsReport, error) {
	var r WellFluidsReport
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellFluidsReport) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellLog(data []byte) (WellLog, error) {
	var r WellLog
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellLog) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellMAASP(data []byte) (WellMAASP, error) {
	var r WellMAASP
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellMAASP) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellOperationsReport(data []byte) (WellOperationsReport, error) {
	var r WellOperationsReport
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellOperationsReport) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellOpsNonProductiveTime(data []byte) (WellOpsNonProductiveTime, error) {
	var r WellOpsNonProductiveTime
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellOpsNonProductiveTime) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellPressureTestRawMeasurement(data []byte) (WellPressureTestRawMeasurement, error) {
	var r WellPressureTestRawMeasurement
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellPressureTestRawMeasurement) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellboreIntervalSet(data []byte) (WellboreIntervalSet, error) {
	var r WellboreIntervalSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellboreIntervalSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellboreMarkerSet(data []byte) (WellboreMarkerSet, error) {
	var r WellboreMarkerSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellboreMarkerSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellboreTrajectory(data []byte) (WellboreTrajectory, error) {
	var r WellboreTrajectory
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellboreTrajectory) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

// Instance of a given activity
type Activity struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ActivityData                  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// The access control tags associated with this entity.
//
// The access control tags associated with this entity. This structure is included by the
// SystemProperties "acl", which is part of all OSDU records. Not extensible.
type AccessControlList struct {
	// The list of owners of this data record formatted as an email                                    
	// (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).                               
	Owners                                                                                    []string `json:"owners"`
	// The list of viewers to which this data record is accessible/visible/discoverable                
	// formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).         
	Viewers                                                                                   []string `json:"viewers"`
}

// The links to data, which constitute the inputs, from which this record instance is
// derived.
//
// A list of entity id:version references to record instances recorded in the data platform,
// from which the current record is derived and from which the legal tags must be derived.
// This structure is included by the SystemProperties "ancestry", which is part of all OSDU
// records. Not extensible.
type ParentList struct {
	// An array of none, one or many entity references of 'direct parents' in the data platform,         
	// which mark the current record as a derivative. In contrast to other relationships, the            
	// source record version is required. During record creation or update the                           
	// ancestry.parents[] relationships are used to collect the legal tags from the sources and          
	// aggregate them in the legal.legaltags[] array. As a consequence, should e.g., one or more         
	// of the legal tags of the source data expire, the access to the derivatives is also                
	// terminated. For details, see ComplianceService tutorial, 'Creating derivative Records'.           
	Parents                                                                                     []string `json:"parents,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The activity abstraction included by projects (master-data) and work-product-component
// group-type specialisations.
type ActivityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                                    
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                                
	ActivityStates                                                                              []AbstractActivityState                        `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                                
	// values.                                                                                                                                 
	ActivityTemplateID                                                                          *string                                        `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                               
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                                 
	// empty.                                                                                                                                  
	LastActivityState                                                                           *AbstractActivityState                         `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                                   
	// objects which are inputs and outputs of the activity.                                                                                   
	Parameters                                                                                  []AbstractActivityParameter                    `json:"Parameters"`
	// The relationship to a parent activity.                                                                                                  
	ParentActivityID                                                                            *string                                        `json:"ParentActivityID,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                                       
	ParentProjectID                                                                             *string                                        `json:"ParentProjectID,omitempty"`
	// The activity or activities feeding results into this activity instance.                                                                 
	PriorActivityIDs                                                                            []string                                       `json:"PriorActivityIDs,omitempty"`
	// Software names and versions used.                                                                                                       
	SoftwareSpecifications                                                                      []PurpleSoftware                               `json:"SoftwareSpecifications,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// One step/interval in an Activity's or ProjectActivity's state.
//
// The current or last state this activity transitioned to. It is a copy of the last element
// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay
// empty.
type AbstractActivityState struct {
	// The ActivityStatus is a set of major activity phases that are significant to business             
	// stakeholders.                                                                                     
	ActivityStatusID                                                                          *string    `json:"ActivityStatusID,omitempty"`
	// The date and time at which the activity status becomes effective.                                 
	EffectiveDateTime                                                                         *time.Time `json:"EffectiveDateTime,omitempty"`
	// An optional remark associated with the ActivityStatus and time interval.                          
	Remark                                                                                    *string    `json:"Remark,omitempty"`
	// The date and time at which the activity status is no longer in effect. For still                  
	// effective activity states, the TerminationDateTime is left absent. For zero-duration              
	// intervals (events), the TerminationDateTime set to the same value as EffectiveDateTime.           
	TerminationDateTime                                                                       *time.Time `json:"TerminationDateTime,omitempty"`
}

// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct
// from the file, in the sense certain valuable information is generated during loading
// process (Artefact generation process). Examples include retrieving location data,
// performing an OCR which may result in the generation of artefacts which need to be
// preserved distinctly
type AbstractGridRepresentationArtefact struct {
	// The SRN which identifies this OSDU Artefact resource.                             
	ResourceID                                                                   *string `json:"ResourceID,omitempty"`
	// The kind or schema ID of the artefact. Resolvable with the Schema Service.        
	ResourceKind                                                                 *string `json:"ResourceKind,omitempty"`
	// The record id of this artefact's role.                                            
	RoleID                                                                       *string `json:"RoleID,omitempty"`
}

// A geographic context to an entity. It can be either a reference to a GeoPoliticalEntity,
// Basin, Field, Play or Prospect.
//
// A single, typed geo-political entity reference, which is 'abstracted' to
// AbstractGeoContext and then aggregated by GeoContexts properties.
//
// A single, typed basin entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed field entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed Play entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed Prospect entity reference, which is 'abstracted' to AbstractGeoContext
// and then aggregated by GeoContexts properties.
type AbstractGeoContext struct {
	// Reference to GeoPoliticalEntity.                                                                 
	GeoPoliticalEntityID                                                                        *string `json:"GeoPoliticalEntityID,omitempty"`
	// The GeoPoliticalEntityType reference of the GeoPoliticalEntity (via GeoPoliticalEntityID)        
	// for application convenience.                                                                     
	//                                                                                                  
	// The BasinType reference of the Basin (via BasinID) for application convenience.                  
	//                                                                                                  
	// The fixed type 'Field' for this AbstractGeoFieldContext.                                         
	//                                                                                                  
	// The PlayType reference of the Play (via PlayID) for application convenience.                     
	//                                                                                                  
	// The ProspectType reference of the Prospect (via ProspectID) for application convenience.         
	GeoTypeID                                                                                   *string `json:"GeoTypeID,omitempty"`
	// Reference to Basin.                                                                              
	BasinID                                                                                     *string `json:"BasinID,omitempty"`
	// Reference to Field.                                                                              
	FieldID                                                                                     *string `json:"FieldID,omitempty"`
	// Reference to the play.                                                                           
	PlayID                                                                                      *string `json:"PlayID,omitempty"`
	// Reference to the prospect.                                                                       
	ProspectID                                                                                  *string `json:"ProspectID,omitempty"`
}

// Defines relationships with other objects (any kind of Resource) upon which this work
// product component depends.  The assertion is directed only from the asserting WPC to
// ancestor objects, not children.  It should not be used to refer to files or artefacts
// within the WPC -- the association within the WPC is sufficient and Artefacts are actually
// children of the main WPC file. They should be recorded in the data.Artefacts[] array.
type LineageAssertion struct {
	// The object reference identifying the DIRECT, INDIRECT, REFERENCE dependency.                    
	ID                                                                                         *string `json:"ID,omitempty"`
	// Used by LineageAssertion to describe the nature of the line of descent of a work product        
	// component from a prior Resource, such as DIRECT, INDIRECT, REFERENCE.  It is not for            
	// proximity (number of nodes away), it is not to cover all the relationships in a full            
	// ontology or graph, and it is not to describe the type of activity that created the              
	// asserting WPC.  LineageAssertion does not encompass a full provenance, process history,         
	// or activity model.                                                                              
	LineageRelationshipType                                                                    *string `json:"LineageRelationshipType,omitempty"`
}

// A list of alternative names for an object.  The preferred name is in a separate, scalar
// property.  It may or may not be repeated in the alias list, though a best practice is to
// include it if the list is present, but to omit the list if there are no other names.
// Note that the abstract entity is an array so the $ref to it is a simple property
// reference.
type AbstractAliasNames struct {
	// Alternative Name value of defined name type for an object.                                       
	AliasName                                                                                *string    `json:"AliasName,omitempty"`
	// A classification of alias names such as by role played or type of source, such as                
	// regulatory name, regulatory code, company code, international standard name, etc.                
	AliasNameTypeID                                                                          *string    `json:"AliasNameTypeID,omitempty"`
	// The StandardsOrganisation (reference-data) or Organisation (master-data) that provided           
	// the name (the source).                                                                           
	DefinitionOrganisationID                                                                 *string    `json:"DefinitionOrganisationID,omitempty"`
	// The date and time when an alias name becomes effective.                                          
	EffectiveDateTime                                                                        *time.Time `json:"EffectiveDateTime,omitempty"`
	// The data and time when an alias name is no longer in effect.                                     
	TerminationDateTime                                                                      *time.Time `json:"TerminationDateTime,omitempty"`
}

// General parameter value used in one instance of activity.
// [Without inheritance, combined specializations.]
type AbstractActivityParameter struct {
	// The boolean parameter value, if ParameterKindID refers to the Boolean type.                             
	BooleanParameter                                                                            *bool          `json:"BooleanParameter,omitempty"`
	// Parameter referencing to a top level object.                                                            
	DataObjectParameter                                                                         *string        `json:"DataObjectParameter,omitempty"`
	// Parameter containing a double value.                                                                    
	DataQuantityParameter                                                                       *float64       `json:"DataQuantityParameter,omitempty"`
	// Identifies unit of measure for floating point value.                                                    
	DataQuantityParameterUOMID                                                                  *string        `json:"DataQuantityParameterUOMID,omitempty"`
	// When parameter is an array, used to indicate the index in the array.                                    
	Index                                                                                       *int64         `json:"Index,omitempty"`
	// Parameter containing an integer value.                                                                  
	IntegerQuantityParameter                                                                    *int64         `json:"IntegerQuantityParameter,omitempty"`
	// A nested array describing keys used to identify a parameter value. When multiple values                 
	// are provided for a given parameter, the key provides a way to identify the parameter                    
	// through its association with an object, a time index or a parameter array member via                    
	// ParameterKey value.                                                                                     
	Keys                                                                                        []ParameterKey `json:"Keys,omitempty"`
	// [Added to cover lack of inheritance]                                                                    
	ParameterKindID                                                                             string         `json:"ParameterKindID"`
	// Reference data describing how the parameter was used by the activity, such as input,                    
	// output, control, constraint, agent, predecessor activity, successor activity.                           
	ParameterRoleID                                                                             *string        `json:"ParameterRoleID,omitempty"`
	// Textual description about how this parameter was selected.                                              
	Selection                                                                                   *string        `json:"Selection,omitempty"`
	// Parameter containing a string value.                                                                    
	StringParameter                                                                             *string        `json:"StringParameter,omitempty"`
	// Parameter containing a time index value.  It is assumed that all TimeIndexParameters                    
	// within an Activity have the same date-time format, which is then described by the                       
	// FrameOfReference mechanism.                                                                             
	TimeIndexParameter                                                                          *time.Time     `json:"TimeIndexParameter,omitempty"`
	// Name of the parameter, used to identify it in the activity. It must have an equivalent in               
	// the ActivityTemplate parameters.                                                                        
	Title                                                                                       string         `json:"Title"`
}

// Abstract class describing a key used to identify a parameter value. When multiple values
// are provided for a given parameter, provides a way to identify the parameter through its
// association with an object, a time index, an integer...
// [Without inheritance, combined specializations.] Note: floating point numbers are not
// supported as key values; the numbers have to be formatted as strings for robust equality
// operations, which are necessary for keys.
type ParameterKey struct {
	// Integer value from "ParameterKey" parameter, associated with this parameter. Example:          
	// {"ParameterKey": "index", "StringParameterKey: 2}.                                             
	IntegerParameterKey                                                                       *int64  `json:"IntegerParameterKey,omitempty"`
	// Relationship to an object ID, which acts as the parameter.                                     
	ObjectParameterKey                                                                        *string `json:"ObjectParameterKey,omitempty"`
	// The key name, which establishes an association between parameters.                             
	ParameterKey                                                                              *string `json:"ParameterKey,omitempty"`
	// String value from "ParameterKey" parameter, associated with this parameter. Can be used        
	// to associate with parameter values of type string or data quantity. In the later case,         
	// the string representation of the quantity value will be used. Example: {"ParameterKey":        
	// "facies", "StringParameterKey: "shale"}, {"ParameterKey":"depth",                              
	// "StringParameterKey":"1545.43m"}.                                                              
	StringParameterKey                                                                        *string `json:"StringParameterKey,omitempty"`
	// The time index acting as parameter key value.                                                  
	TimeIndexParameterKey                                                                     *string `json:"TimeIndexParameterKey,omitempty"`
}

// The name and version of the software being executed in the context of this activity
type PurpleSoftware struct {
	// The name of the software, application or plug-in used while performing this activity.           
	SoftwareName                                                                               *string `json:"SoftwareName,omitempty"`
	// The version of the software, application or plug-in used while performing this activity.        
	Version                                                                                    *string `json:"Version,omitempty"`
}

// A polygon boundary that reflects the locale of the content of the work product component
// (location of the subject matter).
//
// A geographic object which can be described by a set of points.
//
// A centroid point that reflects the locale of the content of the work product component
// (location of the subject matter).
//
// Bin Grid ABCD points containing the projected coordinates, projected CRS and quality
// metadata.  This attribute is required also for the P6 definition method to define the
// projected CRS, even if the ABCD coordinates would be optional (recommended to be always
// calculated). It is recommended to populate the GeoJSON/AnyCrsGeoJSON with properties
// according to the AbstractGeoJson.PropertiesBinGridCorners schema fragment.
//
// Polygon showing the coverage of live traces in the trace dataset
//
// SpatialLocation corresponding to FirstCMP.
//
// SpatialLocation corresponding to LastCMP.
type AbstractSpatialLocation struct {
	// The audit trail of operations applied to the coordinates from the original state to the                                   
	// current state. The list may contain operations applied prior to ingestion as well as the                                  
	// operations applied to produce the Wgs84Coordinates. The text elements refer to ESRI style                                 
	// CRS and Transformation names, which may have to be translated to EPSG standard names.                                     
	AppliedOperations                                                                           []string                         `json:"AppliedOperations,omitempty"`
	// The original or 'as ingested' coordinates (Point, MultiPoint, LineString,                                                 
	// MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates' was chosen to                                 
	// contrast it to 'OriginalCoordinates', which carries the uncertainty whether any                                           
	// coordinate operations took place before ingestion. In cases where the original CRS is                                     
	// different from the as-ingested CRS, the AppliedOperations can also contain the list of                                    
	// operations applied to the coordinate prior to ingestion. The data structure is similar to                                 
	// GeoJSON FeatureCollection, however in a CRS context explicitly defined within the                                         
	// AbstractAnyCrsFeatureCollection. The coordinate sequence follows GeoJSON standard, i.e.                                   
	// 'eastward/longitude', 'northward/latitude' {, 'upward/height' unless overridden by an                                     
	// explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.                                     
	AsIngestedCoordinates                                                                       *AbstractAnyCRSFeatureCollection `json:"AsIngestedCoordinates,omitempty"`
	// The date of the Quality Check.                                                                                            
	CoordinateQualityCheckDateTime                                                              *time.Time                       `json:"CoordinateQualityCheckDateTime,omitempty"`
	// The user who performed the Quality Check.                                                                                 
	CoordinateQualityCheckPerformedBy                                                           *string                          `json:"CoordinateQualityCheckPerformedBy,omitempty"`
	// Freetext remarks on Quality Check.                                                                                        
	CoordinateQualityCheckRemarks                                                               []string                         `json:"CoordinateQualityCheckRemarks,omitempty"`
	// A qualitative description of the quality of a spatial location, e.g. unverifiable, not                                    
	// verified, basic validation.                                                                                               
	QualitativeSpatialAccuracyTypeID                                                            *string                          `json:"QualitativeSpatialAccuracyTypeID,omitempty"`
	// An approximate quantitative assessment of the quality of a location (accurate to > 500 m                                  
	// (i.e. not very accurate)), to < 1 m, etc.                                                                                 
	QuantitativeAccuracyBandID                                                                  *string                          `json:"QuantitativeAccuracyBandID,omitempty"`
	// Indicates the expected look of the SpatialParameterType, e.g. Point, MultiPoint,                                          
	// LineString, MultiLineString, Polygon, MultiPolygon. The value constrains the type of                                      
	// geometries in the GeoJSON Wgs84Coordinates and AsIngestedCoordinates.                                                     
	SpatialGeometryTypeID                                                                       *string                          `json:"SpatialGeometryTypeID,omitempty"`
	// Date when coordinates were measured or retrieved.                                                                         
	SpatialLocationCoordinatesDate                                                              *time.Time                       `json:"SpatialLocationCoordinatesDate,omitempty"`
	// A type of spatial representation of an object, often general (e.g. an Outline, which                                      
	// could be applied to Field, Reservoir, Facility, etc.) or sometimes specific (e.g. Onshore                                 
	// Outline, State Offshore Outline, Federal Offshore Outline, 3 spatial representations that                                 
	// may be used by Countries).                                                                                                
	SpatialParameterTypeID                                                                      *string                          `json:"SpatialParameterTypeID,omitempty"`
	// The normalized coordinates (Point, MultiPoint, LineString, MultiLineString, Polygon or                                    
	// MultiPolygon) based on WGS 84 (EPSG:4326 for 2-dimensional coordinates, EPSG:4326 +                                       
	// EPSG:5714 (MSL) for 3-dimensional coordinates). This derived coordinate representation is                                 
	// intended for global discoverability only. The schema of this substructure is identical to                                 
	// the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json. The                                      
	// coordinate sequence follows GeoJSON standard, i.e. longitude, latitude {, height}                                         
	Wgs84Coordinates                                                                            *GeoJSONFeatureCollection        `json:"Wgs84Coordinates,omitempty"`
}

// The original or 'as ingested' coordinates (Point, MultiPoint, LineString,
// MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates' was chosen to
// contrast it to 'OriginalCoordinates', which carries the uncertainty whether any
// coordinate operations took place before ingestion. In cases where the original CRS is
// different from the as-ingested CRS, the AppliedOperations can also contain the list of
// operations applied to the coordinate prior to ingestion. The data structure is similar to
// GeoJSON FeatureCollection, however in a CRS context explicitly defined within the
// AbstractAnyCrsFeatureCollection. The coordinate sequence follows GeoJSON standard, i.e.
// 'eastward/longitude', 'northward/latitude' {, 'upward/height' unless overridden by an
// explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
//
// A schema like GeoJSON FeatureCollection with a non-WGS 84 CRS context; based on
// https://geojson.org/schema/FeatureCollection.json. Attention: the coordinate order is
// fixed: Longitude/Easting/Westing/X first, followed by Latitude/Northing/Southing/Y,
// optionally height as third coordinate.
type AbstractAnyCRSFeatureCollection struct {
	Bbox                                                                                        []float64                 `json:"bbox,omitempty"`
	// The CRS reference into the CoordinateReferenceSystem catalog.                                                      
	CoordinateReferenceSystemID                                                                 *string                   `json:"CoordinateReferenceSystemID,omitempty"`
	Features                                                                                    []AnyCRSGeoJSONFeature    `json:"features"`
	// The CRS reference as persistableReference string. If populated, the                                                
	// CoordinateReferenceSystemID takes precedence.                                                                      
	PersistableReferenceCRS                                                                     string                    `json:"persistableReferenceCrs"`
	// The unit of measure for the Z-axis (only for 3-dimensional coordinates, where the CRS                              
	// does not describe the vertical unit). Note that the direction is upwards positive, i.e. Z                          
	// means height.                                                                                                      
	PersistableReferenceUnitZ                                                                   *string                   `json:"persistableReferenceUnitZ,omitempty"`
	// The VerticalCRS reference as persistableReference string. If populated, the                                        
	// VerticalCoordinateReferenceSystemID takes precedence. The property is null or empty for                            
	// 2D geometries. For 3D geometries and absent or null persistableReferenceVerticalCrs the                            
	// vertical CRS is either provided via persistableReferenceCrs's CompoundCRS or it is                                 
	// implicitly defined as EPSG:5714 MSL height.                                                                        
	PersistableReferenceVerticalCRS                                                             *string                   `json:"persistableReferenceVerticalCrs,omitempty"`
	Type                                                                                        AsIngestedCoordinatesType `json:"type"`
	// The explicit VerticalCRS reference into the CoordinateReferenceSystem catalog. This                                
	// property stays empty for 2D geometries. Absent or empty values for 3D geometries mean the                          
	// context may be provided by a CompoundCRS in 'CoordinateReferenceSystemID' or implicitly                            
	// EPSG:5714 MSL height                                                                                               
	VerticalCoordinateReferenceSystemID                                                         *string                   `json:"VerticalCoordinateReferenceSystemID,omitempty"`
	// The explicit vertical unit ID, referring to a reference-data--UnitOfMeasure record; this                           
	// is only required for features containing 3-dimensional coordinates and undefined vertical                          
	// CoordinateReferenceSystems; if a VerticalCoordinateReferenceSystemID is populated, the                             
	// VerticalUnitID is given by the VerticalCoordinateReferenceSystemID's                                               
	// data.CoordinateSystem.VerticalAxisUnitID. The VerticalUnitID definition overrides any                              
	// self-contained definition in persistableReferenceUnitZ.                                                            
	VerticalUnitID                                                                              *string                   `json:"VerticalUnitID,omitempty"`
}

type AnyCRSGeoJSONFeature struct {
	Bbox       []float64              `json:"bbox,omitempty"`
	Geometry   *AnyCRSGeoJSON         `json:"geometry"`
	Properties map[string]interface{} `json:"properties"`
	Type       FluffyType             `json:"type"`
}

type AnyCRSGeoJSON struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates,omitempty"`
	Type        AnyCRSGeoJSONPointType         `json:"type"`
	Geometries  []GeometryElement              `json:"geometries,omitempty"`
}

type GeometryElement struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates"`
	Type        PurpleType                     `json:"type"`
}

// The normalized coordinates (Point, MultiPoint, LineString, MultiLineString, Polygon or
// MultiPolygon) based on WGS 84 (EPSG:4326 for 2-dimensional coordinates, EPSG:4326 +
// EPSG:5714 (MSL) for 3-dimensional coordinates). This derived coordinate representation is
// intended for global discoverability only. The schema of this substructure is identical to
// the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json. The
// coordinate sequence follows GeoJSON standard, i.e. longitude, latitude {, height}
//
// GeoJSON feature collection as originally published in
// https://geojson.org/schema/FeatureCollection.json. Attention: the coordinate order is
// fixed: Longitude first, followed by Latitude, optionally height above MSL (EPSG:5714) as
// third coordinate.
type GeoJSONFeatureCollection struct {
	Bbox     []float64            `json:"bbox,omitempty"`
	Features []GeoJSONFeature     `json:"features"`
	Type     Wgs84CoordinatesType `json:"type"`
}

type GeoJSONFeature struct {
	Bbox       []float64              `json:"bbox,omitempty"`
	Geometry   *GeoJSON               `json:"geometry"`
	Properties map[string]interface{} `json:"properties"`
	Type       StickyType             `json:"type"`
}

type GeoJSON struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates,omitempty"`
	Type        GeoJSONPointType               `json:"type"`
	Geometries  []GeometryClass                `json:"geometries,omitempty"`
}

type GeometryClass struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates"`
	Type        TentacledType                  `json:"type"`
}

// Describes a record's overall suitability for general business consumption based on level
// of trust.
type AbstractGridRepresentationTechnicalAssurance struct {
	// List of workflows and/or personas that the technical assurance value is valid for (e.g.,                           
	// This data is trusted for Seismic Processing)                                                                       
	AcceptableUsage                                                                             []PurpleAcceptableUsage   `json:"AcceptableUsage,omitempty"`
	// Any additional context to support the determination of technical assurance                                         
	Comment                                                                                     *string                   `json:"Comment,omitempty"`
	// Date when the technical assurance determination for this record has taken place                                    
	EffectiveDate                                                                               *string                   `json:"EffectiveDate,omitempty"`
	// The individuals, or roles, that reviewed and determined the technical assurance value                              
	Reviewers                                                                                   []AbstractContact         `json:"Reviewers,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                            
	// quality. Clarifications: Since Certified is the highest classification of suitable                                 
	// quality, any further change or versioning of a Certified record should be carefully                                
	// considered and justified. If a Technical Assurance value is not populated then one can                             
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                   
	// Technical Assurance values are not intended to be used for the identification of a single                          
	// "preferred" or "definitive" record by comparison with other records.                                               
	TechnicalAssuranceTypeID                                                                    string                    `json:"TechnicalAssuranceTypeID"`
	// List of workflows and/or personas that the technical assurance value is not valid for                              
	// (e.g., This data is not trusted for seismic interpretation)                                                        
	UnacceptableUsage                                                                           []PurpleUnacceptableUsage `json:"UnacceptableUsage,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is valid for
// (e.g., This data has a technical assurance property of "trusted" and it is suitable for
// Seismic Interpretation).
type PurpleAcceptableUsage struct {
	// The relationship to a work-product-component--DataQuality assessment record, which was           
	// used as the basis for this decision.                                                             
	DataQualityID                                                                               *string `json:"DataQualityID,omitempty"`
	// The DataQualityRuleSet, which had to pass successfully to achieve this level of technical        
	// assurance.                                                                                       
	DataQualityRuleSetID                                                                        *string `json:"DataQualityRuleSetID,omitempty"`
	// DEPRECATED: superseded by DataQualityRuleSetID referring to DataQualityRuleSet. The              
	// QualityDataRuleSet, which had to pass successfully to achieve this level of technical            
	// assurance.                                                                                       
	QualityDataRuleSetID                                                                        *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is acceptable for workflow usage.                         
	ValueChainStatusTypeID                                                                      *string `json:"ValueChainStatusTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowPersonaTypeID. Name of the role or personas that the           
	// record is technical assurance value is valid for.                                                
	WorkflowPersona                                                                             *string `json:"WorkflowPersona,omitempty"`
	// Name of the role or personas that the record's technical assurance value is valid for.           
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowUsageTypeID. Name of the business activities,                  
	// processes, and/or workflows that the record is technical assurance value is valid for.           
	WorkflowUsage                                                                               *string `json:"WorkflowUsage,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record's technical         
	// assurance value is valid for.                                                                    
	WorkflowUsageTypeID                                                                         *string `json:"WorkflowUsageTypeID,omitempty"`
}

// An object with properties that describe a specific person or other point-of-contact (like
// an email distribution list) that is relevant in this context (like a given data set or
// business project). The contact specified may be either internal or external to the
// organisation (something denoted via the Organisation object that is referenced). Note
// that some properties contain personally identifiable information, so it might not be
// appropriate to populate all properties in all scenarios.
type AbstractContact struct {
	// Additional information about the contact                                                         
	Comment                                                                                     *string `json:"Comment,omitempty"`
	// The data governance role assigned to this contact if and only if the context has a data          
	// governance role (in context of TechnicalAssurance). The value is kept absent in all other        
	// cases.                                                                                           
	DataGovernanceRoleTypeID                                                                    *string `json:"DataGovernanceRoleTypeID,omitempty"`
	// Contact email address. Property may be left empty where it is inappropriate to provide           
	// personally identifiable information.                                                             
	EmailAddress                                                                                *string `json:"EmailAddress,omitempty"`
	// Name of the individual contact. Property may be left empty where it is inappropriate to          
	// provide personally identifiable information.                                                     
	Name                                                                                        *string `json:"Name,omitempty"`
	// Reference to the company the contact is associated with.                                         
	OrganisationID                                                                              *string `json:"OrganisationID,omitempty"`
	// Contact phone number. Property may be left empty where it is inappropriate to provide            
	// personally identifiable information.                                                             
	PhoneNumber                                                                                 *string `json:"PhoneNumber,omitempty"`
	// The identifier of a reference value for the role of the contact within the associated            
	// organisation, such as Account owner, Sales Representative, Technical Support, Project            
	// Manager, Party Chief, Client Representative, Senior Observer.                                    
	RoleTypeID                                                                                  *string `json:"RoleTypeID,omitempty"`
	// The persona in context of workflows associated with this contact, as used in                     
	// TechnicalAssurance.                                                                              
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is not valid
// for (e.g., This data has a technical assurance property of "trusted", but it is not
// suitable for Seismic Interpretation).
type PurpleUnacceptableUsage struct {
	// The relationship to a work-product-component--DataQuality assessment record, which was            
	// used as the basis for this decision.                                                              
	DataQualityID                                                                                *string `json:"DataQualityID,omitempty"`
	// The DataQualityRuleSet, which did not pass successfully to achieve this level of                  
	// technical assurance.                                                                              
	DataQualityRuleSetID                                                                         *string `json:"DataQualityRuleSetID,omitempty"`
	// DEPRECATED: superseded by DataQualityRuleSetID referring to DataQualityRuleSet. The               
	// QualityDataRuleSet, which did not pass successfully to achieve this level of technical            
	// assurance.                                                                                        
	QualityDataRuleSetID                                                                         *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is not acceptable for workflow usage.                      
	ValueChainStatusTypeID                                                                       *string `json:"ValueChainStatusTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowPersonaTypeID. Name of the role or personas that the            
	// record is technical assurance value is not valid for.                                             
	WorkflowPersona                                                                              *string `json:"WorkflowPersona,omitempty"`
	// Name of the role or personas that the record is technical assurance value is not valid            
	// for.                                                                                              
	WorkflowPersonaTypeID                                                                        *string `json:"WorkflowPersonaTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowUsageTypeID. Name of the business activities,                   
	// processes, and/or workflows that the record is technical assurance value is not valid for.        
	WorkflowUsage                                                                                *string `json:"WorkflowUsage,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record's technical          
	// assurance value is not valid for.                                                                 
	WorkflowUsageTypeID                                                                          *string `json:"WorkflowUsageTypeID,omitempty"`
}

// The entity's legal tags and compliance status. The actual contents associated with the
// legal tags is managed by the Compliance Service.
//
// Legal meta data like legal tags, relevant other countries, legal status. This structure
// is included by the SystemProperties "legal", which is part of all OSDU records. Not
// extensible.
type LegalMetaData struct {
	// The list of legal tags, which resolve to legal properties (like country of origin, export         
	// classification code, etc.) and rules with the help of the Compliance Service.                     
	Legaltags                                                                                   []string `json:"legaltags"`
	// The list of other relevant data countries as an array of two-letter country codes, see            
	// https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.                                                 
	OtherRelevantDataCountries                                                                  []string `json:"otherRelevantDataCountries"`
	// The legal status. Set by the system after evaluation against the compliance rules                 
	// associated with the "legaltags" using the Compliance Service.                                     
	Status                                                                                      *string  `json:"status,omitempty"`
}

// A meta data item, which allows the association of named properties or property values to
// a Unit/Measurement/CRS/Azimuth/Time context.
type FrameOfReferenceMetaDataItem struct {
	// The kind of reference, 'Unit' for FrameOfReferenceUOM.                                                 
	//                                                                                                        
	// The kind of reference, constant 'CRS' for FrameOfReferenceCRS.                                         
	//                                                                                                        
	// The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.                              
	//                                                                                                        
	// The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.              
	Kind                                                                                        ReferenceKind `json:"kind"`
	// The unit symbol or name of the unit.                                                                   
	//                                                                                                        
	// The name of the CRS.                                                                                   
	//                                                                                                        
	// The name of the DateTime format and reference.                                                         
	//                                                                                                        
	// The name of the CRS or the symbol/name of the unit.                                                    
	Name                                                                                        *string       `json:"name,omitempty"`
	// The self-contained, persistable reference string uniquely identifying the Unit.                        
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying the CRS.                         
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying DateTime                         
	// reference.                                                                                             
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying AzimuthReference.                
	PersistableReference                                                                        string        `json:"persistableReference"`
	// The list of property names, to which this meta data item provides Unit context to. A full              
	// path like "StructureA.PropertyB" is required to define a unique context; "data" is                     
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides CRS context to. A full               
	// path like "StructureA.PropertyB" is required to define a unique context; "data" is                     
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides DateTime context to. A               
	// full path like "StructureA.PropertyB" is required to define a unique context; "data" is                
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides AzimuthReference                     
	// context to. A full path like "StructureA.PropertyB" is required to define a unique                     
	// context; "data" is omitted since frame-of reference normalization only applies to the                  
	// data block.                                                                                            
	PropertyNames                                                                               []string      `json:"propertyNames,omitempty"`
	// SRN to unit of measure reference.                                                                      
	UnitOfMeasureID                                                                             *string       `json:"unitOfMeasureID,omitempty"`
	// SRN to CRS reference.                                                                                  
	CoordinateReferenceSystemID                                                                 *string       `json:"coordinateReferenceSystemID,omitempty"`
}

// An interpretation of a RockVolumeFeature as water-bearing rocks
type AquiferInterpretation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *AquiferInterpretationData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type AquiferInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// The reference to a local rock volume feature to which this interpretation is associated.                                                
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A biostratigraphic study, containing sample fossil counts, interpretations and event
// correlations. This work product component documents fossil data across stratigraphic
// sections to identify bioevents and establish temporal relationships between rock layers.
type BiostratigraphicStudy struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BiostratigraphicStudyData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type BiostratigraphicStudyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The date the batch of biostratigraphic sample analysis was completed.                                                                   
	AnalysisDate                                                                                *string                                        `json:"AnalysisDate,omitempty"`
	// Identifies the Organisation that produces/produced this analysis.                                                                       
	AnalysisOrganisationID                                                                      *string                                        `json:"AnalysisOrganisationID,omitempty"`
	// Interpreters of the dataset. Can be one or many                                                                                         
	BiostratigraphicAnalysts                                                                    []string                                       `json:"BiostratigraphicAnalysts,omitempty"`
	// List of biostratigraphic disciplines defined by the fossil group analysed. For example,                                                 
	// palynology, nannopalaeontology, etc. This can one or many disciplines.                                                                  
	BiostratigraphicDisciplineIDs                                                               []string                                       `json:"BiostratigraphicDisciplineIDs,omitempty"`
	// Identifies the Biostratigraphic interpretations contained in the study. This is free text                                               
	// string                                                                                                                                  
	InterpretationNames                                                                         []string                                       `json:"InterpretationNames,omitempty"`
	// Biostratigraphic Interpretation types. For example, Biostratigraphic Zones, Sequence                                                    
	// Stratigraphy, Biostratigraphic Events,  PaleoEnvironment and Biostratigraphic Comments.                                                 
	InterpretationTypesIDs                                                                      []string                                       `json:"InterpretationTypesIDs,omitempty"`
	// An array containing operational or quality comments pertaining to a biostratigraphic                                                    
	// sample analysis.                                                                                                                        
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The samples used in the study.                                                                                                          
	SampleIDs                                                                                   []string                                       `json:"SampleIDs"`
	// Stratigraphic schemes used in the study. There can be one or many.                                                                      
	StratigraphicColumnIDs                                                                      []string                                       `json:"StratigraphicColumnIDs,omitempty"`
	// The wellbores used within the study. Can be one or many wellbores. Use                                                                  
	// `SampleIDs`whereever possible.                                                                                                          
	WellboreIDs                                                                                 []string                                       `json:"WellboreIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A remark object, pairing a remark text with a source, e.g. an author, and a date, which
// is typically included in an array. The RemarkSequenceNumber acts as unique key in this
// case.
type AbstractRemark struct {
	// A descriptive comment for this remark.                                                          
	Remark                                                                                     *string `json:"Remark,omitempty"`
	// The date the remark was issued.                                                                 
	RemarkDate                                                                                 *string `json:"RemarkDate,omitempty"`
	// A unique identifier for each remark record. This identifier is used to uniquely identify        
	// a member in an array of remarks.                                                                
	RemarkSequenceNumber                                                                       *int64  `json:"RemarkSequenceNumber,omitempty"`
	// The person, vendor, interpreter or other provider of information.                               
	RemarkSource                                                                               *string `json:"RemarkSource,omitempty"`
}

// An actual single cement job post-job report/description/summary.
type CementJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *CementJobData                 `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type CementJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	//                                                                                                                                          
	// Name of the cement job.                                                                                                                  
	Name                                                                                         string                                         `json:"Name"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Casing Pressure Test                                                                                                                     
	CasingPressureTest                                                                           *CasingPressureTest                            `json:"CasingPressureTest,omitempty"`
	// Cement Fluid Line Configuration                                                                                                          
	CementFluidLineConfiguration                                                                 *string                                        `json:"CementFluidLineConfiguration,omitempty"`
	// Cement Job Rating                                                                                                                        
	CementJobRating                                                                              *string                                        `json:"CementJobRating,omitempty"`
	// Cement Plug Status History                                                                                                               
	CementPlugStates                                                                             []CementPlugStatusHistory                      `json:"CementPlugStates,omitempty"`
	// Set of stages for the job (usually 1 or 2).                                                                                              
	CementStages                                                                                 []CementStage                                  `json:"CementStages,omitempty"`
	// The identifier of the TubularComponent within the Cemented String TubularAssembly used                                                   
	// for Cementing the wellbore                                                                                                               
	CementToolTubularComponentID                                                                 *string                                        `json:"CementToolTubularComponentID,omitempty"`
	// Cement Tool Type                                                                                                                         
	CementToolTypeID                                                                             *string                                        `json:"CementToolTypeID,omitempty"`
	// Identifier of cementing contractor.                                                                                                      
	ContractorID                                                                                 *string                                        `json:"ContractorID,omitempty"`
	// Contractor Job ID                                                                                                                        
	ContractorJobID                                                                              *string                                        `json:"ContractorJobID,omitempty"`
	// The estimated Measured depth of the Top of Cement (TOC) based on volume pumped.                                                          
	EstimatedCementTopMeasuredDepth                                                              *float64                                       `json:"EstimatedCementTopMeasuredDepth,omitempty"`
	// Measured depth at bottom of hole.                                                                                                        
	HoleMeasuredDepth                                                                            *float64                                       `json:"HoleMeasuredDepth,omitempty"`
	// Hole Section Assembly installed in and cement job performed in                                                                           
	HoleSectionID                                                                                *string                                        `json:"HoleSectionID,omitempty"`
	// Coiled Tubing Used in the job (true=CTU used). Values are "true" (or "1") and "false" (or                                                
	// "0").                                                                                                                                    
	IsCoilTubing                                                                                 *bool                                          `json:"IsCoilTubing,omitempty"`
	// Is the pipe pulled wet (or dry) from cementing operation depth to surface for Plugs                                                      
	IsPipePulledWet                                                                              *bool                                          `json:"IsPipePulledWet,omitempty"`
	// Plug fully drilled out                                                                                                                   
	IsPlugDrilledOut                                                                             *bool                                          `json:"IsPlugDrilledOut,omitempty"`
	// Pipe being reciprocated.  Values are "true" (or "1") and "false" (or "0").                                                               
	IsReciprocating                                                                              *bool                                          `json:"IsReciprocating,omitempty"`
	// Were fluid circulated/returned to seabed. Values are "true" (or "1") and "false" (or "0").                                               
	IsReturnsToSeabed                                                                            *bool                                          `json:"IsReturnsToSeabed,omitempty"`
	// Is pipe rotated during job.   Values are "true" (or "1") and "false" (or "0").                                                           
	IsRotating                                                                                   *bool                                          `json:"IsRotating,omitempty"`
	// Is Viscous Pilled Used                                                                                                                   
	IsViscousPillUsed                                                                            *bool                                          `json:"IsViscousPillUsed,omitempty"`
	// Job configuration/description                                                                                                            
	JobConfiguration                                                                             *string                                        `json:"JobConfiguration,omitempty"`
	// Job End Date/time                                                                                                                        
	JobEndDatetime                                                                               *time.Time                                     `json:"JobEndDatetime,omitempty"`
	// Job Start Date/time                                                                                                                      
	JobStartDatetime                                                                             *time.Time                                     `json:"JobStartDatetime,omitempty"`
	// Type of cement job                                                                                                                       
	JobTypeID                                                                                    string                                         `json:"JobTypeID"`
	// Measured depth of the landing/float collar                                                                                               
	LandingFloatCollarMeasuredDepth                                                              *float64                                       `json:"LandingFloatCollarMeasuredDepth,omitempty"`
	// Name of lead cementer                                                                                                                    
	LeadCementerName                                                                             *string                                        `json:"LeadCementerName,omitempty"`
	// Liner Top Test                                                                                                                           
	LinerTopTest                                                                                 *LinerTopTest                                  `json:"LinerTopTest,omitempty"`
	// Log Evaluation                                                                                                                           
	LogEvaluation                                                                                []LogEvaluation                                `json:"LogEvaluation,omitempty"`
	// Name of Operator Representative/Supervisor                                                                                               
	OperatorRepresentative                                                                       *string                                        `json:"OperatorRepresentative,omitempty"`
	// Operator Representative Remarks                                                                                                          
	OperatorRepresentativeRemarks                                                                *string                                        `json:"OperatorRepresentativeRemarks,omitempty"`
	// DEPRECATED: Please use PackerStingerMeasureDepth instead as this string constant string                                                  
	// property is malformed for the purpose. Packer or Stinger Measured Depth.                                                                 
	PackerStingerMeasuredDepth                                                                   *PackerStingerMeasuredDepth                    `json:"PackerStingerMeasuredDepth,omitempty"`
	// Packer or Stinger Measured Depth                                                                                                         
	PackerStingerMeasureDepth                                                                    *float64                                       `json:"PackerStingerMeasureDepth,omitempty"`
	// ROV Measured pH at Seabed                                                                                                                
	PhROVMeasured                                                                                *float64                                       `json:"PhROVMeasured,omitempty"`
	// DEPRECATED: Use the new PipePulledRateAvg instead as this constant string property is                                                    
	// malformed for the purpose.  Rate pulled from cementing operation depth to surface                                                        
	PipePulledRate                                                                               *PipePulledRate                                `json:"PipePulledRate,omitempty"`
	// Average rate pulled from cementing operation depth to surface                                                                            
	PipePulledRateAvg                                                                            *float64                                       `json:"PipePulledRateAvg,omitempty"`
	// Association to Planned Cement Job                                                                                                        
	PlannedCementJobID                                                                           *string                                        `json:"PlannedCementJobID,omitempty"`
	// If Plug, measured depth of bottom of plug.                                                                                               
	PlugBaseMeasuredDepth                                                                        *float64                                       `json:"PlugBaseMeasuredDepth,omitempty"`
	// Cement Plug Support Base Type                                                                                                            
	PlugBaseSupportTypeID                                                                        *string                                        `json:"PlugBaseSupportTypeID,omitempty"`
	// If Plug, true vertical depth of bottom of plug.                                                                                          
	PlugBaseTrueVerticalDepth                                                                    *float64                                       `json:"PlugBaseTrueVerticalDepth,omitempty"`
	// Date when Cement Plug fully drilled out (not partial drill out).                                                                         
	PlugDrillOutDate                                                                             *time.Time                                     `json:"PlugDrillOutDate,omitempty"`
	// If Plug, average inclination of wellbore across plug depth calculated from directional                                                   
	// survey                                                                                                                                   
	PlugInclinationAverage                                                                       *float64                                       `json:"PlugInclinationAverage,omitempty"`
	// If Plug, maximum inclination of wellbore across plug depth calculated from directional                                                   
	// survey                                                                                                                                   
	PlugInclinationMaximum                                                                       *float64                                       `json:"PlugInclinationMaximum,omitempty"`
	// Plug negative test pressure                                                                                                              
	PlugNegativeTestPressure                                                                     *float64                                       `json:"PlugNegativeTestPressure,omitempty"`
	// Plug Positive Test Pressure                                                                                                              
	PlugPositiveTestPressure                                                                     *float64                                       `json:"PlugPositiveTestPressure,omitempty"`
	// Plug tagged MD                                                                                                                           
	PlugTaggedMeasuredDepth                                                                      *float64                                       `json:"PlugTaggedMeasuredDepth,omitempty"`
	// Plug tagged weight                                                                                                                       
	PlugTaggedWeight                                                                             *float64                                       `json:"PlugTaggedWeight,omitempty"`
	// If Plug, measured depth of top of plug                                                                                                   
	PlugTopMeasuredDepth                                                                         *float64                                       `json:"PlugTopMeasuredDepth,omitempty"`
	// If Plug, true vertical depth of top of plug. TVDs needed for  estimating hydrostatic                                                     
	// pressure and temperature.                                                                                                                
	PlugTopTrueVerticalDepth                                                                     *float64                                       `json:"PlugTopTrueVerticalDepth,omitempty"`
	// Cement plug type.                                                                                                                        
	PlugTypeID                                                                                   *string                                        `json:"PlugTypeID,omitempty"`
	// Measured depth of the previous casing/liner shoe.                                                                                        
	PreviousShoeMeasuredDepth                                                                    *float64                                       `json:"PreviousShoeMeasuredDepth,omitempty"`
	// Estimated True Vertical Depth of previous casing/liner shoe.                                                                             
	PreviousShoeTrueVerticalDepth                                                                *float64                                       `json:"PreviousShoeTrueVerticalDepth,omitempty"`
	// Pump Through Equipment                                                                                                                   
	PumpThroughEquipmentID                                                                       *string                                        `json:"PumpThroughEquipmentID,omitempty"`
	// Distance from shoe to hole section bottom depth (Rathole)                                                                                
	RatholeLength                                                                                *float64                                       `json:"RatholeLength,omitempty"`
	// Remarks                                                                                                                                  
	Remarks                                                                                      *string                                        `json:"Remarks,omitempty"`
	// Shoe Test                                                                                                                                
	ShoeTest                                                                                     *ShoeTest                                      `json:"ShoeTest,omitempty"`
	// Shoetrack Cement                                                                                                                         
	ShoetrackCement                                                                              *ShoetrackCement                               `json:"ShoetrackCement,omitempty"`
	// Method used to perform squeeze                                                                                                           
	SqueezeMethodID                                                                              *string                                        `json:"SqueezeMethodID,omitempty"`
	// Top Measured depth of squeeze e.g. long perforated interval. Single depth when specific                                                  
	// point squeezed (top & base are same).                                                                                                    
	SqueezeTopMeasuredDepth                                                                      *float64                                       `json:"SqueezeTopMeasuredDepth,omitempty"`
	// Type of squeeze.                                                                                                                         
	SqueezeTypeID                                                                                *string                                        `json:"SqueezeTypeID,omitempty"`
	// ID of Wellbore Opening(s) through which Cement Squeezed                                                                                  
	SqueezeWellboreOpeningID                                                                     []string                                       `json:"SqueezeWellboreOpeningID,omitempty"`
	// Measured depth of the stage collar                                                                                                       
	StageCollarMeasuredDepth                                                                     *float64                                       `json:"StageCollarMeasuredDepth,omitempty"`
	// Measured depth of cemented string casing/liner shoe.                                                                                     
	StringSetMeasuredDepth                                                                       *float64                                       `json:"StringSetMeasuredDepth,omitempty"`
	// True vertical depth of cement string shoe.                                                                                               
	StringSetTrueVerticalDepth                                                                   *float64                                       `json:"StringSetTrueVerticalDepth,omitempty"`
	// TOC Interpretation                                                                                                                       
	TOCInterpretation                                                                            *TOCInterpretation                             `json:"TOCInterpretation,omitempty"`
	// ID to the Zero Depth Point Vertical Measure elevation for depths contained in the Cement                                                 
	// Job, Stages and Pumping Schedule, depth correction used to correlate MDs to original                                                     
	// drilling rig MD. References an entry in the Vertical Measurement array for the Well                                                      
	// parented by the wellbore via WellboreID.                                                                                                 
	VerticalMeasurement                                                                          AbstractFacilityVerticalMeasurement            `json:"VerticalMeasurement"`
	// Duration from cement placement and left                                                                                                  
	// undisturbed until disturbed again.                                                                                                       
	WaitOnCementDuration                                                                         *float64                                       `json:"WaitOnCementDuration,omitempty"`
	// Identifier of the parent Well Activity in which the Cement Job was performed                                                             
	WellActivityID                                                                               string                                         `json:"WellActivityID"`
	// Reference to the parent Wellbore. Cemented TubularAssembly would be installed to same                                                    
	// Wellbore.                                                                                                                                
	WellboreID                                                                                   string                                         `json:"WellboreID"`
	// Installed Casing/Liner or other Tubular Assembly on which the Cement Job is performed.                                                   
	// Not entered for Plug jobs in open hole.                                                                                                  
	WellboreTubularID                                                                            *string                                        `json:"WellboreTubularID,omitempty"`
	// Identifier of the TubularAssembly that describes the cement work string                                                                  
	WorkStringID                                                                                 *string                                        `json:"WorkStringID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Casing Pressure Test
type CasingPressureTest struct {
	// Bled Back Volume                                               
	BledBackVolume                                         *float64   `json:"BledBackVolume,omitempty"`
	// Test Date/time                                                 
	CasingTestDate                                         *time.Time `json:"CasingTestDate,omitempty"`
	// Test Duration                                                  
	CasingTestDuration                                     *float64   `json:"CasingTestDuration,omitempty"`
	// Casing Test Elapsed Time following end of cement job           
	CasingTestElapsedTime                                  *float64   `json:"CasingTestElapsedTime,omitempty"`
	// Test Pressure                                                  
	CasingTestPressure                                     *float64   `json:"CasingTestPressure,omitempty"`
	// Casing Test Stable Flow Rate                                   
	CasingTestStableRate                                   *float64   `json:"CasingTestStableRate,omitempty"`
	// Float Depth                                                    
	FloatMeasuredDepth                                     *float64   `json:"FloatMeasuredDepth,omitempty"`
	// Fluid Density                                                  
	FluidDensity                                           *float64   `json:"FluidDensity,omitempty"`
	// Maintained Pressure % of Initial Test Pressure                 
	MaintainPressurePercent                                *float64   `json:"MaintainPressurePercent,omitempty"`
	// Packer Depth                                                   
	PackerMeasuredDepth                                    *float64   `json:"PackerMeasuredDepth,omitempty"`
	// Incremental Pressure Over Defined Time Interval                
	PressureChangePerTime                                  *float64   `json:"PressureChangePerTime,omitempty"`
	// Pumped Volume                                                  
	PumpedVolume                                           *float64   `json:"PumpedVolume,omitempty"`
	// Comments or Remarks                                            
	Remarks                                                *string    `json:"Remarks,omitempty"`
	// Test Criteria                                                  
	TestCriteria                                           *string    `json:"TestCriteria,omitempty"`
}

// Cement Plug status history
type CementPlugStatusHistory struct {
	// Plug Status Base MD                 
	PlugStatusBaseMeasuredDepth *float64   `json:"PlugStatusBaseMeasuredDepth,omitempty"`
	// Status date/time                    
	PlugStatusDatetime          *time.Time `json:"PlugStatusDatetime,omitempty"`
	// Status Remarks                      
	PlugStatusRemarks           *string    `json:"PlugStatusRemarks,omitempty"`
	// Plug Status Top MD                  
	PlugStatusTopMeasuredDepth  *float64   `json:"PlugStatusTopMeasuredDepth,omitempty"`
	// Status Type                         
	PlugStatusTypeID            *string    `json:"PlugStatusTypeID,omitempty"`
}

// A single cement stage performed within a Job.
type CementStage struct {
	// Length of the cement column                                                                                        
	AnnularLength                                                                              *float64                   `json:"AnnularLength,omitempty"`
	// Constant back pressure applied at surface while pumping the job (can be superseded by a                            
	// back pressure per pumping stage).                                                                                  
	BackPressure                                                                               *float64                   `json:"BackPressure,omitempty"`
	// Behind Cement Spacer Volume                                                                                        
	BehindCementSpacerVolume                                                                   *float64                   `json:"BehindCementSpacerVolume,omitempty"`
	// Circulating Bottomhole temperature                                                                                 
	Bhct                                                                                       *float64                   `json:"BHCT,omitempty"`
	// Static Bottomhole temperature                                                                                      
	Bhst                                                                                       *float64                   `json:"BHST,omitempty"`
	// Volume pumped to landing Bottom Dart                                                                               
	BottomDartLandVolume                                                                       *float64                   `json:"BottomDartLandVolume,omitempty"`
	// Bottom Dart Shear Pressure                                                                                         
	BottomDartShearPressure                                                                    *float64                   `json:"BottomDartShearPressure,omitempty"`
	// Number of Bottom Plugs                                                                                             
	BottomPlugNumber                                                                           *int64                     `json:"BottomPlugNumber,omitempty"`
	// Breakdown Flow Rate                                                                                                
	BreakdownFlowRate                                                                          *float64                   `json:"BreakdownFlowRate,omitempty"`
	// Breakdown Pressure                                                                                                 
	BreakdownPressure                                                                          *float64                   `json:"BreakdownPressure,omitempty"`
	// Bump Plug Pressure                                                                                                 
	BumpPlugPressure                                                                           *float64                   `json:"BumpPlugPressure,omitempty"`
	// Array of fluids worked in the stage - displaced mud, washers and spacers, cement (lead &                           
	// tail)                                                                                                              
	CementingFluid                                                                             []CementingFluid           `json:"CementingFluid,omitempty"`
	// Circulate out measured depth from top of cement plug                                                               
	CirculateOutMeasuredDepth                                                                  *float64                   `json:"CirculateOutMeasuredDepth,omitempty"`
	// Bottom Measured depth of Coiled Tubing                                                                             
	CoilTubingMeasuredDepth                                                                    *float64                   `json:"CoilTubingMeasuredDepth,omitempty"`
	// Average (or actual) displacement rate                                                                              
	DisplacementFlowrateAvg                                                                    *float64                   `json:"DisplacementFlowrateAvg,omitempty"`
	// Final displacement rate                                                                                            
	DisplacementFlowrateFinal                                                                  *float64                   `json:"DisplacementFlowrateFinal,omitempty"`
	// Maximum displacement rate                                                                                          
	DisplacementFlowrateMax                                                                    *float64                   `json:"DisplacementFlowrateMax,omitempty"`
	// Density of displacement fluid.                                                                                     
	DisplacementFluidDensity                                                                   *float64                   `json:"DisplacementFluidDensity,omitempty"`
	// Displacement fluid name.                                                                                           
	DisplacementFluidName                                                                      *string                    `json:"DisplacementFluidName,omitempty"`
	// Volume of displacement fluid.                                                                                      
	DisplacementFluidVolume                                                                    *float64                   `json:"DisplacementFluidVolume,omitempty"`
	// Final displacement pressure                                                                                        
	DisplacementPressureFinal                                                                  *float64                   `json:"DisplacementPressureFinal,omitempty"`
	// Date/time when displacing of cement started.                                                                       
	DisplaceStartDate                                                                          *time.Time                 `json:"DisplaceStartDate,omitempty"`
	// Excess Volume used                                                                                                 
	ExcessVolume                                                                               *float64                   `json:"ExcessVolume,omitempty"`
	// Excess Volume Calculation Method                                                                                   
	ExcessVolumeCalcMethodID                                                                   *string                    `json:"ExcessVolumeCalcMethodID,omitempty"`
	// Final Casing Pressure                                                                                              
	FinalCasingPressure                                                                        *float64                   `json:"FinalCasingPressure,omitempty"`
	// Final Coiled Tubing Pressure                                                                                       
	FinalCoilTubingPressure                                                                    *float64                   `json:"FinalCoilTubingPressure,omitempty"`
	// Final Pump Rate                                                                                                    
	FinalPumpRate                                                                              *float64                   `json:"FinalPumpRate,omitempty"`
	// Tubing End Pressure (not CT)                                                                                       
	FinalTubingPressure                                                                        *float64                   `json:"FinalTubingPressure,omitempty"`
	// Pre-circulation Fluid Temperature In (Pit)                                                                         
	FluidTemperatureIn                                                                         *float64                   `json:"FluidTemperatureIn,omitempty"`
	// Pre-circulation Fluid Temperature Out (Return Line)                                                                
	FluidTemperatureOut                                                                        *float64                   `json:"FluidTemperatureOut,omitempty"`
	// Pressure held to.                                                                                                  
	HeldPressure                                                                               *float64                   `json:"HeldPressure,omitempty"`
	// Hesitation Reason during operation                                                                                 
	HesitationReason                                                                           *string                    `json:"HesitationReason,omitempty"`
	// Hesitation Squeeze array                                                                                           
	HesitationSqueeze                                                                          []HesitationSqueezeHistory `json:"HesitationSqueeze,omitempty"`
	// Initial Casing Pressure                                                                                            
	InitialCasingPressure                                                                      *float64                   `json:"InitialCasingPressure,omitempty"`
	// Initial Coiled Tubing Pressure                                                                                     
	InitialCoilTubingPressure                                                                  *float64                   `json:"InitialCoilTubingPressure,omitempty"`
	// Initial Pump Rate                                                                                                  
	InitialPumpRate                                                                            *float64                   `json:"InitialPumpRate,omitempty"`
	// Tubing Start Pressure (not CT)                                                                                     
	InitialTubingPressure                                                                      *float64                   `json:"InitialTubingPressure,omitempty"`
	// Estimated volume inside casing                                                                                     
	InsideCasingVolume                                                                         *float64                   `json:"InsideCasingVolume,omitempty"`
	// Final placement measured depth of base of interval.                                                                
	IntervalBaseMeasuredDepth                                                                  *float64                   `json:"IntervalBaseMeasuredDepth,omitempty"`
	// Final placement True Vertical depth of base of interval.                                                           
	IntervalBaseTrueVerticalDepth                                                              *float64                   `json:"IntervalBaseTrueVerticalDepth,omitempty"`
	// Final placement measured depth at top of interval.                                                                 
	IntervalTopMeasuredDepth                                                                   *float64                   `json:"IntervalTopMeasuredDepth,omitempty"`
	// Final placement True Vertical depth at top of interval.                                                            
	IntervalTopTrueVerticalDepth                                                               *float64                   `json:"IntervalTopTrueVerticalDepth,omitempty"`
	// Annular flow (back flow) present after the stage was completed?                                                    
	IsAnnularFlowAfter                                                                         *bool                      `json:"IsAnnularFlowAfter,omitempty"`
	// Annular Pressure Held after job?                                                                                   
	IsAnnularPressureHeld                                                                      *bool                      `json:"IsAnnularPressureHeld,omitempty"`
	// Bottom plug used?                                                                                                  
	IsBottomPlugUsed                                                                           *bool                      `json:"IsBottomPlugUsed,omitempty"`
	// Float Held?                                                                                                        
	IsFloatHeld                                                                                *bool                      `json:"IsFloatHeld,omitempty"`
	// Hesitation when squeezing?                                                                                         
	IsHesitation                                                                               *bool                      `json:"IsHesitation,omitempty"`
	// Pill below cement plug?                                                                                            
	IsPillBelowPlug                                                                            *bool                      `json:"IsPillBelowPlug,omitempty"`
	// Is Plug Bumped?                                                                                                    
	IsPlugBumped                                                                               *bool                      `json:"IsPlugBumped,omitempty"`
	// Plug or Dart catcher?                                                                                              
	IsPlugCatcher                                                                              *bool                      `json:"IsPlugCatcher,omitempty"`
	// Is Squeeze Obtained/Successful?                                                                                    
	IsSqueezeObtained                                                                          *bool                      `json:"IsSqueezeObtained,omitempty"`
	// Tailpipe/stringer perforated?                                                                                      
	IsTailPipePerforated                                                                       *bool                      `json:"IsTailPipePerforated,omitempty"`
	// Tail pipe/stinger used for setting a plug?                                                                         
	IsTailPipeUsed                                                                             *bool                      `json:"IsTailPipeUsed,omitempty"`
	// Top plug used?                                                                                                     
	IsTopPlugUsed                                                                              *bool                      `json:"IsTopPlugUsed,omitempty"`
	// Volume of mud lost                                                                                                 
	LostVolume                                                                                 *float64                   `json:"LostVolume,omitempty"`
	// Max Static Time After Displacement                                                                                 
	MaxStaticTimeAfterDisplacement                                                             *float64                   `json:"MaxStaticTimeAfterDisplacement,omitempty"`
	// Max Static Time During Placement                                                                                   
	MaxStaticTimeDuringPlacement                                                               *float64                   `json:"MaxStaticTimeDuringPlacement,omitempty"`
	// Max Static Time Surface - cement unit and surface lines                                                            
	MaxStaticTimeSurface                                                                       *float64                   `json:"MaxStaticTimeSurface,omitempty"`
	// Min WOC Time Before Logging                                                                                        
	MinWOCTimeBeforeLogging                                                                    *float64                   `json:"MinWOCTimeBeforeLogging,omitempty"`
	// Min WOC Time Before Tagging/Testing                                                                                
	MinWOCTimeBeforeTagging                                                                    *float64                   `json:"MinWOCTimeBeforeTagging,omitempty"`
	// Mix Method                                                                                                         
	MixMethod                                                                                  *string                    `json:"MixMethod,omitempty"`
	// Date/time when mixing of cement started.                                                                           
	MixStartDate                                                                               *time.Time                 `json:"MixStartDate,omitempty"`
	// Mud Circulation Elapsed Time                                                                                       
	MudCirculationElapsedTime                                                                  *float64                   `json:"MudCirculationElapsedTime,omitempty"`
	// Mud Circulation Flowrate during the job                                                                            
	MudCirculationFlowRate                                                                     *float64                   `json:"MudCirculationFlowRate,omitempty"`
	// Mud circulation pressure                                                                                           
	MudCirculationPressure                                                                     *float64                   `json:"MudCirculationPressure,omitempty"`
	// Mud density (weight)                                                                                               
	MudDensity                                                                                 *float64                   `json:"MudDensity,omitempty"`
	// Marsh funnel viscosity measured in a conical-shaped funnel                                                         
	MudFunnelViscosity                                                                         *float64                   `json:"MudFunnelViscosity,omitempty"`
	// Gels-10Min (in hole at start of job).                                                                              
	MudGel10Min                                                                                *float64                   `json:"MudGel10Min,omitempty"`
	// Gels-10Sec (in hole at start of job).                                                                              
	MudGel10SEC                                                                                *float64                   `json:"MudGel10Sec,omitempty"`
	// Plastic viscosity (in hole at start of job).                                                                       
	MudPlasticViscosity                                                                        *float64                   `json:"MudPlasticViscosity,omitempty"`
	// Yield point (in hole at start of job).                                                                             
	MudYieldPoint                                                                              *float64                   `json:"MudYieldPoint,omitempty"`
	// Type of mud in hole                                                                                                
	OriginalMudTypeID                                                                          *string                    `json:"OriginalMudTypeID,omitempty"`
	// Estimated volume outside casing for this stage placement                                                           
	OutsideCasingVolume                                                                        *float64                   `json:"OutsideCasingVolume,omitempty"`
	// Plug Manufacturer                                                                                                  
	PlugManufacturer                                                                           *string                    `json:"PlugManufacturer,omitempty"`
	// Pressure Held time at end of stage                                                                                 
	PressureHeldTime                                                                           *float64                   `json:"PressureHeldTime,omitempty"`
	// Volume of mud circulated prior to cement job                                                                       
	PriorCirculatingVolume                                                                     *float64                   `json:"PriorCirculatingVolume,omitempty"`
	// Date/time when pumping cement ended.                                                                               
	PumpEndDate                                                                                *time.Time                 `json:"PumpEndDate,omitempty"`
	// Average Pump Pressure                                                                                              
	PumpPressureAverage                                                                        *float64                   `json:"PumpPressureAverage,omitempty"`
	// Pump Rate Maximum                                                                                                  
	PumpRateMax                                                                                *float64                   `json:"PumpRateMax,omitempty"`
	// Date/time when pumping cement started.                                                                             
	PumpStartDate                                                                              *time.Time                 `json:"PumpStartDate,omitempty"`
	// Maximum overpull applied during reciprocating                                                                      
	ReciprocationOverpull                                                                      *float64                   `json:"ReciprocationOverpull,omitempty"`
	// Maximum slackoff applied during reciprocating                                                                      
	ReciprocationSlackoff                                                                      *float64                   `json:"ReciprocationSlackoff,omitempty"`
	// Volume of mud returned                                                                                             
	ReturnsVolume                                                                              *float64                   `json:"ReturnsVolume,omitempty"`
	// Shoe Track Length                                                                                                  
	ShoeTrackLength                                                                            *float64                   `json:"ShoeTrackLength,omitempty"`
	// Shoe Track Volume                                                                                                  
	ShoeTrackVolume                                                                            *float64                   `json:"ShoeTrackVolume,omitempty"`
	// Squeeze average flowrate                                                                                           
	SqueezeFlowRateAverage                                                                     *float64                   `json:"SqueezeFlowRateAverage,omitempty"`
	// Squeeze maximum flowrate                                                                                           
	SqueezeFlowRateMax                                                                         *float64                   `json:"SqueezeFlowRateMax,omitempty"`
	// Squeeze pressure left (held) on pipe while waiting on cement.                                                      
	SqueezeHeldPressure                                                                        *float64                   `json:"SqueezeHeldPressure,omitempty"`
	// Squeeze Held Pressure Elapsed Time                                                                                 
	SqueezeHeldPressureDuration                                                                *float64                   `json:"SqueezeHeldPressureDuration,omitempty"`
	// Squeezed cement volume left inside casing                                                                          
	SqueezeInCasingVolume                                                                      *float64                   `json:"SqueezeInCasingVolume,omitempty"`
	// Squeeze objective                                                                                                  
	SqueezeObjective                                                                           *string                    `json:"SqueezeObjective,omitempty"`
	// Squeezed cement volume outside/behind                                                                              
	SqueezeOutCasingVolume                                                                     *float64                   `json:"SqueezeOutCasingVolume,omitempty"`
	// Squeeze Pressure Average                                                                                           
	SqueezePressureAverage                                                                     *float64                   `json:"SqueezePressureAverage,omitempty"`
	// Squeeze Pressure Final                                                                                             
	SqueezePressureFinal                                                                       *float64                   `json:"SqueezePressureFinal,omitempty"`
	// Squeeze Pressure Initial                                                                                           
	SqueezePressureInitial                                                                     *float64                   `json:"SqueezePressureInitial,omitempty"`
	// Squeeze Remarks                                                                                                    
	SqueezeRemarks                                                                             *string                    `json:"SqueezeRemarks,omitempty"`
	// Volume of cement that was returned to surface during squeeze operation                                             
	SqueezeReverseVolume                                                                       *float64                   `json:"SqueezeReverseVolume,omitempty"`
	// Squeeze Tool Measured Depth e.g. Packer or Retainer                                                                
	SqueezeToolMeasuredDepth                                                                   *float64                   `json:"SqueezeToolMeasuredDepth,omitempty"`
	// Squeeze Tool True Vertical Depth e.g. Packer or Retainer                                                           
	SqueezeToolTrueVerticalDepth                                                               *float64                   `json:"SqueezeToolTrueVerticalDepth,omitempty"`
	// Measured depth interval for the cement stage (Base MD - Top MD).                                                   
	StageIntervalLength                                                                        *float64                   `json:"StageIntervalLength,omitempty"`
	// Stage number.                                                                                                      
	StageNumber                                                                                float64                    `json:"StageNumber"`
	// Remarks                                                                                                            
	StageRemarks                                                                               *string                    `json:"StageRemarks,omitempty"`
	// Mid measured depth of stage tool (multi-stage cement job) e.g. circulation port.                                   
	StageToolMeasuredDepth                                                                     *float64                   `json:"StageToolMeasuredDepth,omitempty"`
	// Mid true vertical depth of stage tool (multi-stage cement job) e.g. circulation port.                              
	StageToolTrueVerticalDepth                                                                 *float64                   `json:"StageToolTrueVerticalDepth,omitempty"`
	// Stage type.                                                                                                        
	StageTypeID                                                                                string                     `json:"StageTypeID"`
	// Bottom measured depth in primary cement job (multi-stage cement job).                                              
	StringMeasuredDepth                                                                        *float64                   `json:"StringMeasuredDepth,omitempty"`
	// Tailpipe/stinger size (diameter).                                                                                  
	TailPipeDiameter                                                                           *float64                   `json:"TailPipeDiameter,omitempty"`
	// Volume pumped to landing Top Dart                                                                                  
	TopDartLandVolume                                                                          *float64                   `json:"TopDartLandVolume,omitempty"`
	// Top Dart Shear Pressure                                                                                            
	TopDartShearPressure                                                                       *float64                   `json:"TopDartShearPressure,omitempty"`
	// Total operating hours from at depth ready for cement job. Included but not limited to:                             
	// Pre-circulation, NPT, rig up/down, line-up and pumping operations.                                                 
	TotalOperatingTime                                                                         *float64                   `json:"TotalOperatingTime,omitempty"`
	// Total pumping hours from at depth ready for cement job. Included but not limited to:                               
	// Pre-circulation, washing, spacer, cement and displacement.                                                         
	TotalPumpingTime                                                                           *float64                   `json:"TotalPumpingTime,omitempty"`
	// Under Displacement Volume Actual                                                                                   
	UnderDisplacementVolumeActual                                                              *float64                   `json:"UnderDisplacementVolumeActual,omitempty"`
	// Under Displacement Volume Planned                                                                                  
	UnderDisplacementVolumePlanned                                                             *float64                   `json:"UnderDisplacementVolumePlanned,omitempty"`
	// Workstring Bottom Measured Depth during displacement for Plugs & Squeezes                                          
	WorkstringMeasuredDepth                                                                    *float64                   `json:"WorkstringMeasuredDepth,omitempty"`
	// Workstring Bottom True Vertical Depth during displacement for Plugs & Squeezes                                     
	WorkstringTrueVerticalDepth                                                                *float64                   `json:"WorkstringTrueVerticalDepth,omitempty"`
}

// Original mud, washes, spacers, cement and displacement fluid properties.
type CementingFluid struct {
	// Volume of given fluid that resides in the annulus.                                                             
	AnnularFluidVolume                                                                          *float64              `json:"AnnularFluidVolume,omitempty"`
	// API Fluid Loss @ 30 Min                                                                                        
	APIFluidLoss30Min                                                                           *float64              `json:"APIFluidLoss30Min,omitempty"`
	// API fluid loss = 2 * volTestFluidLoss * SQRT(30/timeFluidLoss).                                                
	APIFluidLossRate                                                                            *float64              `json:"APIFluidLossRate,omitempty"`
	// Density of base fluid.                                                                                         
	BaseFluidDensity                                                                            *float64              `json:"BaseFluidDensity,omitempty"`
	// Drilling fluid base type                                                                                       
	BaseFluidTypeID                                                                             *string               `json:"BaseFluidTypeID,omitempty"`
	// Estimate Measured depth at bottom of fluid placement at end of Stage                                           
	BaseMeasuredDepth                                                                           *float64              `json:"BaseMeasuredDepth,omitempty"`
	// Cased Hole Excess Slurry Volume Percent                                                                        
	CasedHoleExcessPercent                                                                      *float64              `json:"CasedHoleExcessPercent,omitempty"`
	// Cement Additives list. Additives can be added in slurry but also in spacers, washes, mud.                      
	CementAdditives                                                                             []CementAdditive      `json:"CementAdditives,omitempty"`
	// Comments or Remarks                                                                                            
	CementFluidRemark                                                                           *string               `json:"CementFluidRemark,omitempty"`
	// Cement Mass Unit Type (Sacks or Tonnes)                                                                        
	CementMassUnitTypeID                                                                        *string               `json:"CementMassUnitTypeID,omitempty"`
	// Set of (Time / Rate / Back Pressure).                                                                          
	CementPumpSchedules                                                                         []CementPumpSchedule  `json:"CementPumpSchedules,omitempty"`
	// Cement Test Lab ID Number                                                                                      
	CementTestLabID                                                                             *string               `json:"CementTestLabID,omitempty"`
	// Cement Yield per Unit                                                                                          
	CementYield                                                                                 *float64              `json:"CementYield,omitempty"`
	// Compressive Strength Pressure/Temperature/Thickening                                                           
	CompressiveStrengthTest                                                                     []CompressiveStrength `json:"CompressiveStrengthTest,omitempty"`
	// Constant Gas Foam Method Density                                                                               
	ConstantGasFoamDensity                                                                      *float64              `json:"ConstantGasFoamDensity,omitempty"`
	// Fluid density                                                                                                  
	Density                                                                                     *float64              `json:"Density,omitempty"`
	// Constant gas ratio method for measuring average density.                                                       
	DensityConstantGasMethodID                                                                  *string               `json:"DensityConstantGasMethodID,omitempty"`
	// Density Method                                                                                                 
	DensityMethodID                                                                             *string               `json:"DensityMethodID,omitempty"`
	// Fluid Density Measurement Pressure                                                                             
	DensityPressure                                                                             *float64              `json:"DensityPressure,omitempty"`
	// Fluid Density Measurement Temperature                                                                          
	DensityTemperature                                                                          *float64              `json:"DensityTemperature,omitempty"`
	// Design fluid density                                                                                           
	DesignDensity                                                                               *float64              `json:"DesignDensity,omitempty"`
	// DesignVolume                                                                                                   
	DesignVolume                                                                                *float64              `json:"DesignVolume,omitempty"`
	// Dry blend cement slurry class                                                                                  
	DryBlendCementSlurryClassID                                                                 *string               `json:"DryBlendCementSlurryClassID,omitempty"`
	// Density of Dry blend.                                                                                          
	DryBlendDensity                                                                             *float64              `json:"DryBlendDensity,omitempty"`
	// Description of dry blend.                                                                                      
	DryBlendDescription                                                                         *string               `json:"DryBlendDescription,omitempty"`
	// Total mass of dry blend including additives: the volume is not constant.                                       
	DryBlendMass                                                                                *float64              `json:"DryBlendMass,omitempty"`
	// Weight of a sack of dry blend aka Sack Size or Tonnes                                                          
	DryBlendMassPerUnit                                                                         *float64              `json:"DryBlendMassPerUnit,omitempty"`
	// Name of dry blend.                                                                                             
	DryBlendName                                                                                *string               `json:"DryBlendName,omitempty"`
	// Excess Slurry Volume                                                                                           
	ExcessSlurryVolume                                                                          *float64              `json:"ExcessSlurryVolume,omitempty"`
	// Excess Slurry Volume Measurement Type                                                                          
	ExcessSlurryVolumeMeasureTypeID                                                             *string               `json:"ExcessSlurryVolumeMeasureTypeID,omitempty"`
	// True Vertical Depth at bottom of fluid placement at the end of Stage.                                          
	FluidBaseTrueVerticalDepth                                                                  *float64              `json:"FluidBaseTrueVerticalDepth,omitempty"`
	// Commercial product or trade name of fluid                                                                      
	FluidCommercialNameID                                                                       *string               `json:"FluidCommercialNameID,omitempty"`
	// Fluid description.                                                                                             
	FluidDescription                                                                            *string               `json:"FluidDescription,omitempty"`
	// Cement pumping schedule index or sequence number. Fluid Index: 1: first fluid pumped                           
	// (=original mud)                                                                                                
	// (last-1)=Tail cement, last= displacement mud                                                                   
	FluidIndex                                                                                  int64                 `json:"FluidIndex"`
	// Fluid loss dehydrating test period, used to compute the API fluid loss.                                        
	FluidLossElapsedTime                                                                        *float64              `json:"FluidLossElapsedTime,omitempty"`
	// Fluid loss pressure                                                                                            
	FluidLossPressure                                                                           *float64              `json:"FluidLossPressure,omitempty"`
	// Fluid loss temperature                                                                                         
	FluidLossTemperature                                                                        *float64              `json:"FluidLossTemperature,omitempty"`
	// Fluid loss volume                                                                                              
	FluidLossVolume                                                                             *float64              `json:"FluidLossVolume,omitempty"`
	// Name of Fluid e.g. Lead or Tail Slurry                                                                         
	FluidName                                                                                   *string               `json:"FluidName,omitempty"`
	// Fluid purpose description.                                                                                     
	FluidPurpose                                                                                *string               `json:"FluidPurpose,omitempty"`
	// Fluid Rheological Model - Newtonian/Bingham/Power Law/Herschel Bulkley.                                        
	FluidRheologicalModelID                                                                     *string               `json:"FluidRheologicalModelID,omitempty"`
	// Fluid Supplier.                                                                                                
	FluidSupplier                                                                               *string               `json:"FluidSupplier,omitempty"`
	// True Vertical Depth at top of fluid placement at the end of Stage.                                             
	FluidTopTrueVerticalDepth                                                                   *float64              `json:"FluidTopTrueVerticalDepth,omitempty"`
	// High level fluid type                                                                                          
	FluidTypeID                                                                                 *string               `json:"FluidTypeID,omitempty"`
	// Foam Injection Pressure                                                                                        
	FoamInjectionPressure                                                                       *float64              `json:"FoamInjectionPressure,omitempty"`
	// Test free fluid (mL/250ML) API 10B-2                                                                           
	FreeFluidPercent                                                                            *float64              `json:"FreeFluidPercent,omitempty"`
	// Test free fluid temperature                                                                                    
	FreeFluidTemperature                                                                        *float64              `json:"FreeFluidTemperature,omitempty"`
	// Free Fluid Test Angle e.g. 0  or 45 degrees                                                                    
	FreeFluidTestAngle                                                                          *float64              `json:"FreeFluidTestAngle,omitempty"`
	// Gas type used for foam job.                                                                                    
	GasFoamTypeID                                                                               *string               `json:"GasFoamTypeID,omitempty"`
	// Volume of gas used for foam job                                                                                
	GasFoamVolume                                                                               *float64              `json:"GasFoamVolume,omitempty"`
	// Gas foam method ratio                                                                                          
	GasMethodAverageRatio                                                                       *float64              `json:"GasMethodAverageRatio,omitempty"`
	// Gas foam method: final method ratio                                                                            
	GasMethodEndRatio                                                                           *float64              `json:"GasMethodEndRatio,omitempty"`
	// Gas foam method: initial method ratio                                                                          
	GasMethodStartRatio                                                                         *float64              `json:"GasMethodStartRatio,omitempty"`
	// Gauge Hole Size for estimating annular volume                                                                  
	GaugeHoleSize                                                                               *float64              `json:"GaugeHoleSize,omitempty"`
	// Gel reading after 10 minutes.                                                                                  
	Gel10MinReading                                                                             *float64              `json:"Gel10MinReading,omitempty"`
	// Gel strength after 10 minutes.                                                                                 
	Gel10MinStrength                                                                            *float64              `json:"Gel10MinStrength,omitempty"`
	// Gel reading after 10 seconds.                                                                                  
	Gel10SECReading                                                                             *float64              `json:"Gel10SecReading,omitempty"`
	// Gel strength after 10 seconds.                                                                                 
	Gel10SECStrength                                                                            *float64              `json:"Gel10SecStrength,omitempty"`
	// Gel reading after 1 minute.                                                                                    
	Gel1MinReading                                                                              *float64              `json:"Gel1MinReading,omitempty"`
	// Gel strength after 1 minute.                                                                                   
	Gel1MinStrength                                                                             *float64              `json:"Gel1MinStrength,omitempty"`
	// Gel reading after 30 minutes.                                                                                  
	Gel30MinReading                                                                             *float64              `json:"Gel30MinReading,omitempty"`
	// Gel strength after 30 minutes.                                                                                 
	Gel30MinStrength                                                                            *float64              `json:"Gel30MinStrength,omitempty"`
	// Foam used indicator                                                                                            
	IsFoamUsed                                                                                  *bool                 `json:"IsFoamUsed,omitempty"`
	// Consistency index (Power Law and Herschel-Bulkley).                                                            
	K                                                                                           *float64              `json:"K,omitempty"`
	// Mixability (0 - 5) - 0 is not mixable                                                                          
	MixabilityRating                                                                            *int64                `json:"MixabilityRating,omitempty"`
	// Mix Fluid Concentration                                                                                        
	MixFluidConcentration                                                                       *float64              `json:"MixFluidConcentration,omitempty"`
	// Mix Fluid Ratio                                                                                                
	MixFluidRatio                                                                               *float64              `json:"MixFluidRatio,omitempty"`
	// Mix Fluid Type                                                                                                 
	MixFluidTypeID                                                                              *string               `json:"MixFluidTypeID,omitempty"`
	// Detailed level fluid type                                                                                      
	MudTypeID                                                                                   *string               `json:"MudTypeID,omitempty"`
	// Power Law index (Power Law and Herschel-Bulkley).                                                              
	N                                                                                           *float64              `json:"N,omitempty"`
	// Open Hole Excess Slurry Volume Percent                                                                         
	OpenHoleExcessPercent                                                                       *float64              `json:"OpenHoleExcessPercent,omitempty"`
	// Volume Pumped                                                                                                  
	PumpedVolume                                                                                *float64              `json:"PumpedVolume,omitempty"`
	// Reserved (Unpumped) Volume                                                                                     
	ReservedVolume                                                                              *float64              `json:"ReservedVolume,omitempty"`
	// Fluid Fann Viscometer Rheology                                                                                 
	Rheometer                                                                                   []FluidFannRheology   `json:"Rheometer,omitempty"`
	// Measured depth interval between the top and base of the slurry placement.                                      
	SlurryHeight                                                                                *float64              `json:"SlurryHeight,omitempty"`
	// Slurry Mix Method                                                                                              
	SlurryMixMethodID                                                                           *string               `json:"SlurryMixMethodID,omitempty"`
	// Slurry Type                                                                                                    
	SlurryTypeID                                                                                *string               `json:"SlurryTypeID,omitempty"`
	// Solid Volume Per Volume Measure                                                                                
	SolidVolumeFraction                                                                         *float64              `json:"SolidVolumeFraction,omitempty"`
	// Source Water Chlorides                                                                                         
	SourceWaterChlorides                                                                        *float64              `json:"SourceWaterChlorides,omitempty"`
	// Water source description                                                                                       
	SourceWaterDescription                                                                      *string               `json:"SourceWaterDescription,omitempty"`
	// Source Water pH                                                                                                
	SourceWaterpH                                                                               *float64              `json:"SourceWaterpH,omitempty"`
	// Source Water pH Temperature                                                                                    
	SourceWaterpHTemperature                                                                    *float64              `json:"SourceWaterpHTemperature,omitempty"`
	// Source Water Temperature                                                                                       
	SourceWaterTemperature                                                                      *float64              `json:"SourceWaterTemperature,omitempty"`
	// Thickening Test - Pressure, Temperature, Consistency (Bc) v Elapsed Time                                       
	ThickeningTimeTest                                                                          []ThickeningTimeTest  `json:"ThickeningTimeTest,omitempty"`
	// Estimated Measured depth at top of fluid placement at end of Stage.                                            
	TopMeasuredDepth                                                                            *float64              `json:"TopMeasuredDepth,omitempty"`
	// Total Fluid/Slurry Volume. If CementingFluid is NOT a cement slurry, then report the                           
	// total fluid volume created of the fluid in question.                                                           
	TotalFluidVolume                                                                            *float64              `json:"TotalFluidVolume,omitempty"`
	// Total Slurry Volume                                                                                            
	TotalSlurryVolume                                                                           *float64              `json:"TotalSlurryVolume,omitempty"`
	// The elapsed time between the development of 100lbf/100sq ft gel strength and 500lbf/100                        
	// sq ft gel strength.                                                                                            
	TransitionElapsedTime                                                                       *float64              `json:"TransitionElapsedTime,omitempty"`
	// Units/Amount of Dry Blend Calculated                                                                           
	UnitsCalculated                                                                             *int64                `json:"UnitsCalculated,omitempty"`
	// Units/Amount of Dry Blend Used                                                                                 
	UnitsUsed                                                                                   *int64                `json:"UnitsUsed,omitempty"`
	// Viscosity (Newtonian) or Plastic Viscosity if Bingham. Not relevant for other rheological                      
	// models.                                                                                                        
	Viscosity                                                                                   *float64              `json:"Viscosity,omitempty"`
	// Yield point (Bingham and Herschel Bulkley models).                                                             
	YieldPoint                                                                                  *float64              `json:"YieldPoint,omitempty"`
	// Cement Slurry Yield Volume. Calculated - Sacks Used * CementYield                                              
	YieldVolume                                                                                 *float64              `json:"YieldVolume,omitempty"`
	// The elapsed time from initiation of the static portion of the test until the slurry                            
	// attains a gel strength of 100lbf/100sq ft.                                                                     
	ZeroGelElapsedTime                                                                          *float64              `json:"ZeroGelElapsedTime,omitempty"`
}

// Additives/chemicals added to a Fluid during a cement job
type CementAdditive struct {
	// Additive Amount Used                                                                              
	AdditiveAmount                                                                              *float64 `json:"AdditiveAmount,omitempty"`
	// Additive Amount Unit                                                                              
	AdditiveAmountUoM                                                                           *string  `json:"AdditiveAmountUoM,omitempty"`
	// Additive Code                                                                                     
	AdditiveCode                                                                                *string  `json:"AdditiveCode,omitempty"`
	// Concentration Amount: unit type depends on typeConc.                                              
	AdditiveConcentrationAmount                                                                 *float64 `json:"AdditiveConcentrationAmount,omitempty"`
	// Additive Concentration Unit Of Measure                                                            
	AdditiveConcentrationUnitOfMeasureID                                                        *string  `json:"AdditiveConcentrationUnitOfMeasureID,omitempty"`
	// Additive density                                                                                  
	AdditiveDensity                                                                             *float64 `json:"AdditiveDensity,omitempty"`
	// Additive Formulation - Wet or Dry.                                                                
	AdditiveFormulationID                                                                       *string  `json:"AdditiveFormulationID,omitempty"`
	// Additive index or sequence number. Used to retain order.                                          
	AdditiveIndex                                                                               int64    `json:"AdditiveIndex"`
	// Volume of container                                                                               
	AdditiveLiquidVolume                                                                        *float64 `json:"AdditiveLiquidVolume,omitempty"`
	// ID of or URL to Material Safety Data Sheet                                                        
	AdditiveMSDSID                                                                              *string  `json:"AdditiveMSDSID,omitempty"`
	// Relationship to a FluidAdditiveName reference-data record.                                        
	AdditiveNameID                                                                              string   `json:"AdditiveNameID"`
	// Comments or Remarks.                                                                              
	AdditiveRemark                                                                              *string  `json:"AdditiveRemark,omitempty"`
	// The chief purpose or reason for adding a substance to a fluid used in a downhole                  
	// operation.                                                                                        
	AdditiveRoleID                                                                              *string  `json:"AdditiveRoleID,omitempty"`
	// Mass of Sack                                                                                      
	AdditiveSackMass                                                                            *float64 `json:"AdditiveSackMass,omitempty"`
	// ConcentrationType: %BWOC (%By weight of Cement), %BWOB (%By weight of blend), %BWOW (%By          
	// weight of water), %BWOBF (%By weight of base fluid)                                               
	AdditiveTypeConcentrationID                                                                 *string  `json:"AdditiveTypeConcentrationID,omitempty"`
	// The liquid, solid or gaseous substance used to manipulate the function or properties of a         
	// fluid.                                                                                            
	AdditiveTypeID                                                                              *string  `json:"AdditiveTypeID,omitempty"`
	// Vendor/Supplier of additive                                                                       
	AdditiveVendorID                                                                            *string  `json:"AdditiveVendorID,omitempty"`
}

// Cement Pump Schedule Parameters
type CementPumpSchedule struct {
	// Back pressure applied during pumping stage.                                                       
	BackPressure                                                                              *float64   `json:"BackPressure,omitempty"`
	// Duration of the pumping schedule interval                                                         
	ElapsedTime                                                                               *float64   `json:"ElapsedTime,omitempty"`
	// Date/time when the pump schedule interval ended.                                                  
	EndDatetime                                                                               *time.Time `json:"EndDatetime,omitempty"`
	// The ratio of excess fluid to total fluid pumped during the step                                   
	ExcessFluidRatio                                                                          *float64   `json:"ExcessFluidRatio,omitempty"`
	// Cement slurry mix rate                                                                            
	MixRate                                                                                   *float64   `json:"MixRate,omitempty"`
	// Placement Method to land cement                                                                   
	PlacementMethod                                                                           *string    `json:"PlacementMethod,omitempty"`
	// Pumping Equipment Type                                                                            
	PumpEquipmentType                                                                         *string    `json:"PumpEquipmentType,omitempty"`
	// Pump Pressure Average                                                                             
	PumpPressureAvg                                                                           *float64   `json:"PumpPressureAvg,omitempty"`
	// Pump Pressure Maximum                                                                             
	PumpPressureMax                                                                           *float64   `json:"PumpPressureMax,omitempty"`
	// Pump Pressure Minimum                                                                             
	PumpPressureMin                                                                           *float64   `json:"PumpPressureMin,omitempty"`
	// Average Rate fluid is pumped. 0 means it is a pause.                                              
	PumpRateAvg                                                                               *float64   `json:"PumpRateAvg,omitempty"`
	// Maximum Rate fluid is pumped. 0 means it is a pause.                                              
	PumpRateMax                                                                               *float64   `json:"PumpRateMax,omitempty"`
	// Minimum Rate fluid is pumped. 0 means it is a pause.                                              
	PumpRateMin                                                                               *float64   `json:"PumpRateMin,omitempty"`
	// Pump stroke rate (SPM)                                                                            
	PumpStrokeRate                                                                            *float64   `json:"PumpStrokeRate,omitempty"`
	// Number of actual Pump strokes for the fluid to be pumped (assumed pump output known)              
	PumpStrokesActual                                                                         *int64     `json:"PumpStrokesActual,omitempty"`
	// Number of Pump strokes estimated for the fluid to be pumped (assumed pump output known)           
	PumpStrokesEstimated                                                                      *int64     `json:"PumpStrokesEstimated,omitempty"`
	// Volume pumped = eTimPump * ratePump.                                                              
	PumpVolume                                                                                *float64   `json:"PumpVolume,omitempty"`
	// Remarks                                                                                           
	Remark                                                                                    *string    `json:"Remark,omitempty"`
	// Sequence Number                                                                                   
	SequenceNumber                                                                            *int64     `json:"SequenceNumber,omitempty"`
	// Shutdown Elapsed Time                                                                             
	ShutdownElapsedTime                                                                       *float64   `json:"ShutdownElapsedTime,omitempty"`
	// Date/time when the pump schedule interval started.                                                
	StartDatetime                                                                             *time.Time `json:"StartDatetime,omitempty"`
}

// Fluid Compressive Strength Test data
type CompressiveStrength struct {
	// Compressive Strength                                           
	CompressiveStrength                                      *float64 `json:"CompressiveStrength,omitempty"`
	// Compressive Strength Elapsed Time                              
	CompressiveStrengthElapsedTime                           *float64 `json:"CompressiveStrengthElapsedTime,omitempty"`
	// Compressive Strength Index                                     
	CompressiveStrengthIndex                                 int64    `json:"CompressiveStrengthIndex"`
	// Compressive strength temperature                               
	CompressiveStrengthTemperature                           *float64 `json:"CompressiveStrengthTemperature,omitempty"`
	// Pressure held during Compressive Strength test                 
	CompressiveStrengthTestPressure                          *float64 `json:"CompressiveStrengthTestPressure,omitempty"`
	// Transit Time measured over a set length (microseconds)         
	CompressiveStrengthTransitTime                           *float64 `json:"CompressiveStrengthTransitTime,omitempty"`
}

// Fluid Fann Viscometer Rheology
type FluidFannRheology struct {
	// 100 RPM Dial Reading                                               
	Viscometer100RPMDialReading                                  *float64 `json:"Viscometer100RPMDialReading,omitempty"`
	// 200 RPM Dial Reading                                               
	Viscometer200RPMDialReading                                  *float64 `json:"Viscometer200RPMDialReading,omitempty"`
	// 300 RPM Dial Reading                                               
	Viscometer300RPMDialReading                                  *float64 `json:"Viscometer300RPMDialReading,omitempty"`
	// 30 RPM Dial Reading                                                
	Viscometer30RPMDialReading                                   *float64 `json:"Viscometer30RPMDialReading,omitempty"`
	// 3 RPM Dial Reading                                                 
	Viscometer3RPMDialReading                                    *float64 `json:"Viscometer3RPMDialReading,omitempty"`
	// 600 RPM Dial Reading                                               
	Viscometer600RPMDialReading                                  *float64 `json:"Viscometer600RPMDialReading,omitempty"`
	// 60 RPM Dial Reading                                                
	Viscometer60RPMDialReading                                   *float64 `json:"Viscometer60RPMDialReading,omitempty"`
	// 6 RPM Dial Reading                                                 
	Viscometer6RPMDialReading                                    *float64 `json:"Viscometer6RPMDialReading,omitempty"`
	// Viscometer index or sequence number. Used to retain order.         
	ViscometerIndex                                              *int64   `json:"ViscometerIndex,omitempty"`
	// Viscometer Pressure                                                
	ViscometerPressure                                           *float64 `json:"ViscometerPressure,omitempty"`
	// Viscometer Temperature                                             
	ViscometerTemperature                                        *float64 `json:"ViscometerTemperature,omitempty"`
	// Viscometer Temperature Direction                                   
	ViscometerTemperatureDirection                               *string  `json:"ViscometerTemperatureDirection,omitempty"`
}

// Thickening Time Test data
type ThickeningTimeTest struct {
	// Compressive Strength Index                                                               
	TestIndex                                                                          int64    `json:"TestIndex"`
	// Thickening text consistency/slurry viscosity: Bearden Consistency (Bc) 0 to 100.         
	ThickeningTestConsistency                                                          *int64   `json:"ThickeningTestConsistency,omitempty"`
	// Thickening Test Elapsed Time                                                             
	ThickeningTestElapsedTime                                                          *float64 `json:"ThickeningTestElapsedTime,omitempty"`
	// Thickening Test Pressure                                                                 
	ThickeningTestPressure                                                             *float64 `json:"ThickeningTestPressure,omitempty"`
	// Thickening Test Temperature                                                              
	ThickeningTestTemperature                                                          *float64 `json:"ThickeningTestTemperature,omitempty"`
}

// Hesitation Squeeze History
type HesitationSqueezeHistory struct {
	// Final Pressure                          
	FinalPressure                     *float64 `json:"FinalPressure,omitempty"`
	// Duration between pumping stages         
	HesitationTime                    *float64 `json:"HesitationTime,omitempty"`
	// Initial Pressure                        
	InitialPressure                   *float64 `json:"InitialPressure,omitempty"`
	// Remarks                                 
	Remarks                           *string  `json:"Remarks,omitempty"`
	// Sequence Number                         
	SequenceNo                        *int64   `json:"SequenceNo,omitempty"`
	// Volume Pumped                           
	Volume                            *float64 `json:"Volume,omitempty"`
}

// Liner Top Test
type LinerTopTest struct {
	// Cement Found On Tool?                                        
	IsCementFoundOnTool                                    *bool    `json:"IsCementFoundOnTool,omitempty"`
	// Liner Negative Test Tool                                     
	LinerNegativeTestTool                                  *string  `json:"LinerNegativeTestTool,omitempty"`
	// Liner Overlap                                                
	LinerOverlap                                           *float64 `json:"LinerOverlap,omitempty"`
	// Liner Positive Test Tool                                     
	LinerPositiveTestTool                                  *string  `json:"LinerPositiveTestTool,omitempty"`
	// Elapsed Time Before Test following end of cement job         
	LinerTopTestElapsedTime                                *float64 `json:"LinerTopTestElapsedTime,omitempty"`
	// Comments or Remarks                                          
	LinerTopTestRemarks                                    *string  `json:"LinerTopTestRemarks,omitempty"`
	// Liner Negative Test Equivalent Mud Weight                    
	NegativeTestEquivalentMudWeight                        *float64 `json:"NegativeTestEquivalentMudWeight,omitempty"`
	// Liner Positive Test Equivalent Mud Weight                    
	PositiveTestEquivalentMudWeight                        *float64 `json:"PositiveTestEquivalentMudWeight,omitempty"`
	// Test Base Measured Depth                                     
	TestBaseMeasuredDepth                                  *float64 `json:"TestBaseMeasuredDepth,omitempty"`
	// Test Base True Vertical Depth                                
	TestBaseTrueVerticalDepth                              *float64 `json:"TestBaseTrueVerticalDepth,omitempty"`
	// Test Top Measured Depth                                      
	TestTopMeasuredDepth                                   *float64 `json:"TestTopMeasuredDepth,omitempty"`
	// Test Top True Vertical Depth                                 
	TestTopTrueVerticalDepth                               *float64 `json:"TestTopTrueVerticalDepth,omitempty"`
}

// Log Evaluation parameters
type LogEvaluation struct {
	// Elapsed Time Before Log from end of Cement Job                                 
	BeforeLogElapsedTime                                         *float64             `json:"BeforeLogElapsedTime,omitempty"`
	// Cement bond log quality description.                                           
	CBLLogQuality                                                *string              `json:"CBLLogQuality,omitempty"`
	// Cement Bond Log Pressure                                                       
	CBLPressure                                                  *float64             `json:"CBLPressure,omitempty"`
	// Evaluation Date/time                                                           
	EvaluationDate                                               *time.Time           `json:"EvaluationDate,omitempty"`
	// Bottom Hole Temperature Log Run?                                               
	IsBHTRun                                                     *bool                `json:"IsBHTRun,omitempty"`
	// Cement Bond Log tool run?                                                      
	IsCBLRun                                                     *bool                `json:"IsCBLRun,omitempty"`
	// Cement Found Between Shoe Collar during Evaluation Log run                     
	IsCementFoundBetweenShoeCollar                               *bool                `json:"IsCementFoundBetweenShoeCollar,omitempty"`
	// Cement Found On Tool during Evaluation Log run                                 
	IsCementFoundOnTool                                          *bool                `json:"IsCementFoundOnTool,omitempty"`
	// Cement Evaluation Tool Run?                                                    
	IsCETRun                                                     *bool                `json:"IsCETRun,omitempty"`
	// Log Evaluation Depths                                                          
	LogEvaluationDepths                                          []LogEvaluationDepth `json:"LogEvaluationDepths,omitempty"`
	// Log Evaluation Results                                                         
	LogEvaluationResults                                         *string              `json:"LogEvaluationResults,omitempty"`
	// ID to evaluation Log                                                           
	LogID                                                        *string              `json:"LogID,omitempty"`
	// Log type                                                                       
	LogType                                                      *string              `json:"LogType,omitempty"`
}

// Log Evaluation Depth
type LogEvaluationDepth struct {
	// Evaluated Interval Base Measured Depth         
	EvaluatedIntervalMeasuredDepthBase       *float64 `json:"EvaluatedIntervalMeasuredDepthBase,omitempty"`
	// Evaluated Interval Top Measured Depth          
	EvaluatedIntervalMeasuredDepthTop        *float64 `json:"EvaluatedIntervalMeasuredDepthTop,omitempty"`
	// Is Isolated                                    
	IsIsolated                               *bool    `json:"IsIsolated,omitempty"`
	// Remarks                                        
	Remarks                                  *string  `json:"Remarks,omitempty"`
}

// Shoe Test
type ShoeTest struct {
	// Shoe Test Tool Used                                               
	IsShoeTestToolUsed                                          *bool    `json:"IsShoeTestToolUsed,omitempty"`
	// Open Hole Length                                                  
	OpenHoleLength                                              *float64 `json:"OpenHoleLength,omitempty"`
	// Comments or Remarks                                               
	ShoeTestComments                                            *string  `json:"ShoeTestComments,omitempty"`
	// Elapsed Time Before Shoe Test following end of cement job         
	ShoeTestElapsedTime                                         *float64 `json:"ShoeTestElapsedTime,omitempty"`
	// Shoe Test Equivalent Mud Weight                                   
	ShoeTestEquivalentMudWeight                                 *float64 `json:"ShoeTestEquivalentMudWeight,omitempty"`
	// Shoe Test Type                                                    
	ShoeTestTypeID                                              *string  `json:"ShoeTestTypeID,omitempty"`
}

// Shoetrack Cement
type ShoetrackCement struct {
	// Is Hard Cement?                               
	IsHardCement                          *bool      `json:"IsHardCement,omitempty"`
	// Comments or Remarks                           
	ShoetrackCementTestRemarks            *string    `json:"ShoetrackCementTestRemarks,omitempty"`
	// Shoetrack Drill Date                          
	ShoetrackDrillDate                    *time.Time `json:"ShoetrackDrillDate,omitempty"`
	// Shoetrack Drill Measured Depth                
	ShoetrackDrillMeasuredDepth           *float64   `json:"ShoetrackDrillMeasuredDepth,omitempty"`
	// Shoetrack Drill True Vertical Depth           
	ShoetrackDrillTrueVerticalDepth       *float64   `json:"ShoetrackDrillTrueVerticalDepth,omitempty"`
	// Shoetrack Length                              
	ShoetrackLength                       *float64   `json:"ShoetrackLength,omitempty"`
	// Shoetrack Measured Depth                      
	ShoetrackMeasuredDepth                *float64   `json:"ShoetrackMeasuredDepth,omitempty"`
	// Shoetrack True Vertical Depth                 
	ShoetrackTrueVerticalDepth            *float64   `json:"ShoetrackTrueVerticalDepth,omitempty"`
}

// TOC Interpretation
type TOCInterpretation struct {
	// TOC Interpretation                                    
	Interpretation                                  *string  `json:"Interpretation,omitempty"`
	// Comments or Remarks of the TOC Interpretation         
	InterpretationRemarks                           *string  `json:"InterpretationRemarks,omitempty"`
	// Interpreter                                           
	Interpreter                                     *string  `json:"Interpreter,omitempty"`
	// Remedial Cement Required?                             
	IsRemedialCementRequired                        *bool    `json:"IsRemedialCementRequired,omitempty"`
	// TOC Sufficient?                                       
	IsTopOfCementSufficient                         *bool    `json:"IsTopOfCementSufficient,omitempty"`
	// Number of remedial Squeezes required                  
	NumberOfRemedial                                *int64   `json:"NumberOfRemedial,omitempty"`
	// Planned Top of Cement (TOC) Measured Depth            
	PlannedTopMeasuredDepth                         *float64 `json:"PlannedTopMeasuredDepth,omitempty"`
	// Remedial Type                                         
	RemedialType                                    *string  `json:"RemedialType,omitempty"`
	// Top of Cement Locate Method                           
	TopOfCementLocateMethodID                       *string  `json:"TopOfCementLocateMethodID,omitempty"`
	// Top of Cement (TOC) Measured Depth                    
	TopOfCementMeasuredDepth                        *float64 `json:"TopOfCementMeasuredDepth,omitempty"`
	// Top of Cement (TOC) True Vertical Depth               
	TopOfCementTrueVerticalDepth                    *float64 `json:"TopOfCementTrueVerticalDepth,omitempty"`
}

// ID to the Zero Depth Point Vertical Measure elevation for depths contained in the Cement
// Job, Stages and Pumping Schedule, depth correction used to correlate MDs to original
// drilling rig MD. References an entry in the Vertical Measurement array for the Well
// parented by the wellbore via WellboreID.
//
// A location along a wellbore, _usually_ associated with some aspect of the drilling of the
// wellbore, but not with any intersecting _subsurface_ natural surfaces.
//
// The well vertical measurement elevation reference for  test MD and TVD.
//
// The Vertical Measurement for the Wellbore identified which defines the vertical reference
// pressure datum for the related PPFG curves in this data set. The pressure datum is used
// to calculate the average pressure gradient in
//
// The data structure defining the zero depth point for the measured depths as well as the
// VerticalMeasurementSource (driller's depth or logger's depth), so that it becomes clear
// whether or not a depth correction is required and if so, in which direction the
// correction has to be performed (driller's depth to logger's depth or vice versa).
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the RockSample record. If this is not populated, the
// VerticalMeasurement is derived from the Coring.
//
// ID to the Zero Depth Point Vertical Measure elevation for depths contained in the
// stimulation job, job stages and other objects used to correlate MDs to original drilling
// rig MD. References an entry in the Vertical Measurement array for the Well parented by
// the wellbore via WellboreID.
//
// Either a self-contained vertical reference for the depths in this TubularAssembly or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID.
//
// Populated only if the WellLog represents time-depth relationships or check shots. It is
// expressed via the standard AbstractFacilityVerticalMeasurement. The following properties
// are expected to be present: VerticalMeasurementPathID (typically elevation),
// VerticalMeasurementTypeID as SeismicReferenceDatum, VerticalMeasurement holding the
// offset to either the VerticalCRSID or the chained VerticalReferenceID in the parent
// Wellbore.
//
// The vertical measurement reference for the log curves, which defines the vertical
// reference datum for the logged depths. Either VerticalMeasurement or
// VerticalMeasurementID are populated.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference elevation for all measured depths within
// the NPT record. If this is not populated, the VerticalMeasurement is derived from the
// Wellbore default Vertical Measure Elevation.
//
// The vertical measurement reference for this well logging acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// References an entry in the Vertical Measurement array for the Wellbore identified by
// WellboreID, which defines the vertical reference datum for all marker measured depths of
// the WellboreIntervalSet Intervals array. It is strongly recommended specifying the
// VerticalMeasurement.WellboreTVDTrajectoryID  when SubSeaVerticalDepth are populated for
// the intervals.
//
// References an entry in the Vertical Measurement array for the Wellbore identified by
// WellboreID, which defines the vertical reference datum for all marker measured depths of
// the Wellbore Marker Set Markers array.
//
// References an entry in the Vertical Measurement array for the Wellbore identified by
// WellboreID, which defines the vertical reference datum for all survey station measured
// depths.
type AbstractFacilityVerticalMeasurement struct {
	// The date and time at which a vertical measurement instance becomes effective.                        
	EffectiveDateTime                                                                            *time.Time `json:"EffectiveDateTime,omitempty"`
	// The date and time at which a vertical measurement instance is no longer in effect.                   
	TerminationDateTime                                                                          *time.Time `json:"TerminationDateTime,omitempty"`
	// A vertical coordinate reference system defines the origin for height or depth values. It             
	// is expected that either VerticalCRSID or VerticalReferenceID reference is provided in a              
	// given vertical measurement array object, but not both.                                               
	VerticalCRSID                                                                                *string    `json:"VerticalCRSID,omitempty"`
	// The value of the elevation or depth. Depth is positive downwards from a vertical                     
	// reference or geodetic datum along a path, which can be vertical; elevation is positive               
	// upwards from a geodetic datum along a vertical path. Either can be negative.                         
	VerticalMeasurement                                                                          *float64   `json:"VerticalMeasurement,omitempty"`
	// Text which describes a vertical measurement in detail.                                               
	VerticalMeasurementDescription                                                               *string    `json:"VerticalMeasurementDescription,omitempty"`
	// Specifies Measured Depth, True Vertical Depth, or Elevation.                                         
	VerticalMeasurementPathID                                                                    *string    `json:"VerticalMeasurementPathID,omitempty"`
	// Specifies Driller vs Logger.                                                                         
	VerticalMeasurementSourceID                                                                  *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (TD, Plugback, Kickoff, Drill Floor, Rotary               
	// Table...).                                                                                           
	VerticalMeasurementTypeID                                                                    *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The unit of measure for the vertical measurement. If a unit of measure and a vertical CRS            
	// are provided, the unit of measure provided is taken over the unit of measure from the CRS.           
	VerticalMeasurementUnitOfMeasureID                                                           *string    `json:"VerticalMeasurementUnitOfMeasureID,omitempty"`
	// This relationship identifies the entity (aka record) in which the VerticalReferenceID is             
	// found; It could be a different OSDU entity or a self-reference. For example, a Wellbore              
	// VerticalMeasurement may reference a member of a VerticalMeasurements[] array in its                  
	// parent Well record. Alternatively, VerticalReferenceEntityID may be populated with the ID            
	// of its own Wellbore record to make explicit that VerticalReferenceID is intended to be               
	// found in this record, not another.                                                                   
	VerticalReferenceEntityID                                                                    *string    `json:"VerticalReferenceEntityID,omitempty"`
	// The reference point from which the relative vertical measurement is made. This is only               
	// populated if the measurement has no VerticalCRSID specified. The value entered must match            
	// the VerticalMeasurementID for another vertical measurement array element in Wellbore or              
	// Well or in a related parent facility. The relationship should be  declared explicitly in             
	// VerticalReferenceEntityID. Any chain of measurements must ultimately resolve to a                    
	// Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID is provided in            
	// a given vertical measurement array object, but not both.                                             
	VerticalReferenceID                                                                          *string    `json:"VerticalReferenceID,omitempty"`
	// Specifies what directional survey or wellpath was used to calculate the TVD.                         
	WellboreTVDTrajectoryID                                                                      *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// A collection of data references used in context of a CollaborationProject, often
// describing the content of a "system of engagement".
type CollaborationProjectCollection struct {
	// The access control tags associated with this entity.                                                                          
	ACL                                                                                          AccessControlList                   `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                            
	// derived.                                                                                                                      
	Ancestry                                                                                     *ParentList                         `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                      
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	CreateTime                                                                                   *time.Time                          `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                       
	// System.                                                                                                                       
	CreateUser                                                                                   *string                             `json:"createUser,omitempty"`
	Data                                                                                         *CollaborationProjectCollectionData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                        
	// version.                                                                                                                      
	ID                                                                                           *string                             `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                  
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                      
	// scheme follows the semantic versioning, https://semver.org/.                                                                  
	Kind                                                                                         string                              `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                        
	// legal tags is managed by the Compliance Service.                                                                              
	Legal                                                                                        LegalMetaData                       `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                       
	// definitions.                                                                                                                  
	Meta                                                                                         []FrameOfReferenceMetaDataItem      `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                      
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                             
	ModifyTime                                                                                   *time.Time                          `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                    
	ModifyUser                                                                                   *string                             `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                       
	// as keys and values.                                                                                                           
	Tags                                                                                         map[string]string                   `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                               
	Version                                                                                      *int64                              `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type CollaborationProjectCollectionData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Data Platform System of Record trusted (input) resources that make up the Collaboration                                                 
	// Project Data Collection.                                                                                                                
	ResourceIDs                                                                                 []string                                       `json:"ResourceIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A ColumnBasedTable is a set of columns, which have equal length (data.ColumnSize).
// Columns have a Property Kind, UnitOfMeasure and Facet. There are KeyColumns (index
// columns) and Columns (for look-up values). Examples are KrPc, PVT and Facies tables.
type ColumnBasedTable struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ColumnBasedTableData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type ColumnBasedTableData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Optional relationship to a ColumnBasedTableTemplate record, which defines the KeyColumn                                                 
	// and Column definitions. Some columns defined in the template may be omitted if not                                                      
	// contained in the ColumnValues, but the ones used must be exactly identical to the                                                       
	// template's column definitions. If the ColumnBasedTableTemplateID is populated, the                                                      
	// ColumnBasedTableType is expected to be ColumnBasedTableTemplateControlled.                                                              
	ColumnBasedTableTemplateID                                                                  *string                                        `json:"ColumnBasedTableTemplateID,omitempty"`
	// Quickly indicate the type of the column based table (KrPc, PVT, Facies, ...) and its                                                    
	// standard columns definition. It is supposed to be used when you don't use KeyColumns                                                    
	// neither Columns as attributes of this WPC.                                                                                              
	ColumnBasedTableType                                                                        *string                                        `json:"ColumnBasedTableType,omitempty"`
	// A common column storing values of a particular property kind. Do not use this attribute                                                 
	// if you want to follow a given ColumnBasedTableType.                                                                                     
	Columns                                                                                     []AbstractReferencePropertyType                `json:"Columns,omitempty"`
	// The count of elements in each column, i.e. the number of rows in the ColumnBasedTable.                                                  
	// All columns must have the same size, including placeholder values for the undefined cells                                               
	// identified by data.ColumnValues[].UndefinedValueRows[].                                                                                 
	ColumnSize                                                                                  *int64                                         `json:"ColumnSize,omitempty"`
	// First column values are related to first key column, second column values are related to                                                
	// the second key column, etc…                                                                                                             
	// Column values at index KeyColumns count are related to first (non key) column, Column                                                   
	// values at index KeyColumns count + 1 are related to second (non key) column, etc...                                                     
	ColumnValues                                                                                []ColumnValues                                 `json:"ColumnValues,omitempty"`
	// A column whose values are considered as keys/indices. Do not use this attribute if you                                                  
	// want to follow a given ColumnBasedTableType.                                                                                            
	KeyColumns                                                                                  []AbstractReferencePropertyType                `json:"KeyColumns,omitempty"`
	// The master-data record, e.g., project or survey, which provides further context to the                                                  
	// tabular data.                                                                                                                           
	MasterDataID                                                                                *string                                        `json:"MasterDataID,omitempty"`
	// The work-product-component record, e.g., activity, which provides further context to the                                                
	// tabular data.                                                                                                                           
	WorkProductComponentID                                                                      *string                                        `json:"WorkProductComponentID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Value of the column. Generally only one of the attribute should be instantiated.
type ColumnValues struct {
	// A column of only boolean values                                                               
	BooleanColumn                                                                          []bool    `json:"BooleanColumn,omitempty"`
	// A column of only integer values                                                               
	IntegerColumn                                                                          []int64   `json:"IntegerColumn,omitempty"`
	// A column of only number values                                                                
	NumberColumn                                                                           []float64 `json:"NumberColumn,omitempty"`
	// A column of only string values                                                                
	StringColumn                                                                           []string  `json:"StringColumn,omitempty"`
	// The row indexes for which the values are flagged as undefined. The first element has          
	// index 0.                                                                                      
	UndefinedValueRows                                                                     []int64   `json:"UndefinedValueRows,omitempty"`
}

// The purpose of this schema is best understood in the context of a columnar dataset: the
// AbstractReferencePropertyType describes a column in a columnar dataset by declaring its
// value type (number, string), a UnitQuantity if the value type is a number, a kind if the
// string value is actually a relationship to a e.g. reference-data type.
type AbstractReferencePropertyType struct {
	// When describing a table column, e.g., in an associated dataset, this optional property                         
	// allows the association of the record column definition(s) to dataset table column(s).                          
	ColumnName                                                                                  *string               `json:"ColumnName,omitempty"`
	// Ordered array with: FacetType, FacetRole, both calling specific references                                     
	//                                                                                                                
	// FacetType: Enumerations of the type of additional context about the nature of a property                       
	// type (it may include conditions, direction, qualifiers, or statistics).                                        
	//                                                                                                                
	// FacetRole: Additional context about the nature of a property type. The purpose of such                         
	// attribute is to minimize the need to create specialized property types by mutualizing                          
	// some well known qualifiers such as "maximum", "minimum" which apply to a lot of different                      
	// property types.                                                                                                
	FacetIDs                                                                                    []AbstractFacet       `json:"FacetIDs,omitempty"`
	// It holds the PropertyType associated with this reference property type, further defining                       
	// the semantics of the value. It contains a relationship to PropertyType record and its                          
	// (de-normalized) name. String or number values can represent e.g. A date or a time by                           
	// referring to the respective PropertyType record id.                                                            
	PropertyType                                                                                *AbstractPropertyType `json:"PropertyType,omitempty"`
	// Only populated if ValueType=="string" and the values are expected to represent record                          
	// ids, e.g. to a reference-data type, then this value holds the kind (optionally without                         
	// the semantic version number).                                                                                  
	RelationshipTargetKind                                                                      *string               `json:"RelationshipTargetKind,omitempty"`
	// Only populated of the ValueType is "number". It holds the UnitOfMeasure associated with                        
	// this reference property type. It is a relationship to a UnitOfMeasure record. If the                           
	// UnitQuantityID and/or PropertyType.PropertyTypeID are populated in addition to                                 
	// UnitOfMeasureID, the referenced records must finally share the same dimension code. See                        
	// Schema Usage Guide 'Unit of Measure Foundation'.                                                               
	UnitOfMeasureID                                                                             *string               `json:"UnitOfMeasureID,omitempty"`
	// Only populated of the ValueType is "number". It holds the UnitQuantity associated with                         
	// this reference property type. It is a relationship to UnitQuantity record.                                     
	UnitQuantityID                                                                              *string               `json:"UnitQuantityID,omitempty"`
	// The number of values in a tuple, e.g. For coordinates. The default is 1.                                       
	ValueCount                                                                                  *int64                `json:"ValueCount,omitempty"`
	// The type of value to expect for this reference property, either "number" (floating point                       
	// number), "integer",  "string", or "boolean".                                                                   
	ValueType                                                                                   *string               `json:"ValueType,omitempty"`
}

// A tuple FacetType, FacetRole, both calling specific references
//
// FacetType: Enumeration of the type of additional context about the nature of a property
// type (it may include conditions, direction, qualifiers, or statistics).
//
// FacetRole: Additional context about the nature of a property type. The purpose of such
// attribute is to minimize the need to create specialized property types by mutualizing
// some well known qualifiers such as "maximum", "minimum" which apply to a lot of different
// property types.
type AbstractFacet struct {
	// Additional context about the nature of a property type. The purpose of such attribute is        
	// to minimize the need to create specialized property types by mutualizing some well known        
	// qualifiers such as "maximum", "minimum" which apply to a lot of different property types.       
	FacetRoleID                                                                                 string `json:"FacetRoleID"`
	// FacetType: An 'enumeration' of the type of additional context about the nature of a             
	// property type (it may include conditions, direction, qualifiers, or statistics).                
	FacetTypeID                                                                                 string `json:"FacetTypeID"`
}

// It holds the PropertyType associated with this reference property type, further defining
// the semantics of the value. It contains a relationship to PropertyType record and its
// (de-normalized) name. String or number values can represent e.g. A date or a time by
// referring to the respective PropertyType record id.
//
// A nested object holding the relationship to a PropertyType by id (uuid) and a derived,
// human-readable name.
type AbstractPropertyType struct {
	// The name of the PropertyType, de-normalized, derived from the record referenced in               
	// PropertyTypeID.                                                                                  
	Name                                                                                        *string `json:"Name,omitempty"`
	// The relationship to the PropertyType reference data item, typically containing an                
	// Energistics PWLS 3 uuid. For better traceability and usability the property name is to be        
	// populated in the Name property.                                                                  
	PropertyTypeID                                                                              *string `json:"PropertyTypeID,omitempty"`
}

// This is used to store the result from a run of a Data Quality Metric Evaluation engine.
// Captures summary information, such as which rule-set(s) and rule(s) have been used, when
// this was run and by whom. Detailed results may be associated with a dataset.
type DataQuality struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *DataQualityData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type DataQualityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The DataQualityRuleSet aggregating other rule sets and/or individual DataQualityRule                                                    
	// instances, individually weighted in the context of the DataQualityRuleSet.                                                              
	DataQualityRuleSetID                                                                        *string                                        `json:"DataQualityRuleSetID,omitempty"`
	// The data rules part of this assessment.                                                                                                 
	DataRules                                                                                   []DataRule                                     `json:"DataRules"`
	// The individual scores per dimension.                                                                                                    
	DimensionMetrics                                                                            []DataDimensionMetric                          `json:"DimensionMetrics,omitempty"`
	// If the quality assessment dealt with dataset content, then this array of URIs will                                                      
	// contain the references to the optimized DDMS content used in the assessment. The                                                        
	// reference is expected to be a member of the EvaluatedRecordID's data.DDMSDatasets[] list                                                
	// of URIs.                                                                                                                                
	EvaluatedDDMSDatasets                                                                       []string                                       `json:"EvaluatedDDMSDatasets,omitempty"`
	// The EvaluatedRecordID's kind.                                                                                                           
	EvaluatedKind                                                                               *string                                        `json:"EvaluatedKind,omitempty"`
	// The reference to the evaluated data record. The record version number is required.                                                      
	EvaluatedRecordID                                                                           *string                                        `json:"EvaluatedRecordID,omitempty"`
	// The reference to the assessment calculation method.                                                                                     
	MethodID                                                                                    *string                                        `json:"MethodID,omitempty"`
	// The date-time at which the quality assessment started.                                                                                  
	StartDateTime                                                                               *time.Time                                     `json:"StartDateTime,omitempty"`
	// The assessment score in % aggregated for all dimension types.                                                                           
	TotalScore                                                                                  *float64                                       `json:"TotalScore,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// The DataQualityRule and the DataQualityRule properties captured at the time of assessment.
type DataRule struct {
	// The assessment results for this this rule.                                                                
	AssessmentResults                                                                         []AssessmentResult `json:"AssessmentResults,omitempty"`
	// The reference to the individual DataQualityRule record ID. This is a mandatory property                   
	// value.                                                                                                    
	DataQualityRuleID                                                                         string             `json:"DataQualityRuleID"`
	// The rule's evaluation status, e.g., Active, Inactive, Development.                                        
	DataQualityRuleStatusID                                                                   *string            `json:"DataQualityRuleStatusID,omitempty"`
	// The rule's dimension type reference as captured during the assessment.                                    
	DataRuleDimensionTypeID                                                                   *string            `json:"DataRuleDimensionTypeID,omitempty"`
	// The rule's purpose in the context of this DataQualityRule as captured during the                          
	// assessment.                                                                                               
	DataRulePurposeTypeID                                                                     *string            `json:"DataRulePurposeTypeID,omitempty"`
	// The rule's statement in natural language as captured during the assessment.                               
	DataRuleStatement                                                                         *string            `json:"DataRuleStatement,omitempty"`
	// The time it took to perform the assessment of this rule.                                                  
	ExecutionTime                                                                             *float64           `json:"ExecutionTime,omitempty"`
	// The rule's weight in the context of the DataQualityRuleSet as captured during the                         
	// assessment.                                                                                               
	Weight                                                                                    *float64           `json:"Weight,omitempty"`
}

// The assessment of an executed QualityDataRule.
type AssessmentResult struct {
	// The unique identifier of an assessment result in the AssessmentResults[] array. This                           
	// identifier becomes relevant if the assessments run over arrays of objects. Typically the                       
	// 'local object identifier' of the assessed object will be used. Example: WellLog has                            
	// Curves[], then Curves[].CurveID would be used as AssessedPartID.                                               
	AssessedPartID                                                                             *string                `json:"AssessedPartID,omitempty"`
	// An extension point to add properties, which are not searchable.                                                
	ExtensionProperties                                                                        map[string]interface{} `json:"ExtensionProperties,omitempty"`
	// The assessment state for this rule.                                                                            
	QualityAssessmentStateID                                                                   *string                `json:"QualityAssessmentStateID,omitempty"`
}

// The assessment score per data rule dimension type and its weight.
type DataDimensionMetric struct {
	// The reference to the DataRuleDimensionType, to which score and weight are associated.         
	DataRuleDimensionTypeID                                                                 string   `json:"DataRuleDimensionTypeID"`
	// The assessment score in % aggregated for this dimension type.                                 
	Score                                                                                   *float64 `json:"Score,omitempty"`
	// The weight factor for this score for the overall score.                                       
	Weight                                                                                  *float64 `json:"Weight,omitempty"`
}

// This is used to store the latest summary of data quality evaluation results for each
// RuleSet and is associated by reference to a work product component or master data object.
// Only 1 DataQualitySummary per WPC/Master Object
type DataQualitySummary struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *DataQualitySummaryData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type DataQualitySummaryData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The set of Data Quality Review objects associated with the data quality summary                                                         
	DataQualitySummarySet                                                                       []DataQualityReview                            `json:"DataQualitySummarySet"`
	// The EvaluatedRecordID's kind.                                                                                                           
	EvaluatedKind                                                                               *string                                        `json:"EvaluatedKind,omitempty"`
	// The reference to the evaluated data record. The record version number is required.                                                      
	EvaluatedRecordID                                                                           string                                         `json:"EvaluatedRecordID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// This is used to store the latest summary of data quality evaluation results for each
// RuleSet and is associated by reference to a work product component or master data object.
// Only one DataQualityReview per DataQualityRuleSet
type DataQualityReview struct {
	// This ID points to a Data Quality object used to store the result from a run of a Data                                           
	// Quality Metric Evaluation engine. Captures summary information, such as which rule-set(s)                                       
	// and rule(s) have been used, when this was run and by whom. Detailed results may be                                              
	// associated with a dataset.                                                                                                      
	DataQualityID                                                                               string                                 `json:"DataQualityID"`
	// The reference to the data quality rule set run for the data quality summary. Unique Key                                         
	// for the item in the DataQualitySummarySet array.                                                                                
	DataQualityRuleSetID                                                                        string                                 `json:"DataQualityRuleSetID"`
	// The name of the data quality rule set run for the data quality summary which should stay                                        
	// consistent with the DataQualityRuleSet. Denormalized for easier discoverability of the                                          
	// summaries, but needs to be kept up to date.                                                                                     
	DataQualityRuleSetName                                                                      *string                                `json:"DataQualityRuleSetName,omitempty"`
	// The individual scores per dimension.                                                                                            
	DimensionMetrics                                                                            []DataQualitySummarySetDimensionMetric `json:"DimensionMetrics,omitempty"`
	// The reference to the assessment calculation method.                                                                             
	MethodID                                                                                    *string                                `json:"MethodID,omitempty"`
	// The date-time at which the quality assessment started.                                                                          
	StartDateTime                                                                               *time.Time                             `json:"StartDateTime,omitempty"`
	// The assessment score in % aggregated for all dimension types.                                                                   
	TotalScore                                                                                  *float64                               `json:"TotalScore,omitempty"`
}

// The assessment score per data rule dimension type and its weight.
type DataQualitySummarySetDimensionMetric struct {
	// The reference to the DataRuleDimensionType, to which score and weight are associated.         
	DataRuleDimensionTypeID                                                                 string   `json:"DataRuleDimensionTypeID"`
	// The assessment score in % aggregated for this dimension type.                                 
	Score                                                                                   *float64 `json:"Score,omitempty"`
	// The weight factor for this score for the overall score.                                       
	Weight                                                                                  *float64 `json:"Weight,omitempty"`
}

// A document can be any document that is required to be stored in an electronic format.
// Examples of this could be daily drilling reports, drilling schematics, or material
// quality analysis reports.
type Document struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *DocumentData                  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type DocumentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Formal sign-off / approval date (may be different from DatePublished)                                                                   
	DateIssued                                                                                  *string                                        `json:"DateIssued,omitempty"`
	// The UTC date time and date of the document when it was last modified                                                                    
	DateModified                                                                                *time.Time                                     `json:"DateModified,omitempty"`
	// The UTC date time and date of the document publication                                                                                  
	DatePublished                                                                               *time.Time                                     `json:"DatePublished,omitempty"`
	// Date when a next review/revision of the document is due.                                                                                
	DateReviewDue                                                                               *string                                        `json:"DateReviewDue,omitempty"`
	// Document language as listed in the ISO 639-3 https://en.wikipedia.org/wiki/ISO_639,                                                     
	// https://en.wikipedia.org/wiki/List_of_ISO_639-3_codes                                                                                   
	DocumentLanguage                                                                            *string                                        `json:"DocumentLanguage,omitempty"`
	// A description text or an array of subjects covered by the document. If present this                                                     
	// information must compliment the Tag and SubTitle                                                                                        
	DocumentSubject                                                                             *string                                        `json:"DocumentSubject,omitempty"`
	// The Document Taxonomy provides a structured taxonomy for categorising document types.                                                   
	// This taxonomy adheres to a consistent naming convention of a DISCIPLINE followed by a                                                   
	// relevant DocumentType. In the practical implementation it uses a dot-based nomenclature                                                 
	// e.g., <DISCIPLINE>.<DocumentType>, allowing for a two level hierarchy of the document                                                   
	// type to support classification and search. This a recommended property.                                                                 
	DocumentTaxonomyID                                                                          *string                                        `json:"DocumentTaxonomyID,omitempty"`
	// DEPRECATED: Use the DocumentTaxonomyID. The kind of document--from a business standpoint,                                               
	// e.g., seismic processing report, etc.                                                                                                   
	DocumentTypeID                                                                              *string                                        `json:"DocumentTypeID,omitempty"`
	// Array of key words describing the document                                                                                              
	Keywords                                                                                    []string                                       `json:"Keywords,omitempty"`
	// Number of pages in the document, useful in cases where if it was described in the                                                       
	// acquired manifest as opposed to a derived/calculated value                                                                              
	NumberOfPages                                                                               *int64                                         `json:"NumberOfPages,omitempty"`
	// Number of years the document needs to be retained after the last modification (see                                                      
	// data.DataModified property).                                                                                                            
	RetentionPeriod                                                                             *float64                                       `json:"RetentionPeriod,omitempty"`
	// The sub-title of the document.                                                                                                          
	SubTitle                                                                                    *string                                        `json:"SubTitle,omitempty"`
	// Summary of document contents                                                                                                            
	Summary                                                                                     *string                                        `json:"Summary,omitempty"`
	// Table of contents of the document                                                                                                       
	TableOfContents                                                                             *string                                        `json:"TableOfContents,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A downtime event is an event that spans a discrete period that negatively affects the
// production or processing of hydrocarbon products (e.g. produced oil, processed diesel,
// etc.) at different levels of the operations (e.g. well, facility, operating unit). The
// event  information includes a descriptions of the event, why it occurred, etc., and free
// format comments that further expand on the incident. An associated record recording
// deferred volumes due to the event may also exist referencing this event.
type DowntimeEvent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *DowntimeEventData             `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type DowntimeEventData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	//                                                                                                                                         
	// The name of this downtime event.                                                                                                        
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Identifies the "Where" condition of the downtime event; i.e. which component of the                                                     
	// system was affected? The downtime component values are further sorted into Surface and                                                  
	// Subsurface components                                                                                                                   
	DowntimeComponentID                                                                         *string                                        `json:"DowntimeComponentID,omitempty"`
	// Identifies the "Why" condition of the downtime event; i.e. why did it occur? These are                                                  
	// the basic reasons for, or causes of the event                                                                                           
	DowntimeReasonDetailID                                                                      *string                                        `json:"DowntimeReasonDetailID,omitempty"`
	// Identifies the "What" condition of the downtime event; i.e. what general type of activity                                               
	// or issue was involved? The downtime reason codes are grouped into Planned and Unplanned                                                 
	// categories                                                                                                                              
	DowntimeReasonID                                                                            *string                                        `json:"DowntimeReasonID,omitempty"`
	// Identifier of the record that specifies the loss caused by this event, or the type of the                                               
	// down time event is Planned, Unplanned or External.                                                                                      
	DownTimeTypeID                                                                              *string                                        `json:"DownTimeTypeID,omitempty"`
	// The identifier of the piece of equipment that caused the downtime. This is an identifier                                                
	// to an external system, not an OSDU resource.                                                                                            
	EquipmentIdentifier                                                                         *string                                        `json:"EquipmentIdentifier,omitempty"`
	// The date and time the downtime event ended                                                                                              
	EventEndTime                                                                                *string                                        `json:"EventEndTime,omitempty"`
	// The date and time the downtime event began                                                                                              
	EventStartTime                                                                              string                                         `json:"EventStartTime"`
	// Identifier of the record that specifies the event status, such as is suspended'' or                                                     
	// complete''.                                                                                                                             
	EventStatusID                                                                               *string                                        `json:"EventStatusID,omitempty"`
	// If there is a parent downtime event which has caused this event (e.g. a production                                                      
	// processing facility is down, causing downtime for connected wells), then this attribute                                                 
	// specifies the unique identifier of the entity associated with the parent event. If there                                                
	// is no parent event then this value is null                                                                                              
	ParentDowntimeEventID                                                                       *string                                        `json:"ParentDowntimeEventID,omitempty"`
	// Reporting entity which provides the reference to the master entity the downtime event                                                   
	// occurred at.                                                                                                                            
	ReportingEntityID                                                                           string                                         `json:"ReportingEntityID"`
	// The identifier of a work order which is associated with an event caused by a piece of                                                   
	// equipment. This is an identifier to an external system, not an OSDU resource.                                                           
	WorkOrderIdentifier                                                                         *string                                        `json:"WorkOrderIdentifier,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A single, consistent interpretation of an entire earth model.
type EarthModelInterpretation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *EarthModelInterpretationData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type EarthModelInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// Reference to the local model feature the interpretation refers to.                                                                      
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// References to Geologic Unit Occurrence Interpretations belonging to this model.                                                         
	GeologicUnitOccurrenceInterpretationIDs                                                     []string                                       `json:"GeologicUnitOccurrenceInterpretationIDs,omitempty"`
	// References to Rock Fluid Organization Interpretation belonging to this model.                                                           
	RockFluidOrganizationInterpretationIDs                                                      []string                                       `json:"RockFluidOrganizationInterpretationIDs,omitempty"`
	// The reference to the model's StratigraphicColumn.                                                                                       
	StratigraphicColumnID                                                                       *string                                        `json:"StratigraphicColumnID,omitempty"`
	// The references to  StructuralOrganizationInterpretationIDs belonging to this model.                                                     
	StructuralOrganizationInterpretationIDs                                                     []string                                       `json:"StructuralOrganizationInterpretationIDs,omitempty"`
	// References to PersistableCollections containing Wellbores belonging to this model.                                                      
	WellboreCollectionIDs                                                                       []string                                       `json:"WellboreCollectionIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Geologic information associated to fault-related objects  (marker, fault sticks, modeled
// objects like triangulated surface)
type FaultInterpretation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FaultInterpretationData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type FaultInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// The maximum linear distance measured parallel to the strike of the fault plane                                                          
	FaultLength                                                                                 *float64                                       `json:"FaultLength,omitempty"`
	// Describes the fault throw - as the fault characteristics might vary through time, fault                                                 
	// throw is an array of fault throws with their own attributes                                                                             
	FaultThrowDescriptions                                                                      []FaultThrowDescriptions                       `json:"FaultThrowDescriptions,omitempty"`
	// Specifies whether the fault is considered listric                                                                                       
	IsListric                                                                                   *bool                                          `json:"IsListric,omitempty"`
	// Specifies whether the fault is considered sealed                                                                                        
	IsSealed                                                                                    *bool                                          `json:"IsSealed,omitempty"`
	// The maximum horizontal displacement measured along the strike of the slip surface of the                                                
	// fault plane                                                                                                                             
	MaximumFaultStrikeSlip                                                                      *float64                                       `json:"MaximumFaultStrikeSlip,omitempty"`
	// Indicates the maximum current fault throw value                                                                                         
	MaximumFaultThrowValue                                                                      *float64                                       `json:"MaximumFaultThrowValue,omitempty"`
	// Indicates the representative dip angle value of the fault plane                                                                         
	RepresentativeDIPAngle                                                                      *float64                                       `json:"RepresentativeDipAngle,omitempty"`
	// Indicates the representative azimuth value of the fault plane                                                                           
	RepresentativeDIPDirection                                                                  *RepresentativeDIPDirection                    `json:"RepresentativeDipDirection,omitempty"`
	// The total area of a fault plane's exposed or calculated surface                                                                         
	SurfaceArea                                                                                 *float64                                       `json:"SurfaceArea,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A structure carrying descriptions of fault throw characteristics.
type FaultThrowDescriptions struct {
	// Specifies the fault throw type (reverse, normal etc…)                                             
	FaultThrowTypeID                                                                            *string  `json:"FaultThrowTypeID,omitempty"`
	// Time interval Maximum age the fault throw was active - if the link to horizon is defined,         
	// we can derive the link to horizons through geologic age                                           
	MaximumAge                                                                                  *float64 `json:"MaximumAge,omitempty"`
	// Time interval Minimum age the fault throw was active - if the link to horizon is defined,         
	// we can derive the link to horizons through geologic age                                           
	MinimumAge                                                                                  *float64 `json:"MinimumAge,omitempty"`
}

// Indicates the representative azimuth value of the fault plane
type RepresentativeDIPDirection struct {
	// The kind of north which is used as a reference for the azimuth value         
	NorthKind                                                              *string  `json:"NorthKind,omitempty"`
	// The azimuth value                                                            
	Value                                                                  *float64 `json:"Value,omitempty"`
}

// DEPRECATED: use the SeismicFault or GenericRepresentation WPCs instead. These are
// representations of an individual fault. The grouping of individual faults can be achieved
// through the UnsealedSurfaceFramework or Persisted Collection WPCs. ~~A set of picked
// faults. In the earth modeling domain this entity corresponds to a PersistedCollection
// containing GenericRepresentation or SeismicFault items.~~
type FaultSystem struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FaultSystemData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type FaultSystemData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The Bin Grid of the Fault System when coordinates are specified in seismic bin                                                          
	// inline/crossline. Not populated for 2D based FaultSystem records.                                                                       
	BinGridID                                                                                   *string                                        `json:"BinGridID,omitempty"`
	// Array of Faults that comprise the Fault System                                                                                          
	Faults                                                                                      []Faults                                       `json:"Faults,omitempty"`
	// The CRS for surface coordinates used in fault locations if not specified in File.                                                       
	HorizontalCRSID                                                                             *string                                        `json:"HorizontalCRSID,omitempty"`
	// Optional comment to capture interpreter thoughts.  Distinguished from Description which                                                 
	// is a general explanation of the object.                                                                                                 
	Remark                                                                                      *string                                        `json:"Remark,omitempty"`
	// Value used to produce vertical static shifts in data                                                                                    
	ReplacementVelocity                                                                         *float64                                       `json:"ReplacementVelocity,omitempty"`
	// Vertical domain of faults.  E.g. Time, Depth                                                                                            
	SeismicDomainTypeID                                                                         *string                                        `json:"SeismicDomainTypeID,omitempty"`
	// Unit of measurement for vertical domain                                                                                                 
	SeismicDomainUOM                                                                            *string                                        `json:"SeismicDomainUOM,omitempty"`
	// The list of seismic line geometries holding the trace to 'world' coordinate mappings for                                                
	// the 2D seismic lines. Only populated if the Fault System is based on 2D fault                                                           
	// interpretations.                                                                                                                        
	SeismicLineGeometries                                                                       []string                                       `json:"SeismicLineGeometries,omitempty"`
	// Method used to pick faults. E.g.Autotracked, Grid, Manual Picked, Mixed.                                                                
	SeismicPickingTypeID                                                                        *string                                        `json:"SeismicPickingTypeID,omitempty"`
	// Seismic Volumes picked against                                                                                                          
	SeismicTraceDataIDs                                                                         []string                                       `json:"SeismicTraceDataIDs,omitempty"`
	// Datum value, the elevation of zero time/depth on the vertical axis in the domain of                                                     
	// seismicdomaintype relative to the vertical reference datum used (usually MSL). Positive                                                 
	// is upward from zero elevation to seismic datum).                                                                                        
	VerticalDatumOffset                                                                         *float64                                       `json:"VerticalDatumOffset,omitempty"`
	// Identifies a vertical reference datum type. E.g. mean sea level, ground level, mudline.                                                 
	VerticalMeasurementTypeID                                                                   *string                                        `json:"VerticalMeasurementTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Array of Faults that comprise the Fault System
type Faults struct {
	// Maximum stratigraphic heave, the apparent horizontal component of the net-slip.            
	FaultHeaveNumber                                                                     *float64 `json:"FaultHeaveNumber,omitempty"`
	// ID of the Unit of Measure of the FaultHeaveNumber                                          
	FaultHeaveNumberUOM                                                                  *string  `json:"FaultHeaveNumberUOM,omitempty"`
	// The related FaultInterpretation for collaborating with Earth Modeling.                     
	FaultInterpretationID                                                                *string  `json:"FaultInterpretationID,omitempty"`
	// Net (average) Slip                                                                         
	FaultNetSlipNumber                                                                   *float64 `json:"FaultNetSlipNumber,omitempty"`
	// ID of the Unit of Measure of the FaultNetSlipNumber                                        
	FaultNetSlipNumberUOM                                                                *string  `json:"FaultNetSlipNumberUOM,omitempty"`
	// The person or team who interpreted the fault data.                                         
	Interpreter                                                                          *string  `json:"Interpreter,omitempty"`
	// Optional comment                                                                           
	Remark                                                                               *string  `json:"Remark,omitempty"`
	// RepresentationRole for this Fault element if more than one role is in use for this         
	// FaultSystem.                                                                               
	Role                                                                                 *string  `json:"Role,omitempty"`
	// Maximum linear dimension measured along strike of the slip surface                         
	SeismicFaultLength                                                                   *float64 `json:"SeismicFaultLength,omitempty"`
	// ID of the Unit of Measure of the Length of the Fault                                       
	SeismicFaultLengthUOM                                                                *string  `json:"SeismicFaultLengthUOM,omitempty"`
	// Name of an individual fault within a fault system.                                         
	SeismicFaultName                                                                     *string  `json:"SeismicFaultName,omitempty"`
	// Surface Area of the Fault Plane                                                            
	SeismicFaultSurfaceArea                                                              *float64 `json:"SeismicFaultSurfaceArea,omitempty"`
	// ID of the Unit of Measure of the Surface Area of the Fault                                 
	SeismicFaultSurfaceAreaUOM                                                           *string  `json:"SeismicFaultSurfaceAreaUOM,omitempty"`
	// Geological type of fault geometry. E.g. Thrust (thr), Reverse (rev), Normal(norm)          
	SeismicFaultTypeID                                                                   *string  `json:"SeismicFaultTypeID,omitempty"`
	// Method used to pick faults. E.g.Autotracked, Grid, Manual Picked                           
	SeismicPickingTypeID                                                                 *string  `json:"SeismicPickingTypeID,omitempty"`
	// Maximum vertical offset of faulted strata.                                                 
	StratigraphicFaultOffset                                                             *float64 `json:"StratigraphicFaultOffset,omitempty"`
	// ID of the Unit of Measure of the StratigraphicFaultOffset                                  
	StratigraphicFaultOffsetUOM                                                          *string  `json:"StratigraphicFaultOffsetUOM,omitempty"`
	// RepresentationType for this Fault element if more than one type is in use for this         
	// FaultSystem.                                                                               
	Type                                                                                 *string  `json:"Type,omitempty"`
	// Maximum vertical angle of fault                                                            
	VerticalFaultDIPAngle                                                                *float64 `json:"VerticalFaultDipAngle,omitempty"`
	// ID of the Unit of Measure of the Dip angle of the Fault                                    
	VerticalFaultDIPAngleUOM                                                             *string  `json:"VerticalFaultDipAngleUOM,omitempty"`
}

// A flow measurement captured for a discrete period using a test measurement vessel or
// other measurement device (well test separator, wellhead MPFM, etc.) to obtain individual
// flow rates. During the testing period pressure, temperature, and fluid samples may be
// obtained so that an estimated 24-hour flow rate at standard conditions can be calculated.
// This theoretical volume will typically be used for hydrocarbon allocation and well
// surveillance purposes.
type FlowTest struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FlowTestData                  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type FlowTestData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the final movement, or use, of the test sample products within the value stream                                               
	// following the completion of the test.                                                                                                   
	Disposition                                                                                 *string                                        `json:"Disposition,omitempty"`
	// Completion time and date of flow test.                                                                                                  
	EndDateTime                                                                                 string                                         `json:"EndDateTime"`
	// Attribute that indicates the type of flow test being conducted.                                                                         
	FlowTestTypeID                                                                              *string                                        `json:"FlowTestTypeID,omitempty"`
	// Used to capture the conditions at which measurement have been made/computed                                                             
	MeasurementConditions                                                                       *AbstractPTCondition                           `json:"MeasurementConditions,omitempty"`
	// The kinds of fluids or substances values are recorded for.                                                                              
	ProductIDs                                                                                  []string                                       `json:"ProductIDs"`
	// Parent reporting entity which provides the reference to the master entity the flow test                                                 
	// is recording against.                                                                                                                   
	ReportingEntityID                                                                           string                                         `json:"ReportingEntityID"`
	// Start time and date of flow for an individual flow test when flow through test device is                                                
	// stable (e.g. no slugging,etc.).                                                                                                         
	StartDateTime                                                                               string                                         `json:"StartDateTime"`
	// Attribute that indicated the approval status of the flow test record. There are three                                                   
	// different states that can be indicated; New, Rejected, Accepted.                                                                        
	TestApprovalStatusID                                                                        string                                         `json:"TestApprovalStatusID"`
	// Identifier for the test device being used to conduct the test, such as a test separator,                                                
	// MPFM, tank, etc. This is an identifier to an external system, not an OSDU resource.                                                     
	TestDevice                                                                                  *string                                        `json:"TestDevice,omitempty"`
	// Identifier of the organisation (service company, operator, etc.) that was responsible for                                               
	// conducting the flow test.                                                                                                               
	TestedByID                                                                                  *string                                        `json:"TestedByID,omitempty"`
	// The kinds of quantities being recorded as a combination of property, product kind, and/or                                               
	// measurement point.                                                                                                                      
	TestMeasurementIDs                                                                          []string                                       `json:"TestMeasurementIDs"`
	// A subset of Test Measurements that may be varied for comparison across multiple runs of                                                 
	// the same test.                                                                                                                          
	TestVariableIDs                                                                             []string                                       `json:"TestVariableIDs,omitempty"`
	// Flag to indicate if an approved valid flow test should be used for allocation or for                                                    
	// information purposes only.                                                                                                              
	UsedInAllocation                                                                            *bool                                          `json:"UsedInAllocation,omitempty"`
	// The directions of flow into, or out of the entity to which the values recorded are                                                      
	// associated.                                                                                                                             
	VolumeFlowMeasurementTypeIDs                                                                []string                                       `json:"VolumeFlowMeasurementTypeIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Used to capture the conditions at which measurement have been made/computed
//
// The pair of absolute pressure and temperature values describing the condition for a
// particular volume measurement or estimation. The unit of measure context is defined via
// the meta[] block in the record. Search responses will return pressure in Pa (Pascal) and
// temperature in K (Kelvin).
type AbstractPTCondition struct {
	// To capture when Measurement have been made at Standard Conditions (25°C / 100 kPa)                
	// Mutually Exclusive with Pressure/Temperature.                                                     
	// Capture                                                                                           
	IsStandardConditions                                                                         *bool   `json:"IsStandardConditions,omitempty"`
	// Open Text Box to capture the P & T Reference when measurements are made at non standard           
	// conditions (such as "Reservoir", "Tank",…)                                                        
	NonStandardConditionsReference                                                               *string `json:"NonStandardConditionsReference,omitempty"`
	// The recorded absolute pressure condition. The unit of measure context is defined via              
	// meta[] in the Storage record while the Search responses return the value in base SI unit          
	// Pa (Pascal).                                                                                      
	Pressure                                                                                     float64 `json:"Pressure"`
	// The recorded temperature condition. The unit of measure context is defined via meta[] in          
	// the Storage record while the Search responses return the value in base SI unit K (Kelvin).        
	Temperature                                                                                  float64 `json:"Temperature"`
}

// FluidBoundary information  associated to Fluid boundary-related objects  (planes,
// triangulated surfaces)
type FluidBoundaryInterpretation struct {
	// The access control tags associated with this entity.                                                                       
	ACL                                                                                          AccessControlList                `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                         
	// derived.                                                                                                                   
	Ancestry                                                                                     *ParentList                      `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                   
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                      
	CreateTime                                                                                   *time.Time                       `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                    
	// System.                                                                                                                    
	CreateUser                                                                                   *string                          `json:"createUser,omitempty"`
	Data                                                                                         *FluidBoundaryInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                     
	// version.                                                                                                                   
	ID                                                                                           *string                          `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                               
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                   
	// scheme follows the semantic versioning, https://semver.org/.                                                               
	Kind                                                                                         string                           `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                     
	// legal tags is managed by the Compliance Service.                                                                           
	Legal                                                                                        LegalMetaData                    `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                    
	// definitions.                                                                                                               
	Meta                                                                                         []FrameOfReferenceMetaDataItem   `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                   
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                          
	ModifyTime                                                                                   *time.Time                       `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                 
	ModifyUser                                                                                   *string                          `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                    
	// as keys and values.                                                                                                        
	Tags                                                                                         map[string]string                `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                            
	Version                                                                                      *int64                           `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type FluidBoundaryInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// Reference to the local boundary Feature the interpretation refers to.                                                                   
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Describes the fluid Contact boundary type ( such as a gas-oil contact (GOC), a water-oil                                                
	// contact (WOC), a gas-oil contact (GOC), or seal)                                                                                        
	FluidContactTypeID                                                                          *string                                        `json:"FluidContactTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A downhole pressure test performed in open hole to measure formation strength.
type FormationIntegrityTest struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FormationIntegrityTestData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type FormationIntegrityTestData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Measured depth of the Wellbore bottomhole depth at time of the test relative to the                                                     
	// Vertical Measure elevation                                                                                                              
	BottomHoleMeasuredDepth                                                                     *float64                                       `json:"BottomHoleMeasuredDepth,omitempty"`
	// True vertical depth of the Wellbore bottomhole at time of the test relative to the                                                      
	// VerticalMeasure elevation                                                                                                               
	BottomHoleTrueVerticalDepth                                                                 *float64                                       `json:"BottomHoleTrueVerticalDepth,omitempty"`
	// Cement 5 Min ShutIn Point Downhole Equivalent Mud Weight                                                                                
	Cement5MinShutInPointDownholeEMW                                                            *float64                                       `json:"Cement5MinShutInPointDownholeEMW,omitempty"`
	// Cement 5 Min ShutIn Point Downhole Pressure                                                                                             
	Cement5MinShutInPointDownholePressure                                                       *float64                                       `json:"Cement5MinShutInPointDownholePressure,omitempty"`
	// Cement Inflection Point Downhole Equivalent Mud Weight                                                                                  
	CementInflectionPointDownholeEMW                                                            *float64                                       `json:"CementInflectionPointDownholeEMW,omitempty"`
	// Cement Inflection Point Downhole Pressure                                                                                               
	CementInflectionPointDownholePressure                                                       *float64                                       `json:"CementInflectionPointDownholePressure,omitempty"`
	// Cement Max Point Downhole Equivalent Mud Weight                                                                                         
	CementMaxPointDownholeEMW                                                                   *float64                                       `json:"CementMaxPointDownholeEMW,omitempty"`
	// Cement Max Point Downhole Pressure                                                                                                      
	CementMaxPointDownholePressure                                                              *float64                                       `json:"CementMaxPointDownholePressure,omitempty"`
	// Cement Unit Pumps Off Time                                                                                                              
	CementUnitPumpsOffTime                                                                      *float64                                       `json:"CementUnitPumpsOffTime,omitempty"`
	// Wellsite team remarks                                                                                                                   
	DailyOperationsTestRemarks                                                                  *string                                        `json:"DailyOperationsTestRemarks,omitempty"`
	// Pre-test required formation strength, Limit Required.                                                                                   
	ExpectedTestGradient                                                                        *float64                                       `json:"ExpectedTestGradient,omitempty"`
	// Friction Pressure.                                                                                                                      
	FrictionPressure                                                                            *float64                                       `json:"FrictionPressure,omitempty"`
	// Wellbore Azimuth of open hole. Interpolated from Definitive Survey using MD.                                                            
	HoleAzimuth                                                                                 *float64                                       `json:"HoleAzimuth,omitempty"`
	// Hole Size                                                                                                                               
	HoleDiameter                                                                                *float64                                       `json:"HoleDiameter,omitempty"`
	// Wellbore Inclination of open hole. Interpolated from Definitive Survey using MD.                                                        
	HoleInclination                                                                             *float64                                       `json:"HoleInclination,omitempty"`
	// Association to Hole Section in which FIT/LOT is performed                                                                               
	HoleSectionID                                                                               string                                         `json:"HoleSectionID"`
	// Injected volume during test. Calculated = Pumped - Returned Volume                                                                      
	InjectedVolume                                                                              *float64                                       `json:"InjectedVolume,omitempty"`
	// Interpretation Date/time                                                                                                                
	InterpretationDate                                                                          *time.Time                                     `json:"InterpretationDate,omitempty"`
	// Interpreters Surface 5 Minute Shut In Pressure                                                                                          
	InterpretedSurface5MinShutInPressure                                                        *float64                                       `json:"InterpretedSurface5minShutInPressure,omitempty"`
	// Interpreters Surface Inflection Point Pressure                                                                                          
	InterpretedSurfaceInflectionPointPressure                                                   *float64                                       `json:"InterpretedSurfaceInflectionPointPressure,omitempty"`
	// Interpreted Surface Inflection Point Pressure Maximum                                                                                   
	InterpretedSurfacePressureMaximum                                                           *float64                                       `json:"InterpretedSurfacePressureMaximum,omitempty"`
	// Interpreter's name                                                                                                                      
	Interpreter                                                                                 *string                                        `json:"Interpreter,omitempty"`
	// Interpreters remarks                                                                                                                    
	InterpretersRemarks                                                                         *string                                        `json:"InterpretersRemarks,omitempty"`
	// Test performed while drilling hole section (not shoe test)                                                                              
	IsExtendedHole                                                                              *bool                                          `json:"IsExtendedHole,omitempty"`
	// QA/QC indicator                                                                                                                         
	IsInterpreterReviewed                                                                       *bool                                          `json:"IsInterpreterReviewed,omitempty"`
	// Is Lost Circulation Material in fluid during test                                                                                       
	IsLCMUsedInTest                                                                             *bool                                          `json:"IsLCMUsedInTest,omitempty"`
	// Was the Formation Integrity test performed with a Managed Pressure Drilling applied to                                                  
	// the well                                                                                                                                
	IsMPD                                                                                       *bool                                          `json:"IsMPD,omitempty"`
	// Is there a permeable formation in the open hole segment at time of test?                                                                
	IsPermeableFormationInOH                                                                    *bool                                          `json:"IsPermeableFormationInOH,omitempty"`
	// Does Pressure While Drilling data include inflection point?                                                                             
	IsPWDInflectionPoint                                                                        *bool                                          `json:"IsPWDInflectionPoint,omitempty"`
	// Was the Formation Integrity test performed without a Riser (offshore wells only)                                                        
	IsRiserless                                                                                 *bool                                          `json:"IsRiserless,omitempty"`
	// Was a static Mud Weight measured prior to test?                                                                                         
	IsStaticMWMeasured                                                                          *bool                                          `json:"IsStaticMWMeasured,omitempty"`
	// continuous test indicator. N = Step Test.                                                                                               
	IsTestContinuous                                                                            *bool                                          `json:"IsTestContinuous,omitempty"`
	// Lithology                                                                                                                               
	LithologyTypeID                                                                             *string                                        `json:"LithologyTypeID,omitempty"`
	// Managed Pressure Drilling Delta Pressure maximum                                                                                        
	MPDDeltaPressureMax                                                                         *float64                                       `json:"MPDDeltaPressureMax,omitempty"`
	// Managed Pressure Drilling Inflection Point Pressure                                                                                     
	MPDInflectionPointPressure                                                                  *float64                                       `json:"MPDInflectionPointPressure,omitempty"`
	// Managed Pressure Drilling Prior Back Pressure Equivalent Static Density                                                                 
	MPDPriorBackPressureESD                                                                     *float64                                       `json:"MPDPriorBackPressureESD,omitempty"`
	// Type of mud base                                                                                                                        
	MudBaseType                                                                                 *string                                        `json:"MudBaseType,omitempty"`
	// Compressibility of drilling fluid                                                                                                       
	MudCompressibility                                                                          *float64                                       `json:"MudCompressibility,omitempty"`
	// Drilling fluid plastic viscosity (PV)                                                                                                   
	MudPlasticViscosity                                                                         *float64                                       `json:"MudPlasticViscosity,omitempty"`
	// Drilling fluid yield point (YP)                                                                                                         
	MudYieldPoint                                                                               *float64                                       `json:"MudYieldPoint,omitempty"`
	// Length of Open Hole below shoe.                                                                                                         
	OpenHoleLength                                                                              *float64                                       `json:"OpenHoleLength,omitempty"`
	// Operations report where the FIT/LOT test operation is described. Populated from                                                         
	// Operations Report - used to pull Rig Name via Rig associated to                                                                         
	// Report.                                                                                                                                 
	OperationsReportID                                                                          *string                                        `json:"OperationsReportID,omitempty"`
	// Total pumped volume at end of test                                                                                                      
	PumpedVolume                                                                                *float64                                       `json:"PumpedVolume,omitempty"`
	// Pump Height.                                                                                                                            
	PumpHeight                                                                                  *float64                                       `json:"PumpHeight,omitempty"`
	// Average Pump Rate.                                                                                                                      
	PumpRateAverage                                                                             *float64                                       `json:"PumpRateAverage,omitempty"`
	// Pumps off elapsed time                                                                                                                  
	PumpsOffTime                                                                                *float64                                       `json:"PumpsOffTime,omitempty"`
	// PWD 5 Minute Shut In Equivalent Mud Weight (calculated)                                                                                 
	PWD5MinShutInEMW                                                                            *float64                                       `json:"PWD5MinShutInEMW,omitempty"`
	// PWD 5 Minute Shut In Pressure (measured)                                                                                                
	PWD5MinShutInPressure                                                                       *float64                                       `json:"PWD5MinShutInPressure,omitempty"`
	// PWD 5 Minute Shut InTime                                                                                                                
	PWD5MinShutInTime                                                                           *float64                                       `json:"PWD5MinShutInTime,omitempty"`
	// PWD Adjusted Surface 5 Minute Equivalent Mud Weight                                                                                     
	PWDAdjustedSurface5MinEMW                                                                   *float64                                       `json:"PWDAdjustedSurface5MinEMW,omitempty"`
	// PWD Adjusted Surface 5 Minute Pressure                                                                                                  
	PWDAdjustedSurface5MinPressure                                                              *float64                                       `json:"PWDAdjustedSurface5MinPressure,omitempty"`
	// PWD Adjusted Surfaced Maximum Pressure                                                                                                  
	PWDAdjustedSurfacedMaxPressure                                                              *float64                                       `json:"PWDAdjustedSurfacedMaxPressure,omitempty"`
	// PWD Adjusted Surface Inflection Point Equivalent Mud Weight                                                                             
	PWDAdjustedSurfaceInflectionPointEMW                                                        *float64                                       `json:"PWDAdjustedSurfaceInflectionPointEMW,omitempty"`
	// Surface pressure adjusted for pulsed up PWD pressure                                                                                    
	PWDAdjustedSurfaceInflectionPointPressure                                                   *float64                                       `json:"PWDAdjustedSurfaceInflectionPointPressure,omitempty"`
	// PWD Adjusted Surface Maximum EMW                                                                                                        
	PWDAdjustedSurfaceMaxEMW                                                                    *float64                                       `json:"PWDAdjustedSurfaceMaxEMW,omitempty"`
	// Pressure While Drilling  Offset Pressure from Cement Unit                                                                               
	PWDCementOffsetPressure                                                                     *float64                                       `json:"PWDCementOffsetPressure,omitempty"`
	// Pressure While Drilling Inflection Point Equivalent Mud Weight (calculated).                                                            
	PWDInflectionPointEMW                                                                       *float64                                       `json:"PWDInflectionPointEMW,omitempty"`
	// Pressure While Drilling Inflection Point (measured).                                                                                    
	PWDInflectionPointPressure                                                                  *float64                                       `json:"PWDInflectionPointPressure,omitempty"`
	// Pressure While Drilling Inflection Point Time                                                                                           
	PWDInflectionPointTime                                                                      *float64                                       `json:"PWDInflectionPointTime,omitempty"`
	// Pressure While Drilling Inflection Point volume (calculated).                                                                           
	PWDInflectionPointVolume                                                                    *float64                                       `json:"PWDInflectionPointVolume,omitempty"`
	// Maximum pressure measured from Pressure While Drilling sensor after  tool download.                                                     
	PWDMaxPressure                                                                              *float64                                       `json:"PWDMaxPressure,omitempty"`
	// Pressure While Drilling Maximum Pressure Equivalent Mud Weight.                                                                         
	PWDMaxPressureEMW                                                                           *float64                                       `json:"PWDMaxPressureEMW,omitempty"`
	// Maximum pressure pulsed from Pressure While Drilling sensor                                                                             
	PWDMaxPressurePulsed                                                                        *float64                                       `json:"PWDMaxPressurePulsed,omitempty"`
	// Time of Pressure While Drilling maximum pressure                                                                                        
	PWDMaxPressureTime                                                                          *float64                                       `json:"PWDMaxPressureTime,omitempty"`
	// Volume pumped at Pressure While Drilling maximum pressure                                                                               
	PWDMaxPressureVolume                                                                        *float64                                       `json:"PWDMaxPressureVolume,omitempty"`
	// Pressure While Drilling Sensor Measured Depth                                                                                           
	PWDSensorMeasuredDepth                                                                      *float64                                       `json:"PWDSensorMeasuredDepth,omitempty"`
	// Pressure While Drilling Sensor True Vertical Depth. Calculated from Definitive Survey                                                   
	// using sensor MD.                                                                                                                        
	PWDSensorTrueVerticalDepth                                                                  *float64                                       `json:"PWDSensorTrueVerticalDepth,omitempty"`
	// Volume returned at end of test                                                                                                          
	ReturnedVolume                                                                              *float64                                       `json:"ReturnedVolume,omitempty"`
	// Diameter of the Casing/Liner shoe set in previous hole section                                                                          
	ShoeDiameter                                                                                *float64                                       `json:"ShoeDiameter,omitempty"`
	// Measured depth of the Casing/Liner Shoe relative to Vertical Measure elevation                                                          
	ShoeMeasuredDepth                                                                           *float64                                       `json:"ShoeMeasuredDepth,omitempty"`
	// True vertical depth of the Casing/Liner Shoe relative to Vertical Measure elevation                                                     
	ShoeTrueVerticalDepth                                                                       *float64                                       `json:"ShoeTrueVerticalDepth,omitempty"`
	// Smoothing Window Pressure While Drilling elapsed time                                                                                   
	SmoothingWindowPWD                                                                          *float64                                       `json:"SmoothingWindowPWD,omitempty"`
	// Time shift between surface and PWD data                                                                                                 
	SmoothingWindowPWDShiftTime                                                                 *float64                                       `json:"SmoothingWindowPWDShiftTime,omitempty"`
	// Smoothing Window Surface elapsed time                                                                                                   
	SmoothingWindowSurface                                                                      *float64                                       `json:"SmoothingWindowSurface,omitempty"`
	// Static Downhole Mud Weight                                                                                                              
	StaticDownholeMudWeight                                                                     *float64                                       `json:"StaticDownholeMudWeight,omitempty"`
	// Source of Static Downhole Mud Weight                                                                                                    
	StaticDownholeMudWeightSource                                                               *string                                        `json:"StaticDownholeMudWeightSource,omitempty"`
	// Step test time interval                                                                                                                 
	StepIntervalTime                                                                            *float64                                       `json:"StepIntervalTime,omitempty"`
	// Step test pumped volume increment                                                                                                       
	StepIntervalVolume                                                                          *float64                                       `json:"StepIntervalVolume,omitempty"`
	// Surface Pressure at Surface 5 minute shut in time                                                                                       
	Surface5MinShutInPressure                                                                   *float64                                       `json:"Surface5MinShutInPressure,omitempty"`
	// Surface Time at 5 minute shut in                                                                                                        
	Surface5MinShutInTime                                                                       *float64                                       `json:"Surface5MinShutInTime,omitempty"`
	// Surface Calculated 5 Minute Downhole Shut In Equivalent Mud Weight                                                                      
	SurfaceCalculated5MinDHShutInEMW                                                            *float64                                       `json:"SurfaceCalculated5MinDHShutInEMW,omitempty"`
	// Surface Calculated 5 Minute Downhole Shut In Pressure                                                                                   
	SurfaceCalculated5MinDHShutInPressure                                                       *float64                                       `json:"SurfaceCalculated5MinDHShutInPressure,omitempty"`
	// Surface calculated Downhole Inflection Point Equivalent Mud Weight Maximum                                                              
	SurfaceCalculatedDHEMWMax                                                                   *float64                                       `json:"SurfaceCalculatedDHEMWMax,omitempty"`
	// Surface calculated Downhole Inflection Point Pressure Maximum                                                                           
	SurfaceCalculatedDHPressureMax                                                              *float64                                       `json:"SurfaceCalculatedDHPressureMax,omitempty"`
	// Surface calculated Downhole Inflection Point Equivalent Mud Weight                                                                      
	SurfaceCalculatedInflectionPointDHEMW                                                       *float64                                       `json:"SurfaceCalculatedInflectionPointDHEMW,omitempty"`
	// Surface calculated Downhole Inflection Point Pressure                                                                                   
	SurfaceCalculatedInflectionPointDHPressure                                                  *float64                                       `json:"SurfaceCalculatedInflectionPointDHPressure,omitempty"`
	// Pressure at Surface Inflection Point                                                                                                    
	SurfaceInflectionPointPressure                                                              *float64                                       `json:"SurfaceInflectionPointPressure,omitempty"`
	// Time at Surface Inflection Point                                                                                                        
	SurfaceInflectionPointTime                                                                  *float64                                       `json:"SurfaceInflectionPointTime,omitempty"`
	// Volume at Surface Inflection Point                                                                                                      
	SurfaceInflectionPointVolume                                                                *float64                                       `json:"SurfaceInflectionPointVolume,omitempty"`
	// Surface Initial Offset Pressure                                                                                                         
	SurfaceInitialOffsetPressure                                                                *float64                                       `json:"SurfaceInitialOffsetPressure,omitempty"`
	// Mud Weight at surface at time of test                                                                                                   
	SurfaceMudWeight                                                                            *float64                                       `json:"SurfaceMudWeight,omitempty"`
	// Maximum Surface Pressure                                                                                                                
	SurfacePressureMax                                                                          *float64                                       `json:"SurfacePressureMax,omitempty"`
	// Volume pumped at Maximum Surface Pressure Pressure                                                                                      
	SurfacePressureMaximumVolume                                                                *float64                                       `json:"SurfacePressureMaximumVolume,omitempty"`
	// Time at Maximum Surface Pressure                                                                                                        
	SurfacePressureMaxTime                                                                      *float64                                       `json:"SurfacePressureMaxTime,omitempty"`
	// Surface pressure while drilling delta time                                                                                              
	SurfacePWDDeltaTime                                                                         *float64                                       `json:"SurfacePWDDeltaTime,omitempty"`
	// Fluid system stiffness                                                                                                                  
	SystemStiffness                                                                             *float64                                       `json:"SystemStiffness,omitempty"`
	// Test Data Quality Indicator. True = Representative of formation response                                                                
	TestDataQualityIndicator                                                                    *bool                                          `json:"TestDataQualityIndicator,omitempty"`
	// Date/time well integrity test was performed.                                                                                            
	TestDateTime                                                                                *time.Time                                     `json:"TestDateTime,omitempty"`
	// Test result                                                                                                                             
	TestResult                                                                                  *string                                        `json:"TestResult,omitempty"`
	// Formation Integrity test type                                                                                                           
	TestType                                                                                    *string                                        `json:"TestType,omitempty"`
	// The well vertical measurement elevation reference for  test MD and TVD.                                                                 
	VerticalMeasurement                                                                         AbstractFacilityVerticalMeasurement            `json:"VerticalMeasurement"`
	// Time v Volume v Pressure response curve(s)                                                                                              
	VolumePressureResponses                                                                     []VolumePressureResponse                       `json:"VolumePressureResponses,omitempty"`
	// Business natural key or code of the Wellbore to which this record belongs                                                               
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	// Association to Marker within Wellbore                                                                                                   
	// Marker Set (MarkerID)                                                                                                                   
	WellboreMarkerID                                                                            *string                                        `json:"WellboreMarkerID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Volume pumped versus Pressure response curve data. Multiple curves supported, one set for
// each Pressure Data Source
type VolumePressureResponse struct {
	// Choke A Open in fixed % (percent) unit. No unit conversion supported.         
	ChokeAOpenPercent                                                       *float64 `json:"ChokeAOpenPercent,omitempty"`
	// Choke B Open in fixed % (percent) unit. No unit conversion supported.         
	ChokeBOpenPercent                                                       *float64 `json:"ChokeBOpenPercent,omitempty"`
	// Elapsed Time                                                                  
	ElapsedTime                                                             *float64 `json:"ElapsedTime,omitempty"`
	// Flow In Rate                                                                  
	FlowInRate                                                              *float64 `json:"FlowInRate,omitempty"`
	// Flow Out Rate                                                                 
	FlowOutRate                                                             *float64 `json:"FlowOutRate,omitempty"`
	// Pressure Data Source                                                          
	PressureDataSource                                                      *string  `json:"PressureDataSource,omitempty"`
	// Pumped Volume                                                                 
	PumpedVolume                                                            *float64 `json:"PumpedVolume,omitempty"`
	// Pump Rate                                                                     
	PumpRate                                                                *float64 `json:"PumpRate,omitempty"`
	// PWD Elapsed Time                                                              
	PWDElapsedTime                                                          *float64 `json:"PWDElapsedTime,omitempty"`
	// PWD Pressure                                                                  
	PWDPressure                                                             *float64 `json:"PWDPressure,omitempty"`
	// Remark                                                                        
	Remark                                                                  *string  `json:"Remark,omitempty"`
	// Sequence Number                                                               
	SequenceNumber                                                          int64    `json:"SequenceNumber"`
	// Surface Pressure                                                              
	SurfacePressure                                                         *float64 `json:"SurfacePressure,omitempty"`
	// Source for surface pressure measurement                                       
	SurfacePressureSource                                                   *string  `json:"SurfacePressureSource,omitempty"`
}

// A generic image work-product-component, which associates an image dataset, typically a
// JPEG, PNG or TIFF file to a master-data or work-product-component item. GenericImage
// should not be used for geo-referenced images or core images, which have their own
// dedicated types.
type GenericImage struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GenericImageData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type GenericImageData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The ID of the object (master-data, reference-data, work-product-component or                                                            
	// work-product), to which this generic image has been associated.                                                                         
	AssociatedObjectID                                                                          *string                                        `json:"AssociatedObjectID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// The reservoir property representation record, derived from the RESQML AbstractProperty.
// In RESQML, all subsurface or surface values tied to specific topological locations (or
// IndexableElements) in a model are carried by any concrete data object that derives from
// abstract property (contained in the properties package) attached to one or more
// representations. A representation can have several properties and provides the indexable
// elements for these lists of values (for more information see IndexableElement).
type GenericProperty struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GenericPropertyData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The purpose of this schema is best understood in the context of a columnar dataset: the
// AbstractReferencePropertyType describes a column in a columnar dataset by declaring its
// value type (number, string), a UnitQuantity if the value type is a number, a kind if the
// string value is actually a relationship to a e.g. reference-data type.
type GenericPropertyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Ordered array with: FacetType, FacetRole, both calling specific references                                                              
	//                                                                                                                                         
	// FacetType: Enumerations of the type of additional context about the nature of a property                                                
	// type (it may include conditions, direction, qualifiers, or statistics).                                                                 
	//                                                                                                                                         
	// FacetRole: Additional context about the nature of a property type. The purpose of such                                                  
	// attribute is to minimize the need to create specialized property types by mutualizing                                                   
	// some well known qualifiers such as "maximum", "minimum" which apply to a lot of different                                               
	// property types.                                                                                                                         
	FacetIDs                                                                                    []AbstractFacet                                `json:"FacetIDs,omitempty"`
	// It holds the PropertyType associated with this reference property type, further defining                                                
	// the semantics of the value. It contains a relationship to PropertyType record and its                                                   
	// (de-normalized) name. String or number values can represent e.g. A date or a time by                                                    
	// referring to the respective PropertyType record id.                                                                                     
	PropertyType                                                                                *AbstractPropertyType                          `json:"PropertyType,omitempty"`
	// Only populated if ValueType=="string" and the values are expected to represent record                                                   
	// ids, e.g. to a reference-data type, then this value holds the kind (optionally without                                                  
	// the semantic version number).                                                                                                           
	RelationshipTargetKind                                                                      *string                                        `json:"RelationshipTargetKind,omitempty"`
	// Only populated of the ValueType is "number". It holds the UnitQuantity associated with                                                  
	// this reference property type. It is a relationship to UnitQuantity record.                                                              
	UnitQuantityID                                                                              *string                                        `json:"UnitQuantityID,omitempty"`
	// The number of values in a tuple, e.g. For coordinates. The default is 1.                                                                
	ValueCount                                                                                  *int64                                         `json:"ValueCount,omitempty"`
	// The type of value to expect for this reference property, either "number" (floating point                                                
	// number), "integer",  "string", or "boolean".                                                                                            
	ValueType                                                                                   *string                                        `json:"ValueType,omitempty"`
	// The srn of the Column Based Table associated to a categorical property. Can be based on a                                               
	// defined dictionary of rock types                                                                                                        
	ClassificationTableID                                                                       *string                                        `json:"ClassificationTableID,omitempty"`
	// Indexable elements are used to link property values and geometry to a representation -                                                  
	// for instance a property could be attached to a flow grid's cell or face, or to a                                                        
	// Triangulated surface's point                                                                                                            
	IndexableElementID                                                                          *string                                        `json:"IndexableElementID,omitempty"`
	// Maximum value of the Property                                                                                                           
	MaxValue                                                                                    *float64                                       `json:"MaxValue,omitempty"`
	// Mean value of the Property                                                                                                              
	MeanValue                                                                                   *float64                                       `json:"MeanValue,omitempty"`
	// Minimum value of the Property                                                                                                           
	MinValue                                                                                    *float64                                       `json:"MinValue,omitempty"`
	// The srn of the topology the property refers to (WPC srn)                                                                                
	PropertyTopologyID                                                                          *string                                        `json:"PropertyTopologyID,omitempty"`
	// Unit of Measure of the property                                                                                                         
	PropertyUnitID                                                                              *string                                        `json:"PropertyUnitID,omitempty"`
	// Optional element indicating the realization index (metadata). Used if the property is the                                               
	// result of a multi-realization process.                                                                                                  
	RealizationIndices                                                                          []float64                                      `json:"RealizationIndices,omitempty"`
	// Standard deviation value of the Property                                                                                                
	StdDeviation                                                                                *float64                                       `json:"StdDeviation,omitempty"`
	// When using time series, allow to associate a single stamp to the property, if not present                                               
	// the property contains all time stamps of the time series.                                                                               
	TimeIndices                                                                                 *float64                                       `json:"TimeIndices,omitempty"`
	// Time series the property is associated to (srn)                                                                                         
	TimeSeriesID                                                                                *string                                        `json:"TimeSeriesID,omitempty"`
	// Always present when attached to time values, even when time values defined through time                                                 
	// series (array of date-times). If the property is attached to a time-series object,                                                      
	// denormalized array of time to ease search                                                                                               
	TimeValues                                                                                  []string                                       `json:"TimeValues,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// 1D or 2D representations of Geologic Objects such as fault sticks, horizon surfaces, etc.
type GenericRepresentation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GenericRepresentationData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type GenericRepresentationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// Role assigned to the object geometry                                                                                                    
	Role                                                                                        *string                                        `json:"Role,omitempty"`
	// GenericRepresentation 1D or 2D types                                                                                                    
	Type                                                                                        *string                                        `json:"Type,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Defines the count of a particular indexable element in a representation
type IndexableElementCount struct {
	// The count of indexable element                
	Count                                    int64   `json:"Count"`
	// The indexable element which is counted        
	IndexableElementID                       *string `json:"IndexableElementID,omitempty"`
}

// Allow to link the geometry of the representation to a particular index of a time series.
// This is particularly useful for IJK grids used in geomechanical or basin context where
// the topology and geometry varies against the time.
type TimeSeriesClass struct {
	// Index of the timestamp of the representation in the associated TimeSeries       
	TimeIndex                                                                   int64  `json:"TimeIndex"`
	// Time series the representation is associated to                                 
	TimeSeriesID                                                                string `json:"TimeSeriesID"`
}

// The GeoLabelSet acts as an object for collecting consolidated geological properties or
// information related to a labelled master entity, which could be a Reservoir, Reservoir
// Segment, Field, Prospect, etc. Individual labels are name-value pairs categorised by a
// GeoLabelType which allows for specifying characteristics such as: the average porosity of
// a Reservoir as 20%, the average initial reservoir pressure for Reservoir Segment as at
// 8000 psi, or identifying the predominant depositional environment of a Field as “marine
// shallow”. The content may have been identified through various methods, including
// measurement, interpretation, estimation, data collection from reports, delivered data
// packages, data mining etc.
type GeoLabelSet struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GeoLabelSetData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type GeoLabelSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// If populated, the GeoLabelSet data.LabelAndValues[] only describe the state before the                                                   
	// EndDate. Often also the StartDate is populated defining an interval of validity for                                                      
	// data.LabelAndValues[].                                                                                                                   
	EndDate                                                                                      *string                                        `json:"EndDate,omitempty"`
	// The array of GeoLabelTypeIDs associated with a specific type dependent value. It is                                                      
	// expected that each GeoLabelTypeID value is unique in the LabelAndValues list, such that                                                  
	// it is possible to convert the array into a dictionary where the GeoLabelTypeID is the key.                                               
	LabelAndValues                                                                               []AbstractLabelAndValue                        `json:"LabelAndValues,omitempty"`
	// The entity, e.g., Basin, Prospect, Field, Well, Wellbore, Reservoir, ReservoirSegment,                                                   
	// which is labelled by the LabelSet.                                                                                                       
	LabelledEntityID                                                                             *string                                        `json:"LabelledEntityID,omitempty"`
	// If populated, the GeoLabelSet data.LabelAndValues[] only describe the state after the                                                    
	// StartDate. Often also the EndDate is populated defining an interval of validity for                                                      
	// data.LabelAndValues[].                                                                                                                   
	StartDate                                                                                    *string                                        `json:"StartDate,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// One LabelType, e.g., GeoLabelType, associated with a value. The value type (number,
// integer, boolean, string, relationship) is implied by the label type (related via
// LabelTypeID). If the label type's ValueCount is greater than 1, then arrays of number,
// integer, boolean, string or relationships are expected to be populated.
type AbstractLabelAndValue struct {
	// The reference to a label type record, e.g., a GeoLabelType, describing the details and            
	// facets. The content of the referenced label type determines, which properties are                 
	// expected to be populated.                                                                         
	LabelTypeID                                                                               string     `json:"LabelTypeID"`
	// A Boolean label value. Only populated if the associated labelType data.ValueType is               
	// 'boolean'. The label type's ValueCount must be 1.                                                 
	ValueAsBoolean                                                                            *bool      `json:"ValueAsBoolean,omitempty"`
	// A Boolean label value. Only populated if the associated labelType data.ValueType is               
	// 'boolean'. The label type's ValueCount is greater than 1.                                         
	ValueAsBooleanArray                                                                       []bool     `json:"ValueAsBooleanArray,omitempty"`
	// A label value as date or date time. Only populated if the associated labelType                    
	// data.ValueType is 'string'. The label type's ValueCount must be 1.                                
	ValueAsDateTime                                                                           *time.Time `json:"ValueAsDateTime,omitempty"`
	// A label value as date or date time. Only populated if the associated labelType                    
	// data.ValueType is 'string'. The label type's ValueCount is greater than 1.                        
	ValueAsDateTimeArray                                                                      []string   `json:"ValueAsDateTimeArray,omitempty"`
	// An integer label value. Only populated if the associated labelType data.ValueType is              
	// 'integer'. The label type's ValueCount must be 1.                                                 
	ValueAsInteger                                                                            *int64     `json:"ValueAsInteger,omitempty"`
	// An integer label value. Only populated if the associated labelType data.ValueType is              
	// 'integer'. The label type's ValueCount is greater than 1.                                         
	ValueAsIntegerArray                                                                       []int64    `json:"ValueAsIntegerArray,omitempty"`
	// A numeric, floating point label value. Only populated if the associated labelType                 
	// data.ValueType is 'number'. The label type's ValueCount must be 1.                                
	ValueAsNumber                                                                             *float64   `json:"ValueAsNumber,omitempty"`
	// A numeric, floating point label value. Only populated if the associated labelType                 
	// data.ValueType is 'number'. The label type's ValueCount is greater than 1.                        
	ValueAsNumberArray                                                                        []float64  `json:"ValueAsNumberArray,omitempty"`
	// A label relationship to another record via its record id:version, where version is                
	// optional. The expected target type is defined in labelType.RelationshipTargetKind. Only           
	// populated if the associated labelType data.ValueType is 'string'. The label type's                
	// ValueCount must be 1.                                                                             
	ValueAsRelatedID                                                                          *string    `json:"ValueAsRelatedID,omitempty"`
	// A label relationship to another record via its record id:version, where version is                
	// optional. The expected target type is defined in labelType.RelationshipTargetKind. Only           
	// populated if the associated labelType data.ValueType is 'string'. The label type's                
	// ValueCount is greater than 1.                                                                     
	ValueAsRelatedIDs                                                                         []string   `json:"ValueAsRelatedIDs,omitempty"`
	// A textual label value. Only populated if the associated labelType data.ValueType is               
	// 'string'. Not to be used for relationships, see ValueAsRelatedID. The label type's                
	// ValueCount must be 1.                                                                             
	ValueAsString                                                                             *string    `json:"ValueAsString,omitempty"`
	// A textual label value. Only populated if the associated labelType data.ValueType is               
	// 'string'. Not to be used for relationships, see ValueAsRelatedID. The label type's                
	// ValueCount is greater than 1.                                                                     
	ValueAsStringArray                                                                        []string   `json:"ValueAsStringArray,omitempty"`
}

// An image representation which contains a coordinate reference system or relates the image
// map or aerial photo image to a coordinate reference system. With this reference it is
// possible to compute world coordinates for each image pixel position. The mapping from
// pixel to world coordinates is often provided by companion file, a so-called world file,
// see: https://en.wikipedia.org/wiki/World_file.
type GeoReferencedImage struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GeoReferencedImageData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type GeoReferencedImageData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The ID of the object (master-data, reference-data, work-product-component or                                                            
	// work-product), to which this generic image has been associated.                                                                         
	AssociatedObjectID                                                                          *string                                        `json:"AssociatedObjectID,omitempty"`
	// The embedded bin grid definition describing the mapping from pixel coordinate system to                                                 
	// DataCRS ('world coordinates'). BinGrid member properties are only populated if BinGridID                                                
	// is absent. A populated BinGridID overrides any embedded BinGrid values.                                                                 
	EmbeddedBinGrid                                                                             *AbstractBinGrid                               `json:"EmbeddedBinGrid,omitempty"`
	// The explicit Vertical or Seismic Reference Datum for image file. Either                                                                 
	// EmbeddedVerticalReference or SharedVerticalReference must be populated if VerticalLevel                                                 
	// is populated.                                                                                                                           
	EmbeddedReferenceLevel                                                                      *AbstractReferenceLevel                        `json:"EmbeddedReferenceLevel,omitempty"`
	// The relationship to a GeoReferencedImageType record, which classifies this                                                              
	// GeoReferencedImage, e.g., as horizontal map, vertical curtain.                                                                          
	ImageTypeID                                                                                 *string                                        `json:"ImageTypeID,omitempty"`
	// Identifies the bin grid associated with the image file, typically derived from seismic.                                                 
	SharedBinGridID                                                                             *string                                        `json:"SharedBinGridID,omitempty"`
	// The relationship to a shared Vertical or Seismic Reference Datum  for image file. Either                                                
	// EmbeddedVerticalReference or SharedVerticalReference must be populated if VerticalLevel                                                 
	// is populated.                                                                                                                           
	SharedReferenceLevelID                                                                      *string                                        `json:"SharedReferenceLevelID,omitempty"`
	// External identifier of the source bin grid as stored in a corporate database/application.                                               
	// This may be an integer in some systems or may be a string (e.g., the survey name if                                                     
	// sourced from an application that does not use numbers).                                                                                 
	SourceBinGridExternalID                                                                     *string                                        `json:"SourceBinGridExternalID,omitempty"`
	// The vertical position of this GeoReferencedImage. The axis direction is given by the                                                    
	// data.{Embedded|Shared}ReferenceLevel{ID} dataVerticalCoordinateReferenceSystemID. Seismic                                               
	// travel times are always downwards positive. Only present if a vertical stacking of images                                               
	// is required, usually absent.                                                                                                            
	VerticalLevel                                                                               *float64                                       `json:"VerticalLevel,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// The embedded bin grid definition describing the mapping from pixel coordinate system to
// DataCRS ('world coordinates'). BinGrid member properties are only populated if BinGridID
// is absent. A populated BinGridID overrides any embedded BinGrid values.
//
// The shared properties for a bin grid.
type AbstractBinGrid struct {
	// DEPRECATED: Use  AbstractGeoJson.PropertiesBinGridCorners properties inside the                                   
	// ABCDBinGridSpatialLocation. Previously:  Array of 4 corner points for bin grid in local                           
	// coordinates: Point A (min inline, min crossline); Point B (min inline, max crossline);                            
	// Point C (max inline, min crossline); Point D (max inline, max crossline).  If Point D is                          
	// not given and BinGridDefinitionMethodTypeID=4, it must be supplied, with its spatial                              
	// location, before ingestion to create a parallelogram in map coordinate space.  Note                               
	// correspondence of inline=x, crossline=y.                                                                          
	ABCDBinGridLocalCoordinates                                                                 []AbstractCoordinates    `json:"ABCDBinGridLocalCoordinates,omitempty"`
	// Bin Grid ABCD points containing the projected coordinates, projected CRS and quality                              
	// metadata.  This attribute is required also for the P6 definition method to define the                             
	// projected CRS, even if the ABCD coordinates would be optional (recommended to be always                           
	// calculated). It is recommended to populate the GeoJSON/AnyCrsGeoJSON with properties                              
	// according to the AbstractGeoJson.PropertiesBinGridCorners schema fragment.                                        
	ABCDBinGridSpatialLocation                                                                  *AbstractSpatialLocation `json:"ABCDBinGridSpatialLocation,omitempty"`
	// This identifies how the Bin Grid is defined:  4=ABCD four-points method was used to                               
	// define the grid (P6 parameters are optional and can contain derived values;                                       
	// P6BinNodeIncrementOnIAxis and P6BinNodeIncrementOnJaxis can be used as part of four-point                         
	// method).  Use a perspective transformation to map between map coordinates and bin                                 
	// coordinates. Note point order.  6=P6 definition method was used to define the bin grid                            
	// (ABCD points are optional and can contain derived values; ABCDBinGridSpatialLocation must                         
	// specify the projected CRS).  Use an affine transformation to map between map coordinates                          
	// and bin coordinates.                                                                                              
	BinGridDefinitionMethodTypeID                                                               *string                  `json:"BinGridDefinitionMethodTypeID,omitempty"`
	// Name of bin grid (e.g., GEOCO_GREENCYN_PHV_2012).  Probably the name as it exists in a                            
	// separate corporate store if OSDU is not main system.                                                              
	BinGridName                                                                                 *string                  `json:"BinGridName,omitempty"`
	// Type of bin grid (Acquisition, Processing, Velocity, MagGrav, Magnetics, Gravity,                                 
	// GeologicModel, Reprojected, etc.)                                                                                 
	BinGridTypeID                                                                               *string                  `json:"BinGridTypeID,omitempty"`
	// Nominal design fold as intended by the bin grid definition, expressed as the mode in                              
	// percentage points (60 fold = 6000%).                                                                              
	CoveragePercent                                                                             *float64                 `json:"CoveragePercent,omitempty"`
	// Easting coordinate of tie point (e.g., center or A point)                                                         
	P6BinGridOriginEasting                                                                      *float64                 `json:"P6BinGridOriginEasting,omitempty"`
	// Inline coordinate of tie point (e.g., center or A point)                                                          
	P6BinGridOriginI                                                                            *float64                 `json:"P6BinGridOriginI,omitempty"`
	// Crossline coordinate of tie point (e.g., center or A point)                                                       
	P6BinGridOriginJ                                                                            *float64                 `json:"P6BinGridOriginJ,omitempty"`
	// Northing coordinate of tie point (e.g., center or A point)                                                        
	P6BinGridOriginNorthing                                                                     *float64                 `json:"P6BinGridOriginNorthing,omitempty"`
	// Increment (positive integer) for the inline coordinate. If not provided then 1 is                                 
	// assumed.  The bin grid definition is expected to have increment 1 and the increment                               
	// stored with the SeismicTraceData (“inline increment”) takes precedence over the increment                         
	// set at the BinGrid.  Alternatively the increments are allowed to be defined with the                              
	// BinGrid, but this should be avoided to allow for variations in sampling in trace data                             
	// sets.                                                                                                             
	P6BinNodeIncrementOnIaxis                                                                   *int64                   `json:"P6BinNodeIncrementOnIaxis,omitempty"`
	// Increment (positive integer) for the crossline coordinate. If not provided then 1 is                              
	// assumed.  The bin grid definition is expected to have increment 1 and the increment                               
	// stored with the SeismicTraceData (“crossline increment”) takes precedence over the                                
	// increment set at the BinGrid. Alternatively the increments are allowed to be defined with                         
	// the BinGrid, but this should be avoided to allow for variations in sampling in trace data                         
	// sets.                                                                                                             
	P6BinNodeIncrementOnJaxis                                                                   *int64                   `json:"P6BinNodeIncrementOnJaxis,omitempty"`
	// Distance between two inlines at the given increment apart, e.g., 30 m with                                        
	// P6BinNodeIncrementOnIaxis=1.  Unit from projected CRS in ABCDBinGridSpatialLocation                               
	P6BinWidthOnIaxis                                                                           *float64                 `json:"P6BinWidthOnIaxis,omitempty"`
	// Distance between two crosslines at the given increment apart, e.g., 25 m with                                     
	// P6BinNodeIncrementOnJaxis=4.  Unit from projected CRS in ABCDBinGridSpatialLocation                               
	P6BinWidthOnJaxis                                                                           *float64                 `json:"P6BinWidthOnJaxis,omitempty"`
	// Clockwise angle from grid north (in projCRS) in degrees from 0 to 360 of the direction of                         
	// increasing crosslines (constant inline), i.e., of the vector from point A to B.                                   
	P6MapGridBearingOfBinGridJaxis                                                              *float64                 `json:"P6MapGridBearingOfBinGridJaxis,omitempty"`
	// Scale factor for Bin Grid.  If not provided then 1 is assumed. Unit is unity.                                     
	P6ScaleFactorOfBinGrid                                                                      *float64                 `json:"P6ScaleFactorOfBinGrid,omitempty"`
	// EPSG code: 9666 for right-handed, 1049 for left-handed.  See IOGP Guidance Note 373-07-2                          
	// and 483-6.                                                                                                        
	P6TransformationMethod                                                                      *int64                   `json:"P6TransformationMethod,omitempty"`
	// Identifier (name) of the corporate database/application that stores the source bin grid                           
	// definitions if OSDU is not main system.                                                                           
	SourceBinGridAppID                                                                          *string                  `json:"SourceBinGridAppID,omitempty"`
	// Identifier of the source bin grid as stored in a corporate database/application if OSDU                           
	// is not main system.                                                                                               
	SourceBinGridID                                                                             *int64                   `json:"SourceBinGridID,omitempty"`
}

// A geographic position on the surface of the earth.
type AbstractCoordinates struct {
	// x is Easting or Longitude.         
	X                            *float64 `json:"X,omitempty"`
	// y is Northing or Latitude.         
	Y                            *float64 `json:"Y,omitempty"`
}

// The explicit Vertical or Seismic Reference Datum for image file. Either
// EmbeddedVerticalReference or SharedVerticalReference must be populated if VerticalLevel
// is populated.
//
// A reference level or horizontal reference surface definition, which can be used embedded
// in other schemas.
type AbstractReferenceLevel struct {
	// The date and time at which this reference level instance becomes effective.                         
	EffectiveDateTime                                                                           *time.Time `json:"EffectiveDateTime,omitempty"`
	// The height above the reference surface defined by the VerticalCoordinateReferenceSystemID           
	// positive upwards.                                                                                   
	Height                                                                                      *float64   `json:"Height,omitempty"`
	// The replacement velocity value used to produce vertical static shifts in seismic data.              
	SeismicReplacementVelocity                                                                  *float64   `json:"SeismicReplacementVelocity,omitempty"`
	// The date and time at which a reference level instance is no longer in effect.                       
	TerminationDateTime                                                                         *time.Time `json:"TerminationDateTime,omitempty"`
	// The relationship to the vertical CRS defining the absolute reference surface.                       
	VerticalCoordinateReferenceSystemID                                                         *string    `json:"VerticalCoordinateReferenceSystemID,omitempty"`
	// When used in context of a Wellbore, this specifies Measured Depth, True Vertical Depth,             
	// or Elevation.                                                                                       
	VerticalMeasurementPathID                                                                   *string    `json:"VerticalMeasurementPathID,omitempty"`
	// When used in context of a Wellbore this specifies Driller vs Logger measurements.                   
	VerticalMeasurementSourceID                                                                 *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (SRD, ES, GR, MSL,and many more).                        
	VerticalMeasurementTypeID                                                                   *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The positional uncertainty in the vertical direction.                                               
	VerticalUncertainty                                                                         *float64   `json:"VerticalUncertainty,omitempty"`
	// When used in context of a Wellbore this specifies what directional survey or wellpath was           
	// used to calculate the TVD.                                                                          
	WellboreTVDTrajectoryID                                                                     *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// Geologic information associated to geobody boundary-related objects  (marker, seismic
// picks, modeled objects like triangulated surface)
type GeobodyBoundaryInterpretation struct {
	// The access control tags associated with this entity.                                                                         
	ACL                                                                                          AccessControlList                  `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                           
	// derived.                                                                                                                     
	Ancestry                                                                                     *ParentList                        `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                     
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	CreateTime                                                                                   *time.Time                         `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                      
	// System.                                                                                                                      
	CreateUser                                                                                   *string                            `json:"createUser,omitempty"`
	Data                                                                                         *GeobodyBoundaryInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                       
	// version.                                                                                                                     
	ID                                                                                           *string                            `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                 
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                     
	// scheme follows the semantic versioning, https://semver.org/.                                                                 
	Kind                                                                                         string                             `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                       
	// legal tags is managed by the Compliance Service.                                                                             
	Legal                                                                                        LegalMetaData                      `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                      
	// definitions.                                                                                                                 
	Meta                                                                                         []FrameOfReferenceMetaDataItem     `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                     
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                            
	ModifyTime                                                                                   *time.Time                         `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                   
	ModifyUser                                                                                   *string                            `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                      
	// as keys and values.                                                                                                          
	Tags                                                                                         map[string]string                  `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                              
	Version                                                                                      *int64                             `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type GeobodyBoundaryInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Describes the geobody boundary relation with surrounding stratigraphic units:                                                           
	// unconformable, conformable                                                                                                              
	BoundaryRelationTypeID                                                                      *string                                        `json:"BoundaryRelationTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// One of potentially many geobody interpretations as a single consistent description of a
// local rock volume feature. An interpretation is subjective and very strongly tied to the
// intellectual activity of the project team members.
type GeobodyInterpretation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GeobodyInterpretationData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// Common properties for entities describing an opinion of a volume-based geologic feature
// or unit.
//
// The group of properties shared by different kinds of interpretations
type GeobodyInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// The relationship to the DepositionalEnvironment reference-data record.                                                                   
	DepositionalEnvironmentID                                                                    *string                                        `json:"DepositionalEnvironmentID,omitempty"`
	// In addition to DepositionalEnvironmentID, this relation to a DepositionalSubEnvironment                                                  
	// reference-data record further specifies the overall depositional environment.                                                            
	DepositionalSubEnvironmentID                                                                 *string                                        `json:"DepositionalSubEnvironmentID,omitempty"`
	// The relationship to a GeologicUnitShapeType like sheet, dyke, dome, mushroom, channel and                                                
	// more.                                                                                                                                    
	GeologicUnitShapeTypeID                                                                      *string                                        `json:"GeologicUnitShapeTypeID,omitempty"`
	// Corresponding to Energistics GeologicUnitMaterialEmplacement 'intrusive' and                                                             
	// 'non-intrusive'.                                                                                                                         
	IsIntrusive                                                                                  *bool                                          `json:"IsIntrusive,omitempty"`
	// Optionally, one ore more LithologyQualifiers further detailing the LithologyType via                                                     
	// LithologyTypeID.                                                                                                                         
	LithologyQualifierIDs                                                                        []string                                       `json:"LithologyQualifierIDs,omitempty"`
	// The relationship to a LithologyType, corresponding to Energistics GeologicUnitComposition.                                               
	LithologyTypeID                                                                              *string                                        `json:"LithologyTypeID,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                           
	DomainTypeID                                                                                 *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                  
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                     
	//                                                                                                                                          
	// The reference to a local rock volume feature, to which this interpretation is associated.                                                
	FeatureID                                                                                    *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                         
	FeatureName                                                                                  *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                 
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	MeanPossibleAge                                                                              *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	OlderPossibleAge                                                                             *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                 
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                  
	// to normalization.                                                                                                                        
	YoungerPossibleAge                                                                           *float64                                       `json:"YoungerPossibleAge,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Interpretation of a sequence of geologic units actually observed (interpreted)  along or
// inside a representation, the representation can be
// •    1D such as a well or an arbitrary line
// •    2D like a cross section
// •    3D like a entire model or a group of fault blocks
// It is typically based on a stratigraphic column rank but can include more units (example
// intrusive bodies), duplicated units (repeated sequence along a well or lines), or less
// units (Eroded or non-deposited).
// An ordering criteria indicates the reason for the order (age, apparent depth or measured
// depth).
type GeologicUnitOccurrenceInterpretation struct {
	// The access control tags associated with this entity.                                                                                
	ACL                                                                                          AccessControlList                         `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                  
	// derived.                                                                                                                            
	Ancestry                                                                                     *ParentList                               `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                            
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                               
	CreateTime                                                                                   *time.Time                                `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                             
	// System.                                                                                                                             
	CreateUser                                                                                   *string                                   `json:"createUser,omitempty"`
	Data                                                                                         *GeologicUnitOccurrenceInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                              
	// version.                                                                                                                            
	ID                                                                                           *string                                   `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                        
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                            
	// scheme follows the semantic versioning, https://semver.org/.                                                                        
	Kind                                                                                         string                                    `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                              
	// legal tags is managed by the Compliance Service.                                                                                    
	Legal                                                                                        LegalMetaData                             `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                             
	// definitions.                                                                                                                        
	Meta                                                                                         []FrameOfReferenceMetaDataItem            `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                            
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                   
	ModifyTime                                                                                   *time.Time                                `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                          
	ModifyUser                                                                                   *string                                   `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                             
	// as keys and values.                                                                                                                 
	Tags                                                                                         map[string]string                         `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                     
	Version                                                                                      *int64                                    `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type GeologicUnitOccurrenceInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Lists the units observed                                                                                                                
	GeologicUnitInterpretationIDs                                                               []string                                       `json:"GeologicUnitInterpretationIDs,omitempty"`
	// Define the criteria used for ordering (age, apparent depth, measured depth)                                                             
	OrderingCriteriaTypeID                                                                      *string                                        `json:"OrderingCriteriaTypeID,omitempty"`
	// Stratigraphic Rank Interpretation on which the organization is based on                                                                 
	StratigraphicColumnRankInterpretationID                                                     *string                                        `json:"StratigraphicColumnRankInterpretationID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// General Purpose Grid. This Grid is the only one to be able to mix different grid
// representations (ijk, unstructured column layer, unstructured) into a single one without
// having to use grid refinement.
type GpGridRepresentation struct {
	// The access control tags associated with this entity.                                                                                      
	ACL                                                                                          AccessControlList                               `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                        
	// derived.                                                                                                                                  
	Ancestry                                                                                     *ParentList                                     `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                                  
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                     
	CreateTime                                                                                   *time.Time                                      `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                                   
	// System.                                                                                                                                   
	CreateUser                                                                                   *string                                         `json:"createUser,omitempty"`
	Data                                                                                         *GpGridRepresentationAbstractGridRepresentation `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                                    
	// version.                                                                                                                                  
	ID                                                                                           *string                                         `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                              
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                                  
	// scheme follows the semantic versioning, https://semver.org/.                                                                              
	Kind                                                                                         string                                          `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                                    
	// legal tags is managed by the Compliance Service.                                                                                          
	Legal                                                                                        LegalMetaData                                   `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                                   
	// definitions.                                                                                                                              
	Meta                                                                                         []FrameOfReferenceMetaDataItem                  `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                                  
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                         
	ModifyTime                                                                                   *time.Time                                      `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                                
	ModifyUser                                                                                   *string                                         `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                                   
	// as keys and values.                                                                                                                       
	Tags                                                                                         map[string]string                               `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                           
	Version                                                                                      *int64                                          `json:"version,omitempty"`
}

// The group of elements contained by all different kind of grids
//
// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type GpGridRepresentationAbstractGridRepresentation struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the EarthModelInterpretation this grid belongs to.                                                                     
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// Total count of active cells in the grid. It is an approximation since the real count of                                                 
	// active cells can be modified with some properties.                                                                                      
	ActiveCellCount                                                                             *int64                                         `json:"ActiveCellCount,omitempty"`
	// Indicate if the grid has got some finite element subnodes for defining higher order grid                                                
	// geometry and properties. This is mainly used in geomechanical context.                                                                  
	HasFiniteElementSubnodes                                                                    *bool                                          `json:"HasFiniteElementSubnodes,omitempty"`
	// Indicate that at least on coordinate of one node of the grid is NaN. It is different than                                               
	// a dead cell which may have a geometry while it is disabled.                                                                             
	HasNaNGeometry                                                                              *bool                                          `json:"HasNaNGeometry,omitempty"`
	// Indicate that the grid has no geometry. It is common when one wants a grid only as a                                                    
	// collection of cell connections (i.e. pipe network).                                                                                     
	HasNoGeometry                                                                               *bool                                          `json:"HasNoGeometry,omitempty"`
	// Reference to the parent grid. If present, it means that this grid is a Local                                                            
	// GridRefinement.                                                                                                                         
	ParentGridID                                                                                *string                                        `json:"ParentGridID,omitempty"`
	// References to the RockFluid organization interpretations which this grid relates to.                                                    
	RockFluidOrganizationInterpretationIDS                                                      []string                                       `json:"RockFluidOrganizationInterpretationIDS,omitempty"`
	// Allow to link the K layers (or the "geologic k" property for example in case of K                                                       
	// expansion or unstructured grid) of this grid with some stratigraphic units of a                                                         
	// stratigraphic organization.                                                                                                             
	StratigraphicUnits                                                                          *StratigraphicUnits                            `json:"StratigraphicUnits,omitempty"`
	// Collection of IJK grid patches contained by the GP grid                                                                                 
	IjkGridPatches                                                                              []AbstractIjkGridPatch                         `json:"IjkGridPatches,omitempty"`
	// Collection of Unstructured Column Layer grid patches contained by the GP grid                                                           
	UnstructuredColumnLayerGridPatches                                                          []AbstractUnstructuredColumnLayerGridPatch     `json:"UnstructuredColumnLayerGridPatches,omitempty"`
	// Collection of Unstructured grid patches contained by the GP grid                                                                        
	UnstructuredGridPatches                                                                     []AbstractUnstructuredGridPatch                `json:"UnstructuredGridPatches,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Definition of a collection of hexahedra which are organized and indexable by means of 3
// (almost orthogonal) directions and called I, J and K. Only an abstract group type in
// order to be reused in GPGrid.
//
// The group of elements which all column grid layers (ijk or unstructured) contain
type AbstractIjkGridPatch struct {
	// Indicate if a grid has been topologically expanded in a particular dimension (K                                 
	// expansion, J expansion, I expansion)                                                                            
	ExpansionInDirection                                                                         *ExpansionInDirection `json:"ExpansionInDirection,omitempty"`
	// Indicate if at least two adjacent nodes in K Direction are collocated. Also known as                            
	// pinched node. Usually occur in erosional context.                                                               
	HasCollocatedNodeInKDirection                                                                *bool                 `json:"HasCollocatedNodeInKDirection,omitempty"`
	// Indicate that it exists at least one gap in the whole K direction of the grid. A gap is                         
	// really a hole, it is not a layer of dead cells.                                                                 
	HasKGaps                                                                                     *bool                 `json:"HasKGaps,omitempty"`
	// Indicate that it exists at least one gap in the lateral direction of the grid. A gap is                         
	// really a hole, it is not a slice of dead cells.                                                                 
	HasLateralGaps                                                                               *bool                 `json:"HasLateralGaps,omitempty"`
	// Indicate that the nodes of the grid are given by means of a parameter along the pillar.                         
	// Otherwise nodes of the grid are explicitly given by means of an XYZ triplet.                                    
	HasParametricGeometry                                                                        *bool                 `json:"HasParametricGeometry,omitempty"`
	// Indicate that the grid contains some split nodes i.e some node which are not on a pillar.                       
	HasSplitNode                                                                                 *bool                 `json:"HasSplitNode,omitempty"`
	// Indicate that some of the pillars of the grid are truncated (Fault contact in Y shape for                       
	// example)                                                                                                        
	HasTruncations                                                                               *bool                 `json:"HasTruncations,omitempty"`
	// Indicate the K direction of the grid : up, down or not monotonic                                                
	KDirectionID                                                                                 *string               `json:"KDirectionID,omitempty"`
	// Count of cells in the K-direction (aka third and/or slowest and/or vertical direction) in                       
	// the grid. Must be positive.                                                                                     
	Nk                                                                                           *int64                `json:"Nk,omitempty"`
	// Indicate the most complex pillar shape of a grid : vertical, straight, curved                                   
	PillarShapeID                                                                                *string               `json:"PillarShapeID,omitempty"`
	// TRUE if the grid is periodic in J, i.e., has the topology of a complete 360 degree circle.                      
	IsRadial                                                                                     *bool                 `json:"IsRadial,omitempty"`
	// Indicates that the IJK grid is right handed, as determined by the triple product of                             
	// tangent vectors in the I, J, and K directions.                                                                  
	IsRightHanded                                                                                *bool                 `json:"IsRightHanded,omitempty"`
	// Count of cells in the I-direction (aka first and/or fastest direction) in the grid. Must                        
	// be positive.                                                                                                    
	NI                                                                                           *int64                `json:"Ni,omitempty"`
	// Count of cells in the J-direction (aka second direction) in the grid. Must be positive.                         
	Nj                                                                                           *int64                `json:"Nj,omitempty"`
}

// Allow to link the K layers (or the "geologic k" property for example in case of K
// expansion or unstructured grid) of this grid with some stratigraphic units of a
// stratigraphic organization.
type StratigraphicUnits struct {
	// Reference to the stratigraphic column rank interpretation which this grid is derived from.          
	StratigraphicColumnRankInterpretationID                                                      string    `json:"StratigraphicColumnRankInterpretationID"`
	// For each K layer, indicate the corresponding stratigraphic unit indices within the                  
	// associated Stratigraphic Organization. A negative value means that a K layer is not                 
	// related to any stratigraphic unit (salt for example)                                                
	StratigraphicUnitsIndices                                                                    [][]int64 `json:"StratigraphicUnitsIndices"`
}

// Definition of a collection of polyhedra which are only organized by column. Only an
// abstract group type in order to be reused in GPGrid.
//
// The group of elements which all column grid layers (ijk or unstructured) contain
type AbstractUnstructuredColumnLayerGridPatch struct {
	// Indicate if a grid has been topologically expanded in a particular dimension (K                                
	// expansion, J expansion, I expansion)                                                                           
	ExpansionInDirection                                                                        *ExpansionInDirection `json:"ExpansionInDirection,omitempty"`
	// Indicate if at least two adjacent nodes in K Direction are collocated. Also known as                           
	// pinched node. Usually occur in erosional context.                                                              
	HasCollocatedNodeInKDirection                                                               *bool                 `json:"HasCollocatedNodeInKDirection,omitempty"`
	// Indicate that it exists at least one gap in the whole K direction of the grid. A gap is                        
	// really a hole, it is not a layer of dead cells.                                                                
	HasKGaps                                                                                    *bool                 `json:"HasKGaps,omitempty"`
	// Indicate that it exists at least one gap in the lateral direction of the grid. A gap is                        
	// really a hole, it is not a slice of dead cells.                                                                
	HasLateralGaps                                                                              *bool                 `json:"HasLateralGaps,omitempty"`
	// Indicate that the nodes of the grid are given by means of a parameter along the pillar.                        
	// Otherwise nodes of the grid are explicitly given by means of an XYZ triplet.                                   
	HasParametricGeometry                                                                       *bool                 `json:"HasParametricGeometry,omitempty"`
	// Indicate that the grid contains some split nodes i.e some node which are not on a pillar.                      
	HasSplitNode                                                                                *bool                 `json:"HasSplitNode,omitempty"`
	// Indicate that some of the pillars of the grid are truncated (Fault contact in Y shape for                      
	// example)                                                                                                       
	HasTruncations                                                                              *bool                 `json:"HasTruncations,omitempty"`
	// Indicate the K direction of the grid : up, down or not monotonic                                               
	KDirectionID                                                                                *string               `json:"KDirectionID,omitempty"`
	// Count of cells in the K-direction (aka third and/or slowest and/or vertical direction) in                      
	// the grid. Must be positive.                                                                                    
	Nk                                                                                          *int64                `json:"Nk,omitempty"`
	// Indicate the most complex pillar shape of a grid : vertical, straight, curved                                  
	PillarShapeID                                                                               *string               `json:"PillarShapeID,omitempty"`
	// Indicates the common shape of all columns in this grid : triangular, quadrilateral,                            
	// polygonal                                                                                                      
	ColumnShapeID                                                                               *string               `json:"ColumnShapeID,omitempty"`
}

// Definition of a collection of polyhedra which are not organized in any dimension. Only an
// abstract group type in order to be reused in GPGrid.
type AbstractUnstructuredGridPatch struct {
	// Indicates the uniform shape of all cells in this grid : tetrahedral, pyramidal, prism,        
	// hexahedral, polyhedral                                                                        
	CellShapeID                                                                              *string `json:"CellShapeID,omitempty"`
	// The count of faces in this grid                                                               
	FaceCount                                                                                *int64  `json:"FaceCount,omitempty"`
	// The count of nodes in this grid                                                               
	NodeCount                                                                                *int64  `json:"NodeCount,omitempty"`
}

// A list of cell (and optionally local face) connections in a grid.
type GridConnectionSetRepresentation struct {
	// The access control tags associated with this entity.                                                                           
	ACL                                                                                          AccessControlList                    `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                             
	// derived.                                                                                                                       
	Ancestry                                                                                     *ParentList                          `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                       
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                          
	CreateTime                                                                                   *time.Time                           `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                        
	// System.                                                                                                                        
	CreateUser                                                                                   *string                              `json:"createUser,omitempty"`
	Data                                                                                         *GridConnectionSetRepresentationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                         
	// version.                                                                                                                       
	ID                                                                                           *string                              `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                   
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                       
	// scheme follows the semantic versioning, https://semver.org/.                                                                   
	Kind                                                                                         string                               `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                         
	// legal tags is managed by the Compliance Service.                                                                               
	Legal                                                                                        LegalMetaData                        `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                        
	// definitions.                                                                                                                   
	Meta                                                                                         []FrameOfReferenceMetaDataItem       `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                       
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                              
	ModifyTime                                                                                   *time.Time                           `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                     
	ModifyUser                                                                                   *string                              `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                        
	// as keys and values.                                                                                                            
	Tags                                                                                         map[string]string                    `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                
	Version                                                                                      *int64                               `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type GridConnectionSetRepresentationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// The count of connections between cells.                                                                                                 
	ConnectionCount                                                                             *int64                                         `json:"ConnectionCount,omitempty"`
	// References to the grid representations which the connections are based on.                                                              
	GridRepresentationIDs                                                                       []string                                       `json:"GridRepresentationIDs,omitempty"`
	// References to the interpretations which some (or all) of the connections represent.                                                     
	InterpretationIDs                                                                           []string                                       `json:"InterpretationIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Geologic information associated to horizon-related object types (marker, seismic picks,
// modeled objects etc…)
type HorizonInterpretation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *HorizonInterpretationData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type HorizonInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Defines whether the stratigraphic unit above the horizon is conformable                                                                 
	IsConformableAbove                                                                          *bool                                          `json:"isConformableAbove,omitempty"`
	// Defines whether the stratigraphic unit below the horizon is conformable                                                                 
	IsConformableBelow                                                                          *bool                                          `json:"isConformableBelow,omitempty"`
	// Describes the horizon sequence stratigraphic information (flooding, ravinement, maximum                                                 
	// flooding, transgressive)                                                                                                                
	SequenceStratigraphySurfaceTypeID                                                           *string                                        `json:"SequenceStratigraphySurfaceTypeID,omitempty"`
	// Describes the horizon stratigraphic role (chronostratigraphic, lithostratigraphic,                                                      
	// biostratigraphic)                                                                                                                       
	StratigraphicRoleTypeID                                                                     *string                                        `json:"StratigraphicRoleTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A numerical aquifer representation defines the geometry of the aquifer as IJK grid cell
// indices.
type IjkGridNumericalAquiferRepresentation struct {
	// The access control tags associated with this entity.                                                                                 
	ACL                                                                                          AccessControlList                          `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                   
	// derived.                                                                                                                             
	Ancestry                                                                                     *ParentList                                `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                             
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                
	CreateTime                                                                                   *time.Time                                 `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                              
	// System.                                                                                                                              
	CreateUser                                                                                   *string                                    `json:"createUser,omitempty"`
	Data                                                                                         *IjkGridNumericalAquiferRepresentationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                               
	// version.                                                                                                                             
	ID                                                                                           *string                                    `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                         
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                             
	// scheme follows the semantic versioning, https://semver.org/.                                                                         
	Kind                                                                                         string                                     `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                               
	// legal tags is managed by the Compliance Service.                                                                                     
	Legal                                                                                        LegalMetaData                              `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                              
	// definitions.                                                                                                                         
	Meta                                                                                         []FrameOfReferenceMetaDataItem             `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                             
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                    
	ModifyTime                                                                                   *time.Time                                 `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                           
	ModifyUser                                                                                   *string                                    `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                              
	// as keys and values.                                                                                                                  
	Tags                                                                                         map[string]string                          `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                      
	Version                                                                                      *int64                                     `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type IjkGridNumericalAquiferRepresentationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                            
	ExistenceKind                                                                               *string                                           `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                     
	ResourceCurationStatus                                                                      *string                                           `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                             
	ResourceHomeRegionID                                                                        *string                                           `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                          
	ResourceHostRegionIDs                                                                       []string                                          `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                           
	ResourceLifecycleStatus                                                                     *string                                           `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                             
	ResourceSecurityClassification                                                              *string                                           `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                             
	// organization, agency, system, internal team, or individual. For informational purposes                                                     
	// only, the list of sources is not governed.                                                                                                 
	Source                                                                                      *string                                           `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                      
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                    
	// suitable quality, any further change or versioning of a Certified record should be                                                         
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                   
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                   
	// Technical Assurance values are not intended to be used for the identification of a single                                                  
	// "preferred" or "definitive" record by comparison with other records.                                                                       
	TechnicalAssuranceID                                                                        *string                                           `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                  
	// from the file, in the sense certain valuable information is generated during loading                                                       
	// process (Artefact generation process). Examples include retrieving location data,                                                          
	// performing an OCR which may result in the generation of artefacts which need to be                                                         
	// preserved distinctly                                                                                                                       
	Artefacts                                                                                   []AbstractGridRepresentationArtefact              `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                        
	Datasets                                                                                    []string                                          `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                   
	// work-product-component. The references are formed as URI following                                                                         
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                  
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                         
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                   
	// the DDMS id.                                                                                                                               
	DDMSDatasets                                                                                []string                                          `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                  
	// the search index.                                                                                                                          
	IsDiscoverable                                                                              *bool                                             `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                    
	// reflects the fact that the work product component is in an early stage and may be updated                                                  
	// before finalization.                                                                                                                       
	IsExtendedLoad                                                                              *bool                                             `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                  
	// known (it should include all the identifiers).                                                                                             
	NameAliases                                                                                 []AbstractAliasNames                              `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                    
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                         
	// quality, any further change or versioning of a Certified record should be carefully                                                        
	// considered and justified. If a Technical Assurance value is not populated then one can                                                     
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                           
	// Technical Assurance values are not intended to be used for the identification of a single                                                  
	// "preferred" or "definitive" record by comparison with other records.                                                                       
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                       
	// entity.                                                                                                                                    
	AuthorIDs                                                                                   []string                                          `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                     
	// (ex. well planning, exploration).                                                                                                          
	BusinessActivities                                                                          []string                                          `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                       
	// loading (e.g. publication date).                                                                                                           
	CreationDateTime                                                                            *time.Time                                        `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                         
	// captures thoughts of creator about the wpc.                                                                                                
	Description                                                                                 *string                                           `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                   
	// types or multiple values of the same type.                                                                                                 
	GeoContexts                                                                                 []AbstractGeoContext                              `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                       
	// product component depends.  The assertion is directed only from the asserting WPC to                                                       
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                      
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                  
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                      
	LineageAssertions                                                                           []LineageAssertion                                `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                       
	Name                                                                                        *string                                           `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                          
	SpatialArea                                                                                 *AbstractSpatialLocation                          `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                     
	// (location of the subject matter).                                                                                                          
	SpatialPoint                                                                                *AbstractSpatialLocation                          `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                                
	SubmitterName                                                                               *string                                           `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                             
	Tags                                                                                        []string                                          `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                                  
	IndexableElementCount                                                                       []IndexableElementCount                           `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                   
	//                                                                                                                                            
	// The reference to the AquiferInterpretation this representation belongs to.                                                                 
	InterpretationID                                                                            *string                                           `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                    
	InterpretationName                                                                          *string                                           `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                         
	LocalModelCompoundCRSID                                                                     *string                                           `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                        
	RealizationIndex                                                                            *int64                                            `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                   
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                     
	// the topology and geometry varies against the time.                                                                                         
	TimeSeries                                                                                  *TimeSeriesClass                                  `json:"TimeSeries,omitempty"`
	// List all connections between the aquifer and reservoir grids.                                                                              
	ConnectionSet                                                                               []AbstractIjkGridFlowSimulationBoundaryConnection `json:"ConnectionSet,omitempty"`
	// Describe the aquifer by means of one to many single cell of reservoir grids                                                                
	SingleCellAquiferSet                                                                        []SingleCellAquifer                               `json:"SingleCellAquiferSet,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                            `json:"ExtensionProperties,omitempty"`
}

// This structure intends to define the reservoir boundary connection in an IJK grid such as
// aquifer connection. It can be reused in various Ijk Grid flow simulation related
// representations which need some boundary connections.
type AbstractIjkGridFlowSimulationBoundaryConnection struct {
	// The faces of the box of the grid which are in connection                
	Face                                                              *string  `json:"Face,omitempty"`
	// The grid which is in connection                                         
	GridID                                                            *string  `json:"GridID,omitempty"`
	// The lower included I index of the box of the grid in connection         
	LowerI                                                            *int64   `json:"LowerI,omitempty"`
	// The lower included J index of the box of the grid in connection         
	LowerJ                                                            *int64   `json:"LowerJ,omitempty"`
	// The lower included K index of the box of the grid in connection         
	LowerK                                                            *int64   `json:"LowerK,omitempty"`
	// The transmissibility multiplier of the connection                       
	TransmissibilityMultiplier                                        *float64 `json:"TransmissibilityMultiplier,omitempty"`
	// The upper included I index of the box of the grid in connection         
	UpperI                                                            *int64   `json:"UpperI,omitempty"`
	// The upper included J index of the box of the grid in connection         
	UpperJ                                                            *int64   `json:"UpperJ,omitempty"`
	// The upper included K index of the box of the grid in connection         
	UpperK                                                            *int64   `json:"UpperK,omitempty"`
}

// Describe a cell which is a part or the whole definition of an aquifer.
type SingleCellAquifer struct {
	// Area of the aquifer.                                                                              
	Area                                                                                        *float64 `json:"Area,omitempty"`
	// Depth of the aquifer                                                                              
	Depth                                                                                       *float64 `json:"Depth,omitempty"`
	// I index of the cell                                                                               
	I                                                                                           *int64   `json:"I,omitempty"`
	// Initial pressure of the aquifer.  Default property, caution if the grid property has got          
	// multi realizations.                                                                               
	InitialPressure                                                                             *float64 `json:"InitialPressure,omitempty"`
	// J index of the cell                                                                               
	J                                                                                           *int64   `json:"J,omitempty"`
	// K index of the cell                                                                               
	K                                                                                           *int64   `json:"K,omitempty"`
	// Length of the aquifer.                                                                            
	Length                                                                                      *float64 `json:"Length,omitempty"`
	// Permeability of the aquifer. Default property, caution if the grid property has got multi         
	// realizations.                                                                                     
	Permeability                                                                                *float64 `json:"Permeability,omitempty"`
	// Porosity of the aquifer.  Default property, caution if the grid property has got multi            
	// realizations.                                                                                     
	Porosity                                                                                    *float64 `json:"Porosity,omitempty"`
	// The grid where the aquifer cell is defined                                                        
	SupportingGridID                                                                            *string  `json:"SupportingGridID,omitempty"`
}

// Definition of a collection of hexahedra which are organized and indexable by means of 3
// (almost orthogonal) directions and called I, J and K.
type IjkGridRepresentation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *AbstractIjkGridPatchClass     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// The group of elements contained by all different kind of grids
//
// Definition of a collection of hexahedra which are organized and indexable by means of 3
// (almost orthogonal) directions and called I, J and K. Only an abstract group type in
// order to be reused in GPGrid.
//
// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
//
// The group of elements which all column grid layers (ijk or unstructured) contain
type AbstractIjkGridPatchClass struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                                
	IndexableElementCount                                                                        []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                 
	//                                                                                                                                          
	// The reference to the EarthModelInterpretation this grid belongs to.                                                                      
	InterpretationID                                                                             *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                  
	InterpretationName                                                                           *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                       
	LocalModelCompoundCRSID                                                                      *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                      
	RealizationIndex                                                                             *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                 
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                   
	// the topology and geometry varies against the time.                                                                                       
	TimeSeries                                                                                   *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// Total count of active cells in the grid. It is an approximation since the real count of                                                  
	// active cells can be modified with some properties.                                                                                       
	ActiveCellCount                                                                              *int64                                         `json:"ActiveCellCount,omitempty"`
	// Indicate if the grid has got some finite element subnodes for defining higher order grid                                                 
	// geometry and properties. This is mainly used in geomechanical context.                                                                   
	HasFiniteElementSubnodes                                                                     *bool                                          `json:"HasFiniteElementSubnodes,omitempty"`
	// Indicate that at least on coordinate of one node of the grid is NaN. It is different than                                                
	// a dead cell which may have a geometry while it is disabled.                                                                              
	HasNaNGeometry                                                                               *bool                                          `json:"HasNaNGeometry,omitempty"`
	// Indicate that the grid has no geometry. It is common when one wants a grid only as a                                                     
	// collection of cell connections (i.e. pipe network).                                                                                      
	HasNoGeometry                                                                                *bool                                          `json:"HasNoGeometry,omitempty"`
	// Reference to the parent grid. If present, it means that this grid is a Local                                                             
	// GridRefinement.                                                                                                                          
	ParentGridID                                                                                 *string                                        `json:"ParentGridID,omitempty"`
	// References to the RockFluid organization interpretations which this grid relates to.                                                     
	RockFluidOrganizationInterpretationIDS                                                       []string                                       `json:"RockFluidOrganizationInterpretationIDS,omitempty"`
	// Allow to link the K layers (or the "geologic k" property for example in case of K                                                        
	// expansion or unstructured grid) of this grid with some stratigraphic units of a                                                          
	// stratigraphic organization.                                                                                                              
	StratigraphicUnits                                                                           *StratigraphicUnits                            `json:"StratigraphicUnits,omitempty"`
	// Indicate if a grid has been topologically expanded in a particular dimension (K                                                          
	// expansion, J expansion, I expansion)                                                                                                     
	ExpansionInDirection                                                                         *ExpansionInDirection                          `json:"ExpansionInDirection,omitempty"`
	// Indicate if at least two adjacent nodes in K Direction are collocated. Also known as                                                     
	// pinched node. Usually occur in erosional context.                                                                                        
	HasCollocatedNodeInKDirection                                                                *bool                                          `json:"HasCollocatedNodeInKDirection,omitempty"`
	// Indicate that it exists at least one gap in the whole K direction of the grid. A gap is                                                  
	// really a hole, it is not a layer of dead cells.                                                                                          
	HasKGaps                                                                                     *bool                                          `json:"HasKGaps,omitempty"`
	// Indicate that it exists at least one gap in the lateral direction of the grid. A gap is                                                  
	// really a hole, it is not a slice of dead cells.                                                                                          
	HasLateralGaps                                                                               *bool                                          `json:"HasLateralGaps,omitempty"`
	// Indicate that the nodes of the grid are given by means of a parameter along the pillar.                                                  
	// Otherwise nodes of the grid are explicitly given by means of an XYZ triplet.                                                             
	HasParametricGeometry                                                                        *bool                                          `json:"HasParametricGeometry,omitempty"`
	// Indicate that the grid contains some split nodes i.e some node which are not on a pillar.                                                
	HasSplitNode                                                                                 *bool                                          `json:"HasSplitNode,omitempty"`
	// Indicate that some of the pillars of the grid are truncated (Fault contact in Y shape for                                                
	// example)                                                                                                                                 
	HasTruncations                                                                               *bool                                          `json:"HasTruncations,omitempty"`
	// Indicate the K direction of the grid : up, down or not monotonic                                                                         
	KDirectionID                                                                                 *string                                        `json:"KDirectionID,omitempty"`
	// Count of cells in the K-direction (aka third and/or slowest and/or vertical direction) in                                                
	// the grid. Must be positive.                                                                                                              
	Nk                                                                                           *int64                                         `json:"Nk,omitempty"`
	// Indicate the most complex pillar shape of a grid : vertical, straight, curved                                                            
	PillarShapeID                                                                                *string                                        `json:"PillarShapeID,omitempty"`
	// TRUE if the grid is periodic in J, i.e., has the topology of a complete 360 degree circle.                                               
	IsRadial                                                                                     *bool                                          `json:"IsRadial,omitempty"`
	// Indicates that the IJK grid is right handed, as determined by the triple product of                                                      
	// tangent vectors in the I, J, and K directions.                                                                                           
	IsRightHanded                                                                                *bool                                          `json:"IsRightHanded,omitempty"`
	// Count of cells in the I-direction (aka first and/or fastest direction) in the grid. Must                                                 
	// be positive.                                                                                                                             
	NI                                                                                           *int64                                         `json:"Ni,omitempty"`
	// Count of cells in the J-direction (aka second direction) in the grid. Must be positive.                                                  
	Nj                                                                                           *int64                                         `json:"Nj,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An interface between two geological objects, such as horizons and faults in the scope of
// a model. It is a surface object. The scope can be widened by establishing a relationship
// to a master-data--BoundaryFeature instance.
type LocalBoundaryFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *LocalBoundaryFeatureData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type LocalBoundaryFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// When populated, the boundary feature has a wider scope and allows boundary feature                                                      
	// correlations across models.                                                                                                             
	BoundaryFeatureID                                                                           *string                                        `json:"BoundaryFeatureID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// This WPC intends to be a placeholder for storing metadata about the CRS in a Reservoir
// study. No attribute is present yet but could be added in next releases. The main intent
// is for now to be able to reference the same CRS (whatever how it is defined) from several
// representations.
type LocalModelCompoundCRS struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *LocalModelCompoundCRSData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type LocalModelCompoundCRSData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A LocalModelFeature is an explicit description of the relationships between geologic
// features such as rock volume features (e.g. stratigraphic units, geobodies, phase unit)
// and boundary features (e.g., genetic, tectonic, and fluid boundaries).
type LocalModelFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *LocalModelFeatureData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type LocalModelFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The scope of this local model feature can be extended by this relationship to a                                                         
	// master-data ModelFeature with wider or global scope.                                                                                    
	ModelFeatureID                                                                              *string                                        `json:"ModelFeatureID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A volume of rock that is identified based on some specific attribute, like its mineral
// content or other physical characteristic. It exists typically in the scope of a model,
// can be associated with a master-data--RockVolumeFeature for regional correlations.
type LocalRockVolumeFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *LocalRockVolumeFeatureData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type LocalRockVolumeFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// When populated, the rock volume feature has a wider scope and allows rock volume feature                                                
	// correlations across models.                                                                                                             
	RockVolumeFeatureID                                                                         *string                                        `json:"RockVolumeFeatureID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// The set of geometries comprising a full seismic transect (referenced through parent-child
// relationships).  This entity encompasses the concept of a logical processed line.  The
// parts comprising it cover things like extensions and boundary crossings.  It is largely a
// data management object to help collect all the geometries pertaining to a transect.  It
// is not needed for interpretation.  The universal WPC Name property is essential for
// describing the principal, preferred line name for the full transect.
type NotionalSeismicLine struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *NotionalSeismicLineData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type NotionalSeismicLineData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Segment names and aliases for the Line.                                                                                                 
	LineNames                                                                                   []string                                       `json:"LineNames,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Pore Pressure and Fracture (Pressure) Gradient (PPFG) data describes the predicted
// (Pre-drill) and actual (Post-drill) depth-related variations in overburden stress, pore
// pressure, fracture pressure and minimum principal stress within a wellbore and conveys
// the range of uncertainty in these values given various plausible geological scenarios.
// PPFG predictions are fundamental inputs for well design and construction and estimates of
// pore and fracture pressure are typically provided to the well planning and execution
// teams.
type PPFGDataset struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PPFGDatasetData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type PPFGDatasetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// The characters that represent absent curve values in this data set, for example  '-999',                                                 
	// 'NULL', '0', etc. Typically for legacy data                                                                                              
	AbsentValueCharacters                                                                        *string                                        `json:"AbsentValueCharacters,omitempty"`
	// Open comments from the calculation team                                                                                                  
	Comment                                                                                      *string                                        `json:"Comment,omitempty"`
	// ID that reflects the context of the PPFG  data set, for example 'Pre-Drill' or                                                           
	// 'Post-Drill'                                                                                                                             
	ContextTypeID                                                                                *string                                        `json:"ContextTypeID,omitempty"`
	// Array of curve that constitutes the whole PPFG Dataset                                                                                   
	Curves                                                                                       []PurpleCurves                                 `json:"Curves,omitempty"`
	// Free text to describe the type of gauge used for the pressure measurement                                                                
	GaugeType                                                                                    *string                                        `json:"GaugeType,omitempty"`
	// IDs of the offset Wellbores included in the context and calculations of this PPFG data set                                               
	OffsetWellboreIDs                                                                            []string                                       `json:"OffsetWellboreIDs,omitempty"`
	// ID of the PPFG curve that is the primary reference or index. Derived from the PPFG curve                                                 
	// ID                                                                                                                                       
	PrimaryReferenceCurveID                                                                      *string                                        `json:"PrimaryReferenceCurveID,omitempty"`
	// The type of the primary reference, for example 'TVDSS',  'MD' , 'TWT'                                                                    
	PrimaryReferenceType                                                                         *string                                        `json:"PrimaryReferenceType,omitempty"`
	// The date that the PPFG data set was created by the PPFG practitioner or contractor                                                       
	RecordDate                                                                                   *time.Time                                     `json:"RecordDate,omitempty"`
	// Id of the Reference WellTrajectory used for TVD's calculation                                                                            
	ReferenceWellTrajectoryID                                                                    *string                                        `json:"ReferenceWellTrajectoryID,omitempty"`
	// ID of the service Company that acquired the PPFG                                                                                         
	ServiceCompanyID                                                                             *string                                        `json:"ServiceCompanyID,omitempty"`
	// Tectonic Scenario Setting for Planning and Pore Pressure Practitioners. Built into                                                       
	// interpretive curves. Can be, for example 'Strike Slip'                                                                                   
	TectonicSetting                                                                              *string                                        `json:"TectonicSetting,omitempty"`
	// The Vertical Measurement for the Wellbore identified which defines the vertical reference                                                
	// pressure datum for the related PPFG curves in this data set. The pressure datum is used                                                  
	// to calculate the average pressure gradient in                                                                                            
	VerticalMeasurement                                                                          *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// ID from the Wellbore where the PPFG Work Product Component was recorded                                                                  
	WellboreID                                                                                   *string                                        `json:"WellboreID,omitempty"`
	// ID from the Well where the PPFG Work Product Component was recorded                                                                      
	WellID                                                                                       *string                                        `json:"WellID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Array of curve that constitutes the whole PPFG Dataset
type PurpleCurves struct {
	// IDs of the type and level of processing that has been applied to the curve. An array of           
	// curve processing operations that have been applied, for example 'Smoothed', 'Calibrated',         
	// etc                                                                                               
	CurveDataProcessingTypeIDs                                                                  []string `json:"CurveDataProcessingTypeIDs,omitempty"`
	// ID of the PPFG Curve Family of the PPFG quantity measured, for example 'Pore Pressure             
	// from Corrected Drilling Exponent'. An individual curve that belongs to a Main Family              
	CurveFamilyID                                                                               *string  `json:"CurveFamilyID,omitempty"`
	// ID of the mnemonic of the Curve Family which is the value as received either from                 
	// external providers or from internal processing team, for example 'PP DxC'                         
	CurveFamilyMnemonicID                                                                       *string  `json:"CurveFamilyMnemonicID,omitempty"`
	// The ID of the PPFG Curve                                                                          
	CurveID                                                                                     *string  `json:"CurveID,omitempty"`
	// ID of the lithological unit represented by the curve                                              
	CurveLithologyID                                                                            *string  `json:"CurveLithologyID,omitempty"`
	// ID of the Main Family Type of the PPFG quantity measured, for example 'Pore Pressure'.            
	// Primarily used for high level curve classification                                                
	CurveMainFamilyID                                                                           *string  `json:"CurveMainFamilyID,omitempty"`
	// The original or as supplied PPFG curve name. Intended to hold historical or legacy                
	// information                                                                                       
	CurveName                                                                                   *string  `json:"CurveName,omitempty"`
	// ID of the PPFG Curve probability, for example 'Most Likely Case' and 'P50'                        
	CurveProbabilityID                                                                          *string  `json:"CurveProbabilityID,omitempty"`
	// ID of the empirical calibrated model used for pressure calculations from a petrophysical          
	// curve (sonic or resistivity logs), for example 'Eaton' and  'Bowers',...                          
	CurveTransformModelTypeID                                                                   *string  `json:"CurveTransformModelTypeID,omitempty"`
	// Unit of Measure of the Physical Quantity Measured by the curve. An ID to relevant unit of         
	// measure reference                                                                                 
	CurveUOM                                                                                    *string  `json:"CurveUOM,omitempty"`
}

// A persisted collection of objects ingested in the data platform. The collection can
// aggregate objects of different nature, including master data, work-product-components and
// reference data. A PersistedCollection can also contain other PersistedCollection(s).
type PersistedCollection struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PersistedCollectionData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type PersistedCollectionData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	//                                                                                                                                         
	// Describes the Collection (free string)                                                                                                  
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The author responsible to the collection content.                                                                                       
	Author                                                                                      *string                                        `json:"Author,omitempty"`
	// If the Collection is homogeneous, this indicates the single data schema Kind within the                                                 
	// collection (without the semantic version number). If the collection is heterogeneous                                                    
	// (collecting multiple data types) leave this property empty.                                                                             
	HomogeneousMemberKind                                                                       *string                                        `json:"HomogeneousMemberKind,omitempty"`
	// List of objects part of the Collection, defined as an array of the member IDs                                                           
	MemberIDs                                                                                   []string                                       `json:"MemberIDs,omitempty"`
	// If this PersistedCollection is nested within another PersistedCollection, this property                                                 
	// points to the Parent Collection ID. Otherwise, leave it absent.                                                                         
	ParentCollectionID                                                                          *string                                        `json:"ParentCollectionID,omitempty"`
	// Purpose of the Collection                                                                                                               
	PurposeID                                                                                   *string                                        `json:"PurposeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Describes the sequence of expected lithologic intervals for the Wellbore
type PlannedLithology struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PlannedLithologyData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type PlannedLithologyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Set of geology and drilling information records for the wellbore. This is an API                                                        
	// "data-node" query parameter for growing objects. See the relevant API specification for                                                 
	// the query behavior related to this element.                                                                                             
	GeologyIntervals                                                                            []GeologyInterval                              `json:"GeologyIntervals,omitempty"`
	// The maximum mdTop value for this object. This is an API "structural-range" query                                                        
	// parameter for growing objects. See the relevant API specification for the query behavior                                                
	// related to this element.                                                                                                                
	MeasuredDepthBase                                                                           *float64                                       `json:"MeasuredDepthBase,omitempty"`
	// The minimum mdTop value for this object. This is an API "structural-range" query                                                        
	// parameter for growing objects. See the relevant API specification for the query behavior                                                
	// related to this element.                                                                                                                
	MeasuredDepthTop                                                                            *float64                                       `json:"MeasuredDepthTop,omitempty"`
	// Reference to the Wellbore                                                                                                               
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	// Human recognizable context for the wellbore that contains the mud log                                                                   
	WellboreName                                                                                *string                                        `json:"WellboreName,omitempty"`
	// Reference to the Well                                                                                                                   
	WellID                                                                                      string                                         `json:"WellID"`
	// Human recognizable context for the well that contains the wellbore.                                                                     
	WellName                                                                                    *string                                        `json:"WellName,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Geology Interval Component Schema
type GeologyInterval struct {
	// Chronostratigraphic classification.                                                
	ChronostratigraphicIDs                                                       []string `json:"ChronostratigraphicIDs,omitempty"`
	// Description of item and details.                                                   
	Description                                                                  *string  `json:"Description,omitempty"`
	// Measured depth at base of interval.                                                
	IntervalMeasuredDepthBase                                                    float64  `json:"IntervalMeasuredDepthBase"`
	// Measured depth at top of interval.                                                 
	IntervalMeasuredDepthTop                                                     float64  `json:"IntervalMeasuredDepthTop"`
	// True vertical depth at base of interval.                                           
	IntervalTVDBase                                                              *float64 `json:"IntervalTVDBase,omitempty"`
	// True vertical depth at top of the section.                                         
	IntervalTVDTop                                                               *float64 `json:"IntervalTVDTop,omitempty"`
	// The geological name for the type of lithology from the enum table listing          
	// a                                                                                  
	// subset of the OneGeology / CGI defined formation types.                            
	LithologyTypeID                                                              string   `json:"LithologyTypeID"`
	// Array of lithological types - allowing for one or more lithological types.         
	LithologyTypeIDs                                                             []string `json:"LithologyTypeIDs,omitempty"`
	// Name of lithostratigraphy, regionally dependent.                                   
	LithostratigraphicIDs                                                        []string `json:"LithostratigraphicIDs,omitempty"`
	// Description of the Reference Datum used for Depth Measurement                      
	ReferenceDatum                                                               *string  `json:"ReferenceDatum,omitempty"`
	// Identifier of the reference trajectory for TVD measurements                        
	ReferenceWellboreTrajectoryID                                                *string  `json:"ReferenceWellboreTrajectoryID,omitempty"`
}

// Interferometric Synthetic Aperture Radar (InSAR) is a representation of surface or ground
// deformation from satellite radar image data over time
type ProcessedInSAR struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ProcessedInSARData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type ProcessedInSARData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// An array which lists the start and end date of the acquisition data which is used as the                                                
	// input for the processing                                                                                                                
	AcquisitionDateRanges                                                                       []PurpleAcquisitionDateRanges                  `json:"AcquisitionDateRanges,omitempty"`
	// Acquisition site for the data capture area which is not any of the Country, Field or                                                    
	// Basin properties which are all captured within the Geocontext for a work product                                                        
	// component. The site should be used as an additional identifier for items such as                                                        
	// prominent landmarks, facilities, processing plant or structures that identify the area of                                               
	// interest.                                                                                                                               
	AcquisitionSite                                                                             *string                                        `json:"AcquisitionSite,omitempty"`
	// Use or purpose of data acquisition. For example: Biomass estimation, Ship Detection,                                                    
	// Vegetation monitoring, Geomorphology, CCS Storage monitoring, Oil & Gas field injection,                                                
	// Wellbore Casing Failure                                                                                                                 
	ApplicationID                                                                               *string                                        `json:"ApplicationID,omitempty"`
	// Image frequency band or resolution. For example: C / X / L / P. This is related to the                                                  
	// wavelength. (See data.WavelengthID.)                                                                                                    
	FrequencyBandID                                                                             *string                                        `json:"FrequencyBandID,omitempty"`
	// Horizontal resolution of the image. For example 1 metre or 10 meters                                                                    
	GroundResolution                                                                            *float64                                       `json:"GroundResolution,omitempty"`
	// The area as unit of measure covered by the images which are input for the processing.                                                   
	// Must be the same unit as the Measure point Density. Interdependent with number of                                                       
	// measured points and  measure point density                                                                                              
	ImageArea                                                                                   *float64                                       `json:"ImageArea,omitempty"`
	// Imaging mode utilised. For example: Stripmap, Spotlight, ScanSAR, etc                                                                   
	ImagingModeID                                                                               *string                                        `json:"ImagingModeID,omitempty"`
	// The single common angle or line of sight angle of the radiation on a flat horizontal                                                    
	// terrain.                                                                                                                                
	IncidenceAngle                                                                              *float64                                       `json:"IncidenceAngle,omitempty"`
	// Number of measured points in an Image Area. Interdependent with Image Area and Measure                                                  
	// Point density.                                                                                                                          
	MeasuredPoints                                                                              *int64                                         `json:"MeasuredPoints,omitempty"`
	// Density of measured points in unit of measure. Must be the same unit as the Image Area.                                                 
	// Interdependent with image area and number of measured points                                                                            
	MeasurePointDensity                                                                         *float64                                       `json:"MeasurePointDensity,omitempty"`
	// Number of Images which have been captured in the time/date range which are used as the                                                  
	// input for processing                                                                                                                    
	NumberImages                                                                                *int64                                         `json:"NumberImages,omitempty"`
	// Polarisation captures the longitudinal wave in a single plane. Two are commonly used,                                                   
	// Horizontal (H), Vertical (V)  and combinations of the two. One represents the                                                           
	// transmission and the  other the receiver. For example: VV, VH, HH, HV                                                                   
	PolarisationID                                                                              *string                                        `json:"PolarisationID,omitempty"`
	// The type of processing used to produce the data set. For example: Coherence, Multilook,                                                 
	// Interferometric SAR (InSAR), Differential (DInSAR), Polarimetric SAR (PolSAR),                                                          
	// Polarimetric Interferometric SAR (PolInSAR), etc                                                                                        
	ProcessingTypeID                                                                            *string                                        `json:"ProcessingTypeID,omitempty"`
	// An association to the raw acquired InSAR work product component this image is derived                                                   
	RawInSARID                                                                                  *string                                        `json:"RawInSARID,omitempty"`
	// Unique or distinctive Reference Number, Job Number, File Number, Identifier, Label, Name,                                               
	// etc as indicated on a report, file, etc.                                                                                                
	// Use this to allow correlation of the data back to the original source document, file, etc                                               
	ReferenceIdentifier                                                                         *string                                        `json:"ReferenceIdentifier,omitempty"`
	// Geometry of the satellite which indicates the orbital path. For example in a Ascending                                                  
	// geometry  the satellite is travelling North and imaging East. Descending is moving South                                                
	// and imaging West                                                                                                                        
	SatelliteGeometryID                                                                         *string                                        `json:"SatelliteGeometryID,omitempty"`
	// The name of the Satellite Mission that the individual Satellite belongs to. (See                                                        
	// data.SatelliteName.) Examples include: Radarsat, Sentinel, COSMO-SkyMed, Kompsat                                                        
	SatelliteMissionID                                                                          *string                                        `json:"SatelliteMissionID,omitempty"`
	// Name of the individual satellite belonging to the Satellite Mission. (See                                                               
	// data.SatelliteMissionID.)                                                                                                               
	// Examples include: RADARSAT-1, SENTINEL-1C,  SENTINEL-1B, COSMO-4, CSG-3, KOMPSAT-6,                                                     
	// RISAT-2B                                                                                                                                
	SatelliteName                                                                               *string                                        `json:"SatelliteName,omitempty"`
	// Time for the satellite to complete orbit and revisit the image area reference point. Unit                                               
	// of measure is time (Seconds)                                                                                                            
	SatelliteRevisitTime                                                                        *float64                                       `json:"SatelliteRevisitTime,omitempty"`
	// Company or organisation who processed the data                                                                                          
	ServiceCompanyID                                                                            *string                                        `json:"ServiceCompanyID,omitempty"`
	// The count of the surface reflectors in the image                                                                                        
	SurfaceReflectorCount                                                                       *int64                                         `json:"SurfaceReflectorCount,omitempty"`
	// The wavelength of the radar. This is related to the Frequency Band property (see                                                        
	// data.FrequencyBandID). Examples include: 37.5, 50.5, 75                                                                                 
	Wavelength                                                                                  *float64                                       `json:"Wavelength,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Defines the start and end date of the processing completed on the dataset
type PurpleAcquisitionDateRanges struct {
	// end date and time of images used  for processing             
	EndDate                                              *time.Time `json:"EndDate,omitempty"`
	// Start date and time of images used  for processing           
	StartDate                                            *time.Time `json:"StartDate,omitempty"`
}

// The result of activities or events that result in production metric values, the distinct
// instances of which reside within the DDMS and/or dataset itself.
type ProductionValues struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ProductionValuesData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type ProductionValuesData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Identifier of the entity capturing the reason why a production amendment was posted.                                                    
	AmendReasonID                                                                               *string                                        `json:"AmendReasonID,omitempty"`
	// Describes the interim or final stages of movement, or use, of the products within the                                                   
	// value stream.                                                                                                                           
	DispositionIDs                                                                              []string                                       `json:"DispositionIDs,omitempty"`
	// The explicit duration of activity within the nominal reporting period.                                                                  
	DurationContextIDs                                                                          []string                                       `json:"DurationContextIDs,omitempty"`
	// The last date and time for the presence of any production related data in the associated                                                
	// datasets for the work product component. If production is ongoing this value is to remain                                               
	// null.                                                                                                                                   
	EndDateTime                                                                                 *string                                        `json:"EndDateTime,omitempty"`
	// Used to capture the conditions at which measurement have been made/computed                                                             
	MeasurementConditions                                                                       *AbstractPTCondition                           `json:"MeasurementConditions,omitempty"`
	// The nominal time periods covered by the records. Examples include Day, Month, Year.                                                     
	NominalPeriodIDs                                                                            []string                                       `json:"NominalPeriodIDs"`
	// Used to capture the interval of observations (forecasted estimations or measurements),                                                  
	// such as seconds, minutes, hours as well as day, week, month….                                                                           
	ObservationInterval                                                                         *string                                        `json:"ObservationInterval,omitempty"`
	// The kinds of fluids or substances values are recorded for.                                                                              
	ProductIDs                                                                                  []string                                       `json:"ProductIDs"`
	// Table describing the observations (estimations or measurements) captured from this WPC.                                                 
	// It can either be restricted to "Properties Descriptions" only when we have a separated                                                  
	// content storage OR used to capture the stream content itself whenever required                                                          
	ProductionValuesObservationDescription                                                      *AbstractColumnBasedTable                      `json:"ProductionValuesObservationDescription,omitempty"`
	// The kinds of quantities being recorded for the products.                                                                                
	PropertyIDs                                                                                 []string                                       `json:"PropertyIDs"`
	// The context as to how the values were captured or created and the appropriateness of                                                    
	// their use for analytics and reporting.                                                                                                  
	QuantityMethodIDs                                                                           []string                                       `json:"QuantityMethodIDs,omitempty"`
	// Parent reporting entity which provides the reference to the master entity production                                                    
	// values are recording against, and optional parent entity from which values may be                                                       
	// allocated down from.                                                                                                                    
	ReportingEntityID                                                                           string                                         `json:"ReportingEntityID"`
	// Identifier of the Model Deck used to run forecasts                                                                                      
	ReservoirModelScenarioID                                                                    *string                                        `json:"ReservoirModelScenarioID,omitempty"`
	// The start date and time for the presence of any production related data in the associated                                               
	// datasets for the work product component.                                                                                                
	StartDateTime                                                                               string                                         `json:"StartDateTime"`
	// Array of IDs to the event based entities which describe the details of the occurrences                                                  
	// which resulted in the recorded production values.                                                                                       
	ValueContexts                                                                               []AbstractDowntimeContext                      `json:"ValueContexts,omitempty"`
	// The directions of flow into, or out of the entity to which the values recorded are                                                      
	// associated.                                                                                                                             
	VolumeFlowMeasurementTypeIDs                                                                []string                                       `json:"VolumeFlowMeasurementTypeIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Table describing the observations (estimations or measurements) captured from this WPC.
// It can either be restricted to "Properties Descriptions" only when we have a separated
// content storage OR used to capture the stream content itself whenever required
//
// The ColumnBasedTable is a set of columns, which have equal length (data.ColumnSize)
// included by types carrying embedded table properties. Columns have a Property Kind,
// UnitOfMeasure and Facet. There are KeyColumns (index columns) and Columns (for look-up
// values). Examples are KrPc, PVT and Facies tables.
//
// The column based table with the estimated volumes.
//
// An embedded ColumnBasedTable containing the Measurements within the period that are
// required (and only if required) for indexing
//
// An embedded ColumnBasedTable with the properties including their values associated to the
// intervals in data.Intervals[]. The association is done by array index.
//
// An embedded ColumnBasedTable with the properties including their values associated to the
// intervals in data.Markers[]. The association is done by array index.
type AbstractColumnBasedTable struct {
	// Optional relationship to a ColumnBasedTableTemplate record, which defines the KeyColumn                                                      
	// and Column definitions. Some columns defined in the template may be omitted if not                                                           
	// contained in the ColumnValues, but the ones used must be exactly identical to the                                                            
	// template's column definitions. If the ColumnBasedTableTemplateID is populated, the                                                           
	// ColumnBasedTableType is expected to be ColumnBasedTableTemplateControlled.                                                                   
	ColumnBasedTableTemplateID                                                                  *string                                             `json:"ColumnBasedTableTemplateID,omitempty"`
	// Quickly indicate the type of the column based table (KrPc, PVT, Facies, ...) and its                                                         
	// standard columns definition. It is supposed to be used when you don't use KeyColumns                                                         
	// neither Columns as attributes of this WPC.                                                                                                   
	ColumnBasedTableType                                                                        *string                                             `json:"ColumnBasedTableType,omitempty"`
	// A common column storing values of a particular property kind. Do not use this attribute                                                      
	// if you want to follow a given ColumnBasedTableType.                                                                                          
	Columns                                                                                     []AbstractReferencePropertyType                     `json:"Columns,omitempty"`
	// The count of elements in each column, i.e. the number of rows in the ColumnBasedTable.                                                       
	// All columns must have the same size, including placeholder values for the undefined cells                                                    
	// identified by ColumnValues[].UndefinedValueRows[].                                                                                           
	ColumnSize                                                                                  *int64                                              `json:"ColumnSize,omitempty"`
	// First column values are related to first key column, second column values are related to                                                     
	// the second key column, etc…                                                                                                                  
	// Column values at index KeyColumns count are related to first (non key) column, Column                                                        
	// values at index KeyColumns count + 1 are related to second (non key) column, etc...                                                          
	ColumnValues                                                                                []ProductionValuesObservationDescriptionColumnValue `json:"ColumnValues,omitempty"`
	// A column whose values are considered as keys/indices. Do not use this attribute if you                                                       
	// want to follow a given ColumnBasedTableType.                                                                                                 
	KeyColumns                                                                                  []AbstractReferencePropertyType                     `json:"KeyColumns,omitempty"`
}

// Value of the column. Generally only one of the attribute should be instantiated.
type ProductionValuesObservationDescriptionColumnValue struct {
	// A column of only boolean values                                                               
	BooleanColumn                                                                          []bool    `json:"BooleanColumn,omitempty"`
	// A column of only integer values                                                               
	IntegerColumn                                                                          []int64   `json:"IntegerColumn,omitempty"`
	// A column of only number values                                                                
	NumberColumn                                                                           []float64 `json:"NumberColumn,omitempty"`
	// A column of only string values                                                                
	StringColumn                                                                           []string  `json:"StringColumn,omitempty"`
	// The row indexes for which the values are flagged as undefined. The first element has          
	// index 0.                                                                                      
	UndefinedValueRows                                                                     []int64   `json:"UndefinedValueRows,omitempty"`
}

// A single, typed downtime event reference, which is 'abstracted' to
// AbstractProductionValueContext and then aggregated by ValueContexts properties.
type AbstractDowntimeContext struct {
	// The fixed type 'Downtime Event' for this AbstractDowntimeContext            
	ContextType                                                        ContextType `json:"ContextType"`
	// Reference to DowntimeEvent.                                                 
	DowntimeEventID                                                    string      `json:"DowntimeEventID"`
}

// A portion of a reservoir rock which is differentiated laterally from other portions of
// the same reservoir stratum. This differentiation could be due to being in a different
// fault block or a different channel or other stratigraphic or structural aspect. A
// reservoir compartment may or may not be in contact with other reservoir compartments.
type ReservoirCompartmentInterpretation struct {
	// The access control tags associated with this entity.                                                                              
	ACL                                                                                          AccessControlList                       `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                
	// derived.                                                                                                                          
	Ancestry                                                                                     *ParentList                             `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                          
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                             
	CreateTime                                                                                   *time.Time                              `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                           
	// System.                                                                                                                           
	CreateUser                                                                                   *string                                 `json:"createUser,omitempty"`
	Data                                                                                         *ReservoirCompartmentInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                            
	// version.                                                                                                                          
	ID                                                                                           *string                                 `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                      
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                          
	// scheme follows the semantic versioning, https://semver.org/.                                                                      
	Kind                                                                                         string                                  `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                            
	// legal tags is managed by the Compliance Service.                                                                                  
	Legal                                                                                        LegalMetaData                           `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                           
	// definitions.                                                                                                                      
	Meta                                                                                         []FrameOfReferenceMetaDataItem          `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                          
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                 
	ModifyTime                                                                                   *time.Time                              `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                        
	ModifyUser                                                                                   *string                                 `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                           
	// as keys and values.                                                                                                               
	Tags                                                                                         map[string]string                       `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                   
	Version                                                                                      *int64                                  `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type ReservoirCompartmentInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// Reference to the Feature this Interpretation refers to.                                                                                 
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// References to the surfaces which delimit the reservoir compartment.                                                                     
	BoundaryIDs                                                                                 []string                                       `json:"BoundaryIDs,omitempty"`
	// A collection of subdivisions of a reservoir compartment generally corresponding to one                                                  
	// geologic unit.                                                                                                                          
	ReservoirCompartmentUnits                                                                   []ReservoirCompartmentUnit                     `json:"ReservoirCompartmentUnits,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A subdivision of a reservoir compartment generally corresponding to one geologic unit.
type ReservoirCompartmentUnit struct {
	// The stratigraphic or the geobody associated to this Reservoir compartment unit.                
	GeologicUnitID                                                                           *string  `json:"GeologicUnitID,omitempty"`
	// Identifier of the reservoir compartment unit. It should be an UUID ideally. Used to be         
	// able to easier reference a reservoir compartment from other WPC.                               
	Identifier                                                                               *string  `json:"Identifier,omitempty"`
	// The rock fluid unit which are associated to this Reservoir compartment unit.                   
	RockFluidUnitIDs                                                                         []string `json:"RockFluidUnitIDs,omitempty"`
}

// Details on hydrocarbons estimated in place or estimated ultimate technical recoverables
// at some reservoir entity level. The scope is given by the related ParentObjectID, which
// is either a Field, Reservoir or ReservoirSegment.
type ReservoirEstimatedVolumes struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ReservoirEstimatedVolumesData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type ReservoirEstimatedVolumesData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Year for which the estimation of volumes is effective.                                                                                  
	EffectiveEstimationYear                                                                     *string                                        `json:"EffectiveEstimationYear,omitempty"`
	// The discriminator type references scoping the dataset to either Estimated In-Place                                                      
	// Volumes or Estimated Ultimate Recoverable Volumes.                                                                                      
	EstimatedVolumeTypeID                                                                       string                                         `json:"EstimatedVolumeTypeID"`
	// Date the estimation of volumes were run.                                                                                                
	EstimationDate                                                                              *string                                        `json:"EstimationDate,omitempty"`
	// A name to describe the set of estimated volumes.                                                                                        
	EstimationName                                                                              string                                         `json:"EstimationName"`
	// The types of hydrocarbons present in the reservoir. When there is only one value                                                        
	// specified, it represents the dominant hydrocarbon present. When multiple values are                                                     
	// specified, the first value represents the dominant hydrocarbon, the next value represents                                               
	// the secondary, and so on.                                                                                                               
	HydrocarbonTypeIDs                                                                          []string                                       `json:"HydrocarbonTypeIDs,omitempty"`
	// Identifier of the parent object those estimations are computed for (Field, Reservoir,                                                   
	// Reservoir Segment)                                                                                                                      
	ParentObjectID                                                                              *string                                        `json:"ParentObjectID,omitempty"`
	// The column based table with the estimated volumes.                                                                                      
	Volumes                                                                                     *AbstractColumnBasedTable                      `json:"Volumes,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Represents a comprehensive set of objects – aiming to represent a specific model
// hypothesis from a real studied reservoir context
type ReservoirModelScenario struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ReservoirModelScenarioData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type ReservoirModelScenarioData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Identifier of the head Earth Model Entity this scenario is described by.                                                                
	EarthModelID                                                                                *string                                        `json:"EarthModelID,omitempty"`
	// Name of the model scenario                                                                                                              
	ModelName                                                                                   string                                         `json:"ModelName"`
	// Free text to describe shortly the key hypothesis if this specific model. Should be used                                                 
	// to capture rationale to create this scenario.                                                                                           
	ModelReasonDescription                                                                      *string                                        `json:"ModelReasonDescription,omitempty"`
	// Version of the iterative scenario                                                                                                       
	ModelVersionNumber                                                                          float64                                        `json:"ModelVersionNumber"`
	// Identifier of the head "Reservoir" object this model is referring to                                                                    
	ReservoirID                                                                                 string                                         `json:"ReservoirID"`
	// Identifier of the set of reservoir segments this model is encapsulating.                                                                
	ReservoirSegmentCollectionID                                                                *string                                        `json:"ReservoirSegmentCollectionID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A collection of RockFluid unit interpretations which are part of a same organization i.e.
// which are inter related.
type RockFluidOrganizationInterpretation struct {
	// The access control tags associated with this entity.                                                                               
	ACL                                                                                          AccessControlList                        `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                 
	// derived.                                                                                                                           
	Ancestry                                                                                     *ParentList                              `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                           
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                              
	CreateTime                                                                                   *time.Time                               `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                            
	// System.                                                                                                                            
	CreateUser                                                                                   *string                                  `json:"createUser,omitempty"`
	Data                                                                                         *RockFluidOrganizationInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                             
	// version.                                                                                                                           
	ID                                                                                           *string                                  `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                       
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                           
	// scheme follows the semantic versioning, https://semver.org/.                                                                       
	Kind                                                                                         string                                   `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                             
	// legal tags is managed by the Compliance Service.                                                                                   
	Legal                                                                                        LegalMetaData                            `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                            
	// definitions.                                                                                                                       
	Meta                                                                                         []FrameOfReferenceMetaDataItem           `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                           
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                  
	ModifyTime                                                                                   *time.Time                               `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                         
	ModifyUser                                                                                   *string                                  `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                            
	// as keys and values.                                                                                                                
	Tags                                                                                         map[string]string                        `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                    
	Version                                                                                      *int64                                   `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type RockFluidOrganizationInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// Reference to the Feature this Interpretation refers to                                                                                  
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	//                                                                                                                                         
	// Name of the feature this Interpretation refers to                                                                                       
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// List of RockFluidUnit interpretation parts of the Collection, defined as an array of the                                                
	// member IDs                                                                                                                              
	MemberIDs                                                                                   []string                                       `json:"MemberIDs"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A type of rock fluid feature-interpretation , this class identifies a rock fluid feature
// by its phase.
type RockFluidUnitInterpretation struct {
	// The access control tags associated with this entity.                                                                       
	ACL                                                                                          AccessControlList                `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                         
	// derived.                                                                                                                   
	Ancestry                                                                                     *ParentList                      `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                   
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                      
	CreateTime                                                                                   *time.Time                       `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                    
	// System.                                                                                                                    
	CreateUser                                                                                   *string                          `json:"createUser,omitempty"`
	Data                                                                                         *RockFluidUnitInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                     
	// version.                                                                                                                   
	ID                                                                                           *string                          `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                               
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                   
	// scheme follows the semantic versioning, https://semver.org/.                                                               
	Kind                                                                                         string                           `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                     
	// legal tags is managed by the Compliance Service.                                                                           
	Legal                                                                                        LegalMetaData                    `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                    
	// definitions.                                                                                                               
	Meta                                                                                         []FrameOfReferenceMetaDataItem   `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                   
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                          
	ModifyTime                                                                                   *time.Time                       `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                 
	ModifyUser                                                                                   *string                          `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                    
	// as keys and values.                                                                                                        
	Tags                                                                                         map[string]string                `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                            
	Version                                                                                      *int64                           `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// Common properties for entities describing an opinion of a volume-based geologic feature
// or unit.
//
// The group of properties shared by different kinds of interpretations
type RockFluidUnitInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// The relationship to the DepositionalEnvironment reference-data record.                                                                   
	DepositionalEnvironmentID                                                                    *string                                        `json:"DepositionalEnvironmentID,omitempty"`
	// In addition to DepositionalEnvironmentID, this relation to a DepositionalSubEnvironment                                                  
	// reference-data record further specifies the overall depositional environment.                                                            
	DepositionalSubEnvironmentID                                                                 *string                                        `json:"DepositionalSubEnvironmentID,omitempty"`
	// The relationship to a GeologicUnitShapeType like sheet, dyke, dome, mushroom, channel and                                                
	// more.                                                                                                                                    
	GeologicUnitShapeTypeID                                                                      *string                                        `json:"GeologicUnitShapeTypeID,omitempty"`
	// Corresponding to Energistics GeologicUnitMaterialEmplacement 'intrusive' and                                                             
	// 'non-intrusive'.                                                                                                                         
	IsIntrusive                                                                                  *bool                                          `json:"IsIntrusive,omitempty"`
	// Optionally, one ore more LithologyQualifiers further detailing the LithologyType via                                                     
	// LithologyTypeID.                                                                                                                         
	LithologyQualifierIDs                                                                        []string                                       `json:"LithologyQualifierIDs,omitempty"`
	// The relationship to a LithologyType, corresponding to Energistics GeologicUnitComposition.                                               
	LithologyTypeID                                                                              *string                                        `json:"LithologyTypeID,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                           
	DomainTypeID                                                                                 *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                  
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                     
	//                                                                                                                                          
	// The reference to a local rock volume feature, with which this interpretation is                                                          
	// associated.                                                                                                                              
	FeatureID                                                                                    *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                         
	FeatureName                                                                                  *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                 
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	MeanPossibleAge                                                                              *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	OlderPossibleAge                                                                             *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                 
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                  
	// to normalization.                                                                                                                        
	YoungerPossibleAge                                                                           *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// The reference to the fluid phase type                                                                                                    
	FluidPhaseTypeID                                                                             *string                                        `json:"FluidPhaseTypeID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// DEPRECATED: Please use osdu:wks:work-product-component--SampleImage:1.0.0 or the latest
// version of SampleImage instead. An image taken of a rock sample such as a core, sidewall
// core or thin section slide. An image could be a photograph, scan, etc representing a
// visual representation of the rock sample.
type RockImage struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RockImageData                 `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type RockImageData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The date the image was originally taken or acquired                                                                                     
	AcquisitionDate                                                                             *string                                        `json:"AcquisitionDate,omitempty"`
	// The measured base depth in a wellbore relevant to the image. For a singular point depth                                                 
	// the top and base depth should be the same                                                                                               
	BaseDepthMeasuredDepth                                                                      *float64                                       `json:"BaseDepthMeasuredDepth,omitempty"`
	// The associated coring activity. Optional relationship if RockSampleID is populated and                                                  
	// CoringID is populated                                                                                                                   
	CoringID                                                                                    *string                                        `json:"CoringID,omitempty"`
	// The WellLog representation carrying the preferred sample-depth to logging-depth                                                         
	// correction or mapping                                                                                                                   
	DepthShiftID                                                                                *string                                        `json:"DepthShiftID,omitempty"`
	// The interval included in the image. Typically used for conventional core. For example 1m                                                
	// or 4m                                                                                                                                   
	FormatInterval                                                                              *float64                                       `json:"FormatInterval,omitempty"`
	// The type of lighting conditions captured in the image. Examples include Ultraviolet,                                                    
	// White, Natural, etc                                                                                                                     
	LightingConditionID                                                                         *string                                        `json:"LightingConditionID,omitempty"`
	// Magnification of the image                                                                                                              
	Magnification                                                                               *float64                                       `json:"Magnification,omitempty"`
	// Unique or Distinctive Image Reference Number, Job Number, File Number, Identifier, Label,                                               
	// Name, etc. Typically given by the original image acquisition supplier and as indicated in                                               
	// the report or file. Use this attribute to allow correlation back to the original source                                                 
	// document, file, etc.                                                                                                                    
	ReferenceIdentifier                                                                         *string                                        `json:"ReferenceIdentifier,omitempty"`
	// Remarks regarding the image acquisition and or processing environment or parameters                                                     
	Remark                                                                                      *string                                        `json:"Remark,omitempty"`
	// The type of rock image. Examples include Photograph, Computed Tomography (CT), Thin                                                     
	// Section, etc                                                                                                                            
	RockImageTypeID                                                                             *string                                        `json:"RockImageTypeID,omitempty"`
	// The rock sample that this image relates to. One or many RockSample are permitted.                                                       
	// Preferred relationship                                                                                                                  
	RockSampleIDs                                                                               []string                                       `json:"RockSampleIDs,omitempty"`
	// The organisation or contractor that originally took or acquired the image                                                               
	ServiceCompanyID                                                                            *string                                        `json:"ServiceCompanyID,omitempty"`
	// A free text array to capture the image file header or image parameters for knowledge                                                    
	// capture, index and search purposes. Header values can be extracted from, e.g.,                                                          
	// Exchangeable Image File Format (EXIF) properties, Digital Imaging and Communications in                                                 
	// Medicine (DICOM) header properties (such as x-ray intensity) and etc.                                                                   
	TextualHeader                                                                               []string                                       `json:"TextualHeader,omitempty"`
	// The measured top depth in a wellbore relevant to the image. For a singular point depth                                                  
	// the top and base depth should be the same                                                                                               
	TopDepthMeasuredDepth                                                                       *float64                                       `json:"TopDepthMeasuredDepth,omitempty"`
	// The data structure defining the zero depth point for the measured depths as well as the                                                 
	// VerticalMeasurementSource (driller's depth or logger's depth), so that it becomes clear                                                 
	// whether or not a depth correction is required and if so, in which direction the                                                         
	// correction has to be performed (driller's depth to logger's depth or vice versa).                                                       
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// The associated wellbore. Optional relationship if RockSampleID is populated and                                                         
	// WellboreID is populated                                                                                                                 
	WellboreID                                                                                  *string                                        `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// DEPRECATED: Please replace with osdu:wks:work-product-component--SamplesAnalysis:1.0.0 or
// the latest version of SampleAnalysis. The meta-data about a rock sample analysis related
// to core or outcrop rock samples.
type RockSampleAnalysis struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RockSampleAnalysisData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The activity abstraction included by projects (master-data) and work-product-component
// group-type specialisations.
type RockSampleAnalysisData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                                    
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                                
	ActivityStates                                                                              []AbstractActivityState                        `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                                
	// values.                                                                                                                                 
	ActivityTemplateID                                                                          *string                                        `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                               
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                                 
	// empty.                                                                                                                                  
	LastActivityState                                                                           *AbstractActivityState                         `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                                   
	// objects which are inputs and outputs of the activity.                                                                                   
	Parameters                                                                                  []AbstractActivityParameter                    `json:"Parameters"`
	// The relationship to a parent activity.                                                                                                  
	ParentActivityID                                                                            *string                                        `json:"ParentActivityID,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                                       
	ParentProjectID                                                                             *string                                        `json:"ParentProjectID,omitempty"`
	// The activity or activities feeding results into this activity instance.                                                                 
	PriorActivityIDs                                                                            []string                                       `json:"PriorActivityIDs,omitempty"`
	// Software names and versions used.                                                                                                       
	SoftwareSpecifications                                                                      []PurpleSoftware                               `json:"SoftwareSpecifications,omitempty"`
	// The date the batch of rock sample analysis was performed.                                                                               
	AnalysisDate                                                                                *string                                        `json:"AnalysisDate,omitempty"`
	// Identifies the Organisation that produces/produced this analysis.                                                                       
	AnalysisOrganisationID                                                                      *string                                        `json:"AnalysisOrganisationID,omitempty"`
	// Type of laboratory test(s) performed (e.g. Routine Core Analysis, Grain Size) on a                                                      
	// specific rock sample by a given laboratory.                                                                                             
	AnalysisTypeIDs                                                                             []string                                       `json:"AnalysisTypeIDs,omitempty"`
	// The last depth index from the analysis result.                                                                                          
	BottomDepth                                                                                 *float64                                       `json:"BottomDepth,omitempty"`
	// Identifies the Core on which this batch of analysis was performed.                                                                      
	CoringID                                                                                    *string                                        `json:"CoringID,omitempty"`
	// The WellLog representation carrying the core-depth to logging-depth correction or mapping                                               
	// used or to be used with this analysis.                                                                                                  
	DepthShiftsID                                                                               *string                                        `json:"DepthShiftsID,omitempty"`
	// If populated, it contains information that additional content is available containing                                                   
	// grain size analysis results. The array AnalysisTypeIDs must then contain a value of                                                     
	// GrainSizeAnalysis.                                                                                                                      
	GrainSizeAnalysis                                                                           *GrainSizeAnalysis                             `json:"GrainSizeAnalysis,omitempty"`
	// Name or branch of the laboratory performing the analysis.                                                                               
	LaboratoryName                                                                              *string                                        `json:"LaboratoryName,omitempty"`
	// The name or sample identifier assigned to the sample by the laboratory. This name or                                                    
	// identifier is used to key into the associated content (e.g., document) to find the                                                      
	// portion of the content dealing with the specific sample.                                                                                
	LabSampleIdentifier                                                                         *string                                        `json:"LabSampleIdentifier,omitempty"`
	// An array containing operational or quality comments pertaining to a rock sample analysis.                                               
	Remarks                                                                                     []DataRemark                                   `json:"Remarks,omitempty"`
	// Identifies the RockSample on which this batch of analysis was performed.                                                                
	RockSampleID                                                                                *string                                        `json:"RockSampleID,omitempty"`
	// If populated RoutineCoreAnalysis contains conditions and results of a routine core                                                      
	// analysis. The array AnalysisTypeIDs must then contain a value of RoutineCoreAnalysis.                                                   
	RoutineCoreAnalysis                                                                         *RoutineCoreAnalysis                           `json:"RoutineCoreAnalysis,omitempty"`
	// The de-normalized Sample Orientation derived from the RockSample.                                                                       
	SampleOrientationID                                                                         *string                                        `json:"SampleOrientationID,omitempty"`
	// The first depth index from the analysis result.                                                                                         
	TopDepth                                                                                    *float64                                       `json:"TopDepth,omitempty"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                                    
	// WellboreID, or a standalone vertical reference which defines the vertical reference datum                                               
	// for all measured depths of the RockSample record. If this is not populated, the                                                         
	// VerticalMeasurement is derived from the Coring.                                                                                         
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// Unique wellbore identifier. Required when RockSampleAnalysis does not have relationship                                                 
	// with master-data Core.  E.g. analysis for sidewall core.                                                                                
	WellboreID                                                                                  *string                                        `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// If populated, it contains information that additional content is available containing
// grain size analysis results. The array AnalysisTypeIDs must then contain a value of
// GrainSizeAnalysis.
type GrainSizeAnalysis struct {
	// The relationship to the GrainSizeClassificationScheme reference value record, which         
	// defined the grain size interval to GrainSizeClassification mapping. It provides the         
	// detailed context to the MeanGrainSizeDescription.                                           
	GrainSizeClassificationSchemeID                                                       *string  `json:"GrainSizeClassificationSchemeID,omitempty"`
	// The type of grain size analysis carried out during this analysis.                           
	GrainSizeMethodTypeID                                                                 *string  `json:"GrainSizeMethodTypeID,omitempty"`
	// The mean grain size as determined in the analysis. It holds the relationship to a           
	// GrainSizeClassification reference value.                                                    
	MeanGrainSizeClassificationID                                                         *string  `json:"MeanGrainSizeClassificationID,omitempty"`
	// The median grain size as numeric value, as determined in this analysis.                     
	MedianGrainSize                                                                       *float64 `json:"MedianGrainSize,omitempty"`
}

// An array containing narrative remarks pertaining to a rock sample analysis.
type DataRemark struct {
	// A descriptive comment for this remark.                                   
	Remark                                                              *string `json:"Remark,omitempty"`
	// A unique identifier for each remark record.                              
	RemarkID                                                            *string `json:"RemarkID,omitempty"`
	// The person, vendor, interpreter or other provider of information.        
	RemarkSource                                                        *string `json:"RemarkSource,omitempty"`
}

// If populated RoutineCoreAnalysis contains conditions and results of a routine core
// analysis. The array AnalysisTypeIDs must then contain a value of RoutineCoreAnalysis.
type RoutineCoreAnalysis struct {
	// Th measured grain density                                                                    
	GrainDensity                                                                   *float64         `json:"GrainDensity,omitempty"`
	// The measurement type used to obtain the GrainDensity value.                                  
	GrainDensityMeasurementTypeID                                                  *string          `json:"GrainDensityMeasurementTypeID,omitempty"`
	// The conditions under which this analysis has been carried out                                
	RCAMeasurements                                                                []RCAMeasurement `json:"RCAMeasurements,omitempty"`
	// The fraction of gas volume compared to the total pore volume.                                
	SaturationGas                                                                  *float64         `json:"SaturationGas,omitempty"`
	// The saturation method type, like Dean Stark, Retort, Karl Fischer.                           
	SaturationMethodTypeID                                                         *string          `json:"SaturationMethodTypeID,omitempty"`
	// The fraction of oil volume compared to the total pore volume.                                
	SaturationOil                                                                  *float64         `json:"SaturationOil,omitempty"`
	// The fraction of water volume compared to the total pore volume.                              
	SaturationWater                                                                *float64         `json:"SaturationWater,omitempty"`
	// The weight of salt in the brine, needed in conjunction with SaturationWater.                 
	WeightOfSalt                                                                   *float64         `json:"WeightOfSalt,omitempty"`
}

// A Routine Core Analysis Measurement.
type RCAMeasurement struct {
	// The conditions under which this analysis has been carried out                                                    
	Conditions                                                                                  *Conditions             `json:"Conditions,omitempty"`
	// Other measurements made in the context of this analysis                                                          
	OtherMeasurements                                                                           []AbstractSpecification `json:"OtherMeasurements,omitempty"`
	// The measured sample permeability.                                                                                
	Permeability                                                                                *float64                `json:"Permeability,omitempty"`
	// The measurement type used to obtain the Permeability values.                                                     
	PermeabilityMeasurementTypeID                                                               *string                 `json:"PermeabilityMeasurementTypeID,omitempty"`
	// The measured sample porosity.                                                                                    
	Porosity                                                                                    *float64                `json:"Porosity,omitempty"`
	// The measurement type used to obtain the Porosity values.                                                         
	PorosityMeasurementTypeID                                                                   *string                 `json:"PorosityMeasurementTypeID,omitempty"`
	// An array containing operational or quality comments pertaining to a rock sample analysis.                        
	Remarks                                                                                     []RCAMeasurementRemark  `json:"Remarks,omitempty"`
}

// The conditions under which this analysis has been carried out
type Conditions struct {
	// The average pressure in which the gas permeability has been measured.                        
	MeanPressure                                                                           *float64 `json:"MeanPressure,omitempty"`
	// The pressure of the fluid in the pore space.                                                 
	PorePressure                                                                           *float64 `json:"PorePressure,omitempty"`
	// The pressure condition for the analysis.                                                     
	Pressure                                                                               *float64 `json:"Pressure,omitempty"`
	// Identifies the environment where the pressure was measured. E.g. Ambient, Overburden         
	PressureMeasurementTypeID                                                              *string  `json:"PressureMeasurementTypeID,omitempty"`
	// The temperature condition for the analysis.                                                  
	Temperature                                                                            *float64 `json:"Temperature,omitempty"`
}

// An array element of an analysis specifying the numeric, text or date-time value
// associated with a ParameterType.
type AbstractSpecification struct {
	// The date and time at which this specification becomes effective.                              
	EffectiveDateTime                                                                     *time.Time `json:"EffectiveDateTime,omitempty"`
	// Parameter representing a property or characteristic.                                          
	ParameterTypeID                                                                       *string    `json:"ParameterTypeID,omitempty"`
	// The date value of the parameter.                                                              
	SpecificationDate                                                                     *string    `json:"SpecificationDate,omitempty"`
	// The date and time value of the parameter.                                                     
	SpecificationDateTime                                                                 *time.Time `json:"SpecificationDateTime,omitempty"`
	// The indicator value of the parameter.                                                         
	SpecificationIndicator                                                                *bool      `json:"SpecificationIndicator,omitempty"`
	// The numeric value of the parameter.                                                           
	SpecificationQuantity                                                                 *float64   `json:"SpecificationQuantity,omitempty"`
	// The text value of the parameter.                                                              
	SpecificationText                                                                     *string    `json:"SpecificationText,omitempty"`
	// The time value of the parameter.                                                              
	SpecificationTime                                                                     *string    `json:"SpecificationTime,omitempty"`
	// The first point in time when this specification is no longer in effect.                       
	TerminationDateTime                                                                   *time.Time `json:"TerminationDateTime,omitempty"`
	// The unit for the quantity parameter, like metre (m in SI units system) for quantity           
	// Length.                                                                                       
	UnitOfMeasureID                                                                       *string    `json:"UnitOfMeasureID,omitempty"`
}

// An array containing narrative remarks pertaining to a rock sample analysis.
type RCAMeasurementRemark struct {
	// A descriptive comment for this remark.                                   
	Remark                                                              *string `json:"Remark,omitempty"`
	// A unique identifier for each remark record.                              
	RemarkID                                                            *string `json:"RemarkID,omitempty"`
	// The person, vendor, interpreter or other provider of information.        
	RemarkSource                                                        *string `json:"RemarkSource,omitempty"`
}

// An image captured of rock or fluid samples or specimens, such as core, sidewall core,
// fluid bottle, or thin section slide. This image, which may be in the form of a
// photograph, scan, or similar, provides a visual depiction of the sample
type SampleImage struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SampleImageData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SampleImageData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The date the image was originally taken or acquired                                                                                     
	AcquisitionDate                                                                             *string                                        `json:"AcquisitionDate,omitempty"`
	// If the base depth is the same as the SampleID record base depth this is an optional                                                     
	// property.                                                                                                                               
	// The measured base depth in a wellbore relevant to the image. For a singular point depth                                                 
	// the top and base depth should be the same                                                                                               
	BaseDepthMeasuredDepth                                                                      *float64                                       `json:"BaseDepthMeasuredDepth,omitempty"`
	// The WellLog representation carrying the preferred sample-depth to logging-depth                                                         
	// correction or mapping                                                                                                                   
	DepthShiftID                                                                                *string                                        `json:"DepthShiftID,omitempty"`
	// The interval included in the image. Typically used for conventional core. For example 1m                                                
	// or 4m                                                                                                                                   
	FormatInterval                                                                              *float64                                       `json:"FormatInterval,omitempty"`
	// The type of parameters under which the image was acquired                                                                               
	ImageParameters                                                                             []ImageParameter                               `json:"ImageParameters,omitempty"`
	// Similar to ImageParameters, but reference-data relationships describing reference-value                                                 
	// list controlled image properties.                                                                                                       
	ImageReferenceParameters                                                                    *ImageReferenceParameters                      `json:"ImageReferenceParameters,omitempty"`
	// The type of image, for examples, Optical Photography, Computed Tomography (CT) and                                                      
	// Hyperspectral.                                                                                                                          
	ImageTypeID                                                                                 *string                                        `json:"ImageTypeID,omitempty"`
	// DEPRECATED Use the `ImageParameters[].LightingConditionTypeID` property instead. The type                                               
	// of lighting conditions used when capturing the image. Examples include Ultraviolet,                                                     
	// White, Natural, etc                                                                                                                     
	LightingConditionID                                                                         *string                                        `json:"LightingConditionID,omitempty"`
	// DEPRECATED Use the `ImageParameters[].ImageParameterType` property along with the                                                       
	// `Magnification` reference value and the `ImageParameterNumericValue` instead.                                                           
	// Magnification of the image                                                                                                              
	Magnification                                                                               *float64                                       `json:"Magnification,omitempty"`
	// Unique or Distinctive Image Reference Number, Job Number, File Number, Identifier, Label,                                               
	// Name, etc. Typically given by the original image acquisition supplier and as indicated in                                               
	// the report or file. Use this attribute to allow correlation back to the original source                                                 
	// document, file, etc.                                                                                                                    
	ReferenceIdentifier                                                                         *string                                        `json:"ReferenceIdentifier,omitempty"`
	// DEPRECATED: Use the Remarks array object instead. Remarks regarding the image acquisition                                               
	// and or processing environment or parameters.                                                                                            
	Remark                                                                                      *string                                        `json:"Remark,omitempty"`
	// Remarks regarding the image acquisition and or processing environment or parameters.  One                                               
	// or many remarks can be captured.                                                                                                        
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The samples that the image relates to. One or many Sample relationships are permitted.                                                  
	// The Sample object captures attributes of a sample/ specimen (rock or fluid) acquired                                                    
	// either through an original acquisition event, sub-sampling event, generated from                                                        
	// recombination of other samples / specimens or derived through the application of some                                                   
	// laboratory process on the parent sample.                                                                                                
	SampleIDs                                                                                   []string                                       `json:"SampleIDs,omitempty"`
	// The organisation or contractor that originally took or acquired the image                                                               
	ServiceCompanyID                                                                            *string                                        `json:"ServiceCompanyID,omitempty"`
	// A free text array to capture the image file header or image parameters for knowledge                                                    
	// capture, index and search purposes. Header values can be extracted from, e.g.,                                                          
	// Exchangeable Image File Format (EXIF) properties, Digital Imaging and Communications in                                                 
	// Medicine (DICOM) header properties (such as x-ray intensity) and etc.                                                                   
	TextualHeader                                                                               []string                                       `json:"TextualHeader,omitempty"`
	// If the top depth is the same as the SampleID record top depth this is an optional                                                       
	// property.                                                                                                                               
	// The measured top depth in a wellbore relevant to the image. For a singular point depth                                                  
	// the top and base depth should be the same.                                                                                              
	TopDepthMeasuredDepth                                                                       *float64                                       `json:"TopDepthMeasuredDepth,omitempty"`
	// The data structure defining the zero depth point for the measured depths as well as the                                                 
	// VerticalMeasurementSource (driller's depth or logger's depth), so that it becomes clear                                                 
	// whether or not a depth correction is required and if so, in which direction the                                                         
	// correction has to be performed (driller's depth to logger's depth or vice versa).                                                       
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// The associated wellbore. This is an optional relationship if the SampleID is populated                                                  
	// with the WellboreID.                                                                                                                    
	WellboreID                                                                                  *string                                        `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

type ImageParameter struct {
	// The image parameter value of type "Boolean" under which the image was acquired.                  
	BooleanParameterValue                                                                      *bool    `json:"BooleanParameterValue,omitempty"`
	// The type of parameter under which the image was acquired. In the array of                        
	// data.ImageParameters[] objects, a particular ImageParameterTypeID value should appear at         
	// most once.                                                                                       
	ImageParameterTypeID                                                                       *string  `json:"ImageParameterTypeID,omitempty"`
	// The image parameter value of type "Numeric" under which the image was acquired.                  
	NumericParameterValue                                                                      *float64 `json:"NumericParameterValue,omitempty"`
	// The image parameter value of type "String" under which the image was acquired.                   
	StringParameterValue                                                                       *string  `json:"StringParameterValue,omitempty"`
}

// Similar to ImageParameters, but reference-data relationships describing reference-value
// list controlled image properties.
type ImageReferenceParameters struct {
	// The type of beam in the electron microscope for this sample image, for example, electron         
	// or ion beam.                                                                                     
	BeamTypeID                                                                                  *string `json:"BeamTypeID,omitempty"`
	// The colour space for this sample image, for example, could be RGB, Monochrome, or CMYK.          
	ColourSpaceTypeID                                                                           *string `json:"ColourSpaceTypeID,omitempty"`
	// The mode of lighting for this sample image, for example, Natural, White and Ultraviolet.         
	LightingConditionTypeID                                                                     *string `json:"LightingConditionTypeID,omitempty"`
	// The type of filter applied to the light source of this sample image, for example, Cross          
	// Polarised, Brightfield and Darkfield.                                                            
	OpticalLightFilterTypeID                                                                    *string `json:"OpticalLightFilterTypeID,omitempty"`
	// The light path for this sample image, for example, incident or transmitted.                      
	OpticalLightPathTypeID                                                                      *string `json:"OpticalLightPathTypeID,omitempty"`
	// The source of the pixel resolution for this sample image, for example, it may be inferred        
	// from a scale bar or a known reference.                                                           
	ResolutionSourceTypeID                                                                      *string `json:"ResolutionSourceTypeID,omitempty"`
	// The type of X Ray detector used for this sample image, for example, Wavelength Dispersive        
	// Detector WDS/WDX) and Energy Dispersive Detector (EDS/EDX).                                      
	XRayDetectorTypeID                                                                          *string `json:"XRayDetectorTypeID,omitempty"`
}

// Attributes needed to find and retrieve a delivered report containing rock and/or fluid
// sample analysis data. Often this report contains more than one data frame of analysis
// data and/or more than one Analysis Family. Examples of this could include end-of-well
// reports, well completion reports, regional multi-well studies, or SCAL reports. This
// report can be decomposed into analysis sets via the SamplesAnalysis
// work-product-component. In other cases, this report contains part of a dataset which
// could then be aggregated into a SamplesAnalysis work-product-component.
type SamplesAnalysesReport struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SamplesAnalysesReportData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SamplesAnalysesReportData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The date and time that the document was last modified                                                                                   
	DateModified                                                                                *time.Time                                     `json:"DateModified,omitempty"`
	// The date and time that the results of the analysis containing observed measurements or                                                  
	// calculations was published                                                                                                              
	DatePublished                                                                               *time.Time                                     `json:"DatePublished,omitempty"`
	// Document language as listed in the ISO 639-3 https://en.wikipedia.org/wiki/ISO_639,                                                     
	// https://en.wikipedia.org/wiki/List_of_ISO_639-3_codes                                                                                   
	DocumentLanguage                                                                            *string                                        `json:"DocumentLanguage,omitempty"`
	// A description text or an array of subjects covered by the document. If present this                                                     
	// information must compliment the Tag and SubTitle                                                                                        
	DocumentSubject                                                                             *string                                        `json:"DocumentSubject,omitempty"`
	// The kind of document--from a business standpoint, e.g., multi-well study, etc.                                                          
	DocumentTypeID                                                                              *string                                        `json:"DocumentTypeID,omitempty"`
	// OSDU Record IDs for the laboratories used to conduct the sample analyses contained in                                                   
	// this report. This could represent the laboratory company or the laboratory branch.                                                      
	LaboratoryIDs                                                                               []string                                       `json:"LaboratoryIDs,omitempty"`
	// List of names of laboratories used to conduct the sample analyses contained in this                                                     
	// report. This attribute is more freeform than Laboratory IDs and does not have                                                           
	// relationships to OSDU Record IDs. This attribute exists to help with a low bar of                                                       
	// ingestion but best practice is to resolve each of these to an OSDU Record ID in the                                                     
	// LaboratoryIDs attribute.                                                                                                                
	LaboratoryNames                                                                             []string                                       `json:"LaboratoryNames,omitempty"`
	// Number of pages in the document, useful in cases where if it was described in the                                                       
	// acquired manifest as opposed to a derived/calculated value                                                                              
	NumberOfPages                                                                               *int64                                         `json:"NumberOfPages,omitempty"`
	// An array containing operational or quality comments pertaining to the sample analysis                                                   
	// represented by this work product component.                                                                                             
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The names or identifiers of the analyzed samples in this report or document. These names                                                
	// or identifiers are often assigned by the laboratory. This list can be used to assist in                                                 
	// locating the appropriate OSDU Sample records or to find the dataset in the parent report.                                               
	ReportSampleIdentifiers                                                                     []string                                       `json:"ReportSampleIdentifiers,omitempty"`
	// A list of all sample analysis types represented by this report, whether the sample                                                      
	// analysis type relates to Rock, Fluid, or both.                                                                                          
	SampleAnalysisTypeIDs                                                                       []string                                       `json:"SampleAnalysisTypeIDs,omitempty"`
	// OSDU Record IDs for the Rock and/or Fluid Sample or Samples on which this batch or                                                      
	// batches of analysis were performed.                                                                                                     
	SampleIDs                                                                                   []string                                       `json:"SampleIDs,omitempty"`
	// List of higher level grouping terms that are often used within organisations to search                                                  
	// for analysis types in addition to the formal Family and Method properties, but which are                                                
	// variable across organisations and therefore do not need to be governed strictly by the                                                  
	// OSDU Forum. For example: SCAL, Static SCAL, Dynamic SCAL, Source Rock Analysis. We                                                      
	// suggest you use a namespace, like the operators name, like “Shell.SCAL”. BP.SCAL,                                                       
	// Equinor.SCAL, Chevron.SCAL, Exxon.SCAL.....                                                                                             
	SamplesAnalysisCategoryTagIDs                                                               []string                                       `json:"SamplesAnalysisCategoryTagIDs,omitempty"`
	// The sub-title of the document.                                                                                                          
	SubTitle                                                                                    *string                                        `json:"SubTitle,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Attributes needed to find and retrieve the analysis of one particular rock or fluid
// sample analysis dataset, which generally contains one batch of analyses in one Analysis
// Family or SubFamily. For example, this could represent one table of data from a
// SamplesAnalysesReport,  or one dataset delivered as a work-product-component from a lab.
type SamplesAnalysis struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SamplesAnalysisData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The activity abstraction included by work-product-component group-type entities, which
// want to expose generic 'Activity' behaviour.
type SamplesAnalysisData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                                    
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                                
	ActivityStates                                                                              []AbstractActivityState                        `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                                
	// values.                                                                                                                                 
	ActivityTemplateID                                                                          *string                                        `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                               
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                                 
	// empty.                                                                                                                                  
	LastActivityState                                                                           *AbstractActivityState                         `json:"LastActivityState,omitempty"`
	// An array of parameter values used in one instance of activity.  It may include references                                               
	// to data objects which are inputs and/or outputs of the activity. The array is mandatory                                                 
	// but can be empty.                                                                                                                       
	Parameters                                                                                  []AbstractActivityParameter                    `json:"Parameters"`
	// The relationship to a parent activity.                                                                                                  
	ParentActivityID                                                                            *string                                        `json:"ParentActivityID,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                                       
	ParentProjectID                                                                             *string                                        `json:"ParentProjectID,omitempty"`
	// The activity or activities feeding results into this activity instance.                                                                 
	PriorActivityIDs                                                                            []string                                       `json:"PriorActivityIDs,omitempty"`
	// Software names and versions used.                                                                                                       
	SoftwareSpecifications                                                                      []FluffySoftware                               `json:"SoftwareSpecifications,omitempty"`
	// The date the batch of sample analysis was completed.                                                                                    
	DateAnalyzed                                                                                *string                                        `json:"DateAnalyzed,omitempty"`
	// The date and time that the results of the analysis containing observed measurements or                                                  
	// calculations was published.                                                                                                             
	DatePublished                                                                               *string                                        `json:"DatePublished,omitempty"`
	// The names and other information of the analysts responsible for conducting and reporting                                                
	// on the analysis performed                                                                                                               
	LaboratoryAnalysts                                                                          []string                                       `json:"LaboratoryAnalysts,omitempty"`
	// OSDU Record IDs for the laboratories used to conduct the sample analyses contained in                                                   
	// this report.                                                                                                                            
	LaboratoryIDs                                                                               []string                                       `json:"LaboratoryIDs,omitempty"`
	// List of names of laboratories used to conduct the sample analyses contained in this                                                     
	// report. This attribute is more freeform than Laboratory IDs and does not have                                                           
	// relationships to OSDU Record IDs.                                                                                                       
	LaboratoryNames                                                                             []string                                       `json:"LaboratoryNames,omitempty"`
	// Identifies the report from which this analysis was extracted or multiple reports from                                                   
	// which this analysis was reconstructed.                                                                                                  
	ParentSamplesAnalysesReports                                                                []ParentSamplesAnalysesReport                  `json:"ParentSamplesAnalysesReports,omitempty"`
	// An array containing operational or quality comments pertaining to the sample analysis                                                   
	// represented by this work product component.                                                                                             
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The names or identifiers of the analyzed samples in this report or document. These names                                                
	// or identifiers are often assigned by the laboratory. This list can be used to assist in                                                 
	// locating the appropriate OSDU Sample records or to find the dataset in the parent report.                                               
	ReportSampleIdentifiers                                                                     []string                                       `json:"ReportSampleIdentifiers,omitempty"`
	// A list of all sample analysis types represented by this report, whether the sample                                                      
	// analysis type relates to Rock, Fluid, or both.                                                                                          
	SampleAnalysisTypeIDs                                                                       []string                                       `json:"SampleAnalysisTypeIDs,omitempty"`
	// OSDU Record IDs for the Rock and/or Fluid Sample or Samples on which this batch or                                                      
	// batches of analysis were performed.                                                                                                     
	SampleIDs                                                                                   []string                                       `json:"SampleIDs,omitempty"`
	// List of higher level grouping terms that are often used within organisations to search                                                  
	// for analysis types in addition to the formal Family and Method properties, but which are                                                
	// variable across organisations and therefore do not need to be governed strictly by the                                                  
	// OSDU Forum. For example: SCAL, Static SCAL, Dynamic SCAL, Source Rock Analysis. We                                                      
	// suggest you use a namespace, like the operators name, like “Shell.SCAL”. BP.SCAL,                                                       
	// Equinor.SCAL, Chevron.SCAL, Exxon.SCAL.....                                                                                             
	SamplesAnalysisCategoryTagIDs                                                               []string                                       `json:"SamplesAnalysisCategoryTagIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A pair of properties building a reference to a report combined with a page reference
// inside the document.
type ParentSamplesAnalysesReport struct {
	// An OSDU Record representing the report from which this analysis was extracted or an OSDU        
	// Record from which this analysis was reconstructed.                                              
	ParentSamplesAnalysesReportID                                                              *string `json:"ParentSamplesAnalysesReportID,omitempty"`
	// If this dataset was extracted from a larger report, this identifies the page number or          
	// range (if in document format such as PDF) or sheet names (if in document format such as         
	// spreadsheet). For ease of parsing, ranges should be denoted with hyphens with no spaces,        
	// and divided with commas). E.g. "12-15,17" or "Sheet1,Sheet2".                                   
	ParentSamplesAnalysesReportPageNumbers                                                     *string `json:"ParentSamplesAnalysesReportPageNumbers,omitempty"`
}

// The name and version of the software being executed in the context of this activity
type FluffySoftware struct {
	// The name of the software, application or plug-in used while performing this activity.           
	SoftwareName                                                                               *string `json:"SoftwareName,omitempty"`
	// The version of the software, application or plug-in used while performing this activity.        
	Version                                                                                    *string `json:"Version,omitempty"`
}

// Sealed structural model representations associated to geometric elements such as faults,
// horizons, and intrusions on a scale of meters to kilometers.
type SealedSurfaceFramework struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SealedSurfaceFrameworkData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type SealedSurfaceFrameworkData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the StructuralOrganizationInterpretation this framework belongs to.                                                    
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// List of Generic Representations linked to structural model inputs and outputs, for                                                      
	// example fault sticks and triangulated surfaces, Horizon data points and triangulated                                                    
	// surfaces, geobody boundary triangulated surfaces.                                                                                       
	GenericRepresentationIDs                                                                    []string                                       `json:"GenericRepresentationIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Sealed volume model representations associated to geometric elements such as faults,
// horizons, and intrusions on a scale of meters to kilometers.
type SealedVolumeFramework struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SealedVolumeFrameworkData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type SealedVolumeFrameworkData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the StructuralOrganizationInterpretation this framework belongs to.                                                    
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// the reference to a sealed surface framework                                                                                             
	SealedSurfaceFrameworkID                                                                    *string                                        `json:"SealedSurfaceFrameworkID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Files produced during the course of Seismic Acquisition, including observer logs, source
// and receiver information tables, and unprocessed navigation.
type SeismicAcquisitionDocuments struct {
	// The access control tags associated with this entity.                                                                       
	ACL                                                                                          AccessControlList                `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                         
	// derived.                                                                                                                   
	Ancestry                                                                                     *ParentList                      `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                   
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                      
	CreateTime                                                                                   *time.Time                       `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                    
	// System.                                                                                                                    
	CreateUser                                                                                   *string                          `json:"createUser,omitempty"`
	Data                                                                                         *SeismicAcquisitionDocumentsData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                     
	// version.                                                                                                                   
	ID                                                                                           *string                          `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                               
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                   
	// scheme follows the semantic versioning, https://semver.org/.                                                               
	Kind                                                                                         string                           `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                     
	// legal tags is managed by the Compliance Service.                                                                           
	Legal                                                                                        LegalMetaData                    `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                    
	// definitions.                                                                                                               
	Meta                                                                                         []FrameOfReferenceMetaDataItem   `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                   
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                          
	ModifyTime                                                                                   *time.Time                       `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                 
	ModifyUser                                                                                   *string                          `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                    
	// as keys and values.                                                                                                        
	Tags                                                                                         map[string]string                `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                            
	Version                                                                                      *int64                           `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SeismicAcquisitionDocumentsData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Description of the SEG-D headers.   May include a recorded example. The array consists of                                               
	// record IDs, which identify a OSDU file or dataset resource.                                                                             
	HeaderDescriptionIDs                                                                        []string                                       `json:"HeaderDescriptionIDs,omitempty"`
	// Documents produced at end of each line, including information on shotpoint ranges, tapes,                                               
	// and files. The array contains IDs referencing Document work product component records                                                   
	// that hold the actual documents, which should be of the corresponding document type.                                                     
	LineLogIDs                                                                                  []string                                       `json:"LineLogIDs,omitempty"`
	// Documents produced during acquisition, containing reports on acquisition activities and                                                 
	// progress. The array contains IDs referencing Document work product component records that                                               
	// hold the actual documents, which should be of the corresponding document type.                                                          
	ObserverLogIDs                                                                              []string                                       `json:"ObserverLogIDs,omitempty"`
	// For most datasets, the acquisition project that generated the underlying field data.  For                                               
	// merges, probably absent (see processing project for set of acquisition projects used in                                                 
	// processing this dataset).                                                                                                               
	PrincipalAcquisitionProjectID                                                               *string                                        `json:"PrincipalAcquisitionProjectID,omitempty"`
	// Document collected during acquisition which includes a format description and attribute                                                 
	// properties.  Typically rows are collected for each line and shotpoint, with information                                                 
	// on receivers. The array contains IDs referencing Document work product component records                                                
	// that hold the actual documents, which should be of the corresponding document type.                                                     
	ReceiverInformationTableIDs                                                                 []string                                       `json:"ReceiverInformationTableIDs,omitempty"`
	// Documents produced during acquisition, including parameters , along with recording QC for                                               
	// each shot. The array contains IDs referencing Document work product component records                                                   
	// that hold the actual documents, which should be of the corresponding document type.                                                     
	ReceiverLogIDs                                                                              []string                                       `json:"ReceiverLogIDs,omitempty"`
	// Receiver response collected during acquisition.  May include response to differing                                                      
	// receiver group orientations. The array contains IDs referencing Document work product                                                   
	// component records that hold the actual documents, which should be of the corresponding                                                  
	// document type.                                                                                                                          
	ReceiverSignatureIDs                                                                        []string                                       `json:"ReceiverSignatureIDs,omitempty"`
	// Recording system  parameters and signature. The array consists of record IDs, which                                                     
	// identify a OSDU file or dataset resource.                                                                                               
	RecorderResponseIDs                                                                         []string                                       `json:"RecorderResponseIDs,omitempty"`
	// Reference to a dataset containing the seismic acquisition report. This property contains                                                
	// an ID referencing a Document work product component record that holds the actual document                                               
	// report, which should be of the corresponding document type.                                                                             
	SeismicAcquisitionReport                                                                    *string                                        `json:"SeismicAcquisitionReport,omitempty"`
	// Seismic dataset(s) containing unprocessed data, as acquired.                                                                            
	SeismicFieldTraceDataID                                                                     *string                                        `json:"SeismicFieldTraceDataID,omitempty"`
	// Unprocessed navigation collected during seismic acquisition in formats including P1/11 or                                               
	// P1/90. The array consists of record IDs, which identify a OSDU file or dataset resource.                                                
	SeismicNavigationIDs                                                                        []string                                       `json:"SeismicNavigationIDs,omitempty"`
	// Document collected during acquisition which includes a format description and attribute                                                 
	// properties.  Typically rows are collected for each line and shotpoint, with information                                                 
	// on sources, like volume, depth, and timing errors. The array contains IDs referencing                                                   
	// Document work product component records that hold the actual documents, which should be                                                 
	// of the corresponding document type.                                                                                                     
	SourceInformationTableIDs                                                                   []string                                       `json:"SourceInformationTableIDs,omitempty"`
	// Seismic source recording acquired near the source. The array consists of record IDs,                                                    
	// which identify a OSDU file or dataset resource.                                                                                         
	SourceSignatureIDs                                                                          []string                                       `json:"SourceSignatureIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A representation of the surface positions for each subsurface node in a set of processed
// trace data work product components with common positions.  Different sampling (spacing)
// and extents (ranges) in the trace data may be handled by the same bin grid.
type SeismicBinGrid struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicBinGridData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The embedded bin grid definition describing the mapping from pixel coordinate system to
// DataCRS ('world coordinates'). BinGrid member properties are only populated if BinGridID
// is absent. A populated BinGridID overrides any embedded BinGrid values.
//
// The shared properties for a bin grid.
type SeismicBinGridData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// DEPRECATED: Use  AbstractGeoJson.PropertiesBinGridCorners properties inside the                                                         
	// ABCDBinGridSpatialLocation. Previously:  Array of 4 corner points for bin grid in local                                                 
	// coordinates: Point A (min inline, min crossline); Point B (min inline, max crossline);                                                  
	// Point C (max inline, min crossline); Point D (max inline, max crossline).  If Point D is                                                
	// not given and BinGridDefinitionMethodTypeID=4, it must be supplied, with its spatial                                                    
	// location, before ingestion to create a parallelogram in map coordinate space.  Note                                                     
	// correspondence of inline=x, crossline=y.                                                                                                
	ABCDBinGridLocalCoordinates                                                                 []AbstractCoordinates                          `json:"ABCDBinGridLocalCoordinates,omitempty"`
	// Bin Grid ABCD points containing the projected coordinates, projected CRS and quality                                                    
	// metadata.  This attribute is required also for the P6 definition method to define the                                                   
	// projected CRS, even if the ABCD coordinates would be optional (recommended to be always                                                 
	// calculated). It is recommended to populate the GeoJSON/AnyCrsGeoJSON with properties                                                    
	// according to the AbstractGeoJson.PropertiesBinGridCorners schema fragment.                                                              
	ABCDBinGridSpatialLocation                                                                  *AbstractSpatialLocation                       `json:"ABCDBinGridSpatialLocation,omitempty"`
	// This identifies how the Bin Grid is defined:  4=ABCD four-points method was used to                                                     
	// define the grid (P6 parameters are optional and can contain derived values;                                                             
	// P6BinNodeIncrementOnIAxis and P6BinNodeIncrementOnJaxis can be used as part of four-point                                               
	// method).  Use a perspective transformation to map between map coordinates and bin                                                       
	// coordinates. Note point order.  6=P6 definition method was used to define the bin grid                                                  
	// (ABCD points are optional and can contain derived values; ABCDBinGridSpatialLocation must                                               
	// specify the projected CRS).  Use an affine transformation to map between map coordinates                                                
	// and bin coordinates.                                                                                                                    
	BinGridDefinitionMethodTypeID                                                               *string                                        `json:"BinGridDefinitionMethodTypeID,omitempty"`
	// Name of bin grid (e.g., GEOCO_GREENCYN_PHV_2012).  Probably the name as it exists in a                                                  
	// separate corporate store if OSDU is not main system.                                                                                    
	BinGridName                                                                                 *string                                        `json:"BinGridName,omitempty"`
	// Type of bin grid (Acquisition, Processing, Velocity, MagGrav, Magnetics, Gravity,                                                       
	// GeologicModel, Reprojected, etc.)                                                                                                       
	BinGridTypeID                                                                               *string                                        `json:"BinGridTypeID,omitempty"`
	// Nominal design fold as intended by the bin grid definition, expressed as the mode in                                                    
	// percentage points (60 fold = 6000%).                                                                                                    
	CoveragePercent                                                                             *float64                                       `json:"CoveragePercent,omitempty"`
	// Easting coordinate of tie point (e.g., center or A point)                                                                               
	P6BinGridOriginEasting                                                                      *float64                                       `json:"P6BinGridOriginEasting,omitempty"`
	// Inline coordinate of tie point (e.g., center or A point)                                                                                
	P6BinGridOriginI                                                                            *float64                                       `json:"P6BinGridOriginI,omitempty"`
	// Crossline coordinate of tie point (e.g., center or A point)                                                                             
	P6BinGridOriginJ                                                                            *float64                                       `json:"P6BinGridOriginJ,omitempty"`
	// Northing coordinate of tie point (e.g., center or A point)                                                                              
	P6BinGridOriginNorthing                                                                     *float64                                       `json:"P6BinGridOriginNorthing,omitempty"`
	// Increment (positive integer) for the inline coordinate. If not provided then 1 is                                                       
	// assumed.  The bin grid definition is expected to have increment 1 and the increment                                                     
	// stored with the SeismicTraceData (“inline increment”) takes precedence over the increment                                               
	// set at the BinGrid.  Alternatively the increments are allowed to be defined with the                                                    
	// BinGrid, but this should be avoided to allow for variations in sampling in trace data                                                   
	// sets.                                                                                                                                   
	P6BinNodeIncrementOnIaxis                                                                   *int64                                         `json:"P6BinNodeIncrementOnIaxis,omitempty"`
	// Increment (positive integer) for the crossline coordinate. If not provided then 1 is                                                    
	// assumed.  The bin grid definition is expected to have increment 1 and the increment                                                     
	// stored with the SeismicTraceData (“crossline increment”) takes precedence over the                                                      
	// increment set at the BinGrid. Alternatively the increments are allowed to be defined with                                               
	// the BinGrid, but this should be avoided to allow for variations in sampling in trace data                                               
	// sets.                                                                                                                                   
	P6BinNodeIncrementOnJaxis                                                                   *int64                                         `json:"P6BinNodeIncrementOnJaxis,omitempty"`
	// Distance between two inlines at the given increment apart, e.g., 30 m with                                                              
	// P6BinNodeIncrementOnIaxis=1.  Unit from projected CRS in ABCDBinGridSpatialLocation                                                     
	P6BinWidthOnIaxis                                                                           *float64                                       `json:"P6BinWidthOnIaxis,omitempty"`
	// Distance between two crosslines at the given increment apart, e.g., 25 m with                                                           
	// P6BinNodeIncrementOnJaxis=4.  Unit from projected CRS in ABCDBinGridSpatialLocation                                                     
	P6BinWidthOnJaxis                                                                           *float64                                       `json:"P6BinWidthOnJaxis,omitempty"`
	// Clockwise angle from grid north (in projCRS) in degrees from 0 to 360 of the direction of                                               
	// increasing crosslines (constant inline), i.e., of the vector from point A to B.                                                         
	P6MapGridBearingOfBinGridJaxis                                                              *float64                                       `json:"P6MapGridBearingOfBinGridJaxis,omitempty"`
	// Scale factor for Bin Grid.  If not provided then 1 is assumed. Unit is unity.                                                           
	P6ScaleFactorOfBinGrid                                                                      *float64                                       `json:"P6ScaleFactorOfBinGrid,omitempty"`
	// EPSG code: 9666 for right-handed, 1049 for left-handed.  See IOGP Guidance Note 373-07-2                                                
	// and 483-6.                                                                                                                              
	P6TransformationMethod                                                                      *int64                                         `json:"P6TransformationMethod,omitempty"`
	// Identifier (name) of the corporate database/application that stores the source bin grid                                                 
	// definitions if OSDU is not main system.                                                                                                 
	SourceBinGridAppID                                                                          *string                                        `json:"SourceBinGridAppID,omitempty"`
	// Identifier of the source bin grid as stored in a corporate database/application if OSDU                                                 
	// is not main system.                                                                                                                     
	SourceBinGridID                                                                             *int64                                         `json:"SourceBinGridID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A representation of a single fault picked on the basis of seismic data. The record
// carries information about the seismic geometry context. It can be part of an
// UnsealedSurfaceFramework.
type SeismicFault struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicFaultData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type SeismicFaultData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The relationship to the Fault Interpretation that this representation is associated with.                                               
	// The Fault Interpretation record, in turn, contains the relationship to the related                                                      
	// interpreted Feature. This named property is intended to constrain the                                                                   
	// AbstractRepresentation target property to a FaultInterpretation for simplicity and                                                      
	// clarity.                                                                                                                                
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// The Bin Grid of the fault when coordinates are specified in seismic bin inline/crossline.                                               
	// When populated this bin grid geometry override the geometry defined by the parent                                                       
	// Seismic3DInterpretationSet. If empty and Seismic3DInterpretationSetID is populated, the                                                 
	// Seismic3DInterpretationSet.SeismicBinGridID applies.                                                                                    
	BinGridID                                                                                   *string                                        `json:"BinGridID,omitempty"`
	// Describes the domain of the interpretation, for example, Depth, Time and Mixed domain                                                   
	// types.                                                                                                                                  
	// The property is added here to be human friendly and support search use cases.                                                           
	// This information is also captured in the `Fault Interpretation` WPC. Please be mindful to                                               
	// keep both properties synchronised.                                                                                                      
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// The person or team who interpreted the fault.                                                                                           
	Interpreter                                                                                 *string                                        `json:"Interpreter,omitempty"`
	// An array of remarks, typically from the interpreter, providing a comment or general                                                     
	// explanation of the fault.                                                                                                               
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The RepresentationRole assigned to this SeismicFault. Examples: FaultSticks, Pick,                                                      
	// FaultCenterLine.                                                                                                                        
	RepresentationRole                                                                          *string                                        `json:"RepresentationRole,omitempty"`
	// The Fault RepresentationType assigned to this SeismicFault. Examples: PolylineSet,                                                      
	// TriangulatedSurface.                                                                                                                    
	RepresentationType                                                                          *string                                        `json:"RepresentationType,omitempty"`
	// For picks on 2D datasets, reference to the 2D interpretation set (not the application                                                   
	// project nor an acquisition survey) that supported this interpretation.  The seismic                                                     
	// geometries (seismic line geometries) needed to interpret the location references are                                                    
	// inferred through the interpretation survey.  The WPC SpatialArea may reflect the lines                                                  
	// that have the horizon picked on it for shallow search purposes.  Only one of                                                            
	// Seismic2DInterpretationSetID or Seismic3DInterpretationSetID may be used, but not both.                                                 
	Seismic2DInterpretationSetID                                                                *string                                        `json:"Seismic2DInterpretationSetID,omitempty"`
	// For picks on 3D datasets, reference to the 3D interpretation set (not the application                                                   
	// project nor an acquisition survey) that supported this interpretation.  The seismic                                                     
	// geometry (bin grid) needed to interpret the location references is inferred through the                                                 
	// interpretation survey and no longer explicitly through this object.  The WPC SpatialArea                                                
	// may reflect the survey area that has the horizon picked on it for shallow search                                                        
	// purposes.  Only one of Seismic2DInterpretationSetID or Seismic3DInterpretationSetID may                                                 
	// be used, but not both.                                                                                                                  
	Seismic3DInterpretationSetID                                                                *string                                        `json:"Seismic3DInterpretationSetID,omitempty"`
	// The list of explicit 2D seismic line geometries overriding any definitions inferred from                                                
	// Seismic2DInterpretationSet. If empty and Seismic2DInterpretationSetID is populated,                                                     
	// Seismic2DInterpretationSet.SeismicLineGeometries[].SeismicLineGeometryID apply.                                                         
	SeismicLineGeometryIDs                                                                      []string                                       `json:"SeismicLineGeometryIDs,omitempty"`
	// The picking method used for the seismic fault.                                                                                          
	SeismicPickingTypeID                                                                        *string                                        `json:"SeismicPickingTypeID,omitempty"`
	// The seismic volumes/sections on which the fault was picked.                                                                             
	SeismicTraceDataIDs                                                                         []string                                       `json:"SeismicTraceDataIDs,omitempty"`
	// An array capturing the classification of Confidence, Quality & Strength applicable to                                                   
	// this interpretation. This is different to data quality.                                                                                 
	SubjectiveClassificationRatingIDs                                                           []string                                       `json:"SubjectiveClassificationRatingIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A logical dataset containing seismic traces. The traces are the original recordings,
// prior to processing.
type SeismicFieldTraceData struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicFieldTraceDataData     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SeismicFieldTraceDataData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Indicates if the volume is a product of the difference between 4D surveys                                                               
	Difference                                                                                  *bool                                          `json:"Difference,omitempty"`
	// The sample axis value in the vertical dimension at which Depth formatted data ends. Use                                                 
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                  
	// estimated.                                                                                                                              
	EndDepth                                                                                    *float64                                       `json:"EndDepth,omitempty"`
	// The sample axis value in the vertical dimension at which Time formatted data starts. Use                                                
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                  
	// estimated.                                                                                                                              
	EndTime                                                                                     *float64                                       `json:"EndTime,omitempty"`
	// The shotpoint that came before all others                                                                                               
	FirstShotPoint                                                                              *float64                                       `json:"FirstShotPoint,omitempty"`
	// The type of gathers in this dataset.                                                                                                    
	GatherTypeID                                                                                *string                                        `json:"GatherTypeID,omitempty"`
	// Coordinate reference system of positions in trace header, which matches what is described                                               
	// in BinGrid but is repeated here for convenience and in case bin grid is not defined.  In                                                
	// case of conflict with Bin Grid, this value applies to the coordinates as written into                                                   
	// CMPX, CMPY headers. Nevertheless, Bin Grid should be used for mapping purposes.                                                         
	HorizontalCRSID                                                                             *string                                        `json:"HorizontalCRSID,omitempty"`
	// The last shotpoint represented by the data                                                                                              
	LastShotPoint                                                                               *float64                                       `json:"LastShotPoint,omitempty"`
	// Polygon showing the coverage of live traces in the trace dataset                                                                        
	LiveTraceOutline                                                                            *AbstractSpatialLocation                       `json:"LiveTraceOutline,omitempty"`
	// Sample data format in terms of sample value precision 8bit Integer, 16bit Floating Point                                                
	// etc.                                                                                                                                    
	Precision                                                                                   *PurplePrecision                               `json:"Precision,omitempty"`
	// For most datasets, the acquisition project that generated the underlying field data.  For                                               
	// merges, probably absent (see processing project for set of acquisition projects used in                                                 
	// processing this dataset).                                                                                                               
	PrincipalAcquisitionProjectID                                                               *string                                        `json:"PrincipalAcquisitionProjectID,omitempty"`
	// Processing Parameters to simply capture process history until full provenance model can                                                 
	// be implemented.                                                                                                                         
	ProcessingParameters                                                                        []ProcessingParameters                         `json:"ProcessingParameters,omitempty"`
	// The actual maximum amplitude value found in the dataset.                                                                                
	RangeAmplitudeMax                                                                           *float64                                       `json:"RangeAmplitudeMax,omitempty"`
	// The actual minimum amplitude value found in the dataset.                                                                                
	RangeAmplitudeMin                                                                           *float64                                       `json:"RangeAmplitudeMin,omitempty"`
	// Number of samples in the vertical direction.                                                                                            
	SampleCount                                                                                 *int64                                         `json:"SampleCount,omitempty"`
	// Vertical sampling interval of data.                                                                                                     
	SampleInterval                                                                              *float64                                       `json:"SampleInterval,omitempty"`
	// 2D line name or survey name for the 2D group                                                                                            
	Seismic2DName                                                                               *string                                        `json:"Seismic2DName,omitempty"`
	// ID of the Seismic Trace Data Type                                                                                                       
	SeismicAttributeTypeID                                                                      *string                                        `json:"SeismicAttributeTypeID,omitempty"`
	// ID of the nature of the vertical axis in the trace data set, usually Depth or Time.                                                     
	SeismicDomainTypeID                                                                         *string                                        `json:"SeismicDomainTypeID,omitempty"`
	// ID of the Seismic Filtering Type                                                                                                        
	SeismicFilteringTypeID                                                                      *string                                        `json:"SeismicFilteringTypeID,omitempty"`
	// Reference to the reference-data--SeismicPhase value describing the wavelet phase as                                                     
	// estimated/processed for this SeismicTraceData instance.                                                                                 
	SeismicPhaseID                                                                              *string                                        `json:"SeismicPhaseID,omitempty"`
	// Reflection polarity of embedded wavelet.  Normal, Reverse, Plus 90, Minus 90 according to                                               
	// SEG standard.                                                                                                                           
	SeismicPolarityID                                                                           *string                                        `json:"SeismicPolarityID,omitempty"`
	// The dimensionality of trace data sets (not as acquired but as in the dataset), such as                                                  
	// 2D, 3D, 4D.                                                                                                                             
	SeismicTraceDataDimensionalityTypeID                                                        *string                                        `json:"SeismicTraceDataDimensionalityTypeID,omitempty"`
	// The observed wave mode type in this trace data set (P, Sv, etc).                                                                        
	SeismicWaveTypeID                                                                           *string                                        `json:"SeismicWaveTypeID,omitempty"`
	// Indicates how much the data has been shifted from the Vertical Datum (seismic reference                                                 
	// datum) in the domain and units of SeismicDomainType and in the sense that a positive                                                    
	// number causes a sample to move downward in physical space (lower elevation).                                                            
	ShiftApplied                                                                                *float64                                       `json:"ShiftApplied,omitempty"`
	// Defines the sorting order of the trace data as stored in the file(s).                                                                   
	SortOrderID                                                                                 *string                                        `json:"SortOrderID,omitempty"`
	// The sample axis value in the vertical dimension at which Depth formatted data starts. Use                                               
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                  
	// estimated.                                                                                                                              
	StartDepth                                                                                  *float64                                       `json:"StartDepth,omitempty"`
	// The sample axis value in the vertical dimension at which Time formatted data starts. Use                                                
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                  
	// estimated.                                                                                                                              
	StartTime                                                                                   *float64                                       `json:"StartTime,omitempty"`
	// Character metadata from headers inside file, such as the EBCDIC header of SEGD.  This is                                                
	// an array to capture each stanza separately.                                                                                             
	TextualFileHeader                                                                           []string                                       `json:"TextualFileHeader,omitempty"`
	// How many traces are in the volume                                                                                                       
	TraceCount                                                                                  *int64                                         `json:"TraceCount,omitempty"`
	// UOM for vertical trace domain values                                                                                                    
	TraceDomainUOM                                                                              *string                                        `json:"TraceDomainUOM,omitempty"`
	// Maximum trace length calculated using depth or time start and end points as appropriate                                                 
	// according to SeismicDomainType.                                                                                                         
	TraceLength                                                                                 *float64                                       `json:"TraceLength,omitempty"`
	// Datum value, the elevation of zero time/depth on the vertical axis in the domain of                                                     
	// SeismicDomainType relative to the vertical reference datum used (usually MSL). Positive                                                 
	// is upward from zero elevation to seismic datum).                                                                                        
	VerticalDatumOffset                                                                         *float64                                       `json:"VerticalDatumOffset,omitempty"`
	// Identifies a vertical reference datum type. E.g. mean sea level, ground level, mudline.                                                 
	VerticalMeasurementTypeID                                                                   *string                                        `json:"VerticalMeasurementTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Sample data format in terms of sample value precision 8bit Integer, 16bit Floating Point
// etc.
type PurplePrecision struct {
	// SRN of a reference value for binary data types, such as INT, UINT, FLOAT, IBM_FLOAT,        
	// ASCII, EBCDIC.                                                                              
	WordFormat                                                                             *string `json:"WordFormat,omitempty"`
	// Size of the word in bytes.                                                                  
	WordWidth                                                                              *int64  `json:"WordWidth,omitempty"`
}

// Processing Parameters to simply capture process history until full provenance model can
// be implemented.
type ProcessingParameters struct {
	// Processing Parameter Type                                                                
	ProcessingParameterTypeID                                                           *string `json:"ProcessingParameterTypeID,omitempty"`
	// The quantity for the processing parameter. May include units, ordering, and other        
	// descriptions.                                                                            
	ProcessingParameterValue                                                            *string `json:"ProcessingParameterValue,omitempty"`
}

// A set of picks related to seismic processing geometry which define a surface.  The
// geometry used is referenced by the Interpretation Project. This is specialisation of
// GenericRepresentation.
type SeismicHorizon struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicHorizonData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type SeismicHorizonData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The relationship to the HorizonInterpretation that this SeismicHorizon representation is                                                
	// related to. This named property is intended to limit the AbstractRepresentation target                                                  
	// property to a `HorizonInterpretation` for simplicity and clarity.                                                                       
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// The explicit bin grid geometry for this horizon overriding the geometry defined by the                                                  
	// parent Seismic3DInterpretationSet. If empty and Seismic3DInterpretationSetID is                                                         
	// populated, the Seismic3DInterpretationSet.SeismicBinGridID applies.                                                                     
	BinGridID                                                                                   *string                                        `json:"BinGridID,omitempty"`
	// Largest crossline picked in surface.                                                                                                    
	CrosslineMax                                                                                *float64                                       `json:"CrosslineMax,omitempty"`
	// Smallest crossline picked in surface.                                                                                                   
	CrosslineMin                                                                                *float64                                       `json:"CrosslineMin,omitempty"`
	// Describes the domain of the interpretation, for example, Depth, Time and Mixed domain                                                   
	// types.                                                                                                                                  
	// The property is added here to be human friendly and support search use cases.                                                           
	// This information is also captured in the `Horizon Interpretation` and abstract                                                          
	// Interpretation fragment. Please be mindful to keep both properties synchronised                                                         
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Geological Unit (formation, bioevent, etc.) Name                                                                                        
	GeologicalUnitName                                                                          *string                                        `json:"GeologicalUnitName,omitempty"`
	// Largest inline picked in surface.                                                                                                       
	InlineMax                                                                                   *float64                                       `json:"InlineMax,omitempty"`
	// Smallest inline picked in surface.                                                                                                      
	InlineMin                                                                                   *float64                                       `json:"InlineMin,omitempty"`
	// The person or team who interpreted the horizon.                                                                                         
	Interpreter                                                                                 *string                                        `json:"Interpreter,omitempty"`
	// A petroleum system element such as Reservoir, Source, Seal, etc.                                                                        
	PetroleumSystemElementTypeID                                                                *string                                        `json:"PetroleumSystemElementTypeID,omitempty"`
	// An array of remarks, typically from the interpreter,  providing a comment or general                                                    
	// explanation of the horizon.                                                                                                             
	Remark                                                                                      []AbstractRemark                               `json:"Remark,omitempty"`
	// The RepresentationRole assigned to this SeismicHorizon. Examples: Pick, Map.                                                            
	RepresentationRole                                                                          *string                                        `json:"RepresentationRole,omitempty"`
	// The RepresentationType for this representation. For a SeismicHorizon this is typically a                                                
	// Regular2DGrid or Polyline Sets. However, this can also be a set of points such as Inline,                                               
	// Crossline, X, Y, Z values extracted from an Irregular2DGrid.                                                                            
	RepresentationType                                                                          *string                                        `json:"RepresentationType,omitempty"`
	// For picks on 2D datasets, reference to the 2D interpretation set (not the application                                                   
	// project nor an acquisition survey) that supported this interpretation.  The seismic                                                     
	// geometries (seismic line geometries) needed to interpret the location references are                                                    
	// inferred through the interpretation survey.  The WPC SpatialArea may reflect the lines                                                  
	// that have the horizon picked on it for shallow search purposes.  Only this or                                                           
	// Seismic3DInterpretationSetID may be used, but not both.                                                                                 
	Seismic2DInterpretationSetID                                                                *string                                        `json:"Seismic2DInterpretationSetID,omitempty"`
	// For picks on 3D datasets, reference to the 3D interpretation set (not the application                                                   
	// project nor an acquisition survey) that supported this interpretation.  The seismic                                                     
	// geometry (bin grid) needed to interpret the location references is inferred through the                                                 
	// interpretation survey and no longer explicitly through this object.  The WPC SpatialArea                                                
	// may reflect the survey area that has the horizon picked on it for shallow search                                                        
	// purposes.  Only this or Seismic2DInterpretationSetID may be used, but not both.                                                         
	Seismic3DInterpretationSetID                                                                *string                                        `json:"Seismic3DInterpretationSetID,omitempty"`
	// The type of seismic attribute that characterizes the horizon, such as a peak, trough,                                                   
	// plus-to-minus zero crossing, minus-to-plus zero crossing, or envelope                                                                   
	SeismicHorizonTypeID                                                                        *string                                        `json:"SeismicHorizonTypeID,omitempty"`
	// The list of explicit 2D seismic line geometries overriding any definitions inferred from                                                
	// Seismic2DInterpretationSet. If empty and Seismic2DInterpretationSetID is populated,                                                     
	// Seismic2DInterpretationSet.SeismicLineGeometries[].SeismicLineGeometryID apply.                                                         
	SeismicLineGeometryIDs                                                                      []string                                       `json:"SeismicLineGeometryIDs,omitempty"`
	// The picking method used for the seismic horizon, for example, Primary seed pick,                                                        
	// Interpolated seed pick, Auto tracked seed pick, Mixed, etc.                                                                             
	SeismicPickingTypeID                                                                        *string                                        `json:"SeismicPickingTypeID,omitempty"`
	// The 2D or 3D seismic trace data sets that the horizon has been picked on. This can be one                                               
	// or many SeismicTraceDataIDs.                                                                                                            
	SeismicTraceDataIDs                                                                         []string                                       `json:"SeismicTraceDataIDs,omitempty"`
	// An array capturing the classification of Confidence, Quality & Strength applicable to                                                   
	// this interpretation. This is different to data quality                                                                                  
	SubjectiveClassificationRatingIDs                                                           []string                                       `json:"SubjectiveClassificationRatingIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// The 2D processing geometry of a 2D seismic line.  This is not the navigation (acquisition
// surface geometry). The fully sampled geometry is contained in the work product
// component's file.  This shows the relationship between CMP, X, Y, and station label. The
// ends and bends version for mapping purposes is in the work product component's spatial
// area.  The Name universal property is essential for describing the Line Name.
type SeismicLineGeometry struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicLineGeometryData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SeismicLineGeometryData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Smallest CMP number in geometry definition.                                                                                             
	FirstCMP                                                                                    *float64                                       `json:"FirstCMP,omitempty"`
	// SpatialLocation corresponding to FirstCMP.                                                                                              
	FirstLocation                                                                               *AbstractSpatialLocation                       `json:"FirstLocation,omitempty"`
	// Station label (such as shot point name) corresponding to FirstCMP                                                                       
	FirstStationLabel                                                                           *string                                        `json:"FirstStationLabel,omitempty"`
	// Indicates that CMP numbering increases regularly by 1.                                                                                  
	HasCMPIncreaseByOne                                                                         *bool                                          `json:"HasCMPIncreaseByOne,omitempty"`
	// Indicates that the station label (SP name) changes monotonically with respect to CMP.                                                   
	HasMonotonicLabelling                                                                       *bool                                          `json:"HasMonotonicLabelling,omitempty"`
	// Reference to CRS of CMP table File if absent from File or given ambiguously.                                                            
	HorizontalCRSID                                                                             *string                                        `json:"HorizontalCRSID,omitempty"`
	// Largest CMP number in geometry definition.                                                                                              
	LastCMP                                                                                     *float64                                       `json:"LastCMP,omitempty"`
	// SpatialLocation corresponding to LastCMP.                                                                                               
	LastLocation                                                                                *AbstractSpatialLocation                       `json:"LastLocation,omitempty"`
	// Station label (such as shot point name) corresponding to LastCMP                                                                        
	LastStationLabel                                                                            *string                                        `json:"LastStationLabel,omitempty"`
	// SRN reference to the Line concept that comprises all the 2D geometries belonging to the                                                 
	// same seismic transect, of which this one is a part.                                                                                     
	NotionalSeismicLineID                                                                       *string                                        `json:"NotionalSeismicLineID,omitempty"`
	// Reference to the Seismic2DInterpretationSet which collects the favored geometries in an                                                 
	// area or interpretation set.                                                                                                             
	Preferred2DInterpretationSetID                                                              *string                                        `json:"Preferred2DInterpretationSetID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A single logical dataset containing seismic samples.
type SeismicTraceData struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicTraceDataData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SeismicTraceDataData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Reference to the WPC which describes the node positions of the processed bin centers.                                                    
	// These are indexed from the trace file using inline and crossline.                                                                        
	BinGridID                                                                                    *string                                        `json:"BinGridID,omitempty"`
	// Actual nominal fold of the trace data set as processed, expressed as the mode in                                                         
	// percentage points (60 fold = 6000%).                                                                                                     
	CoveragePercent                                                                              *float64                                       `json:"CoveragePercent,omitempty"`
	// Sampling interval of crosslines in this dataset (difference in labels between neighboring                                                
	// crosslines).                                                                                                                             
	CrosslineIncrement                                                                           *float64                                       `json:"CrosslineIncrement,omitempty"`
	// Largest Xline/Cross line/Bin Value                                                                                                       
	CrosslineMax                                                                                 *float64                                       `json:"CrosslineMax,omitempty"`
	// Smallest Xline/Cross line/Bin Value                                                                                                      
	CrosslineMin                                                                                 *float64                                       `json:"CrosslineMin,omitempty"`
	// Indicates if the volume is a product of the difference between 4D surveys                                                                
	Difference                                                                                   *bool                                          `json:"Difference,omitempty"`
	// The sample axis value in the vertical dimension at which Depth formatted data ends. Use                                                  
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                   
	// estimated.                                                                                                                               
	EndDepth                                                                                     *float64                                       `json:"EndDepth,omitempty"`
	// The sample axis value in the vertical dimension at which Time formatted data starts. Use                                                 
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                   
	// estimated.                                                                                                                               
	EndTime                                                                                      *float64                                       `json:"EndTime,omitempty"`
	// First Common Mid Point                                                                                                                   
	FirstCMP                                                                                     *float64                                       `json:"FirstCMP,omitempty"`
	// The shotpoint that came before all others                                                                                                
	FirstShotPoint                                                                               *float64                                       `json:"FirstShotPoint,omitempty"`
	// Pre-stack: the type of gathers in this dataset.                                                                                          
	GatherTypeID                                                                                 *string                                        `json:"GatherTypeID,omitempty"`
	// Coordinate reference system of positions in trace header, which matches what is described                                                
	// in BinGrid but is repeated here for convenience and in case bin grid is not defined.  In                                                 
	// case of conflict with Bin Grid, this value applies to the coordinates as written into                                                    
	// CMPX, CMPY headers. Nevertheless, Bin Grid should be used for mapping purposes.                                                          
	HorizontalCRSID                                                                              *string                                        `json:"HorizontalCRSID,omitempty"`
	// Sampling interval of inlines in this dataset (difference in labels between neighboring                                                   
	// inlines).                                                                                                                                
	InlineIncrement                                                                              *float64                                       `json:"InlineIncrement,omitempty"`
	// Largest Inline/Line/Track value                                                                                                          
	InlineMax                                                                                    *float64                                       `json:"InlineMax,omitempty"`
	// Smallest Inline/Line/Track value                                                                                                         
	InlineMin                                                                                    *float64                                       `json:"InlineMin,omitempty"`
	// Last Common Mid Point                                                                                                                    
	LastCMP                                                                                      *float64                                       `json:"LastCMP,omitempty"`
	// The last shotpoint represented by the data                                                                                               
	LastShotPoint                                                                                *float64                                       `json:"LastShotPoint,omitempty"`
	// Polygon showing the coverage of live traces in the trace dataset                                                                         
	LiveTraceOutline                                                                             *AbstractSpatialLocation                       `json:"LiveTraceOutline,omitempty"`
	// DEPRECATED: Please use SeismicPhaseID for better interoperability. Amount of phase                                                       
	// rotation applied to data                                                                                                                 
	Phase                                                                                        *string                                        `json:"Phase,omitempty"`
	// DEPRECATED: Please use SeismicPolarityID for better interoperability.  Reflection                                                        
	// polarity of embedded wavelet.  Normal, Reverse, Plus 90, Minus 90 according to SEG                                                       
	// standard.                                                                                                                                
	Polarity                                                                                     *string                                        `json:"Polarity,omitempty"`
	// Sample data format in terms of sample value precision 8bit Integer, 16bit Floating Point                                                 
	// etc.                                                                                                                                     
	Precision                                                                                    *FluffyPrecision                               `json:"Precision,omitempty"`
	// For a 2D line section, SRN of the Seismic2DInterpretationSet which can be considered the                                                 
	// master for the area and of which this trace dataset is a privileged member.  It defines                                                  
	// the set of trace datasets of a particular cohesive set of 2D processing geometries in a                                                  
	// survey area that form the best set for interpretation (not an acquisition survey).                                                       
	Preferred2DInterpretationSetID                                                               *string                                        `json:"Preferred2DInterpretationSetID,omitempty"`
	// For a 3D volume (including linear subsets), the id of the Seismic3DInterpretationSet                                                     
	// which can be considered the master for the area and of which this trace dataset is a                                                     
	// privileged member.  It defines the set of trace datasets of a particular bin grid that                                                   
	// form the best set for interpretation (not an acquisition survey).                                                                        
	Preferred3DInterpretationSetID                                                               *string                                        `json:"Preferred3DInterpretationSetID,omitempty"`
	// For most datasets, the acquisition project that generated the underlying field data.  For                                                
	// merges, probably absent (see processing project for set of acquisition projects used in                                                  
	// processing this dataset).                                                                                                                
	PrincipalAcquisitionProjectID                                                                *string                                        `json:"PrincipalAcquisitionProjectID,omitempty"`
	// Processing Parameters to simply capture process history until full provenance model can                                                  
	// be implemented.                                                                                                                          
	ProcessingParameters                                                                         []PurpleProcessingParameters                   `json:"ProcessingParameters,omitempty"`
	// The processing project from which this trace dataset was produced.  Absent for field data.                                               
	ProcessingProjectID                                                                          *string                                        `json:"ProcessingProjectID,omitempty"`
	// The actual maximum amplitude value found in the dataset.                                                                                 
	RangeAmplitudeMax                                                                            *float64                                       `json:"RangeAmplitudeMax,omitempty"`
	// The actual minimum amplitude value found in the dataset.                                                                                 
	RangeAmplitudeMin                                                                            *float64                                       `json:"RangeAmplitudeMin,omitempty"`
	// Value used to produce vertical static shifts in data                                                                                     
	ReplacementVelocity                                                                          *float64                                       `json:"ReplacementVelocity,omitempty"`
	// Number of samples in the vertical direction.                                                                                             
	SampleCount                                                                                  *int64                                         `json:"SampleCount,omitempty"`
	// Vertical sampling interval of data.                                                                                                      
	SampleInterval                                                                               *float64                                       `json:"SampleInterval,omitempty"`
	// 2D line name or survey name for the 2D group                                                                                             
	Seismic2DName                                                                                *string                                        `json:"Seismic2DName,omitempty"`
	// ID of the Seismic Trace Data Type                                                                                                        
	SeismicAttributeTypeID                                                                       *string                                        `json:"SeismicAttributeTypeID,omitempty"`
	// ID of the nature of the vertical axis in the trace data set, usually Depth or Time.                                                      
	SeismicDomainTypeID                                                                          *string                                        `json:"SeismicDomainTypeID,omitempty"`
	// ID of the Seismic Filtering Type                                                                                                         
	SeismicFilteringTypeID                                                                       *string                                        `json:"SeismicFilteringTypeID,omitempty"`
	// Reference to Seismic Line Geometry for 2D seismic processing which describes the node                                                    
	// positions of the processed bin centers.  These are indexed from the trace file using CMP                                                 
	// (not trace number).                                                                                                                      
	SeismicLineGeometryID                                                                        *string                                        `json:"SeismicLineGeometryID,omitempty"`
	// ID of the Seismic Migration Data Type                                                                                                    
	SeismicMigrationTypeID                                                                       *string                                        `json:"SeismicMigrationTypeID,omitempty"`
	// Reference to the reference-data--SeismicPhase value describing the wavelet phase as                                                      
	// estimated/processed for this SeismicTraceData instance.                                                                                  
	SeismicPhaseID                                                                               *string                                        `json:"SeismicPhaseID,omitempty"`
	// Reference to the reference-data--SeismicPolarity value describing the polarity for this                                                  
	// SeismicTraceData instance.                                                                                                               
	SeismicPolarityID                                                                            *string                                        `json:"SeismicPolarityID,omitempty"`
	// It specifies if the seismic is as acquired, or has been manipulated by a process or                                                      
	// workflow before arriving at its current state.                                                                                           
	SeismicProcessingStageTypeID                                                                 *string                                        `json:"SeismicProcessingStageTypeID,omitempty"`
	// ID of the Seismic Stacking Type                                                                                                          
	SeismicStackingTypeID                                                                        *string                                        `json:"SeismicStackingTypeID,omitempty"`
	// The dimensionality of trace data sets (not as acquired but as in the dataset), such as                                                   
	// 2D, 3D, 4D.                                                                                                                              
	SeismicTraceDataDimensionalityTypeID                                                         *string                                        `json:"SeismicTraceDataDimensionalityTypeID,omitempty"`
	// The observed wave mode type in this trace data set (P, Sv, etc).                                                                         
	SeismicWaveTypeID                                                                            *string                                        `json:"SeismicWaveTypeID,omitempty"`
	// Indicates how much the data has been shifted from the Vertical Datum (seismic reference                                                  
	// datum) in the domain and units of SeismicDomainType and in the sense that a positive                                                     
	// number causes a sample to move downward in physical space (lower elevation).                                                             
	ShiftApplied                                                                                 *float64                                       `json:"ShiftApplied,omitempty"`
	// Defines the sorting order of the trace data as stored in the file(s).                                                                    
	SortOrderID                                                                                  *string                                        `json:"SortOrderID,omitempty"`
	// Post-stack: The stacking angle range maximum used during processing of this trace data                                                   
	// set.                                                                                                                                     
	StackAngleRangeMax                                                                           *float64                                       `json:"StackAngleRangeMax,omitempty"`
	// Post-stack: The stacking angle range minimum used during processing of this trace data                                                   
	// set.                                                                                                                                     
	StackAngleRangeMin                                                                           *float64                                       `json:"StackAngleRangeMin,omitempty"`
	// Pre-stack: Sets of trace angle ranges contained within this data set.                                                                    
	StackAngleRanges                                                                             []StackAngleRangeElement                       `json:"StackAngleRanges,omitempty"`
	// Post-stack: The stacking azimuth range maximum used during processing of this trace data                                                 
	// set.                                                                                                                                     
	StackAzimuthRangeMax                                                                         *float64                                       `json:"StackAzimuthRangeMax,omitempty"`
	// Post-stack: The stacking azimuth range minimum used during processing of this trace data                                                 
	// set.                                                                                                                                     
	StackAzimuthRangeMin                                                                         *float64                                       `json:"StackAzimuthRangeMin,omitempty"`
	// Pre-stack: Sets of trace azimuth ranges contained within this data set.                                                                  
	StackAzimuthRanges                                                                           []StackAzimuthRangeElement                     `json:"StackAzimuthRanges,omitempty"`
	// Post-stack: The stacking offset range maximum used during processing of this trace data                                                  
	// set.                                                                                                                                     
	StackOffsetRangeMax                                                                          *float64                                       `json:"StackOffsetRangeMax,omitempty"`
	// Post-stack: The stacking offset range minimum used during processing of this trace data                                                  
	// set.                                                                                                                                     
	StackOffsetRangeMin                                                                          *float64                                       `json:"StackOffsetRangeMin,omitempty"`
	// Pre-stack: Sets of trace offset ranges contained within this data set.                                                                   
	StackOffsetRanges                                                                            []LengthRange                                  `json:"StackOffsetRanges,omitempty"`
	// The sample axis value in the vertical dimension at which Depth formatted data starts. Use                                                
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                   
	// estimated.                                                                                                                               
	StartDepth                                                                                   *float64                                       `json:"StartDepth,omitempty"`
	// The sample axis value in the vertical dimension at which Time formatted data starts. Use                                                 
	// SeismicDomainType to know which of time or depth pairs is the actual range vs. what is                                                   
	// estimated.                                                                                                                               
	StartTime                                                                                    *float64                                       `json:"StartTime,omitempty"`
	// Character metadata from headers inside file, such as the EBCDIC header of SEGY.  This is                                                 
	// an array to capture each stanza separately.                                                                                              
	TextualFileHeader                                                                            []string                                       `json:"TextualFileHeader,omitempty"`
	// The contents positions the SeismicTraceData record in context of a time series. This is                                                  
	// to be used for time lapse or 4D SeismicTraceData. This structure is optional and absent                                                  
	// for SeismicTraceData not part of a time series.                                                                                          
	TimeLapse                                                                                    *TimeLapse                                     `json:"TimeLapse,omitempty"`
	// How many traces are in the volume                                                                                                        
	TraceCount                                                                                   *int64                                         `json:"TraceCount,omitempty"`
	// UOM for vertical trace domain values                                                                                                     
	TraceDomainUOM                                                                               *string                                        `json:"TraceDomainUOM,omitempty"`
	// Maximum trace length calculated using depth or time start and end points as appropriate                                                  
	// according to SeismicDomainType.                                                                                                          
	TraceLength                                                                                  *float64                                       `json:"TraceLength,omitempty"`
	// The SRN of a file within the WPC that shows the relationship between trace index and CMP                                                 
	// number if the trace data file CMP header is unreliable (for 2D).                                                                         
	TraceRelationFileID                                                                          *string                                        `json:"TraceRelationFileID,omitempty"`
	// Datum value, the elevation of zero time/depth on the vertical axis in the domain of                                                      
	// SeismicDomainType relative to the vertical reference datum used (usually MSL). Positive                                                  
	// is upward from zero elevation to seismic datum).                                                                                         
	VerticalDatumOffset                                                                          *float64                                       `json:"VerticalDatumOffset,omitempty"`
	// Identifies a vertical reference datum type. E.g. mean sea level, ground level, mudline.                                                  
	VerticalMeasurementTypeID                                                                    *string                                        `json:"VerticalMeasurementTypeID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Sample data format in terms of sample value precision 8bit Integer, 16bit Floating Point
// etc.
type FluffyPrecision struct {
	// SRN of a reference value for binary data types, such as INT, UINT, FLOAT, IBM_FLOAT,        
	// ASCII, EBCDIC.                                                                              
	WordFormat                                                                             *string `json:"WordFormat,omitempty"`
	// Size of the word in bytes.                                                                  
	WordWidth                                                                              *int64  `json:"WordWidth,omitempty"`
}

// Processing Parameters to simply capture process history until full provenance model can
// be implemented.
type PurpleProcessingParameters struct {
	// Processing Parameter Type                                                                
	ProcessingParameterTypeID                                                           *string `json:"ProcessingParameterTypeID,omitempty"`
	// The quantity for the processing parameter. May include units, ordering, and other        
	// descriptions.                                                                            
	ProcessingParameterValue                                                            *string `json:"ProcessingParameterValue,omitempty"`
}

// A range container carrying minimum/maximum angle values.
type StackAngleRangeElement struct {
	// The maximum angle value.         
	Maximum                    *float64 `json:"Maximum,omitempty"`
	// The minimum angle value.         
	Minimum                    *float64 `json:"Minimum,omitempty"`
}

// A range container carrying minimum/maximum angle values.
type StackAzimuthRangeElement struct {
	// The maximum angle value.         
	Maximum                    *float64 `json:"Maximum,omitempty"`
	// The minimum angle value.         
	Minimum                    *float64 `json:"Minimum,omitempty"`
}

// A range container carrying minimum/maximum angle values.
type LengthRange struct {
	// The maximum length value.         
	Maximum                     *float64 `json:"Maximum,omitempty"`
	// The minimum length value.         
	Minimum                     *float64 `json:"Minimum,omitempty"`
}

// The contents positions the SeismicTraceData record in context of a time series. This is
// to be used for time lapse or 4D SeismicTraceData. This structure is optional and absent
// for SeismicTraceData not part of a time series.
type TimeLapse struct {
	// The index into the TimeSeriesID's data.UTCDateTimeValues[] or data.GeologicTimeValues[]        
	// arrays.                                                                                        
	TimeIndex                                                                                 *int64  `json:"TimeIndex,omitempty"`
	// The relationship to a TimeSeries work-product-component.                                       
	TimeSeriesID                                                                              *string `json:"TimeSeriesID,omitempty"`
}

// Soil Gas Monitoring is a type of environmental monitoring. Environment monitoring
// consists of tools, techniques and processes designed to observe an environment and
// characterise its quality for the purpose of accurately quantifying the impact an activity
// has on an environment. Other environmental monitoring types or techniques include air,
// water, contamination and erosion monitoring. And data is typically comprised of baseline
// and subsequent temporal data sets.
type SoilGasMonitoring struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SoilGasMonitoringData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type SoilGasMonitoringData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// An array which lists the start and end date of the acquisition data                                                                     
	AcquisitionDateRanges                                                                       []FluffyAcquisitionDateRanges                  `json:"AcquisitionDateRanges,omitempty"`
	// Analytical method used by laboratory to complete analysis testing                                                                       
	AnalysisMethodID                                                                            *string                                        `json:"AnalysisMethodID,omitempty"`
	// What the application or situational setting that the data is being used for or acquired                                                 
	// within, for example; carbon capture & storage, depleted oil or gas field, water                                                         
	// reservoir, producing oil or gas, fracking, etc                                                                                          
	ApplicationID                                                                               *string                                        `json:"ApplicationID,omitempty"`
	// Free text string to classify different depth zones                                                                                      
	DepthTag                                                                                    *string                                        `json:"DepthTag,omitempty"`
	// Free text formation name. Use GeologicUnitInterpretationIDs,                                                                            
	// StratigraphicUnitInterpretations wherever possible                                                                                      
	FormationName                                                                               *string                                        `json:"FormationName,omitempty"`
	// An array of StratigraphicUnitInterpretationIds associated to this interval of interest.                                                 
	// Typically populated in an enrichment step using information from FormationName                                                          
	GeologicUnitInterpretationIDs                                                               []string                                       `json:"GeologicUnitInterpretationIDs,omitempty"`
	// Is this the baseline measurements                                                                                                       
	IsBaseline                                                                                  *bool                                          `json:"IsBaseline,omitempty"`
	// Unique or Distinctive Reference Number, Job Number, File Number, Identifier, Label, Name,                                               
	// etc. as indicated on a report, file, etc                                                                                                
	ReferenceIdentifier                                                                         *string                                        `json:"ReferenceIdentifier,omitempty"`
	// Methodology for how the sample was acquired                                                                                             
	SamplingMethodID                                                                            *string                                        `json:"SamplingMethodID,omitempty"`
	// One or more wellbores associated with the sample/test location. Leave empty if the                                                      
	// sample/test location is NOT a wellbore. General locations will inherited WPC spatial area                                               
	// or spatial point                                                                                                                        
	WellboreIDs                                                                                 []string                                       `json:"WellboreIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Defines the start and end date of data acquisition with a remark
type FluffyAcquisitionDateRanges struct {
	// End date of the data acquisition          
	EndDate                              *string `json:"EndDate,omitempty"`
	// Optional free text description            
	Remark                               *string `json:"Remark,omitempty"`
	// Start date of the data acquisition        
	StartDate                            *string `json:"StartDate,omitempty"`
}

// Parent object for all the information for one Frac / Stimulation Job within a
// Well/Wellbore. A Stimulation Job can be associated to one or more Stimulation Stages with
// each Stage having one or more Job Steps.
type StimulationJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *StimulationJobData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type StimulationJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Date and time at which the stimulation contractor arrives on location.                                                                  
	ArrivalDateTime                                                                             *time.Time                                     `json:"ArrivalDateTime,omitempty"`
	// Bottomhole static temperature for the job (BHST)                                                                                        
	BHStaticTemperature                                                                         *float64                                       `json:"BHStaticTemperature,omitempty"`
	// Expected or calculated bottomhole treating temperature for the job.                                                                     
	BHTreatingTemperature                                                                       *float64                                       `json:"BHTreatingTemperature,omitempty"`
	// Total clean volume pumped for all job stages during this stim job.  Clean volume is                                                     
	// amount of fluid before proppant is added.                                                                                               
	CleanTotalVolume                                                                            *float64                                       `json:"CleanTotalVolume,omitempty"`
	// Identifier of service company performing the stimulation job.                                                                           
	ContractorID                                                                                *string                                        `json:"ContractorID,omitempty"`
	// Pressure recorded on fluid returning to surface.                                                                                        
	FlowBackPressure                                                                            *float64                                       `json:"FlowBackPressure,omitempty"`
	// Flow rate recorded on fluid returning to surface.                                                                                       
	FlowBackRate                                                                                *float64                                       `json:"FlowBackRate,omitempty"`
	// Volume recorded on fluid returning to surface.                                                                                          
	FlowBackVolume                                                                              *float64                                       `json:"FlowBackVolume,omitempty"`
	// Volume ratio of fluid in the fracture at the end of pumping.                                                                            
	FluidEfficiency                                                                             *float64                                       `json:"FluidEfficiency,omitempty"`
	// Maximum job fluid pumping rate encountered during treatment of all stages.                                                              
	FluidPumpingRateMax                                                                         *float64                                       `json:"FluidPumpingRateMax,omitempty"`
	// Hydraulic horsepower ordered for the stimulation job.                                                                                   
	HhpOrdered                                                                                  *float64                                       `json:"HhpOrdered,omitempty"`
	// Hydraulic horsepower actually used for the stimulation job.                                                                             
	HhpUsed                                                                                     *float64                                       `json:"HhpUsed,omitempty"`
	// Hole Section stimulation job performed in.                                                                                              
	HoleSectionID                                                                               *string                                        `json:"HoleSectionID,omitempty"`
	// Is the stimulation conveyed via coiled tubing?                                                                                          
	IsCoiledTubingConveyed                                                                      *bool                                          `json:"IsCoiledTubingConveyed,omitempty"`
	// Ending date and time of the stimulation job.                                                                                            
	JobEndDateTime                                                                              *time.Time                                     `json:"JobEndDateTime,omitempty"`
	// Name of the stimulation job.                                                                                                            
	JobName                                                                                     *string                                        `json:"JobName,omitempty"`
	// Average pressure encountered during treatment of all stages.                                                                            
	JobPressureAvg                                                                              *float64                                       `json:"JobPressureAvg,omitempty"`
	// Maximum pressure encountered during the job.                                                                                            
	JobPressureMax                                                                              *float64                                       `json:"JobPressureMax,omitempty"`
	// Start date and time of the stimulation job.                                                                                             
	JobStartDateTime                                                                            *time.Time                                     `json:"JobStartDateTime,omitempty"`
	// Total volume pumped for all stages.                                                                                                     
	JobTotalVolume                                                                              *float64                                       `json:"JobTotalVolume,omitempty"`
	// Identifier of the type of well stimulation job                                                                                          
	JobTypeID                                                                                   string                                         `json:"JobTypeID"`
	// Object that contains the Additives and Proppants on location and used in the stimulation                                                
	// job.                                                                                                                                    
	MaterialCatalog                                                                             []MaterialCatalogue                            `json:"MaterialCatalog,omitempty"`
	// Total amount of materials used for the Stimulation Job.                                                                                 
	MaterialUsed                                                                                []AbstractStimMaterialQuantity                 `json:"MaterialUsed,omitempty"`
	// Total length of stimulated interval for this stim job.                                                                                  
	OpenHoleLength                                                                              *float64                                       `json:"OpenHoleLength,omitempty"`
	// Name of Operator Representative/Supervisor                                                                                              
	OperatorRepresentative                                                                      *string                                        `json:"OperatorRepresentative,omitempty"`
	// Operator Representative Remarks                                                                                                         
	OperatorRepresentativeRemarks                                                               *string                                        `json:"OperatorRepresentativeRemarks,omitempty"`
	// The ratio of proppant placed in formation vs proppant pumped                                                                            
	PadPercent                                                                                  *float64                                       `json:"PadPercent,omitempty"`
	// Petroleum Industry Data Exchange (PIDX) UNSPSC (Segment 71) commodity code from the oil                                                 
	// and gas extraction and production enhancement services family.                                                                          
	PIDXCommodityCodeID                                                                         *string                                        `json:"PIDXCommodityCodeID,omitempty"`
	// The total mass of proppant placed in the formation for the entire stim job.                                                             
	ProppantInFormationTotal                                                                    *float64                                       `json:"ProppantInFormationTotal,omitempty"`
	// The total mass of proppant used (pumped) for the entire stim job.                                                                       
	ProppantUsedTotal                                                                           *float64                                       `json:"ProppantUsedTotal,omitempty"`
	// The total pumping time/duration for the entire stim job.                                                                                
	PumpTimeTotal                                                                               *float64                                       `json:"PumpTimeTotal,omitempty"`
	// General remarks about this Stim Job.                                                                                                    
	Remarks                                                                                     *string                                        `json:"Remarks,omitempty"`
	// Integer Number of stages treated during the stimulation job.                                                                            
	StageCount                                                                                  *int64                                         `json:"StageCount,omitempty"`
	// Name of the service company supervisor.                                                                                                 
	Supervisor                                                                                  *string                                        `json:"Supervisor,omitempty"`
	// ID to the Zero Depth Point Vertical Measure elevation for depths contained in the                                                       
	// stimulation job, job stages and other objects used to correlate MDs to original drilling                                                
	// rig MD. References an entry in the Vertical Measurement array for the Well parented by                                                  
	// the wellbore via WellboreID.                                                                                                            
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// Water management plan identifier for this stim job.                                                                                     
	WaterManagementPlanIdentifier                                                               *string                                        `json:"WaterManagementPlanIdentifier,omitempty"`
	// Source for water used during the stim job.                                                                                              
	WaterSource                                                                                 *string                                        `json:"WaterSource,omitempty"`
	// A link to the well activity to which this stimulation job is associated.                                                                
	WellActivityID                                                                              *string                                        `json:"WellActivityID,omitempty"`
	// A link to the wellbore in which the stimulation took place.                                                                             
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	// Installed tubular through which the stimulation job is performed.                                                                       
	WellboreTubularID                                                                           *string                                        `json:"WellboreTubularID,omitempty"`
	// Log(s) associated to the Stim Job e.g. Composite Log(s)                                                                                 
	WellLog                                                                                     []string                                       `json:"WellLog,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Object that defines the additives and proppants on location and used in the stimulation
// job.
type MaterialCatalogue struct {
	// Define the additives on location and used in the stimulation job.                
	Additives                                                           []FluidAdditive `json:"Additives,omitempty"`
	// Define the proppants on location and used in the stimulation job.                
	ProppantAgents                                                      []ProppantAgent `json:"ProppantAgents,omitempty"`
}

// Properties of an additive mixed into a Drilling, Stimulation or other type of Wellbore
// Fluid.
type FluidAdditive struct {
	// Code to identify additive by supplier's product number/code.                                     
	AdditiveCode                                                                                *string `json:"AdditiveCode,omitempty"`
	// Additive type or function                                                                        
	AdditiveKindID                                                                              *string `json:"AdditiveKindID,omitempty"`
	// The name of the additive.                                                                        
	AdditiveName                                                                                string  `json:"AdditiveName"`
	// The type of additive that is used, which can represent a suppliers description or type of        
	// AdditiveKind. For example, 5% HCl could be the type when AdditiveKind=acid.                      
	AdditiveType                                                                                *string `json:"AdditiveType,omitempty"`
	// The chemical abstract service number for this additive (CAS registry number).                    
	ChemicalAbstractServiceNumber                                                               *string `json:"ChemicalAbstractServiceNumber,omitempty"`
	// The additive material type.                                                                      
	MaterialTypeID                                                                              *string `json:"MaterialTypeID,omitempty"`
	// General remarks about this fluid additive.                                                       
	Remarks                                                                                     *string `json:"Remarks,omitempty"`
	// A code used to identify the supplier of the additive.                                            
	SupplierCode                                                                                *string `json:"SupplierCode,omitempty"`
	// The name of the additive supplier.                                                               
	SupplierName                                                                                *string `json:"SupplierName,omitempty"`
}

// Defines the properties of a Proppant and it's test values.
type ProppantAgent struct {
	// Laminar flow friction coefficient.                                                                                                 
	FrictionCoefficientLaminar                                                                  *float64                                  `json:"FrictionCoefficientLaminar,omitempty"`
	// Turbulent flow friction coefficient.                                                                                               
	FrictionCoefficientTurbulent                                                                *float64                                  `json:"FrictionCoefficientTurbulent,omitempty"`
	ISO135032Properties                                                                         []StimISO135032Properties                 `json:"ISO13503_2Properties,omitempty"`
	ISO135035Point                                                                              []ISO135035PropertiesForThisProppantAgent `json:"ISO13503_5Point,omitempty"`
	// Characterizes how easily radiation passes through a material. This can be used to compute                                          
	// the concentration of proppant in a slurry using a densitometer.                                                                    
	MassAbsorptionCoefficient                                                                   *float64                                  `json:"MassAbsorptionCoefficient,omitempty"`
	// Integer high value of sieve mesh size: for 4070 sand, this value is 70. For a 70 sand                                              
	// this would be 70.                                                                                                                  
	MeshSizeHigh                                                                                *int64                                    `json:"MeshSizeHigh,omitempty"`
	// Integer low value of sieve mesh size: for 4070 sand, this value is 40.                                                             
	MeshSizeLow                                                                                 *int64                                    `json:"MeshSizeLow,omitempty"`
	// The name of the proppant.                                                                                                          
	ProppantName                                                                                *string                                   `json:"ProppantName,omitempty"`
	// Proppant type or function.                                                                                                         
	ProppantTypeID                                                                              *string                                   `json:"ProppantTypeID,omitempty"`
	// General remarks about this proppant agent.                                                                                         
	Remarks                                                                                     *string                                   `json:"Remarks,omitempty"`
	// Identifier of service company organisation providing this proppant agent for the                                                   
	// stimulation job.                                                                                                                   
	SupplierID                                                                                  *string                                   `json:"SupplierID,omitempty"`
	// The name of the proppant supplier.                                                                                                 
	SupplierName                                                                                *string                                   `json:"SupplierName,omitempty"`
	// Supplier's product number/code.                                                                                                    
	SupplierProductCode                                                                         *string                                   `json:"SupplierProductCode,omitempty"`
	// The unconfined compressive strength of the proppant.                                                                               
	UnconfinedCompressiveStrength                                                               *float64                                  `json:"UnconfinedCompressiveStrength,omitempty"`
}

// ISO13503_2 properties for this proppant agent.
type StimISO135032Properties struct {
	// The density the material would have if no intra-granular porosity is present. (e.g.                                   
	// Boyle's Law porosimetry).                                                                                             
	AbsoluteDensity                                                                             *float64                     `json:"AbsoluteDensity,omitempty"`
	// The solubility of a proppant in 12:3 HCl:HF for 30 minutes at 150°F is an indication of                               
	// the amount of soluble materials (i.e. carbonates, feldspars, iron oxides, clays, etc)                                 
	// present in the proppant.                                                                                              
	AcidSolubility                                                                              *float64                     `json:"AcidSolubility,omitempty"`
	// Apparent density excludes extra-granular porosity by placing a known mass in a volume of                              
	// fluid and determining how much of the fluid is displaced (Archimedes).                                                
	ApparentDensity                                                                             *float64                     `json:"ApparentDensity,omitempty"`
	// Bulk density includes both the proppant and the porosity. This is measured by filling a                               
	// known volume with dry proppant and measuring the weight.                                                              
	BulkDensity                                                                                 *float64                     `json:"BulkDensity,omitempty"`
	// Percentage of undesirable agglomerated discrete proppant particles which typically occurs                             
	// more with inefficiently processed natural sand proppants as opposed to manufactured                                   
	// ceramic proppants. ISO 13503-2 and API RP19C limit the mass of clusters to less than 1%.                              
	ClustersPercent                                                                             *float64                     `json:"ClustersPercent,omitempty"`
	// Crush Test Data                                                                                                       
	CrushTestData                                                                               []ISO135032CrushTestData     `json:"CrushTestData,omitempty"`
	// Crush test classification indicating the highest stress level at which a proppant                                     
	// generated no more than 10% crushed material rounded down to the nearest 1,000 psi during                              
	// a crush test. For example, a value of 14 means 14k which is 14000 psi.                                                
	KValue                                                                                      *int64                       `json:"KValue,omitempty"`
	// A mass loss (gravimetric) test method applied to coated proppants only, which determines                              
	// the mass of resin coating applied to a natural sand or manufactured proppant by means of                              
	// thorough combustion of the flammable resin from the nonflammable proppant. Reported as a                              
	// % of original mass.                                                                                                   
	LossOnIgnition                                                                              *float64                     `json:"LossOnIgnition,omitempty"`
	// The mean diameter of particles in a sample of proppant.                                                               
	MeanParticleDiameter                                                                        *float64                     `json:"MeanParticleDiameter,omitempty"`
	// The median diameter of particles in a sample of proppant.                                                             
	MedianParticleDiameter                                                                      *float64                     `json:"MedianParticleDiameter,omitempty"`
	// Krumbein Roundness Shape Factor that is a measure of the relative sharpness of grain                                  
	// corners or of grain curvature. Krumbein and Sloss (1963) are the most widely used method                              
	// of determining shape factors.                                                                                         
	Roundness                                                                                   *float64                     `json:"Roundness,omitempty"`
	// Sieve Analysis Data                                                                                                   
	SieveAnalysisData                                                                           []ISO135032SieveAnalysisData `json:"SieveAnalysisData,omitempty"`
	// Not formally part of ISO 13503.2 properties, the specific gravity is the apparent density                             
	// of the proppant divided by the density of water.                                                                      
	SpecificGravity                                                                             *float64                     `json:"SpecificGravity,omitempty"`
	// Krumbein Sphericity Shape Factor that is a measure of how closely a proppant particle                                 
	// approaches the shape of a sphere. Krumbein and Sloss (1963) are the most widely used                                  
	// method of determining shape factors.                                                                                  
	Sphericity                                                                                  *float64                     `json:"Sphericity,omitempty"`
	// A measure of water clarity, how much the material suspended in water decreases the                                    
	// passage of light through the water. Measured according to ISO 7027 and expressed in                                   
	// Formazin Nephelometric Units (FNU).                                                                                   
	TurbidityFNU                                                                                *float64                     `json:"TurbidityFNU,omitempty"`
	// A measure of water clarity, how much the material suspended in water decreases the                                    
	// passage of light through the water.   Measured according to USEPA 180.1 and expressed in                              
	// Nephelometric Turbidity Units (NTU).                                                                                  
	TurbidityNTU                                                                                *float64                     `json:"TurbidityNTU,omitempty"`
}

// ISO13503_2 crush test data for this instance of ISO13503_2 data for the proppant agent.
type ISO135032CrushTestData struct {
	// Mass percentage of fines after being exposed to stress.         
	Fines                                                     *float64 `json:"Fines,omitempty"`
	// Stress measured at a point during a crush test.                 
	Stress                                                    *float64 `json:"Stress,omitempty"`
}

// ISO13503_2 sieve analysis data for this instance of ISO13503_2 data for the proppant
// agent.
type ISO135032SieveAnalysisData struct {
	// The percentage of mass retained in the sieve.                                                    
	PercentRetained                                                                            *float64 `json:"PercentRetained,omitempty"`
	// ASTM US Standard Mesh opening size used in the sieve analysis test. To indicate Pan, use         
	// 0.                                                                                               
	SieveNumber                                                                                *int64   `json:"SieveNumber,omitempty"`
}

// ISO13503_5 point properties for this proppant agent.
type ISO135035PropertiesForThisProppantAgent struct {
	// Proppant conductivity under stress.                          
	Conductivity                                           *float64 `json:"Conductivity,omitempty"`
	// Proppant permeability under stress.                          
	Permeability                                           *float64 `json:"Permeability,omitempty"`
	// The amount of stress applied.                                
	StressApplied                                          *float64 `json:"StressApplied,omitempty"`
	// The temperature at the time measurements were taken.         
	Temperature                                            *float64 `json:"Temperature,omitempty"`
}

// Usage and maximum mass or flow rates for a material used in the Stage.
type AbstractStimMaterialQuantity struct {
	// The density of the material used.                                                                 
	Density                                                                                     *float64 `json:"Density,omitempty"`
	// The mass of material used.  This should be used without specifying any of the other               
	// material measures (e.g. volume, standard volume, etc.).                                           
	Mass                                                                                        *float64 `json:"Mass,omitempty"`
	// Rate at which mass of material is pumped/added to the fluid.                                      
	MassFlowRate                                                                                *float64 `json:"MassFlowRate,omitempty"`
	// Additive or Proppant when referenced to the Job Material Catalog                                  
	MaterialKindID                                                                              *string  `json:"MaterialKindID,omitempty"`
	// This is a reference to the name of the proppant or fluid additive in the StimJob Material         
	// Catalog.                                                                                          
	MaterialReferenceID                                                                         string   `json:"MaterialReferenceID"`
	// The standard volume of material used. Standard volume is the volume measured under the            
	// same conditions. This should be used without specifying any of the other material                 
	// measures (e.g., mass, volume, etc.).                                                              
	StdVolume                                                                                   *float64 `json:"StdVolume,omitempty"`
	// The volume of material used.  This should be used without specifying any of the other             
	// material measures (e.g. mass, standard volume, etc.).                                             
	Volume                                                                                      *float64 `json:"Volume,omitempty"`
	// The volume per volume measure of material used.  This should be used without specifying           
	// any of the other material measures (e.g. mass, density, standard volume, etc.).                   
	VolumeConcentration                                                                         *float64 `json:"VolumeConcentration,omitempty"`
	// Rate at which the volume of material is pumped/added to the fluid.                                
	VolumetricFlowRate                                                                          *float64 `json:"VolumetricFlowRate,omitempty"`
}

// A Stage treated during a Stimulation Job.
type StimulationStage struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *StimulationStageData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type StimulationStageData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The average annulus pressure for all job steps for the stage treatment.                                                                 
	AnnulusPressureAvg                                                                          *float64                                       `json:"AnnulusPressureAvg,omitempty"`
	// The highest annulus pressure for all job steps while treating the stage.                                                                
	AnnulusPressureMax                                                                          *float64                                       `json:"AnnulusPressureMax,omitempty"`
	// Average base fluid return flow rate of all Steps for this Stage.                                                                        
	BaseFluidReturnRateAvg                                                                      *float64                                       `json:"BaseFluidReturnRateAvg,omitempty"`
	// Average bottomhole flow rate for this Stage.                                                                                            
	BHPumpRateAvg                                                                               *float64                                       `json:"BHPumpRateAvg,omitempty"`
	// The average measured or calculated bottom hole temperature whilst pumping with well fluid                                               
	// injection or circulation of the wellbore at the point of interest. Point of interest is                                                 
	// generally the injection point or region of interest for the test or treatment.                                                          
	BHTreatingTemperatureAvg                                                                    *float64                                       `json:"BHTreatingTemperatureAvg,omitempty"`
	// The volume pumped for the body portion of the stage treatment.                                                                          
	BodyVolume                                                                                  *float64                                       `json:"BodyVolume,omitempty"`
	// The pressure at which the formation fractures and accepts injected fluid.                                                               
	BreakDownPressure                                                                           *float64                                       `json:"BreakDownPressure,omitempty"`
	// The average casing pressure of any step for the stage treatment.                                                                        
	CasingPressureAvg                                                                           *float64                                       `json:"CasingPressureAvg,omitempty"`
	// The highest casing pressure of any step while treating the stage.                                                                       
	CasingPressureMax                                                                           *float64                                       `json:"CasingPressureMax,omitempty"`
	// Maximum casing fluid pumping rate of any step while treating the stage.                                                                 
	CasingPumpRateMax                                                                           *float64                                       `json:"CasingPumpRateMax,omitempty"`
	// Delta time recorded for the closure of the fracture to occur during the stage treatment.                                                
	ClosureDuration                                                                             *float64                                       `json:"ClosureDuration,omitempty"`
	// An analysis parameter used in hydraulic fracture design to indicate the pressure at which                                               
	// the fracture effectively closes without proppant in place.                                                                              
	ClosurePressure                                                                             *float64                                       `json:"ClosurePressure,omitempty"`
	// Average conductivity of a fracture created during the treatment supported by proppant                                                   
	// during the stimulation services. Hydraulic conductivity, symbolically represented as K,                                                 
	// is a property of vascular plants, soil or rock, that describes the ease with which water                                                
	// can move through pore spaces or fractures. It depends on the intrinsic permeability of                                                  
	// the material and on the degree of saturation. Saturated hydraulic conductivity, Ksat,                                                   
	// describes water movement through saturated media.                                                                                       
	ConductivityAvg                                                                             *float64                                       `json:"ConductivityAvg,omitempty"`
	// The average static temperature of the wellbore injection point(s) or formation at                                                       
	// equilibrium (steady state) with no fluid or tool movement, allowing for equilibrium                                                     
	// conditions at the wellbore injection point; (DHST: down hole static temperature.                                                        
	DHStaticTemperatureAvg                                                                      *float64                                       `json:"DHStaticTemperatureAvg,omitempty"`
	// Diversion details for the stimulated interval.                                                                                          
	Diversion                                                                                   *Diversion                                     `json:"Diversion,omitempty"`
	// Details about the downhole equipment design for this stimulation interval.                                                              
	FlowPath                                                                                    *FlowPath                                      `json:"FlowPath,omitempty"`
	// Average fluid pumping rate for all job Steps while treating the Stage.                                                                  
	FluidPumpRateAvg                                                                            *float64                                       `json:"FluidPumpRateAvg,omitempty"`
	// Maximum fluid pumping rate of any Step while treating the Stage.                                                                        
	FluidPumpRateMax                                                                            *float64                                       `json:"FluidPumpRateMax,omitempty"`
	// Volume pumped during flush portion of stage treatment.                                                                                  
	FlushVolume                                                                                 *float64                                       `json:"FlushVolume,omitempty"`
	// Measured depth of the bottom of the formation.                                                                                          
	FormationBottomMeasuredDepth                                                                *float64                                       `json:"FormationBottomMeasuredDepth,omitempty"`
	// True vertical depth of the bottom of the formation.                                                                                     
	FormationBottomTrueVerticalDepth                                                            *float64                                       `json:"FormationBottomTrueVerticalDepth,omitempty"`
	// The length of formation broken (fracced) per day.                                                                                       
	FormationBreakLengthPerDay                                                                  *float64                                       `json:"FormationBreakLengthPerDay,omitempty"`
	// The name of the formation being stimulated in this job stage.                                                                           
	FormationName                                                                               *string                                        `json:"FormationName,omitempty"`
	// Measured depth of the top of the formation.                                                                                             
	FormationTopMeasuredDepth                                                                   *float64                                       `json:"FormationTopMeasuredDepth,omitempty"`
	// True vertical depth of the top of the formation.                                                                                        
	FormationTopTrueVerticalDepth                                                               *float64                                       `json:"FormationTopTrueVerticalDepth,omitempty"`
	// The formation fracture gradient for the stage after treatment.                                                                          
	FractureGradientFinal                                                                       *float64                                       `json:"FractureGradientFinal,omitempty"`
	// The formation fracture gradient for stage before treatment.                                                                             
	FractureGradientInitial                                                                     *float64                                       `json:"FractureGradientInitial,omitempty"`
	// The height of the fracture  created after treating the stage.                                                                           
	FractureHeight                                                                              *float64                                       `json:"FractureHeight,omitempty"`
	// The length of the fracture created after treating the stage.                                                                            
	FractureLength                                                                              *float64                                       `json:"FractureLength,omitempty"`
	// Average fracture width created during the treatment of the stage.                                                                       
	FractureWidthAvg                                                                            *float64                                       `json:"FractureWidthAvg,omitempty"`
	// Friction pressure loss encountered by fluid transported to stage interval.                                                              
	FrictionPressure                                                                            *float64                                       `json:"FrictionPressure,omitempty"`
	// Average hydraulic horse power used for the stage.                                                                                       
	HHPAvg                                                                                      *float64                                       `json:"HHPAvg,omitempty"`
	// Maximum hydraulic horse power used for the stage.                                                                                       
	HHPMax                                                                                      *float64                                       `json:"HHPMax,omitempty"`
	// Carbon dioxide hydraulic horsepower ordered for the stage.                                                                              
	HHPOrderedCO2                                                                               *float64                                       `json:"HHPOrderedCO2,omitempty"`
	// Fluid hydraulic horsepower ordered for the stage.                                                                                       
	HHPOrderedFluid                                                                             *float64                                       `json:"HHPOrderedFluid,omitempty"`
	// Carbon dioxide hydraulic horsepower actually used for the stage.                                                                        
	HHPUsedCO2                                                                                  *float64                                       `json:"HHPUsedCO2,omitempty"`
	// Fluid hydraulic horsepower actually used for the stage.                                                                                 
	HHPUsedFluid                                                                                *float64                                       `json:"HHPUsedFluid,omitempty"`
	// The Hole Section stimulated during this job Stage.                                                                                      
	HoleSectionID                                                                               *string                                        `json:"HoleSectionID,omitempty"`
	// Measured depth at base of the stimulated interval.                                                                                      
	IntervalBaseMeasuredDepth                                                                   *float64                                       `json:"IntervalBaseMeasuredDepth,omitempty"`
	// True Vertical depth at base of interval.                                                                                                
	IntervalBaseTrueVerticalDepth                                                               *float64                                       `json:"IntervalBaseTrueVerticalDepth,omitempty"`
	// Measured depth at the top of the stimulated interval.                                                                                   
	IntervalTopMeasuredDepth                                                                    *float64                                       `json:"IntervalTopMeasuredDepth,omitempty"`
	// True Vertical depth at top of interval.                                                                                                 
	IntervalTopTrueVerticalDepth                                                                *float64                                       `json:"IntervalTopTrueVerticalDepth,omitempty"`
	// Did screen out occur? True (true or 1) indicates that screen out occurred. False (false                                                 
	// or 0) or not given indicates otherwise.                                                                                                 
	IsScreenedOut                                                                               *bool                                          `json:"IsScreenedOut,omitempty"`
	// Timed comments for this job stage of the stim job.                                                                                      
	JobEvent                                                                                    []StimEvent                                    `json:"JobEvent,omitempty"`
	// Job Step array                                                                                                                          
	JobStep                                                                                     []JobStep                                      `json:"JobStep,omitempty"`
	// Lithostratigraphic (Formation Top name) Identifier                                                                                      
	LithostratigraphicID                                                                        *string                                        `json:"LithostratigraphicID,omitempty"`
	// Material used during this job stage. For example, proppant or gel (additive).                                                           
	MaterialUsage                                                                               []AbstractStimMaterialQuantity                 `json:"MaterialUsage,omitempty"`
	// Usage and maximum mass or volume flow rates for a material for this job stage.                                                          
	MaterialUsageRateMax                                                                        []AbstractStimMaterialQuantity                 `json:"MaterialUsageRateMax,omitempty"`
	// The difference between the pressure which holds a fracture closed (minimal principal                                                    
	// stress) and that pressure which is necessary to open the fracture.                                                                      
	NetPressure                                                                                 *float64                                       `json:"NetPressure,omitempty"`
	// The diameter of the open hole.                                                                                                          
	OpenHoleDiameter                                                                            *float64                                       `json:"OpenHoleDiameter,omitempty"`
	// A name for the open hole. To be used for open hole completions.                                                                         
	OpenHoleName                                                                                *string                                        `json:"OpenHoleName,omitempty"`
	// The percentage of volume pumped used for the pad.                                                                                       
	PadPercent                                                                                  *float64                                       `json:"PadPercent,omitempty"`
	// Volume pumped for pad portion of stage treatment.                                                                                       
	PadVolume                                                                                   *float64                                       `json:"PadVolume,omitempty"`
	// Total number of perforation balls used while treating the stage.                                                                        
	PerfBallCount                                                                               *int64                                         `json:"PerfBallCount,omitempty"`
	// The size (diameter) of the perforation balls used while treating the Stage                                                              
	PerfBallSize                                                                                *float64                                       `json:"PerfBallSize,omitempty"`
	// Set of Perforation Intervals stimulated in this stage.                                                                                  
	PerforationSet                                                                              []string                                       `json:"PerforationSet,omitempty"`
	// Perforation Set Discharge Coefficient                                                                                                   
	PerforationSetDischargeCoefficient                                                          *float64                                       `json:"PerforationSetDischargeCoefficient,omitempty"`
	// Perforation Set Friction Factor                                                                                                         
	PerforationSetFrictionFactor                                                                *float64                                       `json:"PerforationSetFrictionFactor,omitempty"`
	// Perforation Set Friction Pressure                                                                                                       
	PerforationSetFrictionPressure                                                              *float64                                       `json:"PerforationSetFrictionPressure,omitempty"`
	// The average proppant concentration at the bottom of the interval.                                                                       
	ProppantBHConcAvg                                                                           *float64                                       `json:"ProppantBHConcAvg,omitempty"`
	// The maximum proppant concentration at the bottom of the stage interval for all job steps.                                               
	ProppantBHConcMax                                                                           *float64                                       `json:"ProppantBHConcMax,omitempty"`
	// The planned, total proppant mass for this job stage.                                                                                    
	ProppantDesignMass                                                                          *float64                                       `json:"ProppantDesignMass,omitempty"`
	// The proppant height.                                                                                                                    
	ProppantHeight                                                                              *float64                                       `json:"ProppantHeight,omitempty"`
	// The weight of proppant placed in the formation.                                                                                         
	ProppantInFormationMass                                                                     *float64                                       `json:"ProppantInFormationMass,omitempty"`
	// The cumulative total amount of proppant in the formation including the current stage.                                                   
	ProppantInFormationTotal                                                                    *float64                                       `json:"ProppantInFormationTotal,omitempty"`
	// The proppant concentration at the perforations.                                                                                         
	ProppantPerforationConc                                                                     *float64                                       `json:"ProppantPerforationConc,omitempty"`
	// Total proppant mass used as a percent of the design mass.                                                                               
	ProppantPumpedPercent                                                                       *float64                                       `json:"ProppantPumpedPercent,omitempty"`
	// The average proppant concentration on the surface.                                                                                      
	ProppantSurfaceConcAvg                                                                      *float64                                       `json:"ProppantSurfaceConcAvg,omitempty"`
	// The maximum proppant concentration on the surface.                                                                                      
	ProppantSurfaceConcMax                                                                      *float64                                       `json:"ProppantSurfaceConcMax,omitempty"`
	// The weight of proppant left in the wellbore after pumping has stopped.                                                                  
	ProppantWellboreMass                                                                        *float64                                       `json:"ProppantWellboreMass,omitempty"`
	// A pumping diagnostics session for this job stage.                                                                                       
	PumpDiagnosticSession                                                                       []StimJobDiagnosticSession                     `json:"PumpDiagnosticSession,omitempty"`
	// The total pumping time for the treatment of the stage.                                                                                  
	PumpTimeTotal                                                                               *float64                                       `json:"PumpTimeTotal,omitempty"`
	// General remarks about this Stage of the Stim Job.                                                                                       
	Remarks                                                                                     *string                                        `json:"Remarks,omitempty"`
	// Identifier to the Reservoir stimulated in the Job Stage                                                                                 
	ReservoirID                                                                                 *string                                        `json:"ReservoirID,omitempty"`
	// Identifier to the Reservoir Segment stimulated in the Job Stage                                                                         
	ReservoirSegmentID                                                                          *string                                        `json:"ReservoirSegmentID,omitempty"`
	// The screen out pressure.                                                                                                                
	ScreenOutPressure                                                                           *float64                                       `json:"ScreenOutPressure,omitempty"`
	// Shut in pressure data for this job stage.                                                                                               
	ShutInPressure                                                                              []StimShutInPressure                           `json:"ShutInPressure,omitempty"`
	// The initial shut-in pressure.                                                                                                           
	ShutinPressureInitial                                                                       *float64                                       `json:"ShutinPressureInitial,omitempty"`
	// The average slurry return rate of all steps for the stage treatment.                                                                    
	SlurryReturnRateAvg                                                                         *float64                                       `json:"SlurryReturnRateAvg,omitempty"`
	// The total slurry volume pumped for all steps while treating the stage.                                                                  
	SlurryVolumeTotal                                                                           *float64                                       `json:"SlurryVolumeTotal,omitempty"`
	// Ending date and time for the stage treatment.                                                                                           
	StageEndDateTime                                                                            *time.Time                                     `json:"StageEndDateTime,omitempty"`
	// Length (along hole measured depth) of the stimulated interval.                                                                          
	StageIntervalLength                                                                         *float64                                       `json:"StageIntervalLength,omitempty"`
	// The number associated with the stage.                                                                                                   
	StageNumber                                                                                 *int64                                         `json:"StageNumber,omitempty"`
	// Starting date and time for the stage treatment.                                                                                         
	StageStartDateTime                                                                          *time.Time                                     `json:"StageStartDateTime,omitempty"`
	// The SRN of the parent Stimulation Job in which the Stage was performed.                                                                 
	StimulationJobID                                                                            *string                                        `json:"StimulationJobID,omitempty"`
	// The average pressure for treating the stage across all steps.                                                                           
	SurfacePressureAvg                                                                          *float64                                       `json:"SurfacePressureAvg,omitempty"`
	// Maximum surface pressure during treatment of the stage.                                                                                 
	SurfacePressureMax                                                                          *float64                                       `json:"SurfacePressureMax,omitempty"`
	// Text describing the technology used while pumping the stage.                                                                            
	TechnologyDescription                                                                       *string                                        `json:"TechnologyDescription,omitempty"`
	// Maximum tubing fluid pumping rate of any step while treating the stage.                                                                 
	TubingFluidRateMax                                                                          *float64                                       `json:"TubingFluidRateMax,omitempty"`
	// The average tubing pressure for the stage treatment.                                                                                    
	TubingPressureAvg                                                                           *float64                                       `json:"TubingPressureAvg,omitempty"`
	// The highest tubing pressure of any step while treating the stage.                                                                       
	TubingPressureMax                                                                           *float64                                       `json:"TubingPressureMax,omitempty"`
	// Water source description for fluid pumped during stage.                                                                                 
	WaterSource                                                                                 *string                                        `json:"WaterSource,omitempty"`
	// A link to the Well Activity to which this stimulation job was performed.                                                                
	WellActivityID                                                                              *string                                        `json:"WellActivityID,omitempty"`
	// A link to the Wellbore in which the stimulation took place.                                                                             
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	// ID to the Wellbore Marker within the Wellbore Marker Set that is stimulated in the Job                                                  
	// Stage                                                                                                                                   
	WellboreMarkerID                                                                            *string                                        `json:"WellboreMarkerID,omitempty"`
	// ID to the Wellbore Marker Set containing the Marker (Formation Top) that is stimulated in                                               
	// the Job Stage                                                                                                                           
	WellboreMarketSetID                                                                         *string                                        `json:"WellboreMarketSetID,omitempty"`
	// Log(s) associated to the Stimulation Stage                                                                                              
	WellLog                                                                                     []string                                       `json:"WellLog,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Diversion details for the stimulated interval.
type Diversion struct {
	// Name of the diversion contractor.                                                  
	ContractorName                                                               *string  `json:"ContractorName,omitempty"`
	// The diversion method used for this job stage.                                      
	DiversionMethodID                                                            *string  `json:"DiversionMethodID,omitempty"`
	// Length between packer elements.                                                    
	ElementSpacing                                                               *float64 `json:"ElementSpacing,omitempty"`
	// Remarks on the diversion method.                                                   
	Remarks                                                                      *string  `json:"Remarks,omitempty"`
	// A supplier description of the diversion tool, such as its commercial name.         
	ToolDescription                                                              *string  `json:"ToolDescription,omitempty"`
}

// Details about the downhole equipment design for this stimulation interval.
type FlowPath struct {
	// The downhole pressure at which the formation broke.                                               
	BreakDownPressure                                                                         *float64   `json:"BreakDownPressure,omitempty"`
	// The measured depth of a bridge plug.                                                              
	BridgePlugMeasuredDepth                                                                   *float64   `json:"BridgePlugMeasuredDepth,omitempty"`
	// Date that the bridge plug for this stage was removed.                                             
	BridgePlugRemovalDate                                                                     *time.Time `json:"BridgePlugRemovalDate,omitempty"`
	// The type of stim flow path.                                                                       
	FlowPathTypeID                                                                            *string    `json:"FlowPathTypeID,omitempty"`
	// The formation fracture gradient for this treatment flow path.                                     
	FractureGradient                                                                          *float64   `json:"FractureGradient,omitempty"`
	// The friction factor used to compute openhole pressure loss.                                       
	OpenHoleFrictionFactor                                                                    *float64   `json:"OpenHoleFrictionFactor,omitempty"`
	// The measured depth of a packer.                                                                   
	PackerMeasuredDepth                                                                       *float64   `json:"PackerMeasuredDepth,omitempty"`
	// The friction factor for the pipe, tubing, and/or casing.                                          
	PipeFrictionFactor                                                                        *float64   `json:"PipeFrictionFactor,omitempty"`
	// PMax prediction allows the tool assembly to be designed with expected pressures. It               
	// determines maximum allowable surface pressure and is typically calculated as a single             
	// number by which the pressure relief valves are set. This variable is the average of all           
	// the pmax pressures calculated for this flow path.                                                 
	PmaxPacPressureAvg                                                                        *float64   `json:"PmaxPacPressureAvg,omitempty"`
	// PMax prediction allows the tool assembly to be designed with expected pressures. It               
	// determines maximum allowable surface pressure and is typically calculated as a single             
	// number by which the pressure relief valves are set. This variable is the maximum of all           
	// the pmax pressures calculated for this flow path.                                                 
	PmaxPacPressureMax                                                                        *float64   `json:"PmaxPacPressureMax,omitempty"`
	// Average allowable pressure for the zone of interest with respect to the bottomhole                
	// assembly during the stimulation services.                                                         
	PmaxWeaklinkPressureAvg                                                                   *float64   `json:"PmaxWeaklinkPressureAvg,omitempty"`
	// Maximum allowable pressure for the zone of interest with respect to the bottomhole                
	// assembly during the stimulation services.                                                         
	PmaxWeaklinkPressureMax                                                                   *float64   `json:"PmaxWeaklinkPressureMax,omitempty"`
	// General remarks about the flow path for this job stage.                                           
	Remarks                                                                                   *string    `json:"Remarks,omitempty"`
	// The maximum measured depth of the tubing used for treatment of a stage.                           
	TubingBottomMeasuredDepth                                                                 *float64   `json:"TubingBottomMeasuredDepth,omitempty"`
}

// Timed comments for this job stage of the stim job.
type StimEvent struct {
	// A short description of the event.                                      
	Comment                                                        *string    `json:"Comment,omitempty"`
	// Date and time of this event.                                           
	DateTime                                                       *time.Time `json:"DateTime,omitempty"`
	// Event number.                                                          
	Number                                                         *int64     `json:"Number,omitempty"`
	// Step number. Use it to reference an existing job step entry.           
	NumberStep                                                     *int64     `json:"NumberStep,omitempty"`
}

// Summary of the pumping schedule, also known as 'pumping stages', sub-stages or event
// level details.
// This is where you define pressures, rates, volumes, amount of proppant for the
// Displacement, Flush, Pad, Ramp, etc steps in the pumping operation for this job stage.
type JobStep struct {
	// Balls recovered during execution of the step.                                                           
	BallsRecovered                                                              *int64                         `json:"BallsRecovered,omitempty"`
	// Balls used during execution of the step.                                                                
	BallsUsed                                                                   *int64                         `json:"BallsUsed,omitempty"`
	// Base fluid volume recorded after equipment set to bypass.                                               
	BaseFluidBypassVolume                                                       *float64                       `json:"BaseFluidBypassVolume,omitempty"`
	// Base quality percentage of foam.                                                                        
	BaseFluidQualityAvg                                                         *float64                       `json:"BaseFluidQualityAvg,omitempty"`
	// Base fluid volume entering the equipment.                                                               
	BaseFluidVolumeEquip                                                        *float64                       `json:"BaseFluidVolumeEquip,omitempty"`
	// Bottomhole material usage rate average.                                                                 
	BHMaterialUsedRateAvg                                                       []AbstractStimMaterialQuantity `json:"BHMaterialUsedRateAvg,omitempty"`
	// Bottomhole material usage rate end.                                                                     
	BHMaterialUsedRateEnd                                                       []AbstractStimMaterialQuantity `json:"BHMaterialUsedRateEnd,omitempty"`
	// Bottomhole material usage rate start.                                                                   
	BHMaterialUsedRateStart                                                     []AbstractStimMaterialQuantity `json:"BHMaterialUsedRateStart,omitempty"`
	// Average bottomhole pressure.                                                                            
	BHPressureAvg                                                               *float64                       `json:"BHPressureAvg,omitempty"`
	// Final bottomhole pressure.                                                                              
	BHPressureEnd                                                               *float64                       `json:"BHPressureEnd,omitempty"`
	// Starting bottomhole pressure.                                                                           
	BHPressureStart                                                             *float64                       `json:"BHPressureStart,omitempty"`
	// Base quality carbon dioxide percent of foam.                                                            
	CO2BaseFluidQualityAvg                                                      *float64                       `json:"CO2BaseFluidQualityAvg,omitempty"`
	// Final CO2 pump rate in volume per time at the surface.                                                  
	CO2SurfaceRateEnd                                                           *float64                       `json:"CO2SurfaceRateEnd,omitempty"`
	// A short description of the job step.                                                                    
	Description                                                                 *string                        `json:"Description,omitempty"`
	// Ending dirty fluid flow rate.                                                                           
	DirtyMaterialRateEnd                                                        *float64                       `json:"DirtyMaterialRateEnd,omitempty"`
	// Starting dirty fluid flow rate.                                                                         
	DirtyMaterialRateStart                                                      *float64                       `json:"DirtyMaterialRateStart,omitempty"`
	// Fluid used for this job step of the stimulated interval.                                                
	Fluid                                                                       *JobStepFluid                  `json:"Fluid,omitempty"`
	// The step volume of the base fluid.                                                                      
	FluidBaseVolume                                                             *float64                       `json:"FluidBaseVolume,omitempty"`
	// Fluid volume circulated.                                                                                
	FluidCirculatedVolume                                                       *float64                       `json:"FluidCirculatedVolume,omitempty"`
	// Fluid volume pumped.                                                                                    
	FluidPumpedVolume                                                           *float64                       `json:"FluidPumpedVolume,omitempty"`
	// Fluid Report Identifier of the fluid used for this Job Step                                             
	FluidReportID                                                               *string                        `json:"FluidReportID,omitempty"`
	// Fluid volume returned.                                                                                  
	FluidReturnedVolume                                                         *float64                       `json:"FluidReturnedVolume,omitempty"`
	// Fluid volume squeezed.                                                                                  
	FluidSqueezedVolume                                                         *float64                       `json:"FluidSqueezedVolume,omitempty"`
	// Average fluid temperature.                                                                              
	FluidTemperatureAvg                                                         *float64                       `json:"FluidTemperatureAvg,omitempty"`
	// Fluid volume washed.                                                                                    
	FluidWashedVolume                                                           *float64                       `json:"FluidWashedVolume,omitempty"`
	// The fracture gradient when the step ends.                                                               
	FractureGradientFinal                                                       *float64                       `json:"FractureGradientFinal,omitempty"`
	// The fracture gradient before starting the step.                                                         
	FractureGradientInitial                                                     *float64                       `json:"FractureGradientInitial,omitempty"`
	// Numeric value used to scale a calculated rheological friction.                                          
	FrictionFactor                                                              *float64                       `json:"FrictionFactor,omitempty"`
	// Average hydraulic horsepower used during the step.                                                      
	HhpAvg                                                                      *float64                       `json:"HhpAvg,omitempty"`
	// Maximum hydraulic horsepower used during the step.                                                      
	HhpMax                                                                      *float64                       `json:"HhpMax,omitempty"`
	// Internal gas phase percentage of the foam.                                                              
	InternalPhaseFractionAvg                                                    *float64                       `json:"InternalPhaseFractionAvg,omitempty"`
	// The type of  job step.                                                                                  
	JobStepTypeID                                                               *string                        `json:"JobStepTypeID,omitempty"`
	// Material used during the step                                                                           
	MaterialUsed                                                                []AbstractStimMaterialQuantity `json:"MaterialUsed,omitempty"`
	// Average material used per minute entering the flow stream.                                              
	MaterialUsedRateAvg                                                         []AbstractStimMaterialQuantity `json:"MaterialUsedRateAvg,omitempty"`
	// Ending quantity of material used per minute entering the flow stream.                                   
	MaterialUsedRateEnd                                                         []AbstractStimMaterialQuantity `json:"MaterialUsedRateEnd,omitempty"`
	// Maximum rate of material used per minute entering the flow stream.                                      
	MaterialUsedRateMax                                                         []AbstractStimMaterialQuantity `json:"MaterialUsedRateMax,omitempty"`
	// Starting quantity of material used per minute entering the flow stream.                                 
	MaterialUsedRateStart                                                       []AbstractStimMaterialQuantity `json:"MaterialUsedRateStart,omitempty"`
	// Nitrogen base quality percentage of foam.                                                               
	N2BaseFluidQualityAvg                                                       *float64                       `json:"N2BaseFluidQualityAvg,omitempty"`
	// Final nitrogen pump rate at the surface.                                                                
	N2SurfaceRateEnd                                                            *float64                       `json:"N2SurfaceRateEnd,omitempty"`
	// The friction pressure loss contribution from pipe.                                                      
	PipeFrictionPressureLoss                                                    *float64                       `json:"PipeFrictionPressureLoss,omitempty"`
	// Average proppant concentration at the wellhead.                                                         
	ProppantConcAvg                                                             *float64                       `json:"ProppantConcAvg,omitempty"`
	// The average proppant concentration at bottomhole.                                                       
	ProppantConcBHAvg                                                           *float64                       `json:"ProppantConcBHAvg,omitempty"`
	// The final proppant concentration at bottomhole.                                                         
	ProppantConcBHEnd                                                           *float64                       `json:"ProppantConcBHEnd,omitempty"`
	// Maximum proppant concentration at bottomhole during the stimulation step.                               
	ProppantConcBHMax                                                           *float64                       `json:"ProppantConcBHMax,omitempty"`
	// The initial proppant concentration at bottomhole.                                                       
	ProppantConcBHStart                                                         *float64                       `json:"ProppantConcBHStart,omitempty"`
	// The average proppant concentration at the surface.                                                      
	ProppantConcSurfaceAvg                                                      *float64                       `json:"ProppantConcSurfaceAvg,omitempty"`
	// The final proppant concentration at the surface.                                                        
	ProppantConcSurfaceEnd                                                      *float64                       `json:"ProppantConcSurfaceEnd,omitempty"`
	// Maximum proppant concentration at the wellhead.                                                         
	ProppantConcSurfaceMax                                                      *float64                       `json:"ProppantConcSurfaceMax,omitempty"`
	// The initial proppant concentration at the surface.                                                      
	ProppantConcSurfaceStart                                                    *float64                       `json:"ProppantConcSurfaceStart,omitempty"`
	// Average proppant concentration exiting the equipment.                                                   
	ProppantSlurryConcAvg                                                       *float64                       `json:"ProppantSlurryConcAvg,omitempty"`
	// Maximum proppant concentration exiting the equipment.                                                   
	ProppantSlurryConcMax                                                       *float64                       `json:"ProppantSlurryConcMax,omitempty"`
	// Total pumping time for the step.                                                                        
	PumpTime                                                                    *float64                       `json:"PumpTime,omitempty"`
	// General remarks about this job step.                                                                    
	Remarks                                                                     *string                        `json:"Remarks,omitempty"`
	// The volume of the slurry (dirty) for this job step.                                                     
	SlurryFluidVolume                                                           *float64                       `json:"SlurryFluidVolume,omitempty"`
	// Average slurry return rate.                                                                             
	SlurryReturnRateAvg                                                         *float64                       `json:"SlurryReturnRateAvg,omitempty"`
	// Date and time the step ended.                                                                           
	StepEndDateTime                                                             *time.Time                     `json:"StepEndDateTime,omitempty"`
	// A human readable name for this job step.                                                                
	StepName                                                                    *string                        `json:"StepName,omitempty"`
	// Step number.                                                                                            
	StepNumber                                                                  *int64                         `json:"StepNumber,omitempty"`
	// Date and time the step started.                                                                         
	StepStartDateTime                                                           *time.Time                     `json:"StepStartDateTime,omitempty"`
	// Average surface pressure.                                                                               
	SurfacePressureAvg                                                          *float64                       `json:"SurfacePressureAvg,omitempty"`
	// Final surface pressure.                                                                                 
	SurfacePressureEnd                                                          *float64                       `json:"SurfacePressureEnd,omitempty"`
	// Maximum pumping pressure on surface.                                                                    
	SurfacePressureMax                                                          *float64                       `json:"SurfacePressureMax,omitempty"`
	// Starting surface pressure.                                                                              
	SurfacePressureStart                                                        *float64                       `json:"SurfacePressureStart,omitempty"`
	// Average flow rate at the wellhead.                                                                      
	WellheadFlowRateAvg                                                         *float64                       `json:"WellheadFlowRateAvg,omitempty"`
	// Maximum flow rate at the wellhead.                                                                      
	WellheadFlowRateMax                                                         *float64                       `json:"WellheadFlowRateMax,omitempty"`
	// Slurry volume entering the well.                                                                        
	WellheadSlurryVolume                                                        *float64                       `json:"WellheadSlurryVolume,omitempty"`
}

// Fluid used for this job step of the stimulated interval.
type JobStepFluid struct {
	// Concentrations of additives in the fluid for this job step.                                                      
	AdditiveConcentration                                                                []AbstractStimMaterialQuantity `json:"AdditiveConcentration,omitempty"`
	// The density of the fluid.                                                                                        
	Density                                                                              *float64                       `json:"Density,omitempty"`
	// The description of the fluid.                                                                                    
	Description                                                                          *string                        `json:"Description,omitempty"`
	// Filter Cake                                                                                                      
	FilterCake                                                                           *float64                       `json:"FilterCake,omitempty"`
	// The filter size that the fluid for this job step passes through.                                                 
	FilterSize                                                                           *float64                       `json:"FilterSize,omitempty"`
	// The type of fluid filter used for this job step.                                                                 
	FilterType                                                                           *string                        `json:"FilterType,omitempty"`
	// The temperature of the fluid at surface.                                                                         
	FluidSurfaceTemperature                                                              *float64                       `json:"FluidSurfaceTemperature,omitempty"`
	// Test pressure of the fluid during this job step.                                                                 
	FluidTestPressure                                                                    *float64                       `json:"FluidTestPressure,omitempty"`
	// Test temperature of the fluid for this job step.                                                                 
	FluidTestTemperature                                                                 *float64                       `json:"FluidTestTemperature,omitempty"`
	// The fluid type.                                                                                                  
	FluidTypeID                                                                          *string                        `json:"FluidTypeID,omitempty"`
	// The shear stress measured at low shear rate after a mud has set quiescently for 10                               
	// minutes.                                                                                                         
	GelStrength10Min                                                                     *float64                       `json:"GelStrength10Min,omitempty"`
	// The shear stress measured at low shear rate after a mud has set quiescently for 10                               
	// seconds.                                                                                                         
	GelStrength10SEC                                                                     *float64                       `json:"GelStrength10Sec,omitempty"`
	// Is the fluid a kill fluid?                                                                                       
	IsKillFluid                                                                          *bool                          `json:"IsKillFluid,omitempty"`
	// The name of the fluid.                                                                                           
	Name                                                                                 *string                        `json:"Name,omitempty"`
	// The pH of the fluid.                                                                                             
	PH                                                                                   *float64                       `json:"pH,omitempty"`
	// The purpose of the fluid.                                                                                        
	Purpose                                                                              *string                        `json:"Purpose,omitempty"`
	// Remarks                                                                                                          
	Remarks                                                                              *string                        `json:"Remarks,omitempty"`
	// The specific gravity of the fluid at surface.                                                                    
	SpecificGravity                                                                      *float64                       `json:"SpecificGravity,omitempty"`
	// The name of the fluid supplier for this job step.                                                                
	Supplier                                                                             *string                        `json:"Supplier,omitempty"`
	// The supplier of the fluid.                                                                                       
	SupplierID                                                                           *string                        `json:"SupplierID,omitempty"`
	// Viscosity of the stimulation fluid for this job step.                                                            
	Viscosity                                                                            *float64                       `json:"Viscosity,omitempty"`
}

// A pumping diagnostics session for this job stage.
type StimJobDiagnosticSession struct {
	// Base fluid volume entering the pumping equipment.                                                                  
	BaseFluidVol                                                                                *float64                  `json:"BaseFluidVol,omitempty"`
	// Bottomhole hydrostatic pressure.                                                                                   
	BHHydrostaticPressure                                                                       *float64                  `json:"BHHydrostaticPressure,omitempty"`
	// The measured depth of the bottom of the hole.                                                                      
	BHMeasuredDepth                                                                             *float64                  `json:"BHMeasuredDepth,omitempty"`
	// Average bottomhole treatment pressure.                                                                             
	BHTreatmentPressureAvg                                                                      *float64                  `json:"BHTreatmentPressureAvg,omitempty"`
	// Average bottomhole treatment flow rate.                                                                            
	BHTreatmentRateAvg                                                                          *float64                  `json:"BHTreatmentRateAvg,omitempty"`
	// The pressure at which gas begins to break out of an under saturated oil and form a free                            
	// gas phase in the matrix or a gas cap.                                                                              
	BubblePointPressure                                                                         *float64                  `json:"BubblePointPressure,omitempty"`
	// The size of the choke used during a flow back test.                                                                
	ChokeSize                                                                                   *float64                  `json:"ChokeSize,omitempty"`
	// A description of this pumping diagnostic session.                                                                  
	Description                                                                                 *string                   `json:"Description,omitempty"`
	// The volume change of a fluid when pressure is applied.                                                             
	FluidCompressibility                                                                        *float64                  `json:"FluidCompressibility,omitempty"`
	// The density of the fluid during this pumping diagnostic session.                                                   
	FluidDensity                                                                                *float64                  `json:"FluidDensity,omitempty"`
	// A measurement, derived from a data frac, of the efficiency of a particular fluid in                                
	// creating fracture area on a particular formation at a set of conditions.                                           
	FluidEfficiency                                                                             *float64                  `json:"FluidEfficiency,omitempty"`
	// A diagnostic test determining fluid efficiency.                                                                    
	FluidEfficiencyTest                                                                         []StimFluidEfficiencyTest `json:"FluidEfficiencyTest,omitempty"`
	// The consistency index K is the shear stress or viscosity of the fluid at one sec-1 shear                           
	// rate. An increasing K raises the effective viscosity.                                                              
	FluidKprimeFactor                                                                           *float64                  `json:"FluidKprimeFactor,omitempty"`
	// Power law component. As 'n' decreases from 1, the fluid becomes more shear thinning.                               
	// Reducing 'n' produces more non-Newtonian behavior.                                                                 
	FluidNprimeFactor                                                                           *float64                  `json:"FluidNprimeFactor,omitempty"`
	// The heat required to raise one unit mass of a substance by one degree.                                             
	FluidSpecificHeat                                                                           *float64                  `json:"FluidSpecificHeat,omitempty"`
	// In physics, thermal conductivity is the property of a material describing its ability to                           
	// conduct heat. It appears primarily in Fourier's Law for heat conduction. Thermal                                   
	// conductivity is measured in watts per kelvin-meter. Multiplied by a temperature                                    
	// difference (in kelvins) and an area (in square meters), and divided by a thickness (in                             
	// meters), the thermal conductivity predicts the rate of energy loss (in watts) through a                            
	// piece of material.                                                                                                 
	FluidThermalConductivity                                                                    *float64                  `json:"FluidThermalConductivity,omitempty"`
	// Dimensional response to temperature change is expressed by its coefficient of thermal                              
	// expansion. When the temperature of a substance changes, the energy that is stored in the                           
	// intermolecular bonds between atoms also changes. When the stored energy increases, so                              
	// does the length of the molecular bonds. As a result, solids typically expand in response                           
	// to heating and contract on cooling. The degree of expansion divided by the change in                               
	// temperature is called the material's coefficient of thermal expansion and generally                                
	// varies with temperature.                                                                                           
	FluidThermalExpansionCoefficient                                                            *float64                  `json:"FluidThermalExpansionCoefficient,omitempty"`
	// Foam quality percentage of foam for the pumping diagnostic session during the stimulation                          
	// services.                                                                                                          
	FoamQuality                                                                                 *float64                  `json:"FoamQuality,omitempty"`
	// The date and time when the fluid in the fracture is completely leaked off into the                                 
	// formation and the fracture closes on its faces.                                                                    
	FractureCloseDateTime                                                                       *time.Time                `json:"FractureCloseDateTime,omitempty"`
	// The pressure when the fracture width becomes zero.                                                                 
	FractureClosePressure                                                                       *float64                  `json:"FractureClosePressure,omitempty"`
	// The pressure loss due to fluid friction with the pipe while a fluid is being pumped.                               
	FrictionPressure                                                                            *float64                  `json:"FrictionPressure,omitempty"`
	// The measured depth of the wellbore to its injection point.                                                         
	InjectionPointMeasuredDepth                                                                 *float64                  `json:"InjectionPointMeasuredDepth,omitempty"`
	// Are the calculations corrected for temperature? A value of true (or 1) indicates that the                          
	// calculations were corrected for temperature. A value of false (or 0) or not given                                  
	// indicates otherwise.                                                                                               
	IsTemperatureCorrectionApplied                                                              *bool                     `json:"IsTemperatureCorrectionApplied,omitempty"`
	// The measured depth of the middle perforation (MPP).                                                                
	MidPerforationMeasuredDepth                                                                 *float64                  `json:"MidPerforationMeasuredDepth,omitempty"`
	// The true vertical depth of the middle perforation.                                                                 
	MidPerforationTrueVerticalDepth                                                             *float64                  `json:"MidPerforationTrueVerticalDepth,omitempty"`
	// The name of this pumping diagnostic session.                                                                       
	Name                                                                                        *string                   `json:"Name,omitempty"`
	// The number of this pumping diagnostics session.                                                                    
	Number                                                                                      *int64                    `json:"Number,omitempty"`
	// The volume of the pad divided by the (volume of the pad + the volume of the proppant                               
	// laden fluid).                                                                                                      
	PadPercent                                                                                  *float64                  `json:"PadPercent,omitempty"`
	// The pressure of the liquids in the formation pore space.                                                           
	PorePressure                                                                                *float64                  `json:"PorePressure,omitempty"`
	// The time between the shutin time and the pump on time.                                                             
	PumpDuration                                                                                *float64                  `json:"PumpDuration,omitempty"`
	// A diagnostic test involving flowing a well back after treatment.                                                   
	PumpFlowBackTest                                                                            []StimPumpFlowBackTest    `json:"PumpFlowBackTest,omitempty"`
	// The date and time pumping ended.                                                                                   
	PumpOffDateTime                                                                             *time.Time                `json:"PumpOffDateTime,omitempty"`
	// The date and time pumping began.                                                                                   
	PumpOnDateTime                                                                              *time.Time                `json:"PumpOnDateTime,omitempty"`
	// Remarks                                                                                                            
	Remarks                                                                                     *string                   `json:"Remarks,omitempty"`
	// The volume change of a reservoir material when pressure is applied.                                                
	ReservoirTotalCompressibility                                                               *float64                  `json:"ReservoirTotalCompressibility,omitempty"`
	// Initial shutin pressure.                                                                                           
	ShutInInitialPressure                                                                       *float64                  `json:"ShutInInitialPressure,omitempty"`
	// The number of the stage associated with this diagnostics session.                                                  
	StageNumber                                                                                 *int64                    `json:"StageNumber,omitempty"`
	// Static bottomhole temperature.                                                                                     
	StaticBHTemperature                                                                         *float64                  `json:"StaticBHTemperature,omitempty"`
	// An injection test involving multiple steps of injection rate and pressure, where a curve                           
	// deflection and change of slope indicates the fracture breakdown pressure. An injection                             
	// test involving multiple steps of injection rate and pressure, where a curve deflection                             
	// and change of slope indicates the fracture breakdown pressure.                                                     
	StepDownTest                                                                                []StimStepDownTest        `json:"StepDownTest,omitempty"`
	// An injection test, plotted pressure against injection rate, where a curve deflection and                           
	// change of slope indicates the fracture breakdown pressure.                                                         
	StepRateTest                                                                                []StimStepTest            `json:"StepRateTest,omitempty"`
	// Temperature of the fluid at the surface.                                                                           
	SurfaceFluidTemperature                                                                     *float64                  `json:"SurfaceFluidTemperature,omitempty"`
	// The temperature at surface during this pumping diagnostic session.                                                 
	SurfaceTemperature                                                                          *float64                  `json:"SurfaceTemperature,omitempty"`
	// The volume of fluid in the wellbore for this pumping diagnostic session.                                           
	WellboreVolume                                                                              *float64                  `json:"WellboreVolume,omitempty"`
	// The date and time at which a well ceases flowing and the valves are closed.                                        
	WellShutinDateTime                                                                          *time.Time                `json:"WellShutinDateTime,omitempty"`
}

// Fluid Efficiency Test for this pumping diagnostic session.
type StimFluidEfficiencyTest struct {
	// An analysis method used for this FET.                                                              
	AnalysisMethodID                                                                           *string    `json:"AnalysisMethodID,omitempty"`
	// End time for the FET.                                                                              
	EndDateTime                                                                                *time.Time `json:"EndDateTime,omitempty"`
	// A measurement, derived from a data frac, of the efficiency of a particular fluid in                
	// creating fracture area on a particular formation at a set of conditions.                           
	FluidEfficiency                                                                            *float64   `json:"FluidEfficiency,omitempty"`
	// The time required for the fracture to effectively close without proppant in place.                 
	FractureCloseDuration                                                                      *float64   `json:"FractureCloseDuration,omitempty"`
	// The pressure at which the fracture effectively closes without proppant in place.                   
	FractureClosePressure                                                                      *float64   `json:"FractureClosePressure,omitempty"`
	// The fracture pressure limit for an unfractured formation is the fracture initiation                
	// pressure. This is typically considered the upper bound for the minimum horizontal stress           
	// or closure pressure. A step-rate test is used to determine the fracture extension                  
	// pressure.                                                                                          
	FractureExtensionPressure                                                                  *float64   `json:"FractureExtensionPressure,omitempty"`
	// The fracture gradient of the formation.                                                            
	FractureGradient                                                                           *float64   `json:"FractureGradient,omitempty"`
	// The length of the fracture tip to tip; fracture half length is the length of one wing of           
	// a fracture from the wellbore to the tip.                                                           
	FractureLength                                                                             *float64   `json:"FractureLength,omitempty"`
	// The width of a fracture at the wellbore. Hydraulic frac width is generated by frac fluid           
	// viscosity andor pump rate (i.e., horsepower).                                                      
	FractureWidth                                                                              *float64   `json:"FractureWidth,omitempty"`
	// The difference between the fracture extension pressure and the pressure that exists in             
	// the fracture.                                                                                      
	NetPressure                                                                                *float64   `json:"NetPressure,omitempty"`
	// The pressure dependent leak-off coefficient.                                                       
	PdlCoefficient                                                                             *float64   `json:"PdlCoefficient,omitempty"`
	// The end of the pressure-dependent leak-off portion of the FET.                                     
	PdlEndDuration                                                                             *float64   `json:"PdlEndDuration,omitempty"`
	// The pressure of the liquids in the formation pore space.                                           
	PorePressure                                                                               *float64   `json:"PorePressure,omitempty"`
	// The Horner plot is used to determine if pseudo-radial flow developed during pressure               
	// decline. If a semi-log straight line is observed and the line can be extrapolated to a             
	// reasonable value of reservoir pressure, then radial or pseudo-radial flow may be                   
	// affecting the decline behavior. This suggests that the fracture is already closed and              
	// that data beyond the point of influence need not be considered in the evaluation of                
	// closure.                                                                                           
	PseudoRadialPressure                                                                       *float64   `json:"PseudoRadialPressure,omitempty"`
	// That permeability which remains after a fractured formation has closed, allowing the the           
	// formation fracture face to be pressurized before the fracture is mechanically reopened.            
	ResidualPermeability                                                                       *float64   `json:"ResidualPermeability,omitempty"`
	// Start time for the FET.                                                                            
	StartDateTime                                                                              *time.Time `json:"StartDateTime,omitempty"`
}

// Pump flow back test for this stim job diagnostic session.
type StimPumpFlowBackTest struct {
	// Casing pressure.                                                      
	CasingPressure                                             *float64      `json:"CasingPressure,omitempty"`
	// End time for the test.                                                
	FlowBackEndDateTime                                        *time.Time    `json:"FlowBackEndDateTime,omitempty"`
	// Start time for the test.                                              
	FlowBackStartDateTime                                      *time.Time    `json:"FlowBackStartDateTime,omitempty"`
	// Total fluid volume recovered during a flow back test.                 
	FlowBackVolume                                             *float64      `json:"FlowBackVolume,omitempty"`
	// The time required for the fracture width to become zero.              
	FractureCloseDuration                                      *float64      `json:"FractureCloseDuration,omitempty"`
	// The pressure when the fracture width becomes zero.                    
	FractureClosePressure                                      *float64      `json:"FractureClosePressure,omitempty"`
	// General remarks for this stim pump flow back test.                    
	Remarks                                                    *string       `json:"Remarks,omitempty"`
	// Step                                                                  
	Step                                                       []StepElement `json:"Step,omitempty"`
	// Tubing pressure.                                                      
	TubingPressure                                             *float64      `json:"TubingPressure,omitempty"`
}

// Details about this flowback test step.
type StepElement struct {
	// Bottomhole flow rate for the specific step.                                                        
	BHFlowRate                                                                                 *float64   `json:"BHFlowRate,omitempty"`
	// Time stamp of the pressure measurement.                                                            
	DateTime                                                                                   *time.Time `json:"DateTime,omitempty"`
	// Calculated entry friction loss accounting for perforation and near wellbore restrictions           
	// for the specific step.                                                                             
	EntryFriction                                                                              *float64   `json:"EntryFriction,omitempty"`
	// Flowback rate.                                                                                     
	FlowbackRate                                                                               *float64   `json:"FlowbackRate,omitempty"`
	// Cumulative volume of flowback since the start of the test.                                         
	FlowbackVolume                                                                             *float64   `json:"FlowbackVolume,omitempty"`
	// Calculated near-wellbore friction loss for the specific step.                                      
	NearWellboreFriction                                                                       *float64   `json:"NearWellboreFriction,omitempty"`
	// Calculated perforation friction loss for the specific step.                                        
	PerfFrictionLoss                                                                           *float64   `json:"PerfFrictionLoss,omitempty"`
	// Calculated pipe friction loss for the specific step.                                               
	PipeFrictionLoss                                                                           *float64   `json:"PipeFrictionLoss,omitempty"`
	// The number of the step. Identifies the step within the step down test.                             
	StepNumber                                                                                 *int64     `json:"StepNumber,omitempty"`
	// Surface flow rate entering the well for the specific step.                                         
	SurfaceFlowRate                                                                            *float64   `json:"SurfaceFlowRate,omitempty"`
	// Surface pressure measured for the specific step.                                                   
	SurfacePressure                                                                            *float64   `json:"SurfacePressure,omitempty"`
}

// An injection test involving multiple steps of injection rate and pressure, where a curve
// deflection and change of slope indicates the fracture breakdown pressure.
type StimStepDownTest struct {
	// The density of the fluid at the bottom of the hole adjusting for bottomhole temperature                            
	// and pressure during the step-down test.                                                                            
	BHFluidDensity                                                                              *float64                  `json:"BHFluidDensity,omitempty"`
	// A coefficient used in the equation for calculation of the pressure drop across a                                   
	// perforation set.                                                                                                   
	DischargeCoefficient                                                                        *float64                  `json:"DischargeCoefficient,omitempty"`
	// Diameter of the injection point or perforation.                                                                    
	EntryHoleDiameter                                                                           *float64                  `json:"EntryHoleDiameter,omitempty"`
	// The data related to a particular step in the step-down test.                                                       
	FlowBackTestStep                                                                            []FlowBackTestStepElement `json:"FlowBackTestStep,omitempty"`
	// The initial shut in pressure.                                                                                      
	InitialShutinPressure                                                                       *float64                  `json:"InitialShutinPressure,omitempty"`
	// The number of perforations in the interval being tested that are calculated to be open to                          
	// injection, which is determined during the step-down test.                                                          
	PerforationsEffective                                                                       *int64                    `json:"PerforationsEffective,omitempty"`
	// The total number of perforations in the interval being tested.                                                     
	PerforationsTotal                                                                           *int64                    `json:"PerforationsTotal,omitempty"`
	// General remarks about this Stim Step Down Test.                                                                    
	Remarks                                                                                     *string                   `json:"Remarks,omitempty"`
}

// Details about this flowback test step.
type FlowBackTestStepElement struct {
	// Bottomhole flow rate for the specific step.                                                        
	BHFlowRate                                                                                 *float64   `json:"BHFlowRate,omitempty"`
	// Time stamp of the pressure measurement.                                                            
	DateTime                                                                                   *time.Time `json:"DateTime,omitempty"`
	// Calculated entry friction loss accounting for perforation and near wellbore restrictions           
	// for the specific step.                                                                             
	EntryFriction                                                                              *float64   `json:"EntryFriction,omitempty"`
	// Flowback rate.                                                                                     
	FlowbackRate                                                                               *float64   `json:"FlowbackRate,omitempty"`
	// Cumulative volume of flowback since the start of the test.                                         
	FlowbackVolume                                                                             *float64   `json:"FlowbackVolume,omitempty"`
	// Calculated near-wellbore friction loss for the specific step.                                      
	NearWellboreFriction                                                                       *float64   `json:"NearWellboreFriction,omitempty"`
	// Calculated perforation friction loss for the specific step.                                        
	PerfFrictionLoss                                                                           *float64   `json:"PerfFrictionLoss,omitempty"`
	// Calculated pipe friction loss for the specific step.                                               
	PipeFrictionLoss                                                                           *float64   `json:"PipeFrictionLoss,omitempty"`
	// The number of the step. Identifies the step within the step down test.                             
	StepNumber                                                                                 *int64     `json:"StepNumber,omitempty"`
	// Surface flow rate entering the well for the specific step.                                         
	SurfaceFlowRate                                                                            *float64   `json:"SurfaceFlowRate,omitempty"`
	// Surface pressure measured for the specific step.                                                   
	SurfacePressure                                                                            *float64   `json:"SurfacePressure,omitempty"`
}

// An injection test, plotted pressure against injection rate, where a curve deflection and
// change of slope indicates the fracture breakdown pressure.
type StimStepTest struct {
	// The pressure necessary to extend the fracture once initiated. The fracture extension                       
	// pressure may rise slightly with increasing fracture length andor height because of                         
	// friction pressure drop down the length of the fracture.                                                    
	FractureExtensionPressure                                                              *float64               `json:"FractureExtensionPressure,omitempty"`
	// A pressure and fluid flow rate data set.                                                                   
	PressureMeasurement                                                                    []StimPressureFlowRate `json:"PressureMeasurement,omitempty"`
}

// An array of bottom hole flow rates and pressures for this stim step test.
type StimPressureFlowRate struct {
	// The bottomhole flow rate of the fluid.         
	BHFlowRate                               *float64 `json:"BHFlowRate,omitempty"`
	// The pressure of the step test.                 
	Pressure                                 *float64 `json:"Pressure,omitempty"`
}

// Shut in pressure data for this job stage.
type StimShutInPressure struct {
	// The shut-in pressure.                                                              
	Pressure                                                                     *float64 `json:"Pressure,omitempty"`
	// The cumulative time span after shut-in at which the pressure was measured.         
	TimeAfterShutin                                                              *float64 `json:"TimeAfterShutin,omitempty"`
}

// Representation describing the vertical location of rock units in a particular area
type StratigraphicColumn struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *StratigraphicColumnData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type StratigraphicColumnData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Array of StratigraphicColumnRankInterpretation[] the StratigraphicColumn is composed of                                                 
	StratigraphicColumnRankInterpretationSet                                                    []string                                       `json:"StratigraphicColumnRankInterpretationSet,omitempty"`
	// Geographical area where a local stratigraphic column is valid: Basin, Region, Field,                                                    
	// Segment                                                                                                                                 
	StratigraphicColumnValidityAreaType                                                         *string                                        `json:"StratigraphicColumnValidityAreaType,omitempty"`
	// Date of validation of a custom stratigraphic column, start of validity                                                                  
	ValidationDate                                                                              *time.Time                                     `json:"ValidationDate,omitempty"`
	// Member where the custom stratigraphic column has been produced: Exploration,                                                            
	// FieldDevelopment, Production, LateLife                                                                                                  
	ValueChainStatusType                                                                        *string                                        `json:"ValueChainStatusType,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A global hierarchy containing an ordered list of stratigraphic unit interpretations
type StratigraphicColumnRankInterpretation struct {
	// The access control tags associated with this entity.                                                                                 
	ACL                                                                                          AccessControlList                          `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                   
	// derived.                                                                                                                             
	Ancestry                                                                                     *ParentList                                `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                             
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                
	CreateTime                                                                                   *time.Time                                 `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                              
	// System.                                                                                                                              
	CreateUser                                                                                   *string                                    `json:"createUser,omitempty"`
	Data                                                                                         *StratigraphicColumnRankInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                               
	// version.                                                                                                                             
	ID                                                                                           *string                                    `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                         
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                             
	// scheme follows the semantic versioning, https://semver.org/.                                                                         
	Kind                                                                                         string                                     `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                               
	// legal tags is managed by the Compliance Service.                                                                                     
	Legal                                                                                        LegalMetaData                              `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                              
	// definitions.                                                                                                                         
	Meta                                                                                         []FrameOfReferenceMetaDataItem             `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                             
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                    
	ModifyTime                                                                                   *time.Time                                 `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                           
	ModifyUser                                                                                   *string                                    `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                              
	// as keys and values.                                                                                                                  
	Tags                                                                                         map[string]string                          `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                      
	Version                                                                                      *int64                                     `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type StratigraphicColumnRankInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// A set of references to ChronoStratigraphy reference data, which belong to the same                                                      
	// StratigraphicColumnRankUnitType, e.g.                                                                                                   
	// "namespace:reference-data--StratigraphicColumnRankUnitType:Chronostratigraphic.System:"                                                 
	// Only one of ChronoStratigraphySet or StratigraphicUnitInterpretationSet must be                                                         
	// populated, never both.                                                                                                                  
	ChronoStratigraphySet                                                                       []string                                       `json:"ChronoStratigraphySet,omitempty"`
	// Valid if Stratigraphic role type is set to Chronostratigraphic ex.: GeneticSequence                                                     
	SequenceStratigraphicSchemaType                                                             *string                                        `json:"SequenceStratigraphicSchemaType,omitempty"`
	// Type of all stratigraphic units in this rank, i.e. Erathem                                                                              
	StratigraphicColumnRankUnitType                                                             *string                                        `json:"StratigraphicColumnRankUnitType,omitempty"`
	// Geological concept used to produce the type, i.e. lithostratigraphy                                                                     
	StratigraphicRoleType                                                                       *string                                        `json:"StratigraphicRoleType,omitempty"`
	// Array of Stratigraphic Unit Interpretations the StratigraphicColumnRank is composed of.                                                 
	// Units are ordered by ascending age or apparent depth.  Only one of ChronoStratigraphySet                                                
	// or StratigraphicUnitInterpretationSet must be populated, never both.                                                                    
	StratigraphicUnitInterpretationSet                                                          []string                                       `json:"StratigraphicUnitInterpretationSet,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// One of potentially many boundary interpretations as a single consistent description of a
// local boundary feature. An interpretation is subjective and very strongly tied to the
// intellectual activity of the project team members.
type StratigraphicUnitInterpretation struct {
	// The access control tags associated with this entity.                                                                           
	ACL                                                                                          AccessControlList                    `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                             
	// derived.                                                                                                                       
	Ancestry                                                                                     *ParentList                          `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                       
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                          
	CreateTime                                                                                   *time.Time                           `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                        
	// System.                                                                                                                        
	CreateUser                                                                                   *string                              `json:"createUser,omitempty"`
	Data                                                                                         *StratigraphicUnitInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                         
	// version.                                                                                                                       
	ID                                                                                           *string                              `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                   
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                       
	// scheme follows the semantic versioning, https://semver.org/.                                                                   
	Kind                                                                                         string                               `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                         
	// legal tags is managed by the Compliance Service.                                                                               
	Legal                                                                                        LegalMetaData                        `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                        
	// definitions.                                                                                                                   
	Meta                                                                                         []FrameOfReferenceMetaDataItem       `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                       
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                              
	ModifyTime                                                                                   *time.Time                           `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                     
	ModifyUser                                                                                   *string                              `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                        
	// as keys and values.                                                                                                            
	Tags                                                                                         map[string]string                    `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                
	Version                                                                                      *int64                               `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// Common properties for entities describing an opinion of a volume-based geologic feature
// or unit.
//
// The group of properties shared by different kinds of interpretations
type StratigraphicUnitInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// The relationship to the DepositionalEnvironment reference-data record.                                                                   
	DepositionalEnvironmentID                                                                    *string                                        `json:"DepositionalEnvironmentID,omitempty"`
	// In addition to DepositionalEnvironmentID, this relation to a DepositionalSubEnvironment                                                  
	// reference-data record further specifies the overall depositional environment.                                                            
	DepositionalSubEnvironmentID                                                                 *string                                        `json:"DepositionalSubEnvironmentID,omitempty"`
	// The relationship to a GeologicUnitShapeType like sheet, dyke, dome, mushroom, channel and                                                
	// more.                                                                                                                                    
	GeologicUnitShapeTypeID                                                                      *string                                        `json:"GeologicUnitShapeTypeID,omitempty"`
	// Corresponding to Energistics GeologicUnitMaterialEmplacement 'intrusive' and                                                             
	// 'non-intrusive'.                                                                                                                         
	IsIntrusive                                                                                  *bool                                          `json:"IsIntrusive,omitempty"`
	// Optionally, one ore more LithologyQualifiers further detailing the LithologyType via                                                     
	// LithologyTypeID.                                                                                                                         
	LithologyQualifierIDs                                                                        []string                                       `json:"LithologyQualifierIDs,omitempty"`
	// The relationship to a LithologyType, corresponding to Energistics GeologicUnitComposition.                                               
	LithologyTypeID                                                                              *string                                        `json:"LithologyTypeID,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                           
	DomainTypeID                                                                                 *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                  
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                     
	//                                                                                                                                          
	// The reference to a local rock volume feature, to which this interpretation is associated.                                                
	FeatureID                                                                                    *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                         
	FeatureName                                                                                  *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                 
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	MeanPossibleAge                                                                              *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	OlderPossibleAge                                                                             *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                 
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                  
	// to normalization.                                                                                                                        
	YoungerPossibleAge                                                                           *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Base Stratigraphic Horizon bounding the stratigraphic unit  in a context of a                                                            
	// stratigraphic column (Denormalized information) and not in an context of a model which                                                   
	// can have several interpretations. Expecting one single horizon.                                                                          
	ColumnStratigraphicHorizonBaseID                                                             *string                                        `json:"ColumnStratigraphicHorizonBaseID,omitempty"`
	// Top Stratigraphic Horizon bounding the stratigraphic unit in a context of a reference                                                    
	// stratigraphic column (Denormalized information) and not in an context of a model which                                                   
	// can have several interpretations. Expecting one single horizon.                                                                          
	ColumnStratigraphicHorizonTopID                                                              *string                                        `json:"ColumnStratigraphicHorizonTopID,omitempty"`
	// The reference to the deposition geometry type (Energistics RESQML DepositionMode) of this                                                
	// StratigraphicUnitInterpretation. RESQML BUSINESS RULE: The deposition mode for a                                                         
	// geological unit MUST be consistent with the boundary relations of a genetic boundary. If                                                 
	// it is not, then the boundary relation declaration is retained.                                                                           
	DepositionGeometryTypeID                                                                     *string                                        `json:"DepositionGeometryTypeID,omitempty"`
	// The maximum thickness of the StratigraphicUnitInterpretation.                                                                            
	MaximumThickness                                                                             *float64                                       `json:"MaximumThickness,omitempty"`
	// The minimum thickness of the StratigraphicUnitInterpretation.                                                                            
	MinimumThickness                                                                             *float64                                       `json:"MinimumThickness,omitempty"`
	// The reference to the stratigraphic role type (Energistics RESQML StratigraphicUnitKind)                                                  
	// for this StratigraphicUnitInterpretation.                                                                                                
	StratigraphicRoleTypeID                                                                      *string                                        `json:"StratigraphicRoleTypeID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Structural Model Interpretations related to geometric elements such as faults, horizons,
// and intrusions on a scale of meters to kilometers.
type StructuralOrganizationInterpretation struct {
	// The access control tags associated with this entity.                                                                                
	ACL                                                                                          AccessControlList                         `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                  
	// derived.                                                                                                                            
	Ancestry                                                                                     *ParentList                               `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                            
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                               
	CreateTime                                                                                   *time.Time                                `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                             
	// System.                                                                                                                             
	CreateUser                                                                                   *string                                   `json:"createUser,omitempty"`
	Data                                                                                         *StructuralOrganizationInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                              
	// version.                                                                                                                            
	ID                                                                                           *string                                   `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                        
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                            
	// scheme follows the semantic versioning, https://semver.org/.                                                                        
	Kind                                                                                         string                                    `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                              
	// legal tags is managed by the Compliance Service.                                                                                    
	Legal                                                                                        LegalMetaData                             `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                             
	// definitions.                                                                                                                        
	Meta                                                                                         []FrameOfReferenceMetaDataItem            `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                            
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                   
	ModifyTime                                                                                   *time.Time                                `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                          
	ModifyUser                                                                                   *string                                   `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                             
	// as keys and values.                                                                                                                 
	Tags                                                                                         map[string]string                         `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                     
	Version                                                                                      *int64                                    `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type StructuralOrganizationInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                          
	DomainTypeID                                                                                *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                 
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                    
	//                                                                                                                                         
	// The local model feature this interpretation belongs to                                                                                  
	FeatureID                                                                                   *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                        
	FeatureName                                                                                 *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	MeanPossibleAge                                                                             *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                               
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                 
	// normalization.                                                                                                                          
	OlderPossibleAge                                                                            *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                 
	// to normalization.                                                                                                                       
	YoungerPossibleAge                                                                          *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Lists the fault interpretation IDs belonging to the structural model                                                                    
	FaultInterpretationIDs                                                                      []string                                       `json:"FaultInterpretationIDs"`
	// Lists the geobody interpretation IDs belonging to the structural model                                                                  
	GeobodyBoundaryInterpretationIDs                                                            []string                                       `json:"GeobodyBoundaryInterpretationIDs"`
	// Lists the horizon interpretation IDs belonging to the structural model                                                                  
	HorizonInterpretationIDs                                                                    []string                                       `json:"HorizonInterpretationIDs"`
	// Defines the tectonic setting of the structural model                                                                                    
	TectonicSettingTypeID                                                                       string                                         `json:"TectonicSettingTypeID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An ordered list of indexable elements and/or indexable element pairs of existing
// representations
type SubRepresentation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SubRepresentationData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type SubRepresentationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// The count of elements in this subrepresentation                                                                                         
	ElementCount                                                                                *int64                                         `json:"ElementCount,omitempty"`
	// The topological elements kind which are selected                                                                                        
	IndexableElementID                                                                          *string                                        `json:"IndexableElementID,omitempty"`
	// The topological element kind nested inside the first given indexable element kind  which                                                
	// are selected. For example, it allows to select all top front left corner of all cells of                                                
	// an IJK grid                                                                                                                             
	NestedIndexableElementID                                                                    *string                                        `json:"NestedIndexableElementID,omitempty"`
	// References to the representations which this subrepresentation is based on.                                                             
	SupportingRepresentationIDs                                                                 []string                                       `json:"SupportingRepresentationIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Stores an ordered list of times, for example used for time-dependent properties
// (saturation) or geometries (varying reservoir geometry through time).
type TimeSeries struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TimeSeriesData                `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type TimeSeriesData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Array of geologic time values in Year (annums). This value must be positive if it                                                       
	// represents a Geological Event in the past.                                                                                              
	// Must be negative if it represents a geological event in the future.                                                                     
	GeologicTimeValues                                                                          []float64                                      `json:"GeologicTimeValues,omitempty"`
	// Array of datetime in iso-format (in ascending order) "yyyy-MM-dd                                                                        
	// HH:mm\":\"UTC\",\"type\":\"DTM\"                                                                                                        
	UTCDateTimeValues                                                                           []string                                       `json:"UTCDateTimeValues,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Well Tubular data contains information on the tubular assemblies and their components for
// the well, wellbore, or wellbore completion (as appropriate). The tubulars can be tubing,
// casing or liners or other related equipment which is installed into the well. Tubulars
// can also be equipment which is lowered into the well in the context of drilling, which is
// then pulled back out.
type TubularAssembly struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularAssemblyData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type TubularAssemblyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Indicates if the Assembly is activated or not                                                                                            
	ActiveIndicator                                                                              *bool                                          `json:"ActiveIndicator,omitempty"`
	// Used to describe if it belongs to a RunActivity or to a PullActivity                                                                     
	ActivityTypeID                                                                               *string                                        `json:"ActivityTypeID,omitempty"`
	// Used to describe the reason of Activity - such as cut/pull, pulling,…                                                                    
	ActivityTypeReasonDescription                                                                *string                                        `json:"ActivityTypeReasonDescription,omitempty"`
	// Type of Artificial Lift used (could be "Surface Pump" / "Submersible Pump" / "Gas Lift"….)                                               
	ArtificialLiftTypeID                                                                         *string                                        `json:"ArtificialLiftTypeID,omitempty"`
	// The measured depth of the base from the whole assembly                                                                                   
	AssemblyBaseMD                                                                               *float64                                       `json:"AssemblyBaseMD,omitempty"`
	// Depth of the base of the Assembly measured from the Well-Head                                                                            
	AssemblyBaseReportedTVD                                                                      *float64                                       `json:"AssemblyBaseReportedTVD,omitempty"`
	// The measured depth of the top from the whole assembly                                                                                    
	AssemblyTopMD                                                                                *float64                                       `json:"AssemblyTopMD,omitempty"`
	// Depth of the top of the Assembly measured from the Well-Head                                                                             
	AssemblyTopReportedTVD                                                                       *float64                                       `json:"AssemblyTopReportedTVD,omitempty"`
	// The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per                                                 
	// specifications. Note that the nominal inside diameter is not the same as the drift                                                       
	// diameter but is always slightly larger. The drift diameter is used by the well planner to                                                
	// determine what size tools or casing strings can later be run through the casing, whereas                                                 
	// the nominal inside diameter is used for fluid volume calculations such as mud circulating                                                
	// times and cement slurry placement calculations.                                                                                          
	DriftDiameter                                                                                *float64                                       `json:"DriftDiameter,omitempty"`
	// This reference table describes the type of liner used in the borehole. For example,                                                      
	// slotted, gravel packed or pre-perforated etc.                                                                                            
	LinerTypeID                                                                                  *string                                        `json:"LinerTypeID,omitempty"`
	// This is the minimum inner diameter of the whole assembly.                                                                                
	MinimumInnerDiameter                                                                         *float64                                       `json:"MinimumInnerDiameter,omitempty"`
	// A YES or NO flag indicating the assembly is a mixed string. The length of the assembly                                                   
	// may be made up of joints with different tensile strengths, or collapse resistance and                                                    
	// yield strengths.                                                                                                                         
	MixedStringIndicator                                                                         *string                                        `json:"MixedStringIndicator,omitempty"`
	// Optional - Identifier of the parent assembly (in case of side-track, multi-nesting,…) -                                                  
	// The Concentric Tubular model is used to identify the Assembly that an Assembly sits                                                      
	// inside e.g. Surface Casing set inside Conductor, Tubing set inside Production Casing, a                                                  
	// Bumper Spring set inside a Production Tubing Profile Nipple, Liner set inside Casing,                                                    
	// etc. This is needed to enable a Digital Well Sketch application to understand                                                            
	// relationships between Assemblies and their parent Wellbores.                                                                             
	ParentAssemblyID                                                                             *string                                        `json:"ParentAssemblyID,omitempty"`
	// Identifier of the wellbore the Component is standing in.                                                                                 
	ParentWellboreID                                                                             *string                                        `json:"ParentWellboreID,omitempty"`
	// Diameter of the Pilot Hole                                                                                                               
	PilotHoleSize                                                                                *float64                                       `json:"PilotHoleSize,omitempty"`
	// the distance that the assembly has penetrated below the surface of the sea floor.                                                        
	SeaFloorPenetrationLength                                                                    *float64                                       `json:"SeaFloorPenetrationLength,omitempty"`
	// Descriptor for Assembly, e.g. Production, Surface, Conductor, Intermediate, Drilling                                                     
	StringClassID                                                                                *string                                        `json:"StringClassID,omitempty"`
	// In case of multi-nesting of assemblies, the 'point' is the Measured Depth of the top of                                                  
	// the assembly though with PBRs the Suspension Point may not be the top.                                                                   
	SuspensionPointMD                                                                            *float64                                       `json:"SuspensionPointMD,omitempty"`
	// Nominal size (diameter) describing the whole assembly, e.g. 9.625", 12.25                                                                
	TubularAssemblyNominalSize                                                                   *float64                                       `json:"TubularAssemblyNominalSize,omitempty"`
	// Sequence of the TubularAssembly (Typically BHA sequence)                                                                                 
	TubularAssemblyNumber                                                                        *int64                                         `json:"TubularAssemblyNumber,omitempty"`
	// The full record of historical and current states of the Assembly. The current active                                                     
	// state is recorded in TubularAssemblyStatus.                                                                                              
	TubularAssemblyStates                                                                        []TubularAssemblyStateElement                  `json:"TubularAssemblyStates,omitempty"`
	// Reflects the current status of the Assembly - as 'installed', 'pulled', 'planned',... -                                                  
	// Applicable to tubing/completions as opposed to drillstrings. Historical states are                                                       
	// recorded in TubularAssemblyStates.                                                                                                       
	TubularAssemblyStatus                                                                        *TubularAssemblyStatusClass                    `json:"TubularAssemblyStatus,omitempty"`
	// Total Length of the whole assembly.                                                                                                      
	TubularAssemblyTotalLength                                                                   *float64                                       `json:"TubularAssemblyTotalLength,omitempty"`
	// Type of tubular assembly.                                                                                                                
	TubularAssemblyTypeID                                                                        *string                                        `json:"TubularAssemblyTypeID,omitempty"`
	// Defines whether the sequence of child tubular components runs either top to bottom, or                                                   
	// bottom to top.                                                                                                                           
	TubularDirection                                                                             *string                                        `json:"TubularDirection,omitempty"`
	// Either a self-contained vertical reference for the depths in this TubularAssembly or a                                                   
	// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the                                                      
	// entity defined by VerticalReferenceEntityID.                                                                                             
	VerticalMeasurement                                                                          *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Record that reflects the status of the Assembly - as 'installed', 'pulled', 'planned',...
// - Applicable to tubing/completions as opposed to drillstrings
type TubularAssemblyStateElement struct {
	// Date the status has been established                                           
	Date                                                                   *time.Time `json:"Date,omitempty"`
	// Used to describe the reason of Activity - such as cut/pull, pulling,           
	Description                                                            *string    `json:"Description,omitempty"`
	// SRN of a reference value status type                                           
	StatusTypeID                                                           *string    `json:"StatusTypeID,omitempty"`
}

// Reflects the current status of the Assembly - as 'installed', 'pulled', 'planned',... -
// Applicable to tubing/completions as opposed to drillstrings. Historical states are
// recorded in TubularAssemblyStates.
type TubularAssemblyStatusClass struct {
	// Date the status has been established                                           
	Date                                                                   *time.Time `json:"Date,omitempty"`
	// Used to describe the reason of Activity - such as cut/pull, pulling,           
	Description                                                            *string    `json:"Description,omitempty"`
	// SRN of a reference value status type                                           
	StatusTypeID                                                           *string    `json:"StatusTypeID,omitempty"`
}

// Well Tubular data contains information on the tubular assemblies and their components for
// the well, wellbore, or wellbore completion (as appropriate). The tubulars can be tubing,
// casing or liners or other related equipment which is installed into the well. Tubulars
// can also be equipment which is lowered into the well in the context of drilling, which is
// then pulled back out.
type TubularComponent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularComponentData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type TubularComponentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per                                                
	// specifications. Note that the nominal inside diameter is not the same as the drift                                                      
	// diameter but is always slightly larger. The drift diameter is used by the well planner to                                               
	// determine what size tools or casing strings can later be run through the casing, whereas                                                
	// the nominal inside diameter is used for fluid volume calculations such as mud circulating                                               
	// times and cement slurry placement calculations.                                                                                         
	DriftDiameter                                                                               *float64                                       `json:"DriftDiameter,omitempty"`
	// Nominal inner diameter of the component.                                                                                                
	InnerDiameter                                                                               *float64                                       `json:"InnerDiameter,omitempty"`
	// Unique identifier for the manufacturer of this equipment.                                                                               
	ManufacturerID                                                                              *string                                        `json:"ManufacturerID,omitempty"`
	// This is the maximum outer diameter of the component.                                                                                    
	MaximumOuterDiameter                                                                        *float64                                       `json:"MaximumOuterDiameter,omitempty"`
	// Name of the component Model as defined per the operating company                                                                        
	Model                                                                                       *string                                        `json:"Model,omitempty"`
	// The depth the packer equipment was set to seal the casing or tubing.                                                                    
	PackerSetDepthTVD                                                                           *float64                                       `json:"PackerSetDepthTVD,omitempty"`
	// Identifier of the Assembly the component is taking part on.                                                                             
	ParentAssemblyID                                                                            *string                                        `json:"ParentAssemblyID,omitempty"`
	// Identifier of the wellbore the Component is standing in.                                                                                
	ParentWellboreID                                                                            *string                                        `json:"ParentWellboreID,omitempty"`
	// Size of the Pilot Hole                                                                                                                  
	PilotHoleSize                                                                               *float64                                       `json:"PilotHoleSize,omitempty"`
	// Identifier of the Section Type.                                                                                                         
	SectionTypeID                                                                               *string                                        `json:"SectionTypeID,omitempty"`
	// Serial Number of the component as provided by the manufacturer and/or the supplier                                                      
	SerialNumber                                                                                *string                                        `json:"SerialNumber,omitempty"`
	// Depth of the tubing shoe measured from the surface.                                                                                     
	ShoeDepthTVD                                                                                *float64                                       `json:"ShoeDepthTVD,omitempty"`
	// Unique identifier for the supplier of this equipment.                                                                                   
	SupplierID                                                                                  *string                                        `json:"SupplierID,omitempty"`
	// The measured depth of the base from the specific component                                                                              
	TubularComponentBaseMD                                                                      *float64                                       `json:"TubularComponentBaseMD,omitempty"`
	// Depth of the base of the component measured from the Well-Head                                                                          
	TubularComponentBaseReportedTVD                                                             *float64                                       `json:"TubularComponentBaseReportedTVD,omitempty"`
	// Id of the Bottom Connection Type                                                                                                        
	TubularComponentBottomConnectionTypeID                                                      *string                                        `json:"TubularComponentBottomConnectionTypeID,omitempty"`
	// ID of Reference Object for type of collar used to couple the tubular with another tubing                                                
	// string.                                                                                                                                 
	TubularComponentBoxPinConfigID                                                              *string                                        `json:"TubularComponentBoxPinConfigID,omitempty"`
	// Total Length of the component                                                                                                           
	TubularComponentLength                                                                      *float64                                       `json:"TubularComponentLength,omitempty"`
	// Specifies the material type constituting the component.                                                                                 
	TubularComponentMaterialTypeID                                                              *string                                        `json:"TubularComponentMaterialTypeID,omitempty"`
	// Nominal size (diameter) of the component, e.g. 9.625", 12.25                                                                            
	TubularComponentNominalSize                                                                 *float64                                       `json:"TubularComponentNominalSize,omitempty"`
	// Nominal weight of the component.                                                                                                        
	TubularComponentNominalWeight                                                               *float64                                       `json:"TubularComponentNominalWeight,omitempty"`
	// The sequence within which the components entered the hole. That is, a sequence number of                                                
	// 1 entered first, 2 entered next, etc.                                                                                                   
	TubularComponentSequence                                                                    *int64                                         `json:"TubularComponentSequence,omitempty"`
	// Id of the Top Connection Type                                                                                                           
	TubularComponentTopConnectionTypeID                                                         *string                                        `json:"TubularComponentTopConnectionTypeID,omitempty"`
	// The measured depth of the top from the specific component                                                                               
	TubularComponentTopMD                                                                       *float64                                       `json:"TubularComponentTopMD,omitempty"`
	// Depth of the top of the component measured from the Well-Head                                                                           
	TubularComponentTopReportedTVD                                                              *float64                                       `json:"TubularComponentTopReportedTVD,omitempty"`
	// Id of tubing grade - eg. the tensile strength of the tubing material. A system of                                                       
	// classifying the material specifications for steel alloys used in the manufacture of                                                     
	// tubing.                                                                                                                                 
	TubularComponentTubingGradeID                                                               *string                                        `json:"TubularComponentTubingGradeID,omitempty"`
	// The tensile strength of the tubing material. A system of classifying the material                                                       
	// specifications for steel alloys used in the manufacture of tubing.                                                                      
	TubularComponentTubingGradeStrength                                                         *float64                                       `json:"TubularComponentTubingGradeStrength,omitempty"`
	// The axial load required to yield the pipe.                                                                                              
	TubularComponentTubingStrength                                                              *float64                                       `json:"TubularComponentTubingStrength,omitempty"`
	// Specifies the types of components that can be used in a tubular string. These are used to                                               
	// specify the type of component and multiple components are used to define a tubular string                                               
	// (Tubular).                                                                                                                              
	TubularComponentTypeID                                                                      *string                                        `json:"TubularComponentTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An External Component aka Jewellery is any equipment attached to the outside of a tubular
// assembly. Examples include Casing Centralizers or Scratchers, Friction Reduction Devices
// for a Drillstring, Clamps for Umbilical Lines.
type TubularExternalComponent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularExternalComponentData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type TubularExternalComponentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	//                                                                                                                                         
	// External Component Description                                                                                                          
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Attach Mechanism                                                                                                                        
	AttachMechanismID                                                                           *string                                        `json:"AttachMechanismID,omitempty"`
	// Attach pattern describing placement frequency                                                                                           
	AttachPatternID                                                                             *string                                        `json:"AttachPatternID,omitempty"`
	// Base of the Measured Depth interval where the External Components are installed                                                         
	BaseMeasuredDepth                                                                           *float64                                       `json:"BaseMeasuredDepth,omitempty"`
	// Identifier of the External Component Type                                                                                               
	ExternalComponentTypeID                                                                     *string                                        `json:"ExternalComponentTypeID,omitempty"`
	// External component length of each item                                                                                                  
	Length                                                                                      *float64                                       `json:"Length,omitempty"`
	// Number of Items                                                                                                                         
	NumberOfItems                                                                               *int64                                         `json:"NumberOfItems,omitempty"`
	// The outer diameter of the external component.                                                                                           
	OuterDiameter                                                                               *float64                                       `json:"OuterDiameter,omitempty"`
	// Identifier of the Parent Tubular Assembly                                                                                               
	ParentAssemblyID                                                                            string                                         `json:"ParentAssemblyID"`
	// Identifier of the Parent Wellbore                                                                                                       
	ParentWellboreID                                                                            string                                         `json:"ParentWellboreID"`
	// Any additional comments/remarks                                                                                                         
	Remark                                                                                      *string                                        `json:"Remark,omitempty"`
	// External Components spacing (length)                                                                                                    
	Spacing                                                                                     *float64                                       `json:"Spacing,omitempty"`
	// Top of the Measured Depth interval where the External Components are installed                                                          
	TopMeasuredDepth                                                                            *float64                                       `json:"TopMeasuredDepth,omitempty"`
	// External Component weight per item                                                                                                      
	Weight                                                                                      *float64                                       `json:"Weight,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An umbilical is any control, power or sensor cable or tube run through an outlet on the
// wellhead down to a particular receptacle on a downhole component (power or hydraulic
// line) or simply to a specific depth (sensors). Examples include Gas lift injection tube,
// Subsea valve control line, ESP power cable, iWire for external gauges, external Fiber
// Optic Sensor cable. Umbilicals are run outside of the casing or completion assembly and
// are typically attached by clamps. Umbilicals are run in hole same time as the host
// assembly. Casing Umbilicals may be cemented in place e.g. Fiber Optic.
type TubularUmbilical struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularUmbilicalData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type TubularUmbilicalData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Identifier of the Wellhead Outlet the Umbilical is connected to                                                                         
	ConnectedTubularComponentID                                                                 string                                         `json:"ConnectedTubularComponentID"`
	// Flag describing the existence of a cut (accidentally or intentionally) in the line                                                      
	Cut                                                                                         *bool                                          `json:"Cut,omitempty"`
	// The date the cut has happened                                                                                                           
	CutDate                                                                                     *time.Time                                     `json:"CutDate,omitempty"`
	// Measured Depth at which the cut has happened                                                                                            
	CutMD                                                                                       *float64                                       `json:"CutMD,omitempty"`
	// Identifier of the Parent Tubular Assembly                                                                                               
	ParentAssemblyID                                                                            string                                         `json:"ParentAssemblyID"`
	// Identifier of the Parent Wellbore                                                                                                       
	ParentWellboreID                                                                            string                                         `json:"ParentWellboreID"`
	// Identifier of the Type of Service the umbilical is facilitating                                                                         
	ServiceTypeID                                                                               *string                                        `json:"ServiceTypeID,omitempty"`
	// Identifier of the Umbilical Type                                                                                                        
	UmbilicalTypeID                                                                             *string                                        `json:"UmbilicalTypeID,omitempty"`
	// Identifier of the Wellhead Outlet the Umbilical is connected to                                                                         
	WellheadOutletKeyID                                                                         *string                                        `json:"WellheadOutletKeyID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Unsealed structural model representations associated to geometric elements such as
// faults, horizons, and intrusions on a scale of meters to kilometers.
type UnsealedSurfaceFramework struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *UnsealedSurfaceFrameworkData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
type UnsealedSurfaceFrameworkData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the StructuralOrganizationInterpretation this framework belongs to.                                                    
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// DEPRECATED: use the SeismicFaultIDs or GenericRepresentationIDs instead. The FaultSystem                                                
	// WPC has been deprecated. ~~An alternative, coherent set of fault representations under                                                  
	// one work-product-component. Only one property is expected to be populated, either                                                       
	// FaultSystem or SeismicFaultIDs.~~                                                                                                       
	FaultSystemID                                                                               *string                                        `json:"FaultSystemID,omitempty"`
	// List of Generic Representations linked to structural model inputs and outputs, for                                                      
	// example fault sticks and triangulated surfaces, Horizon data points and triangulated                                                    
	// surfaces, geobody boundary triangulated surfaces.                                                                                       
	GenericRepresentationIDs                                                                    []string                                       `json:"GenericRepresentationIDs,omitempty"`
	// List of marker set where horizon, fault and geo-boundary markers from different wellbores                                               
	// (potentially the result of a query) are used as input for the structural model.                                                         
	MarkerSetCollectionID                                                                       *string                                        `json:"MarkerSetCollectionID,omitempty"`
	// List of individual SeismicFault representations contributing to this structural model.                                                  
	// Alternatively FaultSystem can be used as single coherent set of fault representation.                                                   
	// Only one property is expected to be populated, either SeismicFaultIDs or FaultSystem.                                                   
	SeismicFaultIDs                                                                             []string                                       `json:"SeismicFaultIDs,omitempty"`
	// List of SeismicHorizons part of structural model inputs.                                                                                
	SeismicHorizonIDs                                                                           []string                                       `json:"SeismicHorizonIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Definition of a collection of polyhedra which are only organized by column.
type UnstructuredColumnLayerGridRepresentation struct {
	// The access control tags associated with this entity.                                                                                     
	ACL                                                                                          AccessControlList                              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                       
	// derived.                                                                                                                                 
	Ancestry                                                                                     *ParentList                                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                    
	CreateTime                                                                                   *time.Time                                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                                  
	// System.                                                                                                                                  
	CreateUser                                                                                   *string                                        `json:"createUser,omitempty"`
	Data                                                                                         *AbstractUnstructuredColumnLayerGridPatchClass `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                                   
	// version.                                                                                                                                 
	ID                                                                                           *string                                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                                             
	Kind                                                                                         string                                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                                   
	// legal tags is managed by the Compliance Service.                                                                                         
	Legal                                                                                        LegalMetaData                                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                                  
	// definitions.                                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem                 `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                        
	ModifyTime                                                                                   *time.Time                                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                               
	ModifyUser                                                                                   *string                                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                                  
	// as keys and values.                                                                                                                      
	Tags                                                                                         map[string]string                              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                          
	Version                                                                                      *int64                                         `json:"version,omitempty"`
}

// The group of elements contained by all different kind of grids
//
// Definition of a collection of polyhedra which are only organized by column. Only an
// abstract group type in order to be reused in GPGrid.
//
// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
//
// The group of elements which all column grid layers (ijk or unstructured) contain
type AbstractUnstructuredColumnLayerGridPatchClass struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the EarthModelInterpretation this grid belongs to.                                                                     
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// Total count of active cells in the grid. It is an approximation since the real count of                                                 
	// active cells can be modified with some properties.                                                                                      
	ActiveCellCount                                                                             *int64                                         `json:"ActiveCellCount,omitempty"`
	// Indicate if the grid has got some finite element subnodes for defining higher order grid                                                
	// geometry and properties. This is mainly used in geomechanical context.                                                                  
	HasFiniteElementSubnodes                                                                    *bool                                          `json:"HasFiniteElementSubnodes,omitempty"`
	// Indicate that at least on coordinate of one node of the grid is NaN. It is different than                                               
	// a dead cell which may have a geometry while it is disabled.                                                                             
	HasNaNGeometry                                                                              *bool                                          `json:"HasNaNGeometry,omitempty"`
	// Indicate that the grid has no geometry. It is common when one wants a grid only as a                                                    
	// collection of cell connections (i.e. pipe network).                                                                                     
	HasNoGeometry                                                                               *bool                                          `json:"HasNoGeometry,omitempty"`
	// Reference to the parent grid. If present, it means that this grid is a Local                                                            
	// GridRefinement.                                                                                                                         
	ParentGridID                                                                                *string                                        `json:"ParentGridID,omitempty"`
	// References to the RockFluid organization interpretations which this grid relates to.                                                    
	RockFluidOrganizationInterpretationIDS                                                      []string                                       `json:"RockFluidOrganizationInterpretationIDS,omitempty"`
	// Allow to link the K layers (or the "geologic k" property for example in case of K                                                       
	// expansion or unstructured grid) of this grid with some stratigraphic units of a                                                         
	// stratigraphic organization.                                                                                                             
	StratigraphicUnits                                                                          *StratigraphicUnits                            `json:"StratigraphicUnits,omitempty"`
	// Indicate if a grid has been topologically expanded in a particular dimension (K                                                         
	// expansion, J expansion, I expansion)                                                                                                    
	ExpansionInDirection                                                                        *ExpansionInDirection                          `json:"ExpansionInDirection,omitempty"`
	// Indicate if at least two adjacent nodes in K Direction are collocated. Also known as                                                    
	// pinched node. Usually occur in erosional context.                                                                                       
	HasCollocatedNodeInKDirection                                                               *bool                                          `json:"HasCollocatedNodeInKDirection,omitempty"`
	// Indicate that it exists at least one gap in the whole K direction of the grid. A gap is                                                 
	// really a hole, it is not a layer of dead cells.                                                                                         
	HasKGaps                                                                                    *bool                                          `json:"HasKGaps,omitempty"`
	// Indicate that it exists at least one gap in the lateral direction of the grid. A gap is                                                 
	// really a hole, it is not a slice of dead cells.                                                                                         
	HasLateralGaps                                                                              *bool                                          `json:"HasLateralGaps,omitempty"`
	// Indicate that the nodes of the grid are given by means of a parameter along the pillar.                                                 
	// Otherwise nodes of the grid are explicitly given by means of an XYZ triplet.                                                            
	HasParametricGeometry                                                                       *bool                                          `json:"HasParametricGeometry,omitempty"`
	// Indicate that the grid contains some split nodes i.e some node which are not on a pillar.                                               
	HasSplitNode                                                                                *bool                                          `json:"HasSplitNode,omitempty"`
	// Indicate that some of the pillars of the grid are truncated (Fault contact in Y shape for                                               
	// example)                                                                                                                                
	HasTruncations                                                                              *bool                                          `json:"HasTruncations,omitempty"`
	// Indicate the K direction of the grid : up, down or not monotonic                                                                        
	KDirectionID                                                                                *string                                        `json:"KDirectionID,omitempty"`
	// Count of cells in the K-direction (aka third and/or slowest and/or vertical direction) in                                               
	// the grid. Must be positive.                                                                                                             
	Nk                                                                                          *int64                                         `json:"Nk,omitempty"`
	// Indicate the most complex pillar shape of a grid : vertical, straight, curved                                                           
	PillarShapeID                                                                               *string                                        `json:"PillarShapeID,omitempty"`
	// Indicates the common shape of all columns in this grid : triangular, quadrilateral,                                                     
	// polygonal                                                                                                                               
	ColumnShapeID                                                                               *string                                        `json:"ColumnShapeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Definition of a collection of polyhedra which are not organized in any dimension.
type UnstructuredGridRepresentation struct {
	// The access control tags associated with this entity.                                                                                                
	ACL                                                                                          AccessControlList                                         `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                                                  
	// derived.                                                                                                                                            
	Ancestry                                                                                     *ParentList                                               `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                                            
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                               
	CreateTime                                                                                   *time.Time                                                `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                                             
	// System.                                                                                                                                             
	CreateUser                                                                                   *string                                                   `json:"createUser,omitempty"`
	Data                                                                                         *UnstructuredGridRepresentationAbstractGridRepresentation `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                                              
	// version.                                                                                                                                            
	ID                                                                                           *string                                                   `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                                        
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                                            
	// scheme follows the semantic versioning, https://semver.org/.                                                                                        
	Kind                                                                                         string                                                    `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                                              
	// legal tags is managed by the Compliance Service.                                                                                                    
	Legal                                                                                        LegalMetaData                                             `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                                             
	// definitions.                                                                                                                                        
	Meta                                                                                         []FrameOfReferenceMetaDataItem                            `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                                            
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                                                   
	ModifyTime                                                                                   *time.Time                                                `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                                          
	ModifyUser                                                                                   *string                                                   `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                                             
	// as keys and values.                                                                                                                                 
	Tags                                                                                         map[string]string                                         `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                                     
	Version                                                                                      *int64                                                    `json:"version,omitempty"`
}

// The group of elements contained by all different kind of grids
//
// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by all different kinds of representations.
//
// Definition of a collection of polyhedra which are not organized in any dimension. Only an
// abstract group type in order to be reused in GPGrid.
type UnstructuredGridRepresentationAbstractGridRepresentation struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Several optional indexable element counts                                                                                               
	IndexableElementCount                                                                       []IndexableElementCount                        `json:"IndexableElementCount,omitempty"`
	// Allow to link an interpretation with this representation                                                                                
	//                                                                                                                                         
	// The reference to the EarthModelInterpretation this grid belongs to.                                                                     
	InterpretationID                                                                            *string                                        `json:"InterpretationID,omitempty"`
	// Name of the interpretation the representation refers to                                                                                 
	InterpretationName                                                                          *string                                        `json:"InterpretationName,omitempty"`
	// Allow to link a local CRS with this representation                                                                                      
	LocalModelCompoundCRSID                                                                     *string                                        `json:"LocalModelCompoundCrsID,omitempty"`
	// The index of the realization of this representation                                                                                     
	RealizationIndex                                                                            *int64                                         `json:"RealizationIndex,omitempty"`
	// Allow to link the geometry of the representation to a particular index of a time series.                                                
	// This is particularly useful for IJK grids used in geomechanical or basin context where                                                  
	// the topology and geometry varies against the time.                                                                                      
	TimeSeries                                                                                  *TimeSeriesClass                               `json:"TimeSeries,omitempty"`
	// Total count of active cells in the grid. It is an approximation since the real count of                                                 
	// active cells can be modified with some properties.                                                                                      
	ActiveCellCount                                                                             *int64                                         `json:"ActiveCellCount,omitempty"`
	// Indicate if the grid has got some finite element subnodes for defining higher order grid                                                
	// geometry and properties. This is mainly used in geomechanical context.                                                                  
	HasFiniteElementSubnodes                                                                    *bool                                          `json:"HasFiniteElementSubnodes,omitempty"`
	// Indicate that at least on coordinate of one node of the grid is NaN. It is different than                                               
	// a dead cell which may have a geometry while it is disabled.                                                                             
	HasNaNGeometry                                                                              *bool                                          `json:"HasNaNGeometry,omitempty"`
	// Indicate that the grid has no geometry. It is common when one wants a grid only as a                                                    
	// collection of cell connections (i.e. pipe network).                                                                                     
	HasNoGeometry                                                                               *bool                                          `json:"HasNoGeometry,omitempty"`
	// Reference to the parent grid. If present, it means that this grid is a Local                                                            
	// GridRefinement.                                                                                                                         
	ParentGridID                                                                                *string                                        `json:"ParentGridID,omitempty"`
	// References to the RockFluid organization interpretations which this grid relates to.                                                    
	RockFluidOrganizationInterpretationIDS                                                      []string                                       `json:"RockFluidOrganizationInterpretationIDS,omitempty"`
	// Allow to link the K layers (or the "geologic k" property for example in case of K                                                       
	// expansion or unstructured grid) of this grid with some stratigraphic units of a                                                         
	// stratigraphic organization.                                                                                                             
	StratigraphicUnits                                                                          *StratigraphicUnits                            `json:"StratigraphicUnits,omitempty"`
	// Indicates the uniform shape of all cells in this grid : tetrahedral, pyramidal, prism,                                                  
	// hexahedral, polyhedral                                                                                                                  
	CellShapeID                                                                                 *string                                        `json:"CellShapeID,omitempty"`
	// The count of faces in this grid                                                                                                         
	FaceCount                                                                                   *int64                                         `json:"FaceCount,omitempty"`
	// The count of nodes in this grid                                                                                                         
	NodeCount                                                                                   *int64                                         `json:"NodeCount,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An earth model describing seismic velocities.
type VelocityModeling struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *VelocityModelingData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type VelocityModelingData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Type of anisotropy used in the velocity model                                                                                            
	AnisotropyType                                                                               *string                                        `json:"AnisotropyType,omitempty"`
	// The average distance between grid nodes or mesh vertices in each direction (i,j,k).  Note                                                
	// that vertical case is equivalent to sample interval.                                                                                     
	AverageNodeSpacings                                                                          []float64                                      `json:"AverageNodeSpacings,omitempty"`
	// the Bin Grid of the coordinates are specified in seismic bin inline/crossline. Only                                                      
	// required when it is a Grid `PropertyFieldRepresentationType`.                                                                            
	BinGridID                                                                                    *string                                        `json:"BinGridID,omitempty"`
	// The type of numerical value(s) stored in each grid cell, such as Float or Double.                                                        
	CellValueTypes                                                                               []string                                       `json:"CellValueTypes,omitempty"`
	// Reference to history in source system, for example Jobpro jobset id, dataset id, workflow                                                
	// id                                                                                                                                       
	DataSourceReferenceKeys                                                                      []int64                                        `json:"DataSourceReferenceKeys,omitempty"`
	// System providing data source history, eg. Jobpro, etc.                                                                                   
	DataSourceSystem                                                                             *string                                        `json:"DataSourceSystem,omitempty"`
	// The number of grid nodes in each direction (i,j,k)                                                                                       
	DimensionNodeCounts                                                                          []int64                                        `json:"DimensionNodeCounts,omitempty"`
	// Is this model defined along a line, on a surface, for a volume, for a time series?                                                       
	DimensionType                                                                                *string                                        `json:"DimensionType,omitempty"`
	// Given a discretisation of a property field (e.g. a  mesh), the value of a property may                                                   
	// refer to a vertex, the center of a cell, or the region covered by a cell.  When vertical                                                 
	// interpolation is constant, this also includes an indication of Z Grid Registration, which                                                
	// whether the sample value pertains to the top, center, of bottom of grid.                                                                 
	DiscretisationSchemeType                                                                     *string                                        `json:"DiscretisationSchemeType,omitempty"`
	// Boolean to show that datum reference is not a constant.  Any description or horizon                                                      
	// information must be described in model file(s).                                                                                          
	FloatingDatumIndicator                                                                       *bool                                          `json:"FloatingDatumIndicator,omitempty"`
	// The CRS for surface coordinates used in fault locations if not specified in File.                                                        
	HorizontalCRSID                                                                              *string                                        `json:"HorizontalCRSID,omitempty"`
	// For discretely sampled models, the mathematical form of interpolation between nodes, such                                                
	// as linear in space, bicubic spline, linear in time, trilinear, horizon-based.                                                            
	InterpolationMethodID                                                                        *string                                        `json:"InterpolationMethodID,omitempty"`
	// The purpose or intended use of the velocity model, such as Stacking|Depth Migration|Time                                                 
	// Migration|Time-depth.                                                                                                                    
	ObjectiveType                                                                                *string                                        `json:"ObjectiveType,omitempty"`
	// Is the velocity field represented as a grid, mesh or profile.                                                                            
	PropertyFieldRepresentationType                                                              *string                                        `json:"PropertyFieldRepresentationType,omitempty"`
	// List of properties represented, eg. Vp, Vs, ....  Length ValuesPerNodeOrCell.                                                            
	PropertyNameTypes                                                                            []string                                       `json:"PropertyNameTypes,omitempty"`
	// Units of measure for each property type in Cell Values.  Array of length                                                                 
	// ValuesPerNodeOrCell.                                                                                                                     
	PropertyUOMIDs                                                                               []string                                       `json:"PropertyUOMIDs,omitempty"`
	// Total depth or time covered by velocity model.  In units of SeismicDomainUoM.                                                            
	RecordLength                                                                                 *float64                                       `json:"RecordLength,omitempty"`
	// Comments about the velocity model reflecting the thinking of the modeler.  Distinguished                                                 
	// from Description which is a general explanation of the model.                                                                            
	Remark                                                                                       *string                                        `json:"Remark,omitempty"`
	// Value used to produce vertical static shifts in data                                                                                     
	ReplacementVelocity                                                                          *float64                                       `json:"ReplacementVelocity,omitempty"`
	// The relationship to the Seismic2DInterpretationSet relevant to this velocity modeling                                                    
	// activity.                                                                                                                                
	Seismic2DInterpretationSetID                                                                 *string                                        `json:"Seismic2DInterpretationSetID,omitempty"`
	// The relationship to the Seismic3DInterpretationSet relevant to this velocity modeling                                                    
	// activity.                                                                                                                                
	Seismic3DInterpretationSetID                                                                 *string                                        `json:"Seismic3DInterpretationSetID,omitempty"`
	// The relationship to the SeismicAcquisitionSurvey relevant to this velocity modeling                                                      
	// activity.                                                                                                                                
	SeismicAcquisitionSurveyID                                                                   *string                                        `json:"SeismicAcquisitionSurveyID,omitempty"`
	// Vertical domain of velocities.  E.g. Time, Depth.                                                                                        
	SeismicDomainTypeID                                                                          *string                                        `json:"SeismicDomainTypeID,omitempty"`
	// Unit of measurement for vertical domain                                                                                                  
	SeismicDomainUOM                                                                             *string                                        `json:"SeismicDomainUOM,omitempty"`
	// The list of seismic line geometries holding the trace to 'world' coordinate mappings for                                                 
	// the 2D seismic lines. Only populated if the Velocity Modeling is based on 2D                                                             
	// interpretations. The `PropertyFieldRepresentationType` should be either a Mesh or Profile.                                               
	SeismicLineGeometries                                                                        []string                                       `json:"SeismicLineGeometries,omitempty"`
	// The relationship to the SeismicProcessingProject relevant to this velocity modeling                                                      
	// activity.                                                                                                                                
	SeismicProcessingProjectID                                                                   *string                                        `json:"SeismicProcessingProjectID,omitempty"`
	// Total number of vertices in the model.                                                                                                   
	TotalNodeCount                                                                               *float64                                       `json:"TotalNodeCount,omitempty"`
	// The number of numerical values stored at each node or cell                                                                               
	ValuesPerNodeOrCell                                                                          *int64                                         `json:"ValuesPerNodeOrCell,omitempty"`
	// Type of algorithm used to derive velocities such as Stacking NMO, Tomography, etc.                                                       
	VelocityAnalysisMethodID                                                                     *string                                        `json:"VelocityAnalysisMethodID,omitempty"`
	// Direction associated with the velocity.  Orientation of velocity specification such as                                                   
	// vertical, dip and azimuth.                                                                                                               
	VelocityDirectionType                                                                        *string                                        `json:"VelocityDirectionType,omitempty"`
	// Name of the Velocity Type describing the statistic represented, such as                                                                  
	// RMS|Average|Interval|Instantaneous|Stacking|Migration.                                                                                   
	VelocityType                                                                                 *string                                        `json:"VelocityType,omitempty"`
	// Datum value, the elevation of zero time/depth on the vertical axis in the domain of                                                      
	// seismicdomaintype relative to the vertical reference datum used (usually MSL). Positive                                                  
	// is upward from zero elevation to seismic datum).                                                                                         
	VerticalDatumOffset                                                                          *float64                                       `json:"VerticalDatumOffset,omitempty"`
	// Identifies a vertical reference datum type. E.g. mean sea level, ground level, mudline.                                                  
	VerticalMeasurementTypeID                                                                    *string                                        `json:"VerticalMeasurementTypeID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A group of several reservoir compartments which can be associated to
// RockFluidOrganisationInterpretations and/or to GeologicUnitOrganizationInterpretations.
type VoidageGroupInterpretation struct {
	// The access control tags associated with this entity.                                                                      
	ACL                                                                                          AccessControlList               `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                        
	// derived.                                                                                                                  
	Ancestry                                                                                     *ParentList                     `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                  
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                     
	CreateTime                                                                                   *time.Time                      `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                   
	// System.                                                                                                                   
	CreateUser                                                                                   *string                         `json:"createUser,omitempty"`
	Data                                                                                         *VoidageGroupInterpretationData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                    
	// version.                                                                                                                  
	ID                                                                                           *string                         `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                              
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                  
	// scheme follows the semantic versioning, https://semver.org/.                                                              
	Kind                                                                                         string                          `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                    
	// legal tags is managed by the Compliance Service.                                                                          
	Legal                                                                                        LegalMetaData                   `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                   
	// definitions.                                                                                                              
	Meta                                                                                         []FrameOfReferenceMetaDataItem  `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                  
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	ModifyTime                                                                                   *time.Time                      `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                
	ModifyUser                                                                                   *string                         `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                   
	// as keys and values.                                                                                                       
	Tags                                                                                         map[string]string               `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                           
	Version                                                                                      *int64                          `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
//
// The group of properties shared by different kinds of interpretations
type VoidageGroupInterpretationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// Describes the domain of the interpretation: Depth, Time, Mixed                                                                           
	DomainTypeID                                                                                 *string                                        `json:"DomainTypeID,omitempty"`
	// Reference to the Feature the Interpretation refers to. The actual type of the target is                                                  
	// specified in the specialisation, i.e. the type, which includes this schema fragment.                                                     
	//                                                                                                                                          
	// Reference to the Feature this Interpretation refers to.                                                                                  
	FeatureID                                                                                    *string                                        `json:"FeatureID,omitempty"`
	// Name of the feature the Interpretation refers to                                                                                         
	FeatureName                                                                                  *string                                        `json:"FeatureName,omitempty"`
	// Represents the mean possible age for the interpretation. Expressed in geological time as                                                 
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	MeanPossibleAge                                                                              *float64                                       `json:"MeanPossibleAge,omitempty"`
	// Represents the older possible age for the interpretation. Expressed in geological time as                                                
	// millions of years [Ma], and the value must be positive. The age value is not subject to                                                  
	// normalization.                                                                                                                           
	OlderPossibleAge                                                                             *float64                                       `json:"OlderPossibleAge,omitempty"`
	// Represents the younger possible age for the interpretation. Expressed in geological time                                                 
	// as millions of years [Ma], and the value must be positive. The age value is not subject                                                  
	// to normalization.                                                                                                                        
	YoungerPossibleAge                                                                           *float64                                       `json:"YoungerPossibleAge,omitempty"`
	// Reference to the GeologicUnitOrganizationInterpretations associated to this voidage group.                                               
	GeologicUnitOrganizationInterpretationIDs                                                    []string                                       `json:"GeologicUnitOrganizationInterpretationIDs,omitempty"`
	// List of ReservoirCompartment interpretation parts of the Collection, defined as an array                                                 
	// of the member IDs                                                                                                                        
	MemberIDs                                                                                    []string                                       `json:"MemberIDs"`
	// Reference to the RockFluidOrganizationInterpretations associated to this voidage group.                                                  
	RockFluidOrganizationInterpretationIDs                                                       []string                                       `json:"RockFluidOrganizationInterpretationIDs,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Used to capture an analysis of the drilling mud, completion fluid or other fluids pumped
// during well construction. Printed snapshots, e.g. PDF files, are captured via
// data.Artefacts[].
type WellFluidsReport struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellFluidsReportData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellFluidsReportData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	//                                                                                                                                         
	// Name of Fluids Report                                                                                                                   
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// End DateTime of the reporting period                                                                                                    
	EndDateTime                                                                                 time.Time                                      `json:"EndDateTime"`
	// The drilling fluids that are represented on this report                                                                                 
	Fluid                                                                                       []FluidElement                                 `json:"Fluid,omitempty"`
	// Fluids report number                                                                                                                    
	NumReport                                                                                   *float64                                       `json:"NumReport,omitempty"`
	// Start DateTime of the reporting period                                                                                                  
	StartDateTime                                                                               time.Time                                      `json:"StartDateTime"`
	// Reference to the wellbore that is the subject of this fluids report                                                                     
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Information regarding an individual fluid that is part of the Drilling Report.
type FluidElement struct {
	// Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid                      
	// to reach the phenolphthalein endpoint).                                                             
	AlkalinityP1                                                                               *float64    `json:"AlkalinityP1,omitempty"`
	// Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to                   
	// titrate, the reagent mixture to the phenolphthalein endpoint).                                      
	AlkalinityP2                                                                               *float64    `json:"AlkalinityP2,omitempty"`
	// Cleaning coefficient of drilling fluid                                                              
	AnnularShapeRatio                                                                          *float64    `json:"AnnularShapeRatio,omitempty"`
	// Average specific gravity of solids.                                                                 
	ASG                                                                                        *float64    `json:"Asg,omitempty"`
	// Average size of the drill cuttings.                                                                 
	AverageCuttingSize                                                                         *float64    `json:"AverageCuttingSize,omitempty"`
	// Barite content percent.                                                                             
	BaritePC                                                                                   *float64    `json:"BaritePc,omitempty"`
	// The name of the fluid as given by the supplier                                                      
	BrandName                                                                                  *string     `json:"BrandName,omitempty"`
	// Density of water phase of NAF.                                                                      
	BrineDensity                                                                               *float64    `json:"BrineDensity,omitempty"`
	// Percent brine content.                                                                              
	BrinePC                                                                                    *float64    `json:"BrinePc,omitempty"`
	// Calcium content.                                                                                    
	Calcium                                                                                    *float64    `json:"Calcium,omitempty"`
	// Calcium chloride content.                                                                           
	CalciumChloride                                                                            *float64    `json:"CalciumChloride,omitempty"`
	// Calcium chloride percent.                                                                           
	CalciumChloridePC                                                                          *float64    `json:"CalciumChloridePc,omitempty"`
	// Carbonate content.                                                                                  
	Carbonate                                                                                  *float64    `json:"Carbonate,omitempty"`
	// Chloride content.                                                                                   
	Chloride                                                                                   *float64    `json:"Chloride,omitempty"`
	// Comments and remarks.                                                                               
	Comments                                                                                   *string     `json:"Comments,omitempty"`
	// Reference to the Company performing the analysis                                                    
	CompanyID                                                                                  *string     `json:"CompanyID,omitempty"`
	// Fluid density. This excludes the cuttings.                                                          
	Density                                                                                    *float64    `json:"Density,omitempty"`
	// Measurement of the emulsion stability and oil-wetting capability in oil-based muds.                 
	ElectStab                                                                                  *float64    `json:"ElectStab,omitempty"`
	// Equivalent circulating density where fluid reading was recorded or calculated/simulated             
	EquivalentCirculatingDensity                                                               *float64    `json:"EquivalentCirculatingDensity,omitempty"`
	// Equivalent static density where fluid reading was recorded or calculated/simulated                  
	EquivalentStaticDensity                                                                    *float64    `json:"EquivalentStaticDensity,omitempty"`
	// High temperature high pressure (HTHP) filter cake thickness.                                        
	FilterCakeHthp                                                                             *float64    `json:"FilterCakeHthp,omitempty"`
	// Filter cake thickness at low (normal) temperature and pressure.                                     
	FilterCakeLtlp                                                                             *float64    `json:"FilterCakeLtlp,omitempty"`
	// High temperature high pressure (HTHP) filtrate (volume per 30 min).                                 
	FiltrateHthp                                                                               *float64    `json:"FiltrateHthp,omitempty"`
	// API water loss (low temperature and pressure mud filtrate measurement) (volume per 30               
	// min).                                                                                               
	FiltrateLtlp                                                                               *float64    `json:"FiltrateLtlp,omitempty"`
	// High temperature high pressure (HTHP) pressure.                                                     
	FiltratePressureHthp                                                                       *float64    `json:"FiltratePressureHthp,omitempty"`
	// High temperature high pressure (HTHP) temperature.                                                  
	FiltrateTemperatureHthp                                                                    *float64    `json:"FiltrateTemperatureHthp,omitempty"`
	// Zero-second gels.                                                                                   
	Gel0SEC                                                                                    *float64    `json:"Gel0Sec,omitempty"`
	// Ten-minute gels.                                                                                    
	Gel10Min                                                                                   *float64    `json:"Gel10Min,omitempty"`
	// Ten-second gels.                                                                                    
	Gel10SEC                                                                                   *float64    `json:"Gel10Sec,omitempty"`
	// Thirty-minute gels.                                                                                 
	Gel30Min                                                                                   *float64    `json:"Gel30Min,omitempty"`
	// Total calcium hardness.                                                                             
	HardnessCA                                                                                 *float64    `json:"HardnessCa,omitempty"`
	// Iron content.                                                                                       
	Iron                                                                                       *float64    `json:"Iron,omitempty"`
	// Assumed kick density for calculation of kick tolerance where the fluid reading was                  
	// recorded.                                                                                           
	KickToleranceIntensity                                                                     *float64    `json:"KickToleranceIntensity,omitempty"`
	// Assumed kick volume for calculation of kick tolerance based on the kick intensity where             
	// the fluid reading was recorded.                                                                     
	KickToleranceVolume                                                                        *float64    `json:"KickToleranceVolume,omitempty"`
	// Lost circulation material.                                                                          
	Lcm                                                                                        *float64    `json:"Lcm,omitempty"`
	// Lime content.                                                                                       
	Lime                                                                                       *float64    `json:"Lime,omitempty"`
	// Shearing capacity of mud at low velocity                                                            
	LowShearYieldPoint                                                                         *float64    `json:"LowShearYieldPoint,omitempty"`
	// Magnesium content.                                                                                  
	Magnesium                                                                                  *float64    `json:"Magnesium,omitempty"`
	// Cation exchange capacity (CEC) of the mud sample as measured by methylene blue titration            
	// (MBT).                                                                                              
	//                                                                                                     
	// NOTE: This is temporarily set to be a GenericMeasure with no unit validation, pending               
	// addition of CEC units to the Energistics UoM spec.                                                  
	Mbt                                                                                        *float64    `json:"Mbt,omitempty"`
	// The measured depth where the fluid readings were recorded.                                          
	MeasuredDepth                                                                              *float64    `json:"MeasuredDepth,omitempty"`
	// Metal recovered from the wellbore.                                                                  
	MetalRecovered                                                                             *float64    `json:"MetalRecovered,omitempty"`
	// Methyl orange alkalinity of filtrate.                                                               
	MF                                                                                         *float64    `json:"Mf,omitempty"`
	// The class of the drilling fluid.                                                                    
	MudClass                                                                                   *string     `json:"MudClass,omitempty"`
	// The name of the Mud Engineer                                                                        
	MudEngineer                                                                                *string     `json:"MudEngineer,omitempty"`
	// Mud pH.                                                                                             
	MudPh                                                                                      *float64    `json:"MudPh,omitempty"`
	// Mud pH measurement temperature.                                                                     
	MudTempPh                                                                                  *float64    `json:"MudTempPh,omitempty"`
	// Oil on cuttings.                                                                                    
	OilCtg                                                                                     *float64    `json:"OilCtg,omitempty"`
	// Oil on dried cuttings.                                                                              
	OilCtgDry                                                                                  *float64    `json:"OilCtgDry,omitempty"`
	// Oil and grease content.                                                                             
	OilGrease                                                                                  *float64    `json:"OilGrease,omitempty"`
	// Percent oil content from retort.                                                                    
	OilPC                                                                                      *float64    `json:"OilPc,omitempty"`
	// Plastic viscosity.                                                                                  
	PlasticViscosity                                                                           *float64    `json:"PlasticViscosity,omitempty"`
	// Phenolphthalein alkalinity of whole mud.                                                            
	Pm                                                                                         *float64    `json:"Pm,omitempty"`
	// Phenolphthalein alkalinity of mud filtrate.                                                         
	PmFiltrate                                                                                 *float64    `json:"PmFiltrate,omitempty"`
	// Polymers present in the mud system.                                                                 
	Polymer                                                                                    *float64    `json:"Polymer,omitempty"`
	// Type of polymers present in the mud system.                                                         
	PolymerType                                                                                []string    `json:"PolymerType,omitempty"`
	// Potassium content.                                                                                  
	Potassium                                                                                  *float64    `json:"Potassium,omitempty"`
	// Details of the Rheometer tests performed on the fluid sample                                        
	Rheometer                                                                                  []Rheometer `json:"Rheometer,omitempty"`
	// Salt content.                                                                                       
	Salt                                                                                       *float64    `json:"Salt,omitempty"`
	// Salt percent.                                                                                       
	SaltPC                                                                                     *float64    `json:"SaltPc,omitempty"`
	// The time when fluid readings were recorded.                                                         
	SampleDateTime                                                                             *time.Time  `json:"SampleDateTime,omitempty"`
	// Sample location.                                                                                    
	SampleLocation                                                                             *string     `json:"SampleLocation,omitempty"`
	// Sand content percent.                                                                               
	SandPC                                                                                     *float64    `json:"SandPc,omitempty"`
	// Sodium chloride content.                                                                            
	SodiumChloride                                                                             *float64    `json:"SodiumChloride,omitempty"`
	// Sodium chloride percent.                                                                            
	SodiumChloridePC                                                                           *float64    `json:"SodiumChloridePc,omitempty"`
	// Solids corrected for chloride content percent.                                                      
	SolCorPC                                                                                   *float64    `json:"SolCorPc,omitempty"`
	// Percent calculated solids content.                                                                  
	SolidsCalcPC                                                                               *float64    `json:"SolidsCalcPc,omitempty"`
	// Solids high gravity content.                                                                        
	SolidsHiGrav                                                                               *float64    `json:"SolidsHiGrav,omitempty"`
	// Solids high gravity content corrected for chloride content                                          
	SolidsHiGravCorrected                                                                      *float64    `json:"SolidsHiGravCorrected,omitempty"`
	// Solids high gravity percent.                                                                        
	SolidsHiGravPC                                                                             *float64    `json:"SolidsHiGravPc,omitempty"`
	// Solids low gravity content.                                                                         
	SolidsLowGrav                                                                              *float64    `json:"SolidsLowGrav,omitempty"`
	// Solids low gravity content corrected for chloride content                                           
	SolidsLowGravCorrected                                                                     *float64    `json:"SolidsLowGravCorrected,omitempty"`
	// Low gravity solids percent.                                                                         
	SolidsLowGravPC                                                                            *float64    `json:"SolidsLowGravPc,omitempty"`
	// Solids percentage from retort.                                                                      
	SolidsPC                                                                                   *float64    `json:"SolidsPc,omitempty"`
	// Sulfide content.                                                                                    
	Sulfide                                                                                    *float64    `json:"Sulfide,omitempty"`
	// True crystallization temperature.                                                                   
	Tct                                                                                        *float64    `json:"Tct,omitempty"`
	// Flow line temperature measurement where the fluid reading was recorded.                             
	TemperatureFlowLine                                                                        *float64    `json:"TemperatureFlowLine,omitempty"`
	// Funnel viscosity temperature.                                                                       
	TemperatureViscosity                                                                       *float64    `json:"TemperatureViscosity,omitempty"`
	// Turbidity units to measure the cloudiness or haziness of a fluid.                                   
	Turbidity                                                                                  *float64    `json:"Turbidity,omitempty"`
	// The true vertical depth where the fluid readings were recorded.                                     
	Tvd                                                                                        *float64    `json:"TVD,omitempty"`
	// Description for the type of fluid.                                                                  
	Type                                                                                       *string     `json:"Type,omitempty"`
	// Funnel viscosity in seconds.                                                                        
	ViscosityFunnel                                                                            *float64    `json:"ViscosityFunnel,omitempty"`
	// Water content percent.                                                                              
	WaterPC                                                                                    *float64    `json:"WaterPc,omitempty"`
	// A factor showing the activity level of salt in oil-based mud.                                       
	WaterPhaseSalinity                                                                         *float64    `json:"WaterPhaseSalinity,omitempty"`
	// Calcium content in the whole mud sample, including oil and water phases.                            
	WholeMudCalcium                                                                            *float64    `json:"WholeMudCalcium,omitempty"`
	// Chloride content in the whole mud sample, including oil and water phases.                           
	WholeMudChloride                                                                           *float64    `json:"WholeMudChloride,omitempty"`
	// Yield point (Bingham and Herschel Bulkley models).                                                  
	YieldPoint                                                                                 *float64    `json:"YieldPoint,omitempty"`
	// Zinc oxide content.                                                                                 
	ZincOxide                                                                                  *float64    `json:"ZincOxide,omitempty"`
}

// Rheometer values observed
type Rheometer struct {
	// The pressure at which the rheometer values were measured                        
	PressureRheometer                                             float64              `json:"PressureRheometer"`
	// The viscosities recorder during the Rheometer test                              
	RheometerViscosities                                          []RheometerViscosity `json:"RheometerViscosities,omitempty"`
	// The temperature at which the rheometer values were measured                     
	TemperatureRheometer                                          float64              `json:"TemperatureRheometer"`
}

// Viscosity values observed
type RheometerViscosity struct {
	// Rotational speed of the rheometer, typically in RPM.                                         
	Speed                                                                                   float64 `json:"Speed"`
	// The raw reading from a rheometer. This could be, but is not necessarily, a viscosity.        
	Viscosity                                                                               float64 `json:"Viscosity"`
}

// A well log is a data type that correlates a particular measurement or multiple
// measurements in a wellbore against depth and/or time within that wellbore. When plotted
// visually, well logs are typically long line graphs (called "curves") but may sometimes be
// discrete points or intervals. This schema object is intended for digital well logs, not
// raster log files or raster calibration files, but may be used for the latter in the
// absence of a defined OSDU schema for these use cases.
type WellLog struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellLogData                   `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellLogData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                          
	ExistenceKind                                                                                *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                   
	ResourceCurationStatus                                                                       *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                           
	ResourceHomeRegionID                                                                         *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                        
	ResourceHostRegionIDs                                                                        []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                         
	ResourceLifecycleStatus                                                                      *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                           
	ResourceSecurityClassification                                                               *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                                   
	// only, the list of sources is not governed.                                                                                               
	Source                                                                                       *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                  
	// suitable quality, any further change or versioning of a Certified record should be                                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssuranceID                                                                         *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                                
	// from the file, in the sense certain valuable information is generated during loading                                                     
	// process (Artefact generation process). Examples include retrieving location data,                                                        
	// performing an OCR which may result in the generation of artefacts which need to be                                                       
	// preserved distinctly                                                                                                                     
	Artefacts                                                                                    []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                      
	Datasets                                                                                     []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                 
	// work-product-component. The references are formed as URI following                                                                       
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                                
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                       
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                 
	// the DDMS id.                                                                                                                             
	DDMSDatasets                                                                                 []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                                
	// the search index.                                                                                                                        
	IsDiscoverable                                                                               *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                  
	// reflects the fact that the work product component is in an early stage and may be updated                                                
	// before finalization.                                                                                                                     
	IsExtendedLoad                                                                               *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                                
	// known (it should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                       
	// quality, any further change or versioning of a Certified record should be carefully                                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                                
	// "preferred" or "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                     
	// entity.                                                                                                                                  
	AuthorIDs                                                                                    []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                   
	// (ex. well planning, exploration).                                                                                                        
	BusinessActivities                                                                           []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                     
	// loading (e.g. publication date).                                                                                                         
	CreationDateTime                                                                             *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                       
	// captures thoughts of creator about the wpc.                                                                                              
	Description                                                                                  *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                 
	// types or multiple values of the same type.                                                                                               
	GeoContexts                                                                                  []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                     
	// product component depends.  The assertion is directed only from the asserting WPC to                                                     
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                    
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                                
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                    
	LineageAssertions                                                                            []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                     
	Name                                                                                         *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                 
	// (location of the subject matter).                                                                                                        
	SpatialArea                                                                                  *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                   
	// (location of the subject matter).                                                                                                        
	SpatialPoint                                                                                 *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                              
	SubmitterName                                                                                *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                           
	Tags                                                                                         []string                                       `json:"Tags,omitempty"`
	// General method or circumstance of logging - MWD, completion, etc. This is free text                                                      
	// string. Use the Use Well Log Acquisition schema `LogRuns[].ConveyanceMethodID` property                                                  
	// where possible to capture the conveyance method.                                                                                         
	ActivityType                                                                                 *string                                        `json:"ActivityType,omitempty"`
	// DEPRECATED: Use the `SamplingStop` property. The `SamplingStop` is defined as the stop                                                   
	// value or largest value of the ReferenceCurveID, typically the largest value that                                                         
	// represents the depth or time of the logging. Informational Bottom Measured Depth of the                                                  
	// Well Log. Always populate SamplingStart and SamplingStop, which represents the real                                                      
	// sampling of the WellLog, including  non-depth sampling.                                                                                  
	BottomMeasuredDepth                                                                          *float64                                       `json:"BottomMeasuredDepth,omitempty"`
	// These are candidate reference curves, not real indices, which can be used to create                                                      
	// look-up/transformation tables. These candidate reference curves are generally not                                                        
	// populated, except in the cases where multiple reference curves are present, e.g. measured                                                
	// depth and time. Supported use cases can be found in WorkedExamples.                                                                      
	CandidateReferenceCurveIDs                                                                   []string                                       `json:"CandidateReferenceCurveIDs,omitempty"`
	// DEPRECATED: Use the Well Log Acquisition schema `Project.Contractors[]` array, or the                                                    
	// `LogRuns[].ContractorCompanyID` property if a specific log run is unique to another                                                      
	// contractor. The relationship to company who engaged the service company                                                                  
	// (ServiceCompanyID) to perform the logging.                                                                                               
	CompanyID                                                                                    *string                                        `json:"CompanyID,omitempty"`
	// DEPRECATED: Use Well Log Acquisition schema `LogRuns[].ConveyanceMethodID` property. The                                                 
	// conveyance method used to acquire the log data - if not an acquired log leave                                                            
	// empty/absent.                                                                                                                            
	ConveyanceMethodID                                                                           *string                                        `json:"ConveyanceMethodID,omitempty"`
	Curves                                                                                       []FluffyCurves                                 `json:"Curves,omitempty"`
	// DEPRECATED: Use Well Log Acquisition schema `WellboreFluidTypeID` property. Type of mud                                                  
	// at time of logging (oil, water based,...)                                                                                                
	DrillingFluidProperty                                                                        *string                                        `json:"DrillingFluidProperty,omitempty"`
	// Required for complex DLIS format files defined by having multiple Logical Files and/or                                                   
	// multiple Frames.  The Frame Identifier is a numerical attribute that represents the                                                      
	// interval spacing of the data within the frame.                                                                                           
	FrameIdentifier                                                                              *string                                        `json:"FrameIdentifier,omitempty"`
	// DEPRECATED: Use Well Log Acquisition schema `LogRuns[].LogPasses[].HoleTypeID` property.                                                 
	// This is now a reference value list. Description of the hole related type of logging -                                                    
	// POSSIBLE VALUE : OpenHole / CasedHole / CementedHole                                                                                     
	HoleTypeLogging                                                                              *string                                        `json:"HoleTypeLogging,omitempty"`
	// Boolean property indicating the sampling mode of the ReferenceCurveID. True means all                                                    
	// reference curve values are regularly spaced (see SamplingInterval); false means irregular                                                
	// or discrete sample spacing.                                                                                                              
	IsRegular                                                                                    *bool                                          `json:"IsRegular,omitempty"`
	// DEPRECATED: Use the Well Log Acquisition schema `LogRuns[].LogPasses[].PassTypeID`                                                       
	// property. This is now a reference value. Log Activity, used to describe the type of pass                                                 
	// such as Calibration Pass - Main Pass - Repeated Pass                                                                                     
	LogActivity                                                                                  *string                                        `json:"LogActivity,omitempty"`
	// DEPRECATED:  Use the Well Log Acquisition schema                                                                                         
	// `LogRun[].LogPasses[].LoggingDirectionID` reference value. Specifies whether curves were                                                 
	// collected downward or upward                                                                                                             
	LoggingDirection                                                                             *string                                        `json:"LoggingDirection,omitempty"`
	// DEPRECATED:  Use the Well Log Acquisition schema `LogRun[].GenericToolTypeIDs[]`                                                         
	// reference value list to capture the generic tool types or logging services for a                                                         
	// particular Log Run. Tool mnemonics can also be captured using the                                                                        
	// `LogRun[].ToolMnemonicIDs[]` reference value list. Logging Service - mainly a short                                                      
	// concatenation of the names of the tools                                                                                                  
	LoggingService                                                                               *string                                        `json:"LoggingService,omitempty"`
	// Required for complex DLIS format files defined by having multiple Logical Files and/or                                                   
	// multiple Frames.  The Logical File Identifier is a numerical attribute that represents                                                   
	// the collection of a series of data groups (e.g. logging passes within a single logging                                                   
	// run), and each Logical File may contain one or multiple Frames.                                                                          
	LogicalFileIdentifier                                                                        *string                                        `json:"LogicalFileIdentifier,omitempty"`
	// DEPRECATED: Use the `Remarks` property which utilizes the AbstractRemark fragment,                                                       
	// capturing more information about a remark or comment. Log remark provides contextual                                                     
	// information during the actual log object acquisition. Explains how the measurement in the                                                
	// wellbore is taken on a point in time or depth. Additional information may be included                                                    
	// such as bad weather, tool failure, etc. Usually a part of the log header, log remark                                                     
	// contains info specific for an acquisition run, specific for a given logging tool                                                         
	// (multiple measurements) and/or a specific interval. In essence, log remark represents the                                                
	// external factors and operational environment, directly or indirectly affecting the                                                       
	// measurement quality/uncertainty (dynamically over time/depth) - adding both noise and                                                    
	// bias to the measurements.                                                                                                                
	LogRemark                                                                                    *string                                        `json:"LogRemark,omitempty"`
	// DEPRECATED: Use the Well Log Acquisition schema `LogRun[]` array and the`LogRunID`. Log                                                  
	// Run - describe the run of the log - can be a number, but may be also a alphanumeric                                                      
	// description such as a version name                                                                                                       
	LogRun                                                                                       *string                                        `json:"LogRun,omitempty"`
	// An interval built from two nested values : StartDate and EndDate. It applies to the whole                                                
	// log services and may apply to composite logs as [start of the first run job] and [end of                                                 
	// the last run job]Log Service Date                                                                                                        
	LogServiceDateInterval                                                                       *LogServiceDateInterval                        `json:"LogServiceDateInterval,omitempty"`
	// DEPRECATED: Use the `source` of the individual record. OSDU Native Log Source - will be                                                  
	// updated for later releases - not to be used yet                                                                                          
	LogSource                                                                                    *string                                        `json:"LogSource,omitempty"`
	// DEPRECATED: Refer to the `version` of the individual record. Log Version                                                                 
	LogVersion                                                                                   *string                                        `json:"LogVersion,omitempty"`
	// The value used within curves to indicate there is no data over specific depth ranges.                                                    
	NullValue                                                                                    *string                                        `json:"NullValue,omitempty"`
	// DEPRECATED:  Use the Well Log Acquisition schema `LogRuns[].LogPasses[].PassTypeID`                                                      
	// property. This is now a reference value to a specific pass such as "Main Pass" or                                                        
	// "Repeated Pass", etc. Indicates if the Pass is the Main one (1) or a repeated one - and                                                  
	// it's level repetition                                                                                                                    
	PassNumber                                                                                   *int64                                         `json:"PassNumber,omitempty"`
	// The name of the curve that holds the primary index (reference) values.                                                                   
	ReferenceCurveID                                                                             *string                                        `json:"ReferenceCurveID,omitempty"`
	// A remark array for contextual information during the actual log object acquisition.                                                      
	// Explains how the measurement in the wellbore is taken on a point in time or depth.                                                       
	// Additional information may be included such as bad weather, tool failure, etc. Usually a                                                 
	// part of the log header, log remark contains info specific for an acquisition run,                                                        
	// specific for a given logging tool (multiple measurements) and/or a specific interval. In                                                 
	// essence, log remark represents the external factors and operational environment, directly                                                
	// or indirectly affecting the measurement quality/uncertainty (dynamically over time/depth)                                                
	// - adding both noise and bias to the measurements.                                                                                        
	Remarks                                                                                      []AbstractRemark                               `json:"Remarks,omitempty"`
	// The along wellbore reference value for the Well Log data (e.g. Measured Depth, True                                                      
	// Vertical Depth, One-way Travel Time, Calendar Time).                                                                                     
	SamplingDomainTypeID                                                                         *string                                        `json:"SamplingDomainTypeID,omitempty"`
	// For regularly sampled curves this property holds the sampling interval. For non regular                                                  
	// sampled data this property is not set. This property can be captured here for composite                                                  
	// log sets and within the Well Log Acquisition schema for raw data for each Log Run using                                                  
	// the `LogRun[].SamplingInterval`. The IsRegular flag indicates whether SamplingInterval is                                                
	// required.                                                                                                                                
	SamplingInterval                                                                             *float64                                       `json:"SamplingInterval,omitempty"`
	// The start value/first value of the ReferenceCurveID, typically the smallest value that                                                   
	// represents the depth or time of the logging. At Well Log level, this is designed to                                                      
	// represent the smallest sampling interval of any and all individual logging runs and                                                      
	// passes.                                                                                                                                  
	SamplingStart                                                                                *float64                                       `json:"SamplingStart,omitempty"`
	// The stop value/last value of the ReferenceCurveID, typically the largest value that                                                      
	// represents depth or time of the logging. At the Well Log level, this is designed to                                                      
	// represent the largest sampling interval of any and all individual logging runs and passes.                                               
	SamplingStop                                                                                 *float64                                       `json:"SamplingStop,omitempty"`
	// Populated only if the WellLog represents time-depth relationships or check shots. It is                                                  
	// expressed via the standard AbstractFacilityVerticalMeasurement. The following properties                                                 
	// are expected to be present: VerticalMeasurementPathID (typically elevation),                                                             
	// VerticalMeasurementTypeID as SeismicReferenceDatum, VerticalMeasurement holding the                                                      
	// offset to either the VerticalCRSID or the chained VerticalReferenceID in the parent                                                      
	// Wellbore.                                                                                                                                
	SeismicReferenceElevation                                                                    *AbstractFacilityVerticalMeasurement           `json:"SeismicReferenceElevation,omitempty"`
	// DEPRECATED: Use the Well Log Acquisition schema `Project.Contractors[]` array, or the                                                    
	// `LogRuns[].ContractorCompanyID` property if a specific log run is unique to another                                                      
	// contractor.                                                                                                                              
	// The relationship to a Service Company, typically the producer or logging contractor.                                                     
	ServiceCompanyID                                                                             *string                                        `json:"ServiceCompanyID,omitempty"`
	// DEPRECATED:  Use the Well Log Acquisition schema `LogRun[].GenericToolTypeIDs[]` to                                                      
	// capture the generic tool types used in a particular Log Run. Tool mnemonics can also be                                                  
	// captured using the `LogRun[].ToolMnemonicIDs[]` reference value list. Tool String                                                        
	// Description - a long concatenation of the tools used for logging services such as                                                        
	// GammaRay+NeutronPorosity                                                                                                                 
	ToolStringDescription                                                                        *string                                        `json:"ToolStringDescription,omitempty"`
	// DEPRECATED: Use the `SamplingStart` property. The `SamplingStart` is defined as the start                                                
	// value or first value of the ReferenceCurveID, typically the smallest value that                                                          
	// represents the depth or time of the logging. Informational Top Measured Depth of the Well                                                
	// Log. Always populate SamplingStart and SamplingStop, which represents the real sampling                                                  
	// of the WellLog, including  non-depth sampling.                                                                                           
	TopMeasuredDepth                                                                             *float64                                       `json:"TopMeasuredDepth,omitempty"`
	// The vertical measurement reference for the log curves, which defines the vertical                                                        
	// reference datum for the logged depths. Either VerticalMeasurement or                                                                     
	// VerticalMeasurementID are populated.                                                                                                     
	VerticalMeasurement                                                                          *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// DEPRECATED: Use data.VerticalMeasurement.VerticalReferenceID instead. References an entry                                                
	// in the Vertical Measurement array for the Wellbore identified by WellboreID, which                                                       
	// defines the vertical reference datum for all curve measured depths. Either                                                               
	// VerticalMeasurementID or VerticalMeasurement are populated.                                                                              
	VerticalMeasurementID                                                                        *string                                        `json:"VerticalMeasurementID,omitempty"`
	// DEPRECATED: Use Well Log Acquisition schema `WellboreFluidTypeID` property. Type of mud                                                  
	// at time of logging (oil, water based,...)                                                                                                
	WellboreFluidTypeID                                                                          *string                                        `json:"WellboreFluidTypeID,omitempty"`
	// The Wellbore where the Well Log Work Product Component was recorded                                                                      
	WellboreID                                                                                   *string                                        `json:"WellboreID,omitempty"`
	// The Well Log Acquisition details object captures Information relevant to the well log                                                    
	// acquisition, such as the specific acquisition job, log runs and log passes that this                                                     
	// well log information derives from.                                                                                                       
	WellLogAcquisitionDetails                                                                    *WellLogAcquisitionDetails                     `json:"WellLogAcquisitionDetails,omitempty"`
	// Identifies the WellLogClass or business domain of this Well Log and associated set of                                                    
	// curves. Examples include, Petrophysical Logs, Drilling Logs and Production Logs.                                                         
	WellLogClassID                                                                               *string                                        `json:"WellLogClassID,omitempty"`
	// Well Log Type short Description such as Raw; Evaluated; Composite;....                                                                   
	WellLogTypeID                                                                                *string                                        `json:"WellLogTypeID,omitempty"`
	// Optional time reference for (calendar) time logs. The ISO date time string representing                                                  
	// zero time. Not to be confused with seismic travel time zero. The latter is defined by                                                    
	// SeismicReferenceDatum.                                                                                                                   
	ZeroTime                                                                                     *time.Time                                     `json:"ZeroTime,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A curve is a data type that is represented by a series of digits, and are commonly
// displayed as a continuous line or a series of points referenced to the WellLog reference
// curve.   A WellLog commonly contains multiple curves.
type FluffyCurves struct {
	// DEPRECATED: Use `SamplingStop` for consistency. The curves maximum "depth" i.e., the                
	// reference value at which the curve has its last non-absent value. The curve may contain             
	// further absent values in between TopDepth and BaseDepth. Note that the SamplingDomainType           
	// may not be a depth as the property name indicates.                                                  
	BaseDepth                                                                                   *float64   `json:"BaseDepth,omitempty"`
	// Curve description is specific to that single curve mnemonic. In essence, curve                      
	// description defines the internal factors such as what the "curve" or measurement ideally            
	// is representing, how is it calculated, what are the assumptions and the "constants".                
	CurveDescription                                                                            *string    `json:"CurveDescription,omitempty"`
	// The ID of the Well Log Curve                                                                        
	CurveID                                                                                     *string    `json:"CurveID,omitempty"`
	// The Quality of the Log Curve.                                                                       
	CurveQuality                                                                                *string    `json:"CurveQuality,omitempty"`
	// The value type to be expected as curve sample values.                                               
	CurveSampleTypeID                                                                           *string    `json:"CurveSampleTypeID,omitempty"`
	// Unit of Measure for the Log Curve                                                                   
	CurveUnit                                                                                   *string    `json:"CurveUnit,omitempty"`
	// DEPRECATED: Refer to the `version` of the individual record. Log Version                            
	CurveVersion                                                                                *string    `json:"CurveVersion,omitempty"`
	// Date curve was created in the database                                                              
	DateStamp                                                                                   *time.Time `json:"DateStamp,omitempty"`
	// DEPRECATED: Use the `Curves[].IsRegularlySampled` property instead. The Coding of the               
	// depth.                                                                                              
	DepthCoding                                                                                 *string    `json:"DepthCoding,omitempty"`
	// Unit of Measure for TopDepth and BaseDepth.                                                         
	DepthUnit                                                                                   *string    `json:"DepthUnit,omitempty"`
	// DEPRECATED: Any curve can be interpreted. Whether curve can be interpolated or not                  
	Interpolate                                                                                 *bool      `json:"Interpolate,omitempty"`
	// The name of person who generated, improved or QC'd this Log Curve.  This excludes the               
	// name of the person who loaded or ingested the data.                                                 
	InterpreterName                                                                             *string    `json:"InterpreterName,omitempty"`
	// DEPRECATED: Highly subjective and difficult to ascertain what "Processed" means.                    
	// Indicates if the curve has been processed or re-processed. This could include both                  
	// wellsite downhole processing during acquisition or post-job processing from the office              
	IsProcessed                                                                                 *bool      `json:"IsProcessed,omitempty"`
	// Indicates if the curve is regularly or irregularly sampled. Not to be confused with the             
	// `data.IsRegular` attribute at Log Level which indicates regularity of the reference curve           
	// only.                                                                                               
	IsRegularlySampled                                                                          *bool      `json:"IsRegularlySampled,omitempty"`
	// The related record id of the Log Curve Business Value Type.                                         
	LogCurveBusinessValueID                                                                     *string    `json:"LogCurveBusinessValueID,omitempty"`
	// The related record id of the Log Curve Family - which is the detailed Geological Physical           
	// Quantity Measured - such as neutron porosity                                                        
	LogCurveFamilyID                                                                            *string    `json:"LogCurveFamilyID,omitempty"`
	// The related record id of the Log Curve Main Family Type - which is the Geological                   
	// Physical Quantity measured - such as porosity.                                                      
	LogCurveMainFamilyID                                                                        *string    `json:"LogCurveMainFamilyID,omitempty"`
	// DEPRECATED:  Please use the `LogCurveMainCurveFamily` and the `LogCurveFamily`                      
	// properties. This property is duplication. The related record id of the Log Curve Type -             
	// which is the standard mnemonic chosen by the company - OSDU provides an initial list                
	LogCurveTypeID                                                                              *string    `json:"LogCurveTypeID,omitempty"`
	// A short or abbreviated form of the curve name, typically provided by the logging vendor             
	// or the processing company.  Curve mnemonics have meaning to expert users.                           
	Mnemonic                                                                                    *string    `json:"Mnemonic,omitempty"`
	// Indicates that there is no measurement within the curve. This attribute is required for             
	// the Wellbore DDMS.                                                                                  
	NullValue                                                                                   *bool      `json:"NullValue,omitempty"`
	// The number of columns present in this Curve for a single reference value.  Most curves              
	// only have one column per curve.  A single curve may contain an array of columns, and                
	// these are commonly present in curves that display as images, for example Borehole Image             
	// logs or Variable Density Logs.                                                                      
	NumberOfColumns                                                                             *int64     `json:"NumberOfColumns,omitempty"`
	// The start or smallest value of the ReferenceCurveID, typically the start depth or time of           
	// the logging.                                                                                        
	SamplingStart                                                                               *float64   `json:"SamplingStart,omitempty"`
	// The stop or largest value of the ReferenceCurveID, typically the stop depth or time of              
	// the logging.                                                                                        
	SamplingStop                                                                                *float64   `json:"SamplingStop,omitempty"`
	// DEPRECATED: Use `SamplingStart` for consistency. The curves minimum "depth", i.e., the              
	// reference value at which the curve has its first non-absent value. The curve may contain            
	// further absent values in between TopDepth and BaseDepth. Note that the SamplingDomainType           
	// may not be a depth as the property name indicates.                                                  
	TopDepth                                                                                    *float64   `json:"TopDepth,omitempty"`
}

// An interval built from two nested values : StartDate and EndDate. It applies to the whole
// log services and may apply to composite logs as [start of the first run job] and [end of
// the last run job]Log Service Date
type LogServiceDateInterval struct {
	// Date of removing tool from wellbore after the final logging run.                         
	EndDate                                                                          *time.Time `json:"EndDate,omitempty"`
	// Date of entering the wellbore with logging tools before the first logging run.           
	StartDate                                                                        *time.Time `json:"StartDate,omitempty"`
}

// The Well Log Acquisition details object captures Information relevant to the well log
// acquisition, such as the specific acquisition job, log runs and log passes that this
// well log information derives from.
type WellLogAcquisitionDetails struct {
	// A relationship to particular LogPassIDs specified within the Well Log Acquisition. There         
	// can be one or many LogPasses.                                                                    
	// Human readable reference only e.g. no reference value or pattern is available. Data              
	// quality rules can be established to assist in managing this relationship.                        
	LogPassIDs                                                                                 []string `json:"LogPassIDs,omitempty"`
	// A relationship to particular LogRunIDs specified within the Well Log Acquisition. There          
	// can be one or many LogRuns.                                                                      
	// Human readable reference only e.g. no reference value or pattern is available. Data              
	// quality rules can be established to assist in managing this relationship.                        
	LogRunIDs                                                                                  []string `json:"LogRunIDs,omitempty"`
	// A relationship to the Well Log Acquisition record relevant to this well log and set of           
	// log curves.                                                                                      
	WellLogAcquisitionID                                                                       *string  `json:"WellLogAcquisitionID,omitempty"`
}

// Calculated Maximum Allowable Annulus Surface Pressures for a set of Wellhead Annuli
// appropriate for a specific timeframe of the well to support Well integrity Annular
// pressure management.
type WellMAASP struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellMAASPData                 `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellMAASPData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Inner-most annulus maximum allowable surface pressure.                                                                                  
	Maaspa                                                                                      *float64                                       `json:"MAASPA,omitempty"`
	// 2nd inner-most maximum allowable surface pressure.                                                                                      
	Maaspb                                                                                      *float64                                       `json:"MAASPB,omitempty"`
	// 3rd inner-most annulus maximum allowable surface pressure.                                                                              
	Maaspc                                                                                      *float64                                       `json:"MAASPC,omitempty"`
	// 4th inner-most annulus maximum allowable surface pressure.                                                                              
	Maaspd                                                                                      *float64                                       `json:"MAASPD,omitempty"`
	// Date/time MAASP was calculated/published.                                                                                               
	MAASPDate                                                                                   *time.Time                                     `json:"MAASPDate,omitempty"`
	// Remarks                                                                                                                                 
	Remarks                                                                                     []AbstractRemark                               `json:"Remarks,omitempty"`
	// The ID of the well which parents the MAASP records.                                                                                     
	WellID                                                                                      string                                         `json:"WellID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A standard report of all drilling, completion or other well work operations conducted on
// a well during a given reporting period, usually a 24-hour day, not necessarily aligned
// with the local time zone.
type WellOperationsReport struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellOperationsReportData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellOperationsReportData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	//                                                                                                                                         
	// Name of Operations Report                                                                                                               
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Bit description and dull grade                                                                                                          
	BitRecord                                                                                   []BitRecord                                    `json:"BitRecord,omitempty"`
	// Hole condition description.                                                                                                             
	ConditionHole                                                                               *string                                        `json:"ConditionHole,omitempty"`
	// Cost information captured for a defined time period during operations and/or drilling                                                   
	Cost                                                                                        []Cost                                         `json:"Cost,omitempty"`
	// Daily cost.                                                                                                                             
	CostDay                                                                                     *float64                                       `json:"CostDay,omitempty"`
	// Daily mud cost.                                                                                                                         
	CostDayMud                                                                                  *float64                                       `json:"CostDayMud,omitempty"`
	// Date and time that the reporting period ended. A report period is commonly 24 hours.                                                    
	EndDateTime                                                                                 time.Time                                      `json:"EndDateTime"`
	// References to the Fluids Reports generated during this reporting period.                                                                
	FluidsIDs                                                                                   []string                                       `json:"FluidsIDs,omitempty"`
	// General information about a gas reading taken during the drill report period                                                            
	GasReading                                                                                  []GasReading                                   `json:"GasReading,omitempty"`
	// Health Safety or Environment events that occurred since the last drilling/operation                                                     
	// report. Captures data related to HSE events (e.g., tests, inspections, meetings, and                                                    
	// drills), test values (e.g., pressure tested to), and/or incidents (e.g., discharges,                                                    
	// non-compliance notices received, etc.).                                                                                                 
	Hse                                                                                         []HealthSafetyEnvironment                      `json:"HSE,omitempty"`
	// Description of incidents that have occurred during the last drilling/operations report                                                  
	Incident                                                                                    []Incident                                     `json:"Incident,omitempty"`
	// Quantity of items inventoried during drilling and/or operations                                                                         
	Inventory                                                                                   []Inventory                                    `json:"Inventory,omitempty"`
	// Operator personnel contact information on an operations report                                                                          
	JobContact                                                                                  []AbstractContactUserProfile                   `json:"JobContact,omitempty"`
	// Description of the lithology for the interval.                                                                                          
	Lithology                                                                                   *string                                        `json:"Lithology,omitempty"`
	// Mud that has been lost during drilling / operations                                                                                     
	MudLosses                                                                                   []MudLoss                                      `json:"MudLosses,omitempty"`
	// Information related to mud volumes for drilling/operations report                                                                       
	MudVolume                                                                                   []MudVolume                                    `json:"MudVolume,omitempty"`
	// An array of sequential operation activities descriptions performed during this reporting                                                
	// period. Potentially includes critical path and offline activities.                                                                      
	OperationsActivity                                                                          []OperationsActivity                           `json:"OperationsActivity,omitempty"`
	// Snapshot of operations personnel broken down by each company on the rig at the time of                                                  
	// the report.                                                                                                                             
	Personnel                                                                                   []Personnel                                    `json:"Personnel,omitempty"`
	// A reference to the PPFG information for this reporting period                                                                           
	PorePressure                                                                                []string                                       `json:"PorePressure,omitempty"`
	// Information related to pump operations on a drilling/operations report                                                                  
	PumpOp                                                                                      []PumpOperations                               `json:"PumpOp,omitempty"`
	// Report description                                                                                                                      
	ReportDescription                                                                           *string                                        `json:"ReportDescription,omitempty"`
	// Sequential number assigned to report header.                                                                                            
	ReportNumber                                                                                *string                                        `json:"ReportNumber,omitempty"`
	// Report remarks                                                                                                                          
	ReportRemarks                                                                               *string                                        `json:"ReportRemarks,omitempty"`
	// Date and time that the reporting period started. A report period is commonly 24 hours.                                                  
	StartDateTime                                                                               time.Time                                      `json:"StartDateTime"`
	// Information regarding the status of the wellbore during this reporting period                                                           
	StatusInfo                                                                                  []DrillingReportStatusInfo                     `json:"StatusInfo,omitempty"`
	// Authorized cost for the total job                                                                                                       
	TargetCost                                                                                  *float64                                       `json:"TargetCost,omitempty"`
	// Planned days for the total job                                                                                                          
	TargetDays                                                                                  *float64                                       `json:"TargetDays,omitempty"`
	// A series of time stamped comments which comprise part of this operations report.                                                        
	TimedComments                                                                               []TimedComment                                 `json:"TimedComments,omitempty"`
	// Cumulative cost for the job through the end of current report                                                                           
	TotalCost                                                                                   *float64                                       `json:"TotalCost,omitempty"`
	// Cumulative days for the job through the end of the current report                                                                       
	TotalDays                                                                                   *float64                                       `json:"TotalDays,omitempty"`
	// Total days of non-productive time through the end of the current report                                                                 
	TotalNPT                                                                                    *float64                                       `json:"TotalNPT,omitempty"`
	// Meteorological readings for the defined time period on an operations report                                                             
	Weather                                                                                     []Weather                                      `json:"Weather,omitempty"`
	// A link to the Well  Activity to which this report is associated.                                                                        
	WellActivityID                                                                              *string                                        `json:"WellActivityID,omitempty"`
	// Local name defined for the Well                                                                                                         
	WellAlias                                                                                   *WellAlias                                     `json:"WellAlias,omitempty"`
	// Local name defined for the wellbore                                                                                                     
	WellboreAlias                                                                               []WellboreAliasElement                         `json:"WellboreAlias,omitempty"`
	// A link to the wellbore that was active at the end of this reporting period.                                                             
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Information on the condition of the Drill Bit as recorded during an operations report
type BitRecord struct {
	// BHA Run Identifier (includes ID of TubularAssembly which parents the Bit/Under-reamer            
	// Component)                                                                                       
	BHARunID                                                                                   *string  `json:"BHARunID,omitempty"`
	// N = new, U = used.                                                                               
	BitClass                                                                                   *string  `json:"BitClass,omitempty"`
	// Any other Bit Dull comments/description, older T-B-G code or full formatted dull grade           
	// e.g.  0-2-WT-N/S-X-I-LN-TD                                                                       
	BitDullComments                                                                            *string  `json:"BitDullComments,omitempty"`
	// Bit cost in local currency.                                                                      
	Cost                                                                                       *float64 `json:"Cost,omitempty"`
	// The name of the local currency                                                                   
	CostCurrency                                                                               *string  `json:"CostCurrency,omitempty"`
	// Diameter of drilled hole.                                                                        
	DiameterBit                                                                                *float64 `json:"DiameterBit,omitempty"`
	// Minimum hole or tubing which bit will pass through (for bi-center bits).                         
	DiameterPassThrough                                                                        *float64 `json:"DiameterPassThrough,omitempty"`
	// Diameter of pilot bit (for bi-center bits).                                                      
	DiameterPilot                                                                              *float64 `json:"DiameterPilot,omitempty"`
	// Bit drive type (Motor, rotary table etc).                                                        
	DriveType                                                                                  *string  `json:"DriveType,omitempty"`
	// Pulled bit IADC Dull Grade (B) Condition of bit Bearings (integer 0-8 or E, F, N or X).          
	FinalConditionBearing                                                                      *string  `json:"FinalConditionBearing,omitempty"`
	// Pulled bit IADC Dull Grade (D) Overall Dull condition from IADC bit wear 2 character             
	// codes.                                                                                           
	FinalConditionDull                                                                         *string  `json:"FinalConditionDull,omitempty"`
	// Pulled bit IADC Dull Grade (G) Condition of bit Gauge in 1/16 of a inch. I = in gauge,           
	// else number of 16ths out of gauge.                                                               
	FinalConditionGauge                                                                        *string  `json:"FinalConditionGauge,omitempty"`
	// Pulled bit IADC Dull Grade (I) Condition of Inner tooth rows (inner 2/3 of bit) (0-8).           
	FinalConditionInner                                                                        *float64 `json:"FinalConditionInner,omitempty"`
	// Pulled bit IADC Dull Grade (L) Location Row and cone numbers where wear located (e.g.            
	// Cracked Cone, Lost Cone etc).                                                                    
	FinalConditionLocation                                                                     *string  `json:"FinalConditionLocation,omitempty"`
	// Pulled bit IADC Dull Grade (O) Other comments on bit condition.                                  
	FinalConditionOther                                                                        *string  `json:"FinalConditionOther,omitempty"`
	// Pulled bit IADC Dull Grade (O) Condition of Outer tooth rows (outer 1/3 of bit) (0-8).           
	FinalConditionOuter                                                                        *float64 `json:"FinalConditionOuter,omitempty"`
	// Pulled bit  IADC Dull Grade (R) Reason bit was pulled.                                           
	FinalConditionReason                                                                       *string  `json:"FinalConditionReason,omitempty"`
	// IADC bit code.                                                                                   
	IADCCode                                                                                   *string  `json:"IADCCode,omitempty"`
	// As run bit IADC Dull Grade (B) Condition of bit Bearings (integer 0-8 or E, F, N or X)).         
	InitialConditionBearing                                                                    *string  `json:"InitialConditionBearing,omitempty"`
	// As run bit IADC Dull Grade (D) Overall dull condition from IADC bit wear 2 character             
	// codes.                                                                                           
	InitialConditionDull                                                                       *string  `json:"InitialConditionDull,omitempty"`
	// As run bit IADC Dull Grade (G) Condition of bit Gauge in 1/16 of an inch. I = in gauge,          
	// else number of 16ths out of gauge.                                                               
	InitialConditionGauge                                                                      *string  `json:"InitialConditionGauge,omitempty"`
	// As run bit IADC Dull Grade (I) Condition of Inner tooth rows (inner 2/3 of bit) (0-8).           
	InitialConditionInner                                                                      *float64 `json:"InitialConditionInner,omitempty"`
	// As run bit IADC Dull Grade (L) Location Row and cone numbers where wear located (e.g.            
	// Cracked Cone, Lost Cone etc).                                                                    
	InitialConditionLocation                                                                   *string  `json:"InitialConditionLocation,omitempty"`
	// As run bit IADC Dull Grade (O) Other comments on bit condition from IADC list                    
	// (BitDullCode in standard list).                                                                  
	InitialConditionOther                                                                      *string  `json:"InitialConditionOther,omitempty"`
	// As run bit IADC Dull Grade (O) Condition of Outer tooth rows (outer 1/3 of bit) (0-8).           
	InitialConditionOuter                                                                      *float64 `json:"InitialConditionOuter,omitempty"`
	// As run bit IADC Dull Grade (R) Reason bit was pulled                                             
	InitialConditionReason                                                                     *string  `json:"InitialConditionReason,omitempty"`
	// Manufacturer / supplier of the item.                                                             
	Manufacturer                                                                               *string  `json:"Manufacturer,omitempty"`
	// The manufacturer's code for the bit.                                                             
	MfgCode                                                                                    *string  `json:"MfgCode,omitempty"`
	// Bit number and rerun number e.g. "4.1" for the first rerun of bit 4.                             
	NumBit                                                                                     string   `json:"NumBit"`
	// Identifier of Bit Tubular Component                                                              
	TubularComponentID                                                                         *string  `json:"TubularComponentID,omitempty"`
	// Type of bit.                                                                                     
	TypeBit                                                                                    *string  `json:"TypeBit,omitempty"`
}

// Cost information captured for a defined time period during operations and/or drilling
type Cost struct {
	// Activity code classification describing higher level steps in the Well Activity                 
	ActivityPhaseID                                                                           *string  `json:"ActivityPhaseID,omitempty"`
	// AFE number that this cost item applies to.                                                      
	AFENumber                                                                                 *string  `json:"AFENumber,omitempty"`
	// Comments and remarks                                                                            
	Comments                                                                                  *string  `json:"Comments,omitempty"`
	// Cost class code.                                                                                
	CostClass                                                                                 *string  `json:"CostClass,omitempty"`
	// Cost code.                                                                                      
	CostCode                                                                                  *string  `json:"CostCode,omitempty"`
	// Currency used for Cost Amount                                                                   
	CostCurrency                                                                              string   `json:"CostCurrency"`
	// Cost group code.                                                                                
	CostGroup                                                                                 *string  `json:"CostGroup,omitempty"`
	// Name of pool/reservoir that this cost item can be accounted to.                                 
	CostPoolName                                                                              *string  `json:"CostPoolName,omitempty"`
	// Cost subcode.                                                                                   
	CostSubCode                                                                               *string  `json:"CostSubCode,omitempty"`
	// Used to indicate if Equipment or Service in scope for the Cost Item is being used. Can          
	// drive different Standby/In Use Rental Rates where applicable.                                   
	InUse                                                                                     *bool    `json:"InUse,omitempty"`
	// Invoice number for cost item; the bill is sent to the operator.                                 
	InvoiceNumber                                                                             *string  `json:"InvoiceNumber,omitempty"`
	// Is this item carried from day to day?                                                           
	IsCarryOver                                                                               *bool    `json:"IsCarryOver,omitempty"`
	// Is this an estimated cost?                                                                      
	IsEstimated                                                                               *bool    `json:"IsEstimated,omitempty"`
	// Is this item a rental?                                                                          
	IsRental                                                                                  *bool    `json:"IsRental,omitempty"`
	// Description of the cost item.                                                                   
	ItemDescription                                                                           *string  `json:"ItemDescription,omitempty"`
	// Serial number.                                                                                  
	ItemSerialNumber                                                                          *string  `json:"ItemSerialNumber,omitempty"`
	// Purchase order number provided by the operator.                                                 
	PONumber                                                                                  *string  `json:"PONumber,omitempty"`
	// High Level cost category qualifier                                                              
	ProductType                                                                               *string  `json:"ProductType,omitempty"`
	// An identification tag for the item. A serial number is a type of identification tag;            
	// however, some tags contain many pieces of information. This element only identifies the         
	// tag and does not describe the contents.                                                         
	TagName                                                                                   *string  `json:"TagName,omitempty"`
	// The field ticket number issued by the service company on location.                              
	TicketNumber                                                                              *string  `json:"TicketNumber,omitempty"`
	// Total cost for the item for this period                                                         
	TotalCostAmount                                                                           float64  `json:"TotalCostAmount"`
	// Number of cost items used that day, e.g., 1 rig dayrate, 30 joints of casing.                   
	TotalQuantityItemsUsed                                                                    *int64   `json:"TotalQuantityItemsUsed,omitempty"`
	// Cost per item, assume same currency.                                                            
	UnitCost                                                                                  *float64 `json:"UnitCost,omitempty"`
	// The kind of cost item specified (e.g., barrel, sack, gallon)                                    
	UnitKind                                                                                  *string  `json:"UnitKind,omitempty"`
	// Quantity of the unit kind (e.g., 50)                                                            
	UnitSize                                                                                  *float64 `json:"UnitSize,omitempty"`
	// Name of the vendor.                                                                             
	VendorName                                                                                *string  `json:"VendorName,omitempty"`
	// Vendor number.                                                                                  
	VendorNumber                                                                              *string  `json:"VendorNumber,omitempty"`
}

// General information about a gas reading taken during the drill report period
type GasReading struct {
	// Date and time of the gas reading.                                                               
	DateTime                                                                                 time.Time `json:"DateTime"`
	// Ethane (C2) concentration.                                                                      
	Ethane                                                                                   *float64  `json:"Ethane,omitempty"`
	// Top measured depth for which the gas reading was conducted                                      
	GasReadingMeasureDepthTop                                                                *float64  `json:"GasReadingMeasureDepthTop,omitempty"`
	// Bottom true vertical depth interval over which the gas reading was conducted.                   
	GasReadingTvdBase                                                                        *float64  `json:"GasReadingTvdBase,omitempty"`
	// Iso-butane (iC4) concentration.                                                                 
	Isobutane                                                                                *float64  `json:"Isobutane,omitempty"`
	// Iso-pentane (iC5) concentration                                                                 
	Isopentane                                                                               *float64  `json:"Isopentane,omitempty"`
	// Methane (C1) concentration                                                                      
	Methane                                                                                  *float64  `json:"Methane,omitempty"`
	// Nor-butane (nC4) concentration.                                                                 
	Norbutane                                                                                *float64  `json:"Norbutane,omitempty"`
	// Propane (C3) concentration.                                                                     
	Propane                                                                                  *float64  `json:"Propane,omitempty"`
	// Type of gas reading, e.g.circulating, background gas, connection gas, drilling                  
	// background, gas, drilling gas peak, flow check gas, no readings, other, shut down gas,          
	// trip gas, unknown.                                                                              
	ReadingType                                                                              *string   `json:"ReadingType,omitempty"`
	// The average gas reading                                                                         
	TotalGasAverage                                                                          *float64  `json:"TotalGasAverage,omitempty"`
	// The highest gas reading.                                                                        
	TotalGasMax                                                                              *float64  `json:"TotalGasMax,omitempty"`
	// The lowest gas reading.                                                                         
	TotalGasMin                                                                              *float64  `json:"TotalGasMin,omitempty"`
}

// Health Safety or Environment events that occurred since the last drilling/operation
// report. Captures data related to HSE events (e.g., tests, inspections, meetings, and
// drills), test values (e.g., pressure tested to), and/or incidents (e.g., discharges,
// non-compliance notices received, etc.).
type HealthSafetyEnvironment struct {
	// Comments and remarks                                                   
	Comments                                                       *string    `json:"Comments,omitempty"`
	// Incident free duration (commonly in days).                             
	DaysIncidentFree                                               *int64     `json:"DaysIncidentFree,omitempty"`
	// Last abandonment drill.                                                
	LastAbandonDrillDate                                           *time.Time `json:"LastAbandonDrillDate,omitempty"`
	// Last blow out preventer drill.                                         
	LastBopDrillDate                                               *time.Time `json:"LastBopDrillDate,omitempty"`
	// Last blow out preventer pressure test.                                 
	LastBopPressureTestDate                                        *time.Time `json:"LastBopPressureTestDate,omitempty"`
	// Last casing pressure test date and time.                               
	LastCasingPressureTestDate                                     *time.Time `json:"LastCasingPressureTestDate,omitempty"`
	// Last diverter drill.                                                   
	LastDiverterDrillDate                                          *time.Time `json:"LastDiverterDrillDate,omitempty"`
	// Last fire or life boat drill.                                          
	LastFireBoatDrillDate                                          *time.Time `json:"LastFireBoatDrillDate,omitempty"`
	// Last rig inspection/check.                                             
	LastRigInspectionDate                                          *time.Time `json:"LastRigInspectionDate,omitempty"`
	// Last safety inspection.                                                
	LastSafetyInspectionDate                                       *time.Time `json:"LastSafetyInspectionDate,omitempty"`
	// Last safety meeting.                                                   
	LastSafetyMeetingDate                                          *time.Time `json:"LastSafetyMeetingDate,omitempty"`
	// Last trip drill.                                                       
	LastTripDrillDate                                              *time.Time `json:"LastTripDrillDate,omitempty"`
	// Next blow out preventer pressure test.                                 
	NextBopPresTestDate                                            *time.Time `json:"NextBopPresTestDate,omitempty"`
	// Inspection non-compliance notice served?                               
	NonComplianceIssued                                            *bool      `json:"NonComplianceIssued,omitempty"`
	// Blow out preventer annular preventer pressure tested to.               
	PressureAnnular                                                *float64   `json:"PressureAnnular,omitempty"`
	// Blow out preventer ram pressure tested to.                             
	PressureBOPRAM                                                 *float64   `json:"PressureBOPRam,omitempty"`
	// Choke line pressure tested to.                                         
	PressureChokeLine                                              *float64   `json:"PressureChokeLine,omitempty"`
	// Choke line manifold pressure tested to.                                
	PressureChokeMan                                               *float64   `json:"PressureChokeMan,omitempty"`
	// Blow out preventer diverter pressure tested to.                        
	PressureDiverter                                               *float64   `json:"PressureDiverter,omitempty"`
	// Kelly hose pressure tested to.                                         
	PressureKellyHose                                              *float64   `json:"PressureKellyHose,omitempty"`
	// Last casing pressure test pressure.                                    
	PressureLastCasing                                             *float64   `json:"PressureLastCasing,omitempty"`
	// Standpipe manifold pressure tested to.                                 
	PressureStandPipeManifold                                      *float64   `json:"PressureStandPipeManifold,omitempty"`
	// Governmental regulatory inspection agency inspection?                  
	RegulatoryAgencyInspection                                     *bool      `json:"RegulatoryAgencyInspection,omitempty"`
	// Number of health, safety and environment incidents reported.           
	TotalStopCards                                                 *int64     `json:"TotalStopCards,omitempty"`
	// Volume of cuttings discharged.                                         
	VolumeCuttingDischarged                                        *float64   `json:"VolumeCuttingDischarged,omitempty"`
	// Daily whole mud discarded.                                             
	VolumeFluidDischarged                                          *float64   `json:"VolumeFluidDischarged,omitempty"`
	// Oil on cuttings daily discharge.                                       
	VolumeOilCuttingDischarge                                      *float64   `json:"VolumeOilCuttingDischarge,omitempty"`
	// Volume of sanitary waste discharged.                                   
	VolumeWasteDischarged                                          *float64   `json:"VolumeWasteDischarged,omitempty"`
}

// Description of incidents that have occurred during the last drilling/operations report
type Incident struct {
	// Accident description.                                                                            
	AccidentDescription                                                                       *string   `json:"AccidentDescription,omitempty"`
	// Cause description.                                                                               
	CauseDescription                                                                          *string   `json:"CauseDescription,omitempty"`
	// Comments and remarks                                                                             
	Comments                                                                                  *string   `json:"Comments,omitempty"`
	// Gross estimate of the cost incurred due to the incident.                                         
	CostLossEstimate                                                                          *float64  `json:"CostLossEstimate,omitempty"`
	// Date and time that incident occurred                                                             
	DateTime                                                                                  time.Time `json:"DateTime"`
	// Number of hours lost due to the incident.                                                        
	EstimateHoursLost                                                                         *float64  `json:"EstimateHoursLost,omitempty"`
	// Name of the person who prepared the incident report.                                             
	IncidentReporterName                                                                      *string   `json:"IncidentReporterName,omitempty"`
	// Near miss incident occurrence?                                                                   
	IsNearMiss                                                                                *bool     `json:"IsNearMiss,omitempty"`
	// Location description.                                                                            
	LocationDescription                                                                       *string   `json:"LocationDescription,omitempty"`
	// A reference to the organisation for which is the company primarily involved in managing          
	// the incident.                                                                                    
	OrganisationID                                                                            *string   `json:"OrganisationID,omitempty"`
	// Remedial action description.                                                                     
	RemedialActionDescription                                                                 *string   `json:"RemedialActionDescription,omitempty"`
	// Number of personnel killed due to the incident.                                                  
	TotalFatality                                                                             *int64    `json:"TotalFatality,omitempty"`
	// Number of personnel with major injuries.                                                         
	TotalMajorInjury                                                                          *int64    `json:"TotalMajorInjury,omitempty"`
	// Number of personnel with minor injuries.                                                         
	TotalMinorInjury                                                                          *int64    `json:"TotalMinorInjury,omitempty"`
}

// Quantity of items inventoried during drilling and/or operations
type Inventory struct {
	// Comments and remarks                                                                            
	Comments                                                                                  *string  `json:"Comments,omitempty"`
	// Cost for the product for the report interval.                                                   
	CostOfItem                                                                                *float64 `json:"CostOfItem,omitempty"`
	// Description of the inventory item                                                               
	ItemDescription                                                                           *string  `json:"ItemDescription,omitempty"`
	// Name or type of inventory item.                                                                 
	Name                                                                                      *string  `json:"Name,omitempty"`
	// Price per item unit, assume same currency for all items.                                        
	PricePerUnit                                                                              *float64 `json:"PricePerUnit,omitempty"`
	// Daily quantity adjustment/correction.                                                           
	TotalQuantityAdjustment                                                                   *float64 `json:"TotalQuantityAdjustment,omitempty"`
	// Amount of the item remaining on location after all adjustments for the report interval.         
	TotalQuantityOnLocation                                                                   *float64 `json:"TotalQuantityOnLocation,omitempty"`
	// Quantity received at the site.                                                                  
	TotalQuantityReceived                                                                     *float64 `json:"TotalQuantityReceived,omitempty"`
	// Quantity returned to base from site.                                                            
	TotalQuantityReturned                                                                     *float64 `json:"TotalQuantityReturned,omitempty"`
	// Start quantity for report interval.                                                             
	TotalQuantityStart                                                                        *float64 `json:"TotalQuantityStart,omitempty"`
	// Quantity used for the report interval.                                                          
	TotalQuantityUsed                                                                         *float64 `json:"TotalQuantityUsed,omitempty"`
	// Item volume per unit.                                                                           
	VolumeItem                                                                                *float64 `json:"VolumeItem,omitempty"`
	// Item weight per unit.                                                                           
	WeightItem                                                                                *float64 `json:"WeightItem,omitempty"`
}

// A schema fragment, which can hold explicit contact information (contact by value) and a
// relationship to a UserProfile (contact by reference). Both ways of capturing contact
// information can be used simultaneously : the 'by value' may capture the state of the
// contact at the time of recording, while the 'by reference' relationship to UserProfile
// captures the current state of the contact.
//
// An object with properties that describe a specific person or other point-of-contact (like
// an email distribution list) that is relevant in this context (like a given data set or
// business project). The contact specified may be either internal or external to the
// organisation (something denoted via the Organisation object that is referenced). Note
// that some properties contain personally identifiable information, so it might not be
// appropriate to populate all properties in all scenarios.
type AbstractContactUserProfile struct {
	// Additional information about the contact                                                         
	Comment                                                                                     *string `json:"Comment,omitempty"`
	// The data governance role assigned to this contact if and only if the context has a data          
	// governance role (in context of TechnicalAssurance). The value is kept absent in all other        
	// cases.                                                                                           
	DataGovernanceRoleTypeID                                                                    *string `json:"DataGovernanceRoleTypeID,omitempty"`
	// Contact email address. Property may be left empty where it is inappropriate to provide           
	// personally identifiable information.                                                             
	EmailAddress                                                                                *string `json:"EmailAddress,omitempty"`
	// Name of the individual contact. Property may be left empty where it is inappropriate to          
	// provide personally identifiable information.                                                     
	Name                                                                                        *string `json:"Name,omitempty"`
	// Reference to the company the contact is associated with.                                         
	OrganisationID                                                                              *string `json:"OrganisationID,omitempty"`
	// Contact phone number. Property may be left empty where it is inappropriate to provide            
	// personally identifiable information.                                                             
	PhoneNumber                                                                                 *string `json:"PhoneNumber,omitempty"`
	// The identifier of a reference value for the role of the contact within the associated            
	// organisation, such as Account owner, Sales Representative, Technical Support, Project            
	// Manager, Party Chief, Client Representative, Senior Observer.                                    
	RoleTypeID                                                                                  *string `json:"RoleTypeID,omitempty"`
	// The persona in context of workflows associated with this contact, as used in                     
	// TechnicalAssurance.                                                                              
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
	// The contact information by reference to a UserProfile record.                                    
	UserProfileID                                                                               *string `json:"UserProfileID,omitempty"`
}

// Mud that has been lost during drilling / operations
type MudLoss struct {
	// Comments and remarks                                                                      
	Comments                                                                           *string   `json:"Comments,omitempty"`
	// Date and time that the mud loss occurred                                                  
	DateTime                                                                           time.Time `json:"DateTime"`
	// Mud volume lost downhole during abandonment.                                              
	MudLostVolumeAbandonDownhole                                                       *float64  `json:"MudLostVolumeAbandonDownhole,omitempty"`
	// Mud volume lost downhole behind casing.                                                   
	MudLostVolumeBehindCasingDownhole                                                  *float64  `json:"MudLostVolumeBehindCasingDownhole,omitempty"`
	// Mud volume lost downhole running casing                                                   
	MudLostVolumeCasingHole                                                            *float64  `json:"MudLostVolumeCasingHole,omitempty"`
	// Mud volume lost downhole while cementing.                                                 
	MudLostVolumeCementingDownhole                                                     *float64  `json:"MudLostVolumeCementingDownhole,omitempty"`
	// Mud volume lost downhole while circulating.                                               
	MudLostVolumeCirculatingDownhole                                                   *float64  `json:"MudLostVolumeCirculatingDownhole,omitempty"`
	// Bottom measured depth for which the mud loss reading was occurred                         
	MudLostVolumeMeasureDepthBase                                                      *float64  `json:"MudLostVolumeMeasureDepthBase,omitempty"`
	// Top measured depth for which the mud loss reading was occurred                            
	MudLostVolumeMeasureDepthTop                                                       *float64  `json:"MudLostVolumeMeasureDepthTop,omitempty"`
	// Volume of mud lost in mud cleaning equipment (at surface).                                
	MudLostVolumeMudCleanerSurface                                                     *float64  `json:"MudLostVolumeMudCleanerSurface,omitempty"`
	// Mud volume lost downhole from other location.                                             
	MudLostVolumeOtherLocationDownhole                                                 *float64  `json:"MudLostVolumeOtherLocationDownhole,omitempty"`
	// Surface volume lost other location.                                                       
	MudLostVolumeOtherLocationSurface                                                  *float64  `json:"MudLostVolumeOtherLocationSurface,omitempty"`
	// Volume of mud lost in pit room (at surface).                                              
	MudLostVolumePitsSurface                                                           *float64  `json:"MudLostVolumePitsSurface,omitempty"`
	// Volume of mud lost at shakers (at surface).                                               
	MudLostVolumeShakerSurface                                                         *float64  `json:"MudLostVolumeShakerSurface,omitempty"`
	// Volume of mud lost while tripping (at surface).                                           
	MudLostVolumeTrippingSurface                                                       *float64  `json:"MudLostVolumeTrippingSurface,omitempty"`
	// Bottom true vertical depth interval over which the mud loss reading was occurred          
	MudLostVolumeTvdBase                                                               *float64  `json:"MudLostVolumeTvdBase,omitempty"`
	// Top  true vertical depth interval over which the mud loss reading was occurred            
	MudLostVolumeTvdTop                                                                *float64  `json:"MudLostVolumeTvdTop,omitempty"`
	// Total volume of mud lost downhole.                                                        
	TotalMudLostVolumeDownhole                                                         *float64  `json:"TotalMudLostVolumeDownhole,omitempty"`
	// Total volume of mud lost at surface.                                                      
	TotalMudLostVolumeSurface                                                          *float64  `json:"TotalMudLostVolumeSurface,omitempty"`
}

// Information related to mud volumes for drilling/operations report
type MudVolume struct {
	// Comments and remarks                                                                          
	Comments                                                                               *string   `json:"Comments,omitempty"`
	// Date and time of the mud volume                                                               
	DateTime                                                                               time.Time `json:"DateTime"`
	// Total mud volume that was expected                                                            
	ExpectedMudVolume                                                                      *float64  `json:"ExpectedMudVolume,omitempty"`
	// Volume of mud built.                                                                          
	MudVolumeBuild                                                                         *float64  `json:"MudVolumeBuild,omitempty"`
	// Volume of mud contained in casing annulus.                                                    
	MudVolumeCasing                                                                        *float64  `json:"MudVolumeCasing,omitempty"`
	// Volume of mud dumped.                                                                         
	MudVolumeDumped                                                                        *float64  `json:"MudVolumeDumped,omitempty"`
	// Volume of mud at the end of the report interval (including pits and hole).                    
	MudVolumeEnd                                                                           *float64  `json:"MudVolumeEnd,omitempty"`
	// Volume of mud contained in the openhole annulus.                                              
	MudVolumeHole                                                                          *float64  `json:"MudVolumeHole,omitempty"`
	// Bottom measured depth for which the mud volume reading was conducted                          
	MudVolumeMeasureDepthBase                                                              *float64  `json:"MudVolumeMeasureDepthBase,omitempty"`
	// Top measured depth for which the mud volume reading was conducted                             
	MudVolumeMeasureDepthTop                                                               *float64  `json:"MudVolumeMeasureDepthTop,omitempty"`
	// Volume of mud received from mud warehouse.                                                    
	MudVolumeReceived                                                                      *float64  `json:"MudVolumeReceived,omitempty"`
	// Volume of mud returned to mud warehouse.                                                      
	MudVolumeReturned                                                                      *float64  `json:"MudVolumeReturned,omitempty"`
	// Volume of mud contained in riser section annulus.                                             
	MudVolumeRiser                                                                         *float64  `json:"MudVolumeRiser,omitempty"`
	// Volume of mud at start of report interval (including pits and hole).                          
	MudVolumeStart                                                                         *float64  `json:"MudVolumeStart,omitempty"`
	// Volume of mud contained within active string.                                                 
	MudVolumeString                                                                        *float64  `json:"MudVolumeString,omitempty"`
	// Bottom true vertical depth interval over which the mud volume reading was conducted.          
	MudVolumeTvdBase                                                                       *float64  `json:"MudVolumeTvdBase,omitempty"`
	// Top  true vertical depth interval over which the mud volume reading was conducted.            
	MudVolumeTvdTop                                                                        *float64  `json:"MudVolumeTvdTop,omitempty"`
	// Actual total mud volume that was measured                                                     
	TotalMudVolume                                                                         *float64  `json:"TotalMudVolume,omitempty"`
}

// Information regarding an individual activity that is part of the Operations Report
type OperationsActivity struct {
	// The activity code of the activity                                                                                          
	ActivityCodeID                                                                               *string                          `json:"ActivityCodeID,omitempty"`
	// Identifier of the activity.                                                                                                
	ActivityID                                                                                   *string                          `json:"ActivityID,omitempty"`
	// Measured depth at the base of interval over which the activity was conducted.                                              
	ActivityMDBase                                                                               *float64                         `json:"ActivityMDBase,omitempty"`
	// Measured depth at the top of interval over which the activity was conducted.                                               
	ActivityMDTop                                                                                *float64                         `json:"ActivityMDTop,omitempty"`
	// More detail on the outcome of the activity. For Example Injury, Operation Failed, Kick,                                    
	// Circulation Loss, Mud Loss                                                                                                 
	ActivityOutcomeDetailID                                                                      *string                          `json:"ActivityOutcomeDetailID,omitempty"`
	// OK, Finish, interrupted, failed, etc.                                                                                      
	ActivityOutcomeID                                                                            *string                          `json:"ActivityOutcomeID,omitempty"`
	// TVD at the base of interval over which the activity was conducted.                                                         
	ActivityTVDBase                                                                              *float64                         `json:"ActivityTVDBase,omitempty"`
	// TVD at the top of interval over which the activity was conducted.                                                          
	ActivityTVDTop                                                                               *float64                         `json:"ActivityTVDTop,omitempty"`
	// Actual duration of the activity.                                                                                           
	ActualDuration                                                                               *float64                         `json:"ActualDuration,omitempty"`
	// Attachments associated with the activity                                                                                   
	AttachmentIDs                                                                                []string                         `json:"AttachmentIDs,omitempty"`
	// Measured depth of the bit at the ase of interval over which the activity was conducted.                                    
	BitMDBase                                                                                    *float64                         `json:"BitMDBase,omitempty"`
	// Measured depth of the bit at the top of interval over which the activity was conducted.                                    
	BitMDTop                                                                                     *float64                         `json:"BitMDTop,omitempty"`
	// Comments and remarks.                                                                                                      
	Comments                                                                                     *string                          `json:"Comments,omitempty"`
	// Custom string to further define an activity.                                                                               
	DetailActivity                                                                               *string                          `json:"DetailActivity,omitempty"`
	// Date and time that activities ended.                                                                                       
	EndDateTime                                                                                  *time.Time                       `json:"EndDateTime,omitempty"`
	// Is the activity an Offline activity, Values are "true" (or "1") and "false" (or "0").                                      
	IsOffline                                                                                    *bool                            `json:"IsOffline,omitempty"`
	// Is the activity optimum? Values are "true" (or "1") and "false" (or "0").                                                  
	IsOptimum                                                                                    *bool                            `json:"IsOptimum,omitempty"`
	// Does activity bring closer to objective?  Values are "true" (or "1") and "false" (or "0").                                 
	IsProductive                                                                                 *bool                            `json:"IsProductive,omitempty"`
	// The item state for the data object. (Actual, Planned, Unknown and Modeled)                                                 
	ItemState                                                                                    *string                          `json:"ItemState,omitempty"`
	// link to an external object or document. For example Regulatory submission, Tour sheet.                                     
	ObjectReference                                                                              *string                          `json:"ObjectReference,omitempty"`
	// Notes associated with the operation                                                                                        
	OperationalNotes                                                                             *string                          `json:"OperationalNotes,omitempty"`
	// Reference to the Organisation that represents the Operator                                                                 
	OperatorID                                                                                   *string                          `json:"OperatorID,omitempty"`
	// The UID of the parent activity                                                                                             
	ParentID                                                                                     *string                          `json:"ParentID,omitempty"`
	// Phase refers to a large activity classification, e.g., drill surface hole.                                                 
	Phase                                                                                        *string                          `json:"Phase,omitempty"`
	// The planned duration for the activity.                                                                                     
	PlannedDuration                                                                              *float64                         `json:"PlannedDuration,omitempty"`
	// The planned hole depth at the start of the activity                                                                        
	PlannedHoleDepthIn                                                                           *float64                         `json:"PlannedHoleDepthIn,omitempty"`
	// The planned hole depth at the end of the activity                                                                          
	PlannedHoleDepthOut                                                                          *float64                         `json:"PlannedHoleDepthOut,omitempty"`
	// The UID of the preceding activity                                                                                          
	PredecessorID                                                                                *string                          `json:"PredecessorID,omitempty"`
	// Alternate proprietary activity code. For example contractor specific activity code                                         
	ProprietaryActivityCode                                                                      []ProprietaryActivityCodeElement `json:"ProprietaryActivityCode,omitempty"`
	// The Diameter of the section in which the activity took place                                                               
	SectionDiameter                                                                              *float64                         `json:"SectionDiameter,omitempty"`
	// Reference to the Organisation that represents the Service Provider                                                         
	ServiceProviderID                                                                            *string                          `json:"ServiceProviderID,omitempty"`
	// Date and time that activities started.                                                                                     
	StartDateTime                                                                                *time.Time                       `json:"StartDateTime,omitempty"`
	// The target depth of the activity                                                                                           
	TargetDepth                                                                                  *float64                         `json:"TargetDepth,omitempty"`
	// A pointer to the tubular object related to this activity, i.e. Drill string, workstring,                                   
	// casing, liner. Not the Hole Section that you are operating within.                                                         
	TubularID                                                                                    *string                          `json:"TubularID,omitempty"`
	// Classifier (planned, unplanned, downtime).                                                                                 
	TypeActivityClassID                                                                          *string                          `json:"TypeActivityClassID,omitempty"`
	// A Reference to the wellbore in which the activities take place.                                                            
	WellboreID                                                                                   *string                          `json:"WellboreID,omitempty"`
}

// Definition of an activity code alias proprietary to a Company
type ProprietaryActivityCodeElement struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// Snapshot of operations personnel broken down by each company on the rig at the time of
// the report.
type Personnel struct {
	// Comments and remarks                                                                               
	Comments                                                                                     *string  `json:"Comments,omitempty"`
	// Number of persons on board or on location for the selected company/organization.                   
	// HeadCount should be reported as a non-negative integer.                                            
	HeadCount                                                                                    float64  `json:"HeadCount"`
	// A Reference to the organization for which have their headcount measured during this report         
	OrganizationID                                                                               string   `json:"OrganizationID"`
	// Role the organization is playing for the service being provided                                    
	OrganizationRole                                                                             *string  `json:"OrganizationRole,omitempty"`
	// Service provided by the company.                                                                   
	ServiceType                                                                                  *string  `json:"ServiceType,omitempty"`
	// Total time worked by the company (commonly in hours).                                              
	TotalTime                                                                                    *float64 `json:"TotalTime,omitempty"`
}

// Information related to pump operations on a drilling/operations report
type PumpOperations struct {
	// Comments and remarks                                                        
	Comments                                                             *string   `json:"Comments,omitempty"`
	// Date and time when the pump operation occurred                              
	DateTime                                                             time.Time `json:"DateTime"`
	// Liner inside diameter.                                                      
	LinerInnerDiameter                                                   *float64  `json:"LinerInnerDiameter,omitempty"`
	// Along-hole measured depth of the measurement from the drill datum.          
	MeasuredDepthBit                                                     *float64  `json:"MeasuredDepthBit,omitempty"`
	// Type of pump operation.                                                     
	OperationType                                                        *string   `json:"OperationType,omitempty"`
	// how much fluid is moved by the pump in one cycle                            
	PumpDisplacement                                                     *float64  `json:"PumpDisplacement,omitempty"`
	// Pump efficiency.                                                            
	PumpEfficiency                                                       *float64  `json:"PumpEfficiency,omitempty"`
	// The model name for the pump                                                 
	PumpModelName                                                        *string   `json:"PumpModelName,omitempty"`
	// The sequence number of the pump (e.g., pump 1)                              
	PumpNumber                                                           *string   `json:"PumpNumber,omitempty"`
	// Pump output (included for efficiency).                                      
	PumpOutput                                                           *float64  `json:"PumpOutput,omitempty"`
	// Pump pressure recorded.                                                     
	PumpPressure                                                         *float64  `json:"PumpPressure,omitempty"`
	// Pump stroke length.                                                         
	StrokeLength                                                         *float64  `json:"StrokeLength,omitempty"`
	// Pump rate (strokes per minute).                                             
	StrokeRate                                                           *float64  `json:"StrokeRate,omitempty"`
}

// Status information related to an Operations Report
type DrillingReportStatusInfo struct {
	// A pointer to the latest BHA Run used for this reporting period                                   
	BHARunID                                                                                  *string   `json:"BHARunID,omitempty"`
	// Diameter of the last casing joint.                                                               
	CasingDiameterLast                                                                        *float64  `json:"CasingDiameterLast,omitempty"`
	// Measured depth of the last casing joint.                                                         
	CasingMDLast                                                                              *float64  `json:"CasingMDLast,omitempty"`
	// True vertical depth of last casing joint.                                                        
	CasingTVDLast                                                                             *float64  `json:"CasingTVDLast,omitempty"`
	// Description of the hole condition.                                                               
	ConditionHole                                                                             *string   `json:"ConditionHole,omitempty"`
	// The cost per day of the mud used                                                                 
	CostDayMud                                                                                *float64  `json:"CostDayMud,omitempty"`
	// Hole nominal inside diameter.                                                                    
	DiameterHole                                                                              *float64  `json:"DiameterHole,omitempty"`
	// Measured depth to the start of the current hole diameter.                                        
	DiameterHoleStartMD                                                                       *float64  `json:"DiameterHoleStartMD,omitempty"`
	// Pilot hole nominal inside diameter.                                                              
	DiameterPilot                                                                             *float64  `json:"DiameterPilot,omitempty"`
	// The planned measured depth of the pilot hole.                                                    
	DiameterPilotPlanMD                                                                       *float64  `json:"DiameterPilotPlanMD,omitempty"`
	// The planned true vertical depth of the pilot hole.                                               
	DiameterPilotPlanTVD                                                                      *float64  `json:"DiameterPilotPlanTVD,omitempty"`
	// Distance drilled: rotating.                                                                      
	DistDrillRot                                                                              *float64  `json:"DistDrillRot,omitempty"`
	// Distance drilled: sliding.                                                                       
	DistDrillSlid                                                                             *float64  `json:"DistDrillSlid,omitempty"`
	// Distance covered while holding angle with a steerable drilling assembly.                         
	DistHold                                                                                  *float64  `json:"DistHold,omitempty"`
	// Distance reamed.                                                                                 
	DistReam                                                                                  *float64  `json:"DistReam,omitempty"`
	// Distance covered while actively steering with a steerable drilling assembly.                     
	DistSteering                                                                              *float64  `json:"DistSteering,omitempty"`
	// Distance drilled.  This should be measured along the centerline of the wellbore.                 
	DrilledDistance                                                                           *float64  `json:"DrilledDistance,omitempty"`
	// Time spent circulating from the start of the bit run.                                            
	ElapsedTimeCirc                                                                           *float64  `json:"ElapsedTimeCirc,omitempty"`
	// Drilling time.                                                                                   
	ElapsedTimeDrill                                                                          *float64  `json:"ElapsedTimeDrill,omitempty"`
	// Time spent rotary drilling.                                                                      
	ElapsedTimeDrillRot                                                                       *float64  `json:"ElapsedTimeDrillRot,omitempty"`
	// Time spent slide drilling from the start of the bit run.                                         
	ElapsedTimeDrillSlid                                                                      *float64  `json:"ElapsedTimeDrillSlid,omitempty"`
	// Time spent with no directional drilling work (commonly in hours).                                
	ElapsedTimeHold                                                                           *float64  `json:"ElapsedTimeHold,omitempty"`
	// Time the rig has been on location (commonly in days).                                            
	ElapsedTimeLOC                                                                            *float64  `json:"ElapsedTimeLoc,omitempty"`
	// Time spent reaming from the start of the bit run.                                                
	ElapsedTimeReam                                                                           *float64  `json:"ElapsedTimeReam,omitempty"`
	// Time since the bit broke ground (commonly in days).                                              
	ElapsedTimeSpud                                                                           *float64  `json:"ElapsedTimeSpud,omitempty"`
	// Time from the start of operations (commonly in days).                                            
	ElapsedTimeStart                                                                          *float64  `json:"ElapsedTimeStart,omitempty"`
	// Time spent steering the bottomhole assembly (commonly in hours).                                 
	ElapsedTimeSteering                                                                       *float64  `json:"ElapsedTimeSteering,omitempty"`
	// Name of the operator's drilling engineer.                                                        
	Engineer                                                                                  *string   `json:"Engineer,omitempty"`
	// A summary of  planned activities for the next reporting period.                                  
	Forecast24Hr                                                                              *string   `json:"Forecast24Hr,omitempty"`
	// The measured formation strength. This should be the final measurement before the end of          
	// the report period.                                                                               
	FormationStrength                                                                         *float64  `json:"FormationStrength,omitempty"`
	// The measured depth of the formation strength measurement.                                        
	FormationStrengthMD                                                                       *float64  `json:"FormationStrengthMD,omitempty"`
	// The true vertical depth of the formation strength measurement.                                   
	FormationStrengthTVD                                                                      *float64  `json:"FormationStrengthTVD,omitempty"`
	// Name of operator's wellsite geologist.                                                           
	Geologist                                                                                 *string   `json:"Geologist,omitempty"`
	// Measured depth to the kickoff point of the wellbore.                                             
	KickoffMD                                                                                 *float64  `json:"KickoffMD,omitempty"`
	// True vertical depth to the kickoff point of the wellbore.                                        
	KickoffTVD                                                                                *float64  `json:"KickoffTVD,omitempty"`
	// Maximum allowable shut-in casing pressure.                                                       
	Maasp                                                                                     *float64  `json:"MAASP,omitempty"`
	// The measured depth planned to be reached.                                                        
	MdPlanned                                                                                 *float64  `json:"MdPlanned,omitempty"`
	// Authorization for expenditure (AFE) number that this cost item applies to.                       
	NumAFE                                                                                    *string   `json:"NumAFE,omitempty"`
	// Number of contractor personnel on the rig.                                                       
	NumContract                                                                               *int64    `json:"NumContract,omitempty"`
	// Number of operator personnel on the rig.                                                         
	NumOperator                                                                               *int64    `json:"NumOperator,omitempty"`
	// Total number of personnel on board the rig.                                                      
	NumPOB                                                                                    *int64    `json:"NumPOB,omitempty"`
	// Number of service company personnel on the rig.                                                  
	NumService                                                                                *int64    `json:"NumService,omitempty"`
	// The measured plug back depth.                                                                    
	PlugTopMD                                                                                 *float64  `json:"PlugTopMD,omitempty"`
	// Kick tolerance pressure.                                                                         
	PresKickTol                                                                               *float64  `json:"PresKickTol,omitempty"`
	// Leak off test equivalent mud weight.                                                             
	PresLotEmw                                                                                *float64  `json:"PresLotEmw,omitempty"`
	// The type of pressure test that was run.                                                          
	PresTestType                                                                              *string   `json:"PresTestType,omitempty"`
	// Wellbore measured depth at the end of the report period.                                         
	ReportEndMD                                                                               *float64  `json:"ReportEndMD,omitempty"`
	// Wellbore true vertical depth at the end of the report.                                           
	ReportEndTVD                                                                              *float64  `json:"ReportEndTVD,omitempty"`
	// Name of the Rig/Work Unit used for the reporting period                                          
	Rig                                                                                       *string   `json:"Rig,omitempty"`
	// A pointer to the rig used.                                                                       
	RigID                                                                                     *string   `json:"RigID,omitempty"`
	// Average rate of penetration.                                                                     
	RopAverage                                                                                *float64  `json:"RopAverage,omitempty"`
	// Rate of penetration at the end of the reporting period.                                          
	RopCurrent                                                                                *float64  `json:"RopCurrent,omitempty"`
	// The date and time for which the well status is reported.                                         
	StatusDateTime                                                                            time.Time `json:"StatusDateTime"`
	// A summary of the activities performed and the status of the ongoing activities.                  
	Summary24Hr                                                                               *string   `json:"Summary24Hr,omitempty"`
	// Name of the rig supervisor                                                                       
	Supervisor                                                                                *string   `json:"Supervisor,omitempty"`
	// A pointer to the tubular (assembly) used in this report period.                                  
	TubularID                                                                                 *string   `json:"TubularID,omitempty"`
	// True vertical depth of a leak off test point.                                                    
	TvdLot                                                                                    *float64  `json:"TvdLot,omitempty"`
	// Type of wellbore.                                                                                
	TypeWellbore                                                                              *string   `json:"TypeWellbore,omitempty"`
	// Kick tolerance volume.                                                                           
	VolKickTol                                                                                *float64  `json:"VolKickTol,omitempty"`
}

// Information about a series of drilling activities.
type TimedComment struct {
	// A comment that has been recorded at a particular time           
	Comment                                                 *string    `json:"Comment,omitempty"`
	// The time that the comment was made                              
	CommentTime                                             *time.Time `json:"CommentTime,omitempty"`
}

// Meteorological readings for the defined time period on an operations report
type Weather struct {
	// Name of company that supplied the weather data.                                                    
	Agency                                                                                      *string   `json:"Agency,omitempty"`
	// Atmospheric pressure.                                                                              
	BarometricPressure                                                                          *float64  `json:"BarometricPressure,omitempty"`
	// The Beaufort wind force scale is a system used to estimate and report wind speeds when no          
	// measuring apparatus is available. It was invented in the early 19th century by Admiral             
	// Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.              
	// Values range from 0 (calm) to 12 (hurricane force).                                                
	BeaufortScaleNumber                                                                         *float64  `json:"BeaufortScaleNumber,omitempty"`
	// Height of cloud cover.                                                                             
	CloudCeiling                                                                                *float64  `json:"CloudCeiling,omitempty"`
	// Description of cloud cover.                                                                        
	CloudCover                                                                                  *string   `json:"CloudCover,omitempty"`
	// Comments and remarks                                                                               
	Comments                                                                                    *string   `json:"Comments,omitempty"`
	// The speed of the ocean current.                                                                    
	CurrentSeaSpeed                                                                             *float64  `json:"CurrentSeaSpeed,omitempty"`
	// Date and time that weather was observed                                                            
	DateTime                                                                                    time.Time `json:"DateTime"`
	// Amount of precipitation.                                                                           
	PrecipitationAmount                                                                         *float64  `json:"PrecipitationAmount,omitempty"`
	// Azimuth of current.                                                                                
	SeaCurrentDirection                                                                         *float64  `json:"SeaCurrentDirection,omitempty"`
	// Sea temperature.                                                                                   
	SeaTemp                                                                                     *float64  `json:"SeaTemp,omitempty"`
	// Maximum temperature above ground.                                                                  
	SurfaceTempMax                                                                              *float64  `json:"SurfaceTempMax,omitempty"`
	// Minimum temperature above ground. Temperature of the atmosphere.                                   
	SurfaceTempMin                                                                              *float64  `json:"SurfaceTempMin,omitempty"`
	// Horizontal visibility.                                                                             
	Visibility                                                                                  *float64  `json:"Visibility,omitempty"`
	// The direction from which the waves are coming, measured from true north.                           
	WaveDirection                                                                               *float64  `json:"WaveDirection,omitempty"`
	// Average height of the sea waves.                                                                   
	WaveHeightAverage                                                                           *float64  `json:"WaveHeightAverage,omitempty"`
	// The maximum wave height.                                                                           
	WaveHeightMax                                                                               *float64  `json:"WaveHeightMax,omitempty"`
	// The elapsed time between the passing of two wave tops.                                             
	WavePeriodDuration                                                                          *float64  `json:"WavePeriodDuration,omitempty"`
	// An average of the higher 1/3 of the wave heights passing during a sample period                    
	// (typically 20 to 30 minutes).                                                                      
	WaveSignificant                                                                             *float64  `json:"WaveSignificant,omitempty"`
	// Type of weather.                                                                                   
	WeatherType                                                                                 *string   `json:"WeatherType,omitempty"`
	// A measure of the combined chilling effect of wind and low temperature on living things,            
	// also named chill factor, e.g., according to the US weather service table, an air                   
	// temperature of 30 degF with a 10 mph corresponds to a windchill of 22 degF.                        
	WindChillTemp                                                                               *float64  `json:"WindChillTemp,omitempty"`
	// The direction from which the wind is blowing, measured from true north.                            
	WindDirection                                                                               *float64  `json:"WindDirection,omitempty"`
	// Wind speed.                                                                                        
	WindSpeed                                                                                   *float64  `json:"WindSpeed,omitempty"`
}

// Local name defined for the Well
type WellAlias struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// Definition of an alias
type WellboreAliasElement struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// Non Productive Time (NPT) during Well Operations is the time taken to perform all
// remedial activities that DO NOT continue to progress towards the planned objective(s).
// NPT will  include all subsequent time taken to reach the same stage in the work programme
// prior to the NPT event occurring e.g. reach the same depth before stuck pipe event and
// back-off etc. NPTs caused by an Equipment Failure may be associated to a DowntimeEvent.
// An NPT start must align to an Operations Report Activity; similarly, an NPT must end at
// the end of an Operations Report activity.
type WellOpsNonProductiveTime struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellOpsNonProductiveTimeData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellOpsNonProductiveTimeData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                     
	// from the file, in the sense certain valuable information is generated during loading                                          
	// process (Artefact generation process). Examples include retrieving location data,                                             
	// performing an OCR which may result in the generation of artefacts which need to be                                            
	// preserved distinctly                                                                                                          
	Artefacts                                                                                   []PurpleArtefacts                    `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                           
	Datasets                                                                                    []string                             `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                      
	// work-product-component. The references are formed as URI following                                                            
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                     
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                            
	// obliged to find the specific reference by inspecting the URI's authority values matching                                      
	// the DDMS id.                                                                                                                  
	DDMSDatasets                                                                                []string                             `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                     
	// the search index.                                                                                                             
	IsDiscoverable                                                                              *bool                                `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                       
	// reflects the fact that the work product component is in an early stage and may be updated                                     
	// before finalization.                                                                                                          
	IsExtendedLoad                                                                              *bool                                `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                     
	// known (it should include all the identifiers).                                                                                
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssurances                                                                         []PurpleAbstractTechnicalAssurance   `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                          
	// entity.                                                                                                                       
	AuthorIDs                                                                                   []string                             `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                        
	// (ex. well planning, exploration).                                                                                             
	BusinessActivities                                                                          []string                             `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                          
	// loading (e.g. publication date).                                                                                              
	CreationDateTime                                                                            *time.Time                           `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                            
	// captures thoughts of creator about the wpc.                                                                                   
	//                                                                                                                               
	// Description, free text entry usually by Rigsite personnel, but may be amended by                                              
	// Performance Engineer (NPT Coach)                                                                                              
	Description                                                                                 *string                              `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                      
	// types or multiple values of the same type.                                                                                    
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                          
	// product component depends.  The assertion is directed only from the asserting WPC to                                          
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                         
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                     
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                         
	LineageAssertions                                                                           []LineageAssertion                   `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                          
	//                                                                                                                               
	// Human recognizable context/name of the NPT Event.                                                                             
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                      
	// (location of the subject matter).                                                                                             
	SpatialArea                                                                                 *AbstractSpatialLocation             `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                        
	// (location of the subject matter).                                                                                             
	SpatialPoint                                                                                *AbstractSpatialLocation             `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                   
	SubmitterName                                                                               *string                              `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                
	Tags                                                                                        []string                             `json:"Tags,omitempty"`
	// Name of the NPT Coach/Well Operations Performance Engineer who was responsible for                                            
	// shepherding the NPT through its lifecycle                                                                                     
	AccountableParty                                                                            *string                              `json:"AccountableParty,omitempty"`
	// Contractor Cost                                                                                                               
	ContractorCost                                                                              *float64                             `json:"ContractorCost,omitempty"`
	// Cost Group/Code (Activity Element)                                                                                            
	CostGroupID                                                                                 *string                              `json:"CostGroupID,omitempty"`
	// Downtime Event Identifier, used when NPT Equipment failures also captured as downtime                                         
	// events                                                                                                                        
	DowntimeEventID                                                                             *string                              `json:"DowntimeEventID,omitempty"`
	// End Operations Activity Natural Identifier from Daily Operations Report. Requires that                                        
	// the relationship WellOperationsReport is populated. ActivityID must match a member in the                                     
	// related WellOperationsReport data.OperationsActivity[].ActivityID.                                                            
	EndOperationsActivityID                                                                     *string                              `json:"EndOperationsActivityID,omitempty"`
	// Start Operations Activity Daily Operations Report ID  in which the NPT Event ended.                                           
	EndOperationsReportID                                                                       *string                              `json:"EndOperationsReportID,omitempty"`
	// Equipment Cost                                                                                                                
	EquipmentCost                                                                               *float64                             `json:"EquipmentCost,omitempty"`
	// Equipment Failure Hours Before Fail                                                                                           
	EquipmentFailureHoursBeforeFail                                                             *float64                             `json:"EquipmentFailureHoursBeforeFail,omitempty"`
	// Equipment Failure Location Description                                                                                        
	EquipmentFailureLocationDescription                                                         *string                              `json:"EquipmentFailureLocationDescription,omitempty"`
	// Equipment Failure Type Identifier                                                                                             
	EquipmentFailureTypeID                                                                      *string                              `json:"EquipmentFailureTypeID,omitempty"`
	// Equipment Last Inspection Date/time                                                                                           
	EquipmentLastInspectionDateTime                                                             *time.Time                           `json:"EquipmentLastInspectionDateTime,omitempty"`
	// Equipment Manufacturer                                                                                                        
	EquipmentManufacturerID                                                                     *string                              `json:"EquipmentManufacturerID,omitempty"`
	// Equipment Model Name/Number                                                                                                   
	EquipmentModel                                                                              *string                              `json:"EquipmentModel,omitempty"`
	// Equipment Part Number                                                                                                         
	EquipmentPartNumber                                                                         *string                              `json:"EquipmentPartNumber,omitempty"`
	// Equipment Serial Number                                                                                                       
	EquipmentSerialNumber                                                                       *string                              `json:"EquipmentSerialNumber,omitempty"`
	// Equipment Size / Diameter                                                                                                     
	EquipmentSize                                                                               *float64                             `json:"EquipmentSize,omitempty"`
	// Date/time the Unplanned event ended                                                                                           
	EventEndTime                                                                                *time.Time                           `json:"EventEndTime,omitempty"`
	// Date/time the Unplanned event started                                                                                         
	EventStartTime                                                                              *time.Time                           `json:"EventStartTime,omitempty"`
	// Remedial actions taken by field/rig team when NPT occurred to address the NPT.                                                
	FieldRemediation                                                                            *string                              `json:"FieldRemediation,omitempty"`
	// Calculated Gross Cost Total = (BurnRate * Gross Duration) + Contractor Cost + Equipment                                       
	// Cost + Other Cost                                                                                                             
	GrossCostTotal                                                                              *float64                             `json:"GrossCostTotal,omitempty"`
	// Gross Time Duration = NPT End Date/time - Start Date/time                                                                     
	GrossDuration                                                                               *float64                             `json:"GrossDuration,omitempty"`
	// Investigation Status History                                                                                                  
	InvestigationStatus                                                                         []NPTInvestigationStatus             `json:"InvestigationStatus,omitempty"`
	// Used to flag NPT Events which were later classified as not NPT                                                                
	IsExcludeFromNPT                                                                            *bool                                `json:"IsExcludeFromNPT,omitempty"`
	// Is Investigation Waived                                                                                                       
	IsInvestigationWaived                                                                       *bool                                `json:"IsInvestigationWaived,omitempty"`
	// Learnings arising from the NPT investigation                                                                                  
	Learnings                                                                                   *string                              `json:"Learnings,omitempty"`
	// Nested Time duration - sum of Nested NPT Net Duration occurring within this NPT (can be                                       
	// calculated)                                                                                                                   
	NestedDuration                                                                              *float64                             `json:"NestedDuration,omitempty"`
	// Calculated Net Cost Total = (Burn Rate * Net Duration) + Contractor Cost + Equipment Cost                                     
	// + Other Cost                                                                                                                  
	NetCostTotal                                                                                *float64                             `json:"NetCostTotal,omitempty"`
	// Net Duration = Gross Duration - Nested Duration - Productive Time Adjustment                                                  
	NetDuration                                                                                 *float64                             `json:"NetDuration,omitempty"`
	// NPT Actions                                                                                                                   
	NPTActions                                                                                  []NonProductiveTimeAction            `json:"NPTActions,omitempty"`
	// Minor NPT Cause Type category                                                                                                 
	NPTCauseSubTypeID                                                                           *string                              `json:"NPTCauseSubTypeID,omitempty"`
	// Major NPT Cause Type category                                                                                                 
	NPTCauseTypeID                                                                              *string                              `json:"NPTCauseTypeID,omitempty"`
	// Measured Depth at time when the NPT event ended if different from start MD referenced                                         
	// from Vertical Measure Elevation                                                                                               
	NPTEndMeasuredDepth                                                                         *float64                             `json:"NPTEndMeasuredDepth,omitempty"`
	// True Vertical Depth at time when the NPT event end if different from start TVD referenced                                     
	// from Vertical Measure Elevation                                                                                               
	NPTEndTrueVerticalDepth                                                                     *float64                             `json:"NPTEndTrueVerticalDepth,omitempty"`
	// NPT Level (nesting). 0 = Productive Time (not NPT), 1 = 1st Unplanned Activity, 2 = 2nd                                       
	// Unplanned activity occurring within 1st NPT, 3 = 3rd NPT occurring within 2nd NPT, tc.                                        
	NPTLevel                                                                                    *int64                               `json:"NPTLevel,omitempty"`
	// Measured Depth at time when the NPT event started (when relevant) referenced from                                             
	// Vertical Measure Elevation                                                                                                    
	NPTMeasuredDepth                                                                            *float64                             `json:"NPTMeasuredDepth,omitempty"`
	// True Vertical Depth at time when the NPT event started (when relevant) referenced from                                        
	// Vertical Measure Elevation                                                                                                    
	NPTTrueVerticalDepth                                                                        *float64                             `json:"NPTTrueVerticalDepth,omitempty"`
	// Ongoing operations burn rate cost (daily cost). Used to calculate Gross and Net Cost                                          
	OperationsBurnRate                                                                          *float64                             `json:"OperationsBurnRate,omitempty"`
	// Other Cost                                                                                                                    
	OtherCost                                                                                   *float64                             `json:"OtherCost,omitempty"`
	// Parent NPT Event Identifier (when nested)                                                                                     
	ParentNPTEventID                                                                            *string                              `json:"ParentNPTEventID,omitempty"`
	// Preventative Actions                                                                                                          
	PreventativeActions                                                                         *string                              `json:"PreventativeActions,omitempty"`
	// Productive Time Adjustment duration - time spent working towards Well objective(s)                                            
	// whilst  the NPT is ongoing. Productive time negates against NPT Net Time                                                      
	ProductiveTimeAdjustment                                                                    *float64                             `json:"ProductiveTimeAdjustment,omitempty"`
	// Remarks                                                                                                                       
	Remarks                                                                                     *string                              `json:"Remarks,omitempty"`
	// Responsible Company Comments                                                                                                  
	ResponsibleCompanyComments                                                                  *string                              `json:"ResponsibleCompanyComments,omitempty"`
	// Responsible Company Contact Name                                                                                              
	ResponsibleCompanyContact                                                                   *string                              `json:"ResponsibleCompanyContact,omitempty"`
	// Responsible Company Findings                                                                                                  
	ResponsibleCompanyFindings                                                                  *string                              `json:"ResponsibleCompanyFindings,omitempty"`
	// Responsible Company                                                                                                           
	ResponsibleCompanyID                                                                        *string                              `json:"ResponsibleCompanyID,omitempty"`
	// Responsible Company Resolution Date                                                                                           
	ResponsibleCompanyResolutionDate                                                            *string                              `json:"ResponsibleCompanyResolutionDate,omitempty"`
	// Identifier of the Rig/Work Unit performing the activity at the time of the NPT                                                
	RigID                                                                                       *string                              `json:"RigID,omitempty"`
	// Risk Assessment Type ID                                                                                                       
	RiskAssessmentTypeID                                                                        *string                              `json:"RiskAssessmentTypeID,omitempty"`
	// ID of specific risk associated to this NPT                                                                                    
	RiskID                                                                                      *string                              `json:"RiskID,omitempty"`
	// Root Cause Description                                                                                                        
	RootCauseDescription                                                                        *string                              `json:"RootCauseDescription,omitempty"`
	// NPT incident Reference/Identifier to other Root Cause Failure Analysis system                                                 
	RootCauseFailureReferenceID                                                                 *string                              `json:"RootCauseFailureReferenceID,omitempty"`
	// Team assigned to investigate the NPT                                                                                          
	RootCauseFailureTeamID                                                                      *string                              `json:"RootCauseFailureTeamID,omitempty"`
	// Root Cause Type ID                                                                                                            
	RootCauseTypeID                                                                             *string                              `json:"RootCauseTypeID,omitempty"`
	// NPT Safety Classification - High Potential Incident, Process Safety Incident, or both.                                        
	// NULL identifies NPT Events with no safety implications.                                                                       
	SafetyClassificationID                                                                      *string                              `json:"SafetyClassificationID,omitempty"`
	// Safety Incident Reference to another system                                                                                   
	SafetyIncidentReferenceID                                                                   *string                              `json:"SafetyIncidentReferenceID,omitempty"`
	// Severity Level defined on Time and/or Cost impact/criteria                                                                    
	SeverityLevelID                                                                             *string                              `json:"SeverityLevelID,omitempty"`
	// Start Operations Activity Natural Identifier from Daily Operations Report. Requires that                                      
	// the relationship to WellOperationsReport is populated. ActivityName must match a member                                       
	// in the related WellOperationsReport data.OperationsActivity[].ActivityID.                                                     
	StartOperationsActivityID                                                                   *string                              `json:"StartOperationsActivityID,omitempty"`
	// Start Operations Activity Daily Operations Report ID in which the NPT Event started.                                          
	StartOperationsReportID                                                                     *string                              `json:"StartOperationsReportID,omitempty"`
	// Title, free text entry usually by Rigsite personnel                                                                           
	Title                                                                                       *string                              `json:"Title,omitempty"`
	// Unplanned Event Type classification (NPT w/ Equipment Failure, NPT w/out Equipment                                            
	// Failure, Equipment Failure (no NPT)                                                                                           
	UnplannedEventTypeID                                                                        *string                              `json:"UnplannedEventTypeID,omitempty"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                          
	// WellboreID, or a standalone vertical reference elevation for all measured depths within                                       
	// the NPT record. If this is not populated, the VerticalMeasurement is derived from the                                         
	// Wellbore default Vertical Measure Elevation.                                                                                  
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Identifier of the Well Activity in which the NPT occurred                                                                     
	WellActivityID                                                                              string                               `json:"WellActivityID"`
	// Parent Wellbore Identifier                                                                                                    
	WellboreID                                                                                  string                               `json:"WellboreID"`
	// Association to Wellbore Marker Set (when relevant)                                                                            
	WellboreMarkerSetID                                                                         *string                              `json:"WellboreMarkerSetID,omitempty"`
	// Well Control Event Classification level                                                                                       
	WellControlEventClassificationID                                                            *string                              `json:"WellControlEventClassificationID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct
// from the file, in the sense certain valuable information is generated during loading
// process (Artefact generation process). Examples include retrieving location data,
// performing an OCR which may result in the generation of artefacts which need to be
// preserved distinctly
type PurpleArtefacts struct {
	// The SRN which identifies this OSDU Artefact resource.                             
	ResourceID                                                                   *string `json:"ResourceID,omitempty"`
	// The kind or schema ID of the artefact. Resolvable with the Schema Service.        
	ResourceKind                                                                 *string `json:"ResourceKind,omitempty"`
	// The record id of this artefact's role.                                            
	RoleID                                                                       *string `json:"RoleID,omitempty"`
}

// Investigation Status history of the NPT event
type NPTInvestigationStatus struct {
	// Status Date/time                           
	InvestigationStatusDateTime        *time.Time `json:"InvestigationStatusDateTime,omitempty"`
	// Investigation Status Remarks               
	InvestigationStatusRemarks         *string    `json:"InvestigationStatusRemarks,omitempty"`
	// NPT Investigation Status Type ID           
	InvestigationStatusTypeID          *string    `json:"InvestigationStatusTypeID,omitempty"`
	// Investigation Team Reviewer                
	InvestigationTeamReviewer          *string    `json:"InvestigationTeamReviewer,omitempty"`
}

// Individual Non Productive Time Action Description
type NonProductiveTimeAction struct {
	// Action Completed Date           
	ActionCompletedDate     *string    `json:"ActionCompletedDate,omitempty"`
	// Action Description              
	ActionDescription       *string    `json:"ActionDescription,omitempty"`
	// Action Owner name               
	ActionOwner             *string    `json:"ActionOwner,omitempty"`
	// Action Remarks                  
	ActionRemarks           *string    `json:"ActionRemarks,omitempty"`
	// Action Title                    
	ActionTitle             *time.Time `json:"ActionTitle,omitempty"`
}

// Describes a record's overall suitability for general business consumption based on level
// of trust.
type PurpleAbstractTechnicalAssurance struct {
	// List of workflows and/or personas that the technical assurance value is valid for (e.g.,                           
	// This data is trusted for Seismic Processing)                                                                       
	AcceptableUsage                                                                             []FluffyAcceptableUsage   `json:"AcceptableUsage,omitempty"`
	// Any additional context to support the determination of technical assurance                                         
	Comment                                                                                     *string                   `json:"Comment,omitempty"`
	// Date when the technical assurance determination for this record has taken place                                    
	EffectiveDate                                                                               *string                   `json:"EffectiveDate,omitempty"`
	// The individuals, or roles, that reviewed and determined the technical assurance value                              
	Reviewers                                                                                   []AbstractContact         `json:"Reviewers,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                            
	// quality. Clarifications: Since Certified is the highest classification of suitable                                 
	// quality, any further change or versioning of a Certified record should be carefully                                
	// considered and justified. If a Technical Assurance value is not populated then one can                             
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                   
	// Technical Assurance values are not intended to be used for the identification of a single                          
	// "preferred" or "definitive" record by comparison with other records.                                               
	TechnicalAssuranceTypeID                                                                    string                    `json:"TechnicalAssuranceTypeID"`
	// List of workflows and/or personas that the technical assurance value is not valid for                              
	// (e.g., This data is not trusted for seismic interpretation)                                                        
	UnacceptableUsage                                                                           []FluffyUnacceptableUsage `json:"UnacceptableUsage,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is valid for
// (e.g., This data has a technical assurance property of "trusted" and it is suitable for
// Seismic Interpretation).
type FluffyAcceptableUsage struct {
	// The QualityDataRuleSet, which had to pass successfully to achieve this level of technical        
	// assurance.                                                                                       
	QualityDataRuleSetID                                                                        *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is acceptable for workflow usage.                         
	ValueChainStatusTypeID                                                                      *string `json:"ValueChainStatusTypeID,omitempty"`
	// Name of the role or personas that the record is technical assurance value is valid for.          
	WorkflowPersona                                                                             *string `json:"WorkflowPersona,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record is technical        
	// assurance value is valid for.                                                                    
	WorkflowUsage                                                                               *string `json:"WorkflowUsage,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is not valid
// for (e.g., This data has a technical assurance property of "trusted", but it is not
// suitable for Seismic Interpretation).
type FluffyUnacceptableUsage struct {
	// The QualityDataRuleSet, which did not pass successfully to achieve this level of                 
	// technical assurance.                                                                             
	QualityDataRuleSetID                                                                        *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is not acceptable for workflow usage.                     
	ValueChainStatusTypeID                                                                      *string `json:"ValueChainStatusTypeID,omitempty"`
	// Name of the role or personas that the record is technical assurance value is not valid           
	// for.                                                                                             
	WorkflowPersona                                                                             *string `json:"WorkflowPersona,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record is technical        
	// assurance value is not valid for.                                                                
	WorkflowUsage                                                                               *string `json:"WorkflowUsage,omitempty"`
}

// Entity aiming to capture raw measurements from Well Pressure Tests. It aims to capture
// single test file gathering raw measurements before any kind of processing, composing,
// interpretation or analysis
type WellPressureTestRawMeasurement struct {
	// The access control tags associated with this entity.                                                                          
	ACL                                                                                          AccessControlList                   `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                            
	// derived.                                                                                                                      
	Ancestry                                                                                     *ParentList                         `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                      
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	CreateTime                                                                                   *time.Time                          `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                       
	// System.                                                                                                                       
	CreateUser                                                                                   *string                             `json:"createUser,omitempty"`
	Data                                                                                         *WellPressureTestRawMeasurementData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                        
	// version.                                                                                                                      
	ID                                                                                           *string                             `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                  
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                      
	// scheme follows the semantic versioning, https://semver.org/.                                                                  
	Kind                                                                                         string                              `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                        
	// legal tags is managed by the Compliance Service.                                                                              
	Legal                                                                                        LegalMetaData                       `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                       
	// definitions.                                                                                                                  
	Meta                                                                                         []FrameOfReferenceMetaDataItem      `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                      
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                             
	ModifyTime                                                                                   *time.Time                          `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                    
	ModifyUser                                                                                   *string                             `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                       
	// as keys and values.                                                                                                           
	Tags                                                                                         map[string]string                   `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                               
	Version                                                                                      *int64                              `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellPressureTestRawMeasurementData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// Angle of rotation of the Acquisition String while running this test                                                                     
	AcquisitionStringToolFace                                                                   *float64                                       `json:"AcquisitionStringToolFace,omitempty"`
	// Date that the production string has been closed in prior to the pressure test.                                                          
	ClosedInDate                                                                                *time.Time                                     `json:"ClosedInDate,omitempty"`
	// Array of unitary Curve (Pressure against Time) description                                                                              
	Curves                                                                                      []CurveElement                                 `json:"Curves,omitempty"`
	// Array of comprehensive description of the well test raw measurement (one entry per                                                      
	// gauge's depth)                                                                                                                          
	Measurements                                                                                []Measurement                                  `json:"Measurements,omitempty"`
	// The date (and time) at which the test started                                                                                           
	PressureTestStartDate                                                                       *time.Time                                     `json:"PressureTestStartDate,omitempty"`
	// Identifier of the acquisition job master data.                                                                                          
	WellPressureTestAcquisitionJobID                                                            string                                         `json:"WellPressureTestAcquisitionJobID"`
	// Identifier of the Run within the acquisition job                                                                                        
	WellPressureTestAcquisitionRunIdentifier                                                    int64                                          `json:"WellPressureTestAcquisitionRunIdentifier"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// Describing the characteristics of the "Pressure against Time" recorded curves.
type CurveElement struct {
	// Mnemonic-level curve description is used during parsing or reading and ingesting LAS or          
	// DLIS files, to explain the type of measurement being looked at, specifically for that            
	// moment. Curve description is specific to that single (log) mnemonic and for the entire           
	// log (acquisition run) interval. In essence, curve description defines the internal               
	// factors such as what the "curve" or measurement ideally is representing, how is it               
	// calculated, what are the assumptions and the "constants".                                        
	CurveDescription                                                                            *string `json:"CurveDescription,omitempty"`
	// The ID of the Well Log Curve                                                                     
	CurveID                                                                                     *string `json:"CurveID,omitempty"`
	// The value type to be expected as curve sample values.                                            
	CurveSampleTypeID                                                                           *string `json:"CurveSampleTypeID,omitempty"`
	// Unit of Measure for the Log Curve                                                                
	CurveUnitID                                                                                 *string `json:"CurveUnitID,omitempty"`
	// The Mnemonic of the Log Curve is the value as received either from Raw Providers or from         
	// Internal Processing team                                                                         
	Mnemonic                                                                                    *string `json:"Mnemonic,omitempty"`
	// Indicates that there is no measurement within the curve                                          
	NullValue                                                                                   *bool   `json:"NullValue,omitempty"`
	// The number of columns present in this Curve for a single reference value. For simple logs        
	// this is typically 1; for image logs this holds the number of image traces or property            
	// series. Further information about the columns can be obtained via the respective log or          
	// curve APIs of the Domain Data Management Service.                                                
	NumberOfColumns                                                                             *int64  `json:"NumberOfColumns,omitempty"`
	// Unit of Measure Time Reference                                                                   
	TimeUnitID                                                                                  *string `json:"TimeUnitID,omitempty"`
}

// Unitary Measurement Serie Description
type Measurement struct {
	// Identifier of the unitary gauge active for this specific curve measurement                                                    
	ActiveGaugeID                                                                               *string                              `json:"ActiveGaugeID,omitempty"`
	// Describe the active Probe type for this current measurement station                                                           
	ActiveProbeTypeID                                                                           string                               `json:"ActiveProbeTypeID"`
	// The vertical measurement reference for this well logging acquisition activity. This                                           
	// object defines the vertical reference datum for the measured depths.                                                          
	DepthReference                                                                              *AbstractFacilityVerticalMeasurement `json:"DepthReference,omitempty"`
	// Identifier of the detailed test run at this station (such as miniDST, miniFrac,…)                                             
	DetailedTestTypeID                                                                          *string                              `json:"DetailedTestTypeID,omitempty"`
	// Boolean describing if the test serie is run at constant depth (as opposed as at different                                     
	// stations)                                                                                                                     
	IsStationary                                                                                *bool                                `json:"IsStationary,omitempty"`
	// Boolean that indicates the measurement is tubular (meaning proceeded inside the installed                                     
	// tubular) - or annular otherwise.                                                                                              
	IsTubular                                                                                   *bool                                `json:"IsTubular,omitempty"`
	// array of information to identify interval times within the complete measurement                                               
	// recording, significant in themselves - such as PreTests in Formation Pressure Test -                                          
	// BuildUp/Close-in intervals in Build Ups production pressure tests,….                                                          
	MeasurementPeriods                                                                          []MeasurementPeriod                  `json:"MeasurementPeriods,omitempty"`
	// Measured Depth of the station for Stationary Tests - mutually exclusive with                                                  
	// (PressureTestTop/bottom measuredDepth                                                                                         
	PressurePointMeasuredDepth                                                                  *float64                             `json:"PressurePointMeasuredDepth,omitempty"`
	// Measured Depth of the bottom station for Non Stationary Tests- mutually exclusive with                                        
	// (Pressure Point Measured Depth                                                                                                
	PressureTestBottomMeasuredDepth                                                             *float64                             `json:"PressureTestBottomMeasuredDepth,omitempty"`
	// Measured Depth of the top station for Non Stationary Tests - mutually exclusive with                                          
	// (Pressure Point Measured Depth                                                                                                
	PressureTestTopMeasuredDepth                                                                *float64                             `json:"PressureTestTopMeasuredDepth,omitempty"`
	// DEPRECATED - PLEASE USE "MEASUREMENT PERIOD" INSTEAD: array of information to identify                                        
	// pretests measurements within the complete measurement recording.                                                              
	PreTests                                                                                    []PreTest                            `json:"PreTests,omitempty"`
	// Sequential number of the test (or pre-test) which identifies it into the record                                               
	TestNumber                                                                                  *int64                               `json:"TestNumber,omitempty"`
	// Identifier of the reference data record indicating the reliability of the tests. This                                         
	// encapsulates the common "TestSuccess" notion - but allows for more flexibility                                                
	TestReliabilityID                                                                           *string                              `json:"TestReliabilityID,omitempty"`
	// Identifier of the Station within the acquisition job captured in the unitary serie                                            
	WellPressureTestAcquisitionStationIdentifier                                                *int64                               `json:"WellPressureTestAcquisitionStationIdentifier,omitempty"`
}

// Contains information about the individual, discrete events or periods during a wellbore
// pressure test
type MeasurementPeriod struct {
	// An identifying kind of the MeasurementPeriod e.g. BuildUp, FallOff, PreTest                                  
	MeasurementPeriodKind                                                                 *string                   `json:"MeasurementPeriodKind,omitempty"`
	// An embedded ColumnBasedTable containing the Measurements within the period that are                          
	// required (and only if required) for indexing                                                                 
	MeasurementPeriodMeasurements                                                         *AbstractColumnBasedTable `json:"MeasurementPeriodMeasurements,omitempty"`
	// Time index where the individual period ends into the sequence                                                
	PeriodEndTime                                                                         *float64                  `json:"PeriodEndTime,omitempty"`
	// Sequential number identifying the period within the record                                                   
	PeriodNumber                                                                          *int64                    `json:"PeriodNumber,omitempty"`
	// Time index where the individual period starts into the sequence                                              
	PeriodStartTime                                                                       *float64                  `json:"PeriodStartTime,omitempty"`
}

// Describes the pieces of information required to identity individual pretests within the
// complete record.
type PreTest struct {
	// DEPRECATED: Time index where the individual pretest ends into the sequence           
	PreTestEndTime                                                                 *float64 `json:"PreTestEndTime,omitempty"`
	// DEPRECATED: Sequential number identifying the pretest within the record              
	PreTestNumber                                                                  *int64   `json:"PreTestNumber,omitempty"`
	// DEPRECATED: Time index where the individual pretest starts into the sequence         
	PreTestStartTime                                                               *float64 `json:"PreTestStartTime,omitempty"`
}

// Define the geologic unit (including stratigraphic units) or fluid intervals along the
// wellbore, independent or based on markers  (defined in one or several WellboreMarkerSets).
type WellboreIntervalSet struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreIntervalSetData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellboreIntervalSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// An embedded ColumnBasedTable with the properties including their values associated to the                                               
	// intervals in data.Intervals[]. The association is done by array index.                                                                  
	IntervalProperties                                                                          *AbstractColumnBasedTable                      `json:"IntervalProperties,omitempty"`
	// Array of Intervals, index-aligned with IntervalProperties.                                                                              
	Intervals                                                                                   []Interval                                     `json:"Intervals,omitempty"`
	// The optional reference to a stratigraphic column (referring to multiple                                                                 
	// StratigraphicColumnRankInterpretation) providing the stratigraphic framework for the                                                    
	// WellboreIntervalSet. It demonstrates the intent to describe complex, potentially                                                        
	// overlapping stratigraphic intervals. Only one of the properties StratigraphicColumnID or                                                
	// StratigraphicColumnRankInterpretationID should be populated.                                                                            
	StratigraphicColumnID                                                                       *string                                        `json:"StratigraphicColumnID,omitempty"`
	// The optional reference to a StratigraphicColumnRankInterpretation. It expresses the                                                     
	// intent of a stratigraphic framework with non-overlapping intervals. Only one of the                                                     
	// properties StratigraphicColumnID or StratigraphicColumnRankInterpretationID should be                                                   
	// populated.                                                                                                                              
	StratigraphicColumnRankInterpretationID                                                     *string                                        `json:"StratigraphicColumnRankInterpretationID,omitempty"`
	// Allows to link the geometry of the WellboreMarkerSet to a particular index of a time                                                    
	// series. This is particularly useful for intervals referring to fluid contacts where the                                                 
	// topology and geometry varies against the time.                                                                                          
	TimeSeries                                                                                  *AbstractTimeSeriesLink                        `json:"TimeSeries,omitempty"`
	// References an entry in the Vertical Measurement array for the Wellbore identified by                                                    
	// WellboreID, which defines the vertical reference datum for all marker measured depths of                                                
	// the WellboreIntervalSet Intervals array. It is strongly recommended specifying the                                                      
	// VerticalMeasurement.WellboreTVDTrajectoryID  when SubSeaVerticalDepth are populated for                                                 
	// the intervals.                                                                                                                          
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// The relationship to a Wellbore, to which this WellboreIntervalSet is associated with.                                                   
	WellboreID                                                                                  *string                                        `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// An interval given either by relationships to top/base markers or standalone top/base
// depths. To avoid confusion about entry and exit depths the naming convention uses Start
// as the entry point of the well path into the geologic unit and Stop as the exit point.
// For unfolded geologic units and vertical wellbores Start is Top and Stop is Base.
type Interval struct {
	// An array of StratigraphicUnitInterpretation, GeobodyInterpretation or                             
	// RockFluidUnitInterpretation record Ids associated to this interval.                               
	GeologicUnitInterpretationIDs                                                               []string `json:"GeologicUnitInterpretationIDs,omitempty"`
	// The unique identifier of the interval array member in the data.Intervals[] array. Ideally         
	// a UUID. IntervalID is also used to associate IntervalProperties via the key column                
	// data.IntervalProperties.ColumnValues[0].StringColumn[].                                           
	IntervalID                                                                                  *string  `json:"IntervalID,omitempty"`
	// The optional relationship to a HorizonInterpretation, GeobodyBoundaryInterpretation or            
	// FaultInterpretation. If the interval start (typically the top) is associated with a               
	// marker, this is considered a denormalization of the data.Markers[].InterpretationID for           
	// the data.Markers[].MarkerID equals to StartMarkerID.                                              
	StartBoundaryInterpretationID                                                               *string  `json:"StartBoundaryInterpretationID,omitempty"`
	// Name of the interval start (typically the top); when associated with a marker in a                
	// WellboreMarkerSet then this name is a denormalization of data.Markers[].MarkerName where          
	// the data.Markers[].MarkerID equals to StartMarkerID.                                              
	StartIntervalName                                                                           *string  `json:"StartIntervalName,omitempty"`
	// Individual markers are not globally identifiable. TopMarkerID is the unique id (MarkerID)         
	// of the top interval marker (typically the interval base) in the data.Markers[] array              
	// where the data.Markers[].MarkerID equals to StartMarkerID.                                        
	StartMarkerID                                                                               *string  `json:"StartMarkerID,omitempty"`
	// Optional reference to the WellboreMarkerSet containing the interval start (typically the          
	// top), with MarkerID equals StartMarkerID.                                                         
	StartMarkerSetID                                                                            *string  `json:"StartMarkerSetID,omitempty"`
	// The minimal MeasuredDepth of the interval. In the most common case this is the top.  If           
	// this value is associated with a marker then this value is a denormalization of                    
	// data.Markers[].MarkerMeasuredDepth where the data.Markers[].MarkerID equals to                    
	// StartMarkerID.                                                                                    
	StartMeasuredDepth                                                                          *float64 `json:"StartMeasuredDepth,omitempty"`
	// True vertical depth sub-sea of the start of the interval. This is the same as true                
	// vertical depth referenced to the vertical CRS "MSL depth". If the start of the interval           
	// is associated with a marker then this value is a denormalization of                               
	// data.Markers[].MarkerSubSeaVerticalDepth where the data.Markers[].MarkerID equals to              
	// StartMarkerID.                                                                                    
	StartSubSeaVerticalDepth                                                                    *float64 `json:"StartSubSeaVerticalDepth,omitempty"`
	// The optional relationship to a HorizonInterpretation, GeobodyBoundaryInterpretation or            
	// FaultInterpretation. If the interval stop (typically the base) is associated with a               
	// marker, this is considered a denormalization of the data.Markers[].InterpretationID where         
	// the data.Markers[].MarkerID equals to StopMarkerID.                                               
	StopBoundaryInterpretationID                                                                *string  `json:"StopBoundaryInterpretationID,omitempty"`
	// Name of the interval stop (typically the base); when associated with a marker in a                
	// WellboreMarkerSet then this name is a denormalization of data.Markers[].MarkerName where          
	// the data.Markers[].MarkerID equals to StopMarkerID.                                               
	StopIntervalName                                                                            *string  `json:"StopIntervalName,omitempty"`
	// Individual markers are not globally identifiable. StopMarkerID is the unique id                   
	// (MarkerID) of the interval stop (typically the interval base) in the data.Markers[] array         
	// where the data.Markers[].MarkerID equals to StopMarkerID.                                         
	StopMarkerID                                                                                *string  `json:"StopMarkerID,omitempty"`
	// Optional reference to the WellboreMarkerSet containing the top with MarkerID equals               
	// StopMarkerID.                                                                                     
	StopMarkerSetID                                                                             *string  `json:"StopMarkerSetID,omitempty"`
	// The maximum MeasuredDepth of the interval (typically the base). If the interval stop is           
	// associated with a marker then this value is a denormalization of                                  
	// data.Markers[].MarkerMeasuredDepth where the data.Markers[].MarkerID equals to                    
	// StopMarkerID.                                                                                     
	StopMeasuredDepth                                                                           *float64 `json:"StopMeasuredDepth,omitempty"`
	// True vertical depth sub-sea of the interval stop (typically the base). This is the same           
	// as true vertical depth referenced to the vertical CRS "MSL depth". If the interval stop           
	// is associated with a marker then this value is a denormalization of                               
	// data.Markers[].MarkerSubSeaVerticalDepth where the data.Markers[].MarkerID equals to              
	// StopMarkerID.                                                                                     
	StopSubSeaVerticalDepth                                                                     *float64 `json:"StopSubSeaVerticalDepth,omitempty"`
}

// Allows to link the geometry of the WellboreMarkerSet to a particular index of a time
// series. This is particularly useful for intervals referring to fluid contacts where the
// topology and geometry varies against the time.
//
// Defines the link between a work-product-component (likely a representation in the RESQML
// sense) and a time series work-product-component holding the entire list of time steps in
// a series.
//
// Allows to link the geometry of the WellboreMarkerSet to a particular index of a time
// series. This is particularly useful for markers referring to fluid contacts where the
// topology and geometry varies against the time.
type AbstractTimeSeriesLink struct {
	// Index of the timestamp of the representation in the associated TimeSeries       
	TimeIndex                                                                   int64  `json:"TimeIndex"`
	// Time series the representation is associated to                                 
	TimeSeriesID                                                                string `json:"TimeSeriesID"`
}

// Wellbore Markers identify the depth in a wellbore, measured below a reference elevation,
// at which a person or an automated process identifies a noteworthy observation, which is
// usually a change in the rock that intersects that wellbore. Formation Marker data
// includes attributes/properties that put these depths in context. Formation Markers are
// sometimes known as picks or formation tops.
type WellboreMarkerSet struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreMarkerSetData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellboreMarkerSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                             
	// classification associated to the legal.legaltags[] is evaluated by platform services                                                    
	// instead. Previously:  Classifies the security level of the resource.                                                                    
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The array of MarkerProperty definitions describing the available properties for this                                                    
	// instance of WellboreMarkerSet.                                                                                                          
	AvailableMarkerProperties                                                                   []MarkerProperty                               `json:"AvailableMarkerProperties,omitempty"`
	// An embedded ColumnBasedTable with the properties including their values associated to the                                               
	// intervals in data.Markers[]. The association is done by array index.                                                                    
	MarkerProperties                                                                            *AbstractColumnBasedTable                      `json:"MarkerProperties,omitempty"`
	// The array of marker meta data in this set. Markers are externally identified by                                                         
	// data.Markers[].MarkerID, ideally a UUID. Older versions of the WellboreMarkerSet schema                                                 
	// do not have this identifier. In this case, the string-converted array index is used as                                                  
	// MarkerID. The the first index is "0".                                                                                                   
	Markers                                                                                     []Markers                                      `json:"Markers,omitempty"`
	// The optional reference to a stratigraphic column (referring to multiple                                                                 
	// StratigraphicColumnRankInterpretation) providing the stratigraphic framework for the                                                    
	// WellboreMarkerSet. It demonstrates the intent to describe complex, potentially                                                          
	// overlapping stratigraphic intervals. Only one of the properties StratigraphicColumnID or                                                
	// StratigraphicColumnRankInterpretationID should be populated.                                                                            
	StratigraphicColumnID                                                                       *string                                        `json:"StratigraphicColumnID,omitempty"`
	// The optional reference to a StratigraphicColumnRankInterpretation. It expresses the                                                     
	// intent of a stratigraphic framework with non-overlapping intervals. Only one of the                                                     
	// properties StratigraphicColumnID or StratigraphicColumnRankInterpretationID should be                                                   
	// populated.                                                                                                                              
	StratigraphicColumnRankInterpretationID                                                     *string                                        `json:"StratigraphicColumnRankInterpretationID,omitempty"`
	// Allows to link the geometry of the WellboreMarkerSet to a particular index of a time                                                    
	// series. This is particularly useful for markers referring to fluid contacts where the                                                   
	// topology and geometry varies against the time.                                                                                          
	TimeSeries                                                                                  *AbstractTimeSeriesLink                        `json:"TimeSeries,omitempty"`
	// References an entry in the Vertical Measurement array for the Wellbore identified by                                                    
	// WellboreID, which defines the vertical reference datum for all marker measured depths of                                                
	// the Wellbore Marker Set Markers array.                                                                                                  
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement           `json:"VerticalMeasurement,omitempty"`
	// The Wellbore ID, to which the markers in this set belong.                                                                               
	WellboreID                                                                                  *string                                        `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A set of properties describing a marker property which is available for this instance of
// a WellboreMarkerSet.
type MarkerProperty struct {
	// The reference to a marker property type - or if interpreted as CSV columns, the                
	// 'well-known column type. It is a relationship to a reference-data--MarkerPropertyType          
	// record id.                                                                                     
	MarkerPropertyTypeID                                                                      *string `json:"MarkerPropertyTypeID,omitempty"`
	// Unit of Measure for the marker properties of type MarkerPropertyType.                          
	MarkerPropertyUnitID                                                                      *string `json:"MarkerPropertyUnitID,omitempty"`
	// The name of the marker property (e.g. column in a CSV document) as originally found. If        
	// absent The name of the MarkerPropertyType is intended to be used.                              
	Name                                                                                      *string `json:"Name,omitempty"`
}

// The array of marker meta data in this set.
type Markers struct {
	// Name of the feature the marker is characterizing                                                   
	FeatureName                                                                                *string    `json:"FeatureName,omitempty"`
	// Feature Type Reference Type. Possible values - Base, top, fault, salt, reef, sea floor             
	FeatureTypeID                                                                              *string    `json:"FeatureTypeID,omitempty"`
	// Associated geological age                                                                          
	GeologicalAge                                                                              *string    `json:"GeologicalAge,omitempty"`
	// The optional relationship to a HorizonInterpretation, GeobodyBoundaryInterpretation or             
	// FaultInterpretation.                                                                               
	InterpretationID                                                                           *string    `json:"InterpretationID,omitempty"`
	// Timestamp of the date and time when the when the Marker was interpreted.                           
	MarkerDate                                                                                 *time.Time `json:"MarkerDate,omitempty"`
	// A unique identifier of the marker in the list of data.Markers[], ideally a UUID. If                
	// unpopulated, the string-converted element index number is used. The first index is "0".            
	// MarkerID is also used to associate MarkerProperties via the key column                             
	// data.MarkerProperties.ColumnValues[0].StringColumn[].                                              
	MarkerID                                                                                   *string    `json:"MarkerID,omitempty"`
	// The name of the Marker interpreter (could be a person or vendor).                                  
	MarkerInterpreter                                                                          *string    `json:"MarkerInterpreter,omitempty"`
	// The depth at which the Marker was noted.                                                           
	MarkerMeasuredDepth                                                                        *float64   `json:"MarkerMeasuredDepth,omitempty"`
	// Name of the Marker                                                                                 
	MarkerName                                                                                 *string    `json:"MarkerName,omitempty"`
	// Any observation number that distinguishes a Marker observation from others with same               
	// Marker name, date.                                                                                 
	MarkerObservationNumber                                                                    *float64   `json:"MarkerObservationNumber,omitempty"`
	// The Marker's TVD converted to a Sub-Sea Vertical depth, i.e., below Mean Sea Level. Note           
	// that TVD values above MSL are negative. This is the same as true vertical depth                    
	// referenced to the vertical CRS “MSL depth”.                                                        
	MarkerSubSeaVerticalDepth                                                                  *float64   `json:"MarkerSubSeaVerticalDepth,omitempty"`
	// Marker Type Reference Type. Possible values - Biostratigraphy, Lithostratigraphy,                  
	// seismic, depth of well, sequence, flow unit                                                        
	MarkerTypeID                                                                               *string    `json:"MarkerTypeID,omitempty"`
	// The geologic reason why a portion of material (typically a rock formation) is missing              
	// from the real world material/rock being measured, compared to what was expected based on           
	// offset wells. Examples: fault, unconformity, fold. This property corresponds to marker             
	// property type reference-data--MarkerPropertyType:MissingReason.                                    
	Missing                                                                                    *string    `json:"Missing,omitempty"`
	// The distance vertically below the Marker position that marks the limit of the high                 
	// confidence range for the Marker pick.                                                              
	NegativeVerticalDelta                                                                      *float64   `json:"NegativeVerticalDelta,omitempty"`
	// The distance vertically above the Marker position that marks the limit of the high                 
	// confidence range for the Marker pick.                                                              
	PositiveVerticalDelta                                                                      *float64   `json:"PositiveVerticalDelta,omitempty"`
	// Dip angle for the Wellbore Marker.                                                                 
	SurfaceDIPAngle                                                                            *float64   `json:"SurfaceDipAngle,omitempty"`
	// Dip azimuth for the Wellbore Marker.                                                               
	SurfaceDIPAzimuth                                                                          *float64   `json:"SurfaceDipAzimuth,omitempty"`
}

// Work Product Component describing an individual instance of a wellbore trajectory data
// object. Also called a directional or deviation survey, wellbore trajectory is data that
// is used to calculate the position and spatial uncertainty of a planned or actual wellbore
// in 2-dimensional and 3-dimensional space.
type WellboreTrajectory struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreTrajectoryData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Generic reference object containing the universal group-type properties of a Work Product
// Component for inclusion in data type specific Work Product Component objects
//
// Generic reference object containing the universal properties of a Work Product Component
// for inclusion in data type specific Work Product Component objects
type WellboreTrajectoryData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                         
	ExistenceKind                                                                               *string                                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                                  
	ResourceCurationStatus                                                                      *string                                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                          
	ResourceHomeRegionID                                                                        *string                                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                                       
	ResourceHostRegionIDs                                                                       []string                                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                                        
	ResourceLifecycleStatus                                                                     *string                                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                          
	ResourceSecurityClassification                                                              *string                                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                                  
	// only, the list of sources is not governed.                                                                                              
	Source                                                                                      *string                                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                                 
	// suitable quality, any further change or versioning of a Certified record should be                                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssuranceID                                                                        *string                                        `json:"TechnicalAssuranceID,omitempty"`
	// An array of Artefacts - each artefact has a Role, Resource tuple. An artefact is distinct                                               
	// from the file, in the sense certain valuable information is generated during loading                                                    
	// process (Artefact generation process). Examples include retrieving location data,                                                       
	// performing an OCR which may result in the generation of artefacts which need to be                                                      
	// preserved distinctly                                                                                                                    
	Artefacts                                                                                   []AbstractGridRepresentationArtefact           `json:"Artefacts,omitempty"`
	// The record id, which identifies this OSDU File or dataset resource.                                                                     
	Datasets                                                                                    []string                                       `json:"Datasets,omitempty"`
	// An array of references to content in Domain Data Management Services represented by this                                                
	// work-product-component. The references are formed as URI following                                                                      
	// https://www.rfc-editor.org/rfc/rfc3986#page-16. This property is exclusively populated by                                               
	// DDMSs. If a work-product-component is represented in more than one DDMS, DDMSs are                                                      
	// obliged to find the specific reference by inspecting the URI's authority values matching                                                
	// the DDMS id.                                                                                                                            
	DDMSDatasets                                                                                []string                                       `json:"DDMSDatasets,omitempty"`
	// A flag that indicates if the work product component is searchable, which means covered in                                               
	// the search index.                                                                                                                       
	IsDiscoverable                                                                              *bool                                          `json:"IsDiscoverable,omitempty"`
	// A flag that indicates if the work product component is undergoing an extended load.  It                                                 
	// reflects the fact that the work product component is in an early stage and may be updated                                               
	// before finalization.                                                                                                                    
	IsExtendedLoad                                                                              *bool                                          `json:"IsExtendedLoad,omitempty"`
	// Alternative names, including historical, by which this work-product-component is/has been                                               
	// known (it should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                           `json:"NameAliases,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                                      
	// quality, any further change or versioning of a Certified record should be carefully                                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                                        
	// Technical Assurance values are not intended to be used for the identification of a single                                               
	// "preferred" or "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractGridRepresentationTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// Array of Authors' names of the work product component.  Could be a person or company                                                    
	// entity.                                                                                                                                 
	AuthorIDs                                                                                   []string                                       `json:"AuthorIDs,omitempty"`
	// Array of business processes/workflows that the work product component has been through                                                  
	// (ex. well planning, exploration).                                                                                                       
	BusinessActivities                                                                          []string                                       `json:"BusinessActivities,omitempty"`
	// Date that a resource (work  product component here) is formed outside of OSDU before                                                    
	// loading (e.g. publication date).                                                                                                        
	CreationDateTime                                                                            *time.Time                                     `json:"CreationDateTime,omitempty"`
	// Description.  Summary of the work product component.  Not the same as Remark which                                                      
	// captures thoughts of creator about the wpc.                                                                                             
	Description                                                                                 *string                                        `json:"Description,omitempty"`
	// List of geographic entities which provide context to the WPC.  This may include multiple                                                
	// types or multiple values of the same type.                                                                                              
	GeoContexts                                                                                 []AbstractGeoContext                           `json:"GeoContexts,omitempty"`
	// Defines relationships with other objects (any kind of Resource) upon which this work                                                    
	// product component depends.  The assertion is directed only from the asserting WPC to                                                    
	// ancestor objects, not children.  It should not be used to refer to files or artefacts                                                   
	// within the WPC -- the association within the WPC is sufficient and Artefacts are actually                                               
	// children of the main WPC file. They should be recorded in the data.Artefacts[] array.                                                   
	LineageAssertions                                                                           []LineageAssertion                             `json:"LineageAssertions,omitempty"`
	// Name                                                                                                                                    
	Name                                                                                        *string                                        `json:"Name,omitempty"`
	// A polygon boundary that reflects the locale of the content of the work product component                                                
	// (location of the subject matter).                                                                                                       
	SpatialArea                                                                                 *AbstractSpatialLocation                       `json:"SpatialArea,omitempty"`
	// A centroid point that reflects the locale of the content of the work product component                                                  
	// (location of the subject matter).                                                                                                       
	SpatialPoint                                                                                *AbstractSpatialLocation                       `json:"SpatialPoint,omitempty"`
	// Name of the person that first submitted the work product component to OSDU.                                                             
	SubmitterName                                                                               *string                                        `json:"SubmitterName,omitempty"`
	// Array of key words to identify the work product, especially to help in search.                                                          
	Tags                                                                                        []string                                       `json:"Tags,omitempty"`
	// The date that the survey data was acquired on the field.                                                                                
	AcquisitionDate                                                                             *time.Time                                     `json:"AcquisitionDate,omitempty"`
	// Remarks related to acquisition context which is not the same as Description which is a                                                  
	// summary of the work-product-component.                                                                                                  
	AcquisitionRemark                                                                           *string                                        `json:"AcquisitionRemark,omitempty"`
	// A flag indicating if the survey is currently active or valid within his lifecycle stage,                                                
	// not necessarily the definitive survey.                                                                                                  
	ActiveIndicator                                                                             *bool                                          `json:"ActiveIndicator,omitempty"`
	// The audit trail of operations applied to the station coordinates from the original state                                                
	// to the current state. The list may contain operations applied prior to ingestion as well                                                
	// as the operations applied to produce the Wgs84Coordinates. The text elements refer to                                                   
	// ESRI style CRS and Transformation names, which may have to be translated to EPSG standard                                               
	// names.                                                                                                                                  
	AppliedOperations                                                                           []string                                       `json:"AppliedOperations,omitempty"`
	// Date/time when the directional Survey QA/QC was performed.                                                                              
	AppliedOperationsDateTime                                                                   *time.Time                                     `json:"AppliedOperationsDateTime,omitempty"`
	// Any comments captured by the Borehole Survey specialist when performing the QA/QC work.                                                 
	AppliedOperationsRemarks                                                                    *string                                        `json:"AppliedOperationsRemarks,omitempty"`
	// Name of Borehole Survey specialist who performed the QA/QC work                                                                         
	AppliedOperationsUser                                                                       *string                                        `json:"AppliedOperationsUser,omitempty"`
	// The array of TrajectoryStationProperty definitions describing the available properties                                                  
	// for this instance of WellboreTrajectory.                                                                                                
	AvailableTrajectoryStationProperties                                                        []AvailableTrajectoryStationPropertyElement    `json:"AvailableTrajectoryStationProperties,omitempty"`
	// The North reference of the trajectory used to define the azimuth angular measurement                                                    
	// values. For example, True North, Grid North, Magnetic North.                                                                            
	AzimuthReferenceType                                                                        *string                                        `json:"AzimuthReferenceType,omitempty"`
	// Measured depth within the wellbore of the LAST surveyed station with recorded data.  If a                                               
	// stored survey has been extrapolated to a deeper depth than the last surveyed station then                                               
	// that is the extrapolated measured depth and not the survey base depth.                                                                  
	BaseDepthMeasuredDepth                                                                      float64                                        `json:"BaseDepthMeasuredDepth"`
	// Calculation Method used to calculate the Wellpath Trajectory from the directional survey                                                
	// data including TVD, X OFFSET, Y OFFSET and DOG LEG SEVERITY. Examples include Minimum                                                   
	// Curvature, Radius of Curvature, Balanced Tangential, etc.                                                                               
	CalculationMethodType                                                                       *string                                        `json:"CalculationMethodType,omitempty"`
	// The relationship to company who engaged the service company (ServiceCompanyID) to perform                                               
	// the surveying.                                                                                                                          
	CompanyID                                                                                   *string                                        `json:"CompanyID,omitempty"`
	// The date and time capturing when the last survey station was measured.                                                                  
	EndDateTime                                                                                 *time.Time                                     `json:"EndDateTime,omitempty"`
	// The measured depth to which the survey segment was extrapolated.                                                                        
	ExtrapolatedMeasuredDepth                                                                   *float64                                       `json:"ExtrapolatedMeasuredDepth,omitempty"`
	// Comment/Annotation made to WellboreTrajectory describing the projected MD Base or                                                       
	// Bottomhole, e.g., listing the Depth Reference Name, Elevation and Bottomhole MD. This can                                               
	// be used for comparison against the survey at a later date.                                                                              
	ExtrapolatedMeasuredDepthRemark                                                             *string                                        `json:"ExtrapolatedMeasuredDepthRemark,omitempty"`
	// Coordinate Reference System defining the Geodetic Datum of the station LATITUDE and                                                     
	// LONGITUDE values. If LATITUDE and LONGITUDE attributes are stored, clearly identifying                                                  
	// their Datum is required.                                                                                                                
	GeographicCRSID                                                                             *string                                        `json:"GeographicCRSID,omitempty"`
	// Geomagnetic Model Name including the applicable year used to calculate Geomagnetic field                                                
	// for a given date, coordinate and measured depth (when calculated down the wellbore).                                                    
	GeoMagneticModelID                                                                          *string                                        `json:"GeoMagneticModelID,omitempty"`
	// Identifier of the Gravity Model in use for the survey.                                                                                  
	GravityModelID                                                                              *string                                        `json:"GravityModelID,omitempty"`
	// True indicates that this trajectory is definitive for this wellbore as provided by the                                                  
	// survey contractor. False or not given indicates otherwise. There can only be one                                                        
	// trajectory per wellbore with definitive=true and it must define the geometry of the whole                                               
	// wellbore (surface to TD). The definitive trajectory may represent a composite of survey                                                 
	// data from one or more other trajectories.                                                                                               
	IsDefinitive                                                                                *bool                                          `json:"IsDefinitive,omitempty"`
	// From the survey contractors perspective providing the survey to the Operator is the                                                     
	// trajectory final (true) or intermediate/preliminary (false)? Does not mean that the                                                     
	// trajectory cannot be worked on further by the Operator.                                                                                 
	IsFinal                                                                                     *bool                                          `json:"IsFinal,omitempty"`
	// Is trajectory a result of a memory dump from a tool?                                                                                    
	IsMemory                                                                                    *bool                                          `json:"IsMemory,omitempty"`
	// Survey tool declination uncertainty.                                                                                                    
	MagneticDeclinationUncertainty                                                              *float64                                       `json:"MagneticDeclinationUncertainty,omitempty"`
	// Calculated magnetic declination used to correct a Magnetic North referenced azimuth to a                                                
	// True North azimuth. Magnetic declination angles are measured positive clockwise from True                                               
	// North to Magnetic North (or negative in the anti-clockwise direction). To convert a                                                     
	// Magnetic azimuth to a True North azimuth, the magnetic declination should be added.                                                     
	// Starting value if stations have individual values.                                                                                      
	MagneticDeclinationUsed                                                                     *float64                                       `json:"MagneticDeclinationUsed,omitempty"`
	// Calculated magnetic dip angle theoretical / reference value.                                                                            
	MagneticDIPAngleReference                                                                   *float64                                       `json:"MagneticDipAngleReference,omitempty"`
	// Survey tool dip angle uncertainty.                                                                                                      
	MagneticDIPAngleUncertainty                                                                 *float64                                       `json:"MagneticDipAngleUncertainty,omitempty"`
	// Date against Geomagnetic field calculated                                                                                               
	MagneticFieldCalculationDate                                                                *time.Time                                     `json:"MagneticFieldCalculationDate,omitempty"`
	// Coordinate Reference System defining the Projection of the station EASTING and NORTHING                                                 
	// values. If  type is "Grid North" and EASTING and NORTHING attributes are stored, clearly                                                
	// identifying their projection is required.                                                                                               
	ProjectedCRSID                                                                              *string                                        `json:"ProjectedCRSID,omitempty"`
	// Name of the Survey Company.                                                                                                             
	ServiceCompanyID                                                                            *string                                        `json:"ServiceCompanyID,omitempty"`
	// The date and time capturing when the first survey station was measured.                                                                 
	StartDateTime                                                                               *time.Time                                     `json:"StartDateTime,omitempty"`
	// The Grid Convergence angle computed at the surface position, which was used for the                                                     
	// WellboreTrajectory True North to Grid North Azimuths corrections. Only populated for                                                    
	// projected CRSs. Recommended sign convention: Gauss-Bomford.                                                                             
	SurfaceGridConvergence                                                                      *float64                                       `json:"SurfaceGridConvergence,omitempty"`
	// The Scale Factor computed for the wellbore's surface position used for calculating                                                      
	// projected Map Coordinates from survey data in WellboreTrajectory.                                                                       
	SurfaceScaleFactor                                                                          *float64                                       `json:"SurfaceScaleFactor,omitempty"`
	// Unique or Distinctive Survey Reference Number, Job Number, File Number, Identifier,                                                     
	// Label, Name, etc. as indicated on a directional survey report, file, etc.  Use this                                                     
	// attribute to allow correlation of the data in this Directional Survey back to the                                                       
	// original source document, file, etc.                                                                                                    
	SurveyReferenceIdentifier                                                                   *string                                        `json:"SurveyReferenceIdentifier,omitempty"`
	// The type of tool or equipment used to acquire this Directional Survey.  For example,                                                    
	// gyroscopic, magnetic, MWD, TOTCO, acid bottle, etc. Follow OWSG reference data and                                                      
	// support the ISCWSA survey tool definitions.                                                                                             
	SurveyToolTypeID                                                                            *string                                        `json:"SurveyToolTypeID,omitempty"`
	// The type of this directional survey.  For example a "Directional Survey" where MD,                                                      
	// Inclination and Azimuth are all measured or a "Position Log" where Inclination and                                                      
	// Azimuth are both null and only MD, TVD and X/Y Offsets are available) - or "Full Survey"                                                
	// where everything is fully filled-up, depth-inclination-azimuth.                                                                         
	SurveyType                                                                                  *string                                        `json:"SurveyType,omitempty"`
	// The version of the wellbore survey deliverable received from the service provider - as                                                  
	// given by this provider                                                                                                                  
	SurveyVersion                                                                               *string                                        `json:"SurveyVersion,omitempty"`
	// Tie-point depth measured along the wellbore from the measurement reference datum to the                                                 
	// survey station - where tie point is the place on the originating survey where the current                                               
	// survey intersect it.                                                                                                                    
	TieMeasuredDepth                                                                            *float64                                       `json:"TieMeasuredDepth,omitempty"`
	// True Vertical Depth of the TieMeasuredDepth                                                                                             
	TieTrueVerticalDepth                                                                        *float64                                       `json:"TieTrueVerticalDepth,omitempty"`
	// Measured depth in the wellbore where the directional survey starts. This should equal the                                               
	// minimum station measured depth for this directional survey, regardless of whether the                                                   
	// surveyed station represents an actual surveyed MD or not.                                                                               
	TopDepthMeasuredDepth                                                                       float64                                        `json:"TopDepthMeasuredDepth"`
	// The calculated average Tortuosity for the WellboreTrajectory.                                                                           
	Tortuosity                                                                                  *float64                                       `json:"Tortuosity,omitempty"`
	// Calculated total gravity field.                                                                                                         
	TotalGravityFieldStrength                                                                   *float64                                       `json:"TotalGravityFieldStrength,omitempty"`
	// Survey tool gravity uncertainty.                                                                                                        
	TotalGravityFieldStrengthUncertainty                                                        *float64                                       `json:"TotalGravityFieldStrengthUncertainty,omitempty"`
	// Calculated geomagnetic field theoretical/reference value.                                                                               
	TotalMagneticFieldStrength                                                                  *float64                                       `json:"TotalMagneticFieldStrength,omitempty"`
	// Survey tool magnetic uncertainty.                                                                                                       
	TotalMagneticFieldStrengthUncertainty                                                       *float64                                       `json:"TotalMagneticFieldStrengthUncertainty,omitempty"`
	// References an entry in the Vertical Measurement array for the Wellbore identified by                                                    
	// WellboreID, which defines the vertical reference datum for all survey station measured                                                  
	// depths.                                                                                                                                 
	VerticalMeasurement                                                                         AbstractFacilityVerticalMeasurement            `json:"VerticalMeasurement"`
	// Azimuth angle used for vertical section projection/computations of the survey stations.                                                 
	VerticalSectionAzimuth                                                                      *float64                                       `json:"VerticalSectionAzimuth,omitempty"`
	// Vertical Section Origin East / -West relative to the Well SHL Projected CRS 0, 0 origin.                                                
	// 0 where Vertical Section Projection originates from the wellhead.                                                                       
	VerticalSectionOriginEW                                                                     *float64                                       `json:"VerticalSectionOriginEW,omitempty"`
	// Vertical Section Origin North / -South relative to the Well SHL Projected CRS 0, 0                                                      
	// origin. 0 where Vertical Section Projection originates from the wellhead.                                                               
	VerticalSectionOriginNS                                                                     *float64                                       `json:"VerticalSectionOriginNS,omitempty"`
	// A unique name, code or number designated to the Wellbore.                                                                               
	WellboreID                                                                                  string                                         `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}                         `json:"ExtensionProperties,omitempty"`
}

// A set of properties describing a trajectory station property which is available for this
// instance of a WellboreTrajectory.
type AvailableTrajectoryStationPropertyElement struct {
	// The name of the curve (e.g. column in a CSV document) as originally found. If absent The        
	// name of the TrajectoryStationPropertyType is intended to be used.                               
	Name                                                                                       *string `json:"Name,omitempty"`
	// Unit of Measure for the station properties of type TrajectoryStationPropertyType.               
	StationPropertyUnitID                                                                      *string `json:"StationPropertyUnitID,omitempty"`
	// The reference to a trajectory station property type - or if interpreted as channels, the        
	// curve or channel name type, identifying e.g. MD, Inclination, Azimuth. This is a                
	// relationship to a reference-data--TrajectoryStationPropertyType record id.                      
	TrajectoryStationPropertyTypeID                                                            *string `json:"TrajectoryStationPropertyTypeID,omitempty"`
}

type PurpleType string

const (
	PurpleAnyCRSLineString      PurpleType = "AnyCrsLineString"
	PurpleAnyCRSMultiLineString PurpleType = "AnyCrsMultiLineString"
	PurpleAnyCRSMultiPoint      PurpleType = "AnyCrsMultiPoint"
	PurpleAnyCRSMultiPolygon    PurpleType = "AnyCrsMultiPolygon"
	PurpleAnyCRSPoint           PurpleType = "AnyCrsPoint"
	PurpleAnyCRSPolygon         PurpleType = "AnyCrsPolygon"
)

type AnyCRSGeoJSONPointType string

const (
	AnyCRSGeometryCollection    AnyCRSGeoJSONPointType = "AnyCrsGeometryCollection"
	FluffyAnyCRSLineString      AnyCRSGeoJSONPointType = "AnyCrsLineString"
	FluffyAnyCRSMultiLineString AnyCRSGeoJSONPointType = "AnyCrsMultiLineString"
	FluffyAnyCRSMultiPoint      AnyCRSGeoJSONPointType = "AnyCrsMultiPoint"
	FluffyAnyCRSMultiPolygon    AnyCRSGeoJSONPointType = "AnyCrsMultiPolygon"
	FluffyAnyCRSPoint           AnyCRSGeoJSONPointType = "AnyCrsPoint"
	FluffyAnyCRSPolygon         AnyCRSGeoJSONPointType = "AnyCrsPolygon"
)

type FluffyType string

const (
	AnyCRSFeature FluffyType = "AnyCrsFeature"
)

type AsIngestedCoordinatesType string

const (
	AnyCRSFeatureCollection AsIngestedCoordinatesType = "AnyCrsFeatureCollection"
)

type TentacledType string

const (
	PurpleLineString      TentacledType = "LineString"
	PurpleMultiLineString TentacledType = "MultiLineString"
	PurpleMultiPoint      TentacledType = "MultiPoint"
	PurpleMultiPolygon    TentacledType = "MultiPolygon"
	PurplePoint           TentacledType = "Point"
	PurplePolygon         TentacledType = "Polygon"
)

type GeoJSONPointType string

const (
	FluffyLineString      GeoJSONPointType = "LineString"
	FluffyMultiLineString GeoJSONPointType = "MultiLineString"
	FluffyMultiPoint      GeoJSONPointType = "MultiPoint"
	FluffyMultiPolygon    GeoJSONPointType = "MultiPolygon"
	FluffyPoint           GeoJSONPointType = "Point"
	FluffyPolygon         GeoJSONPointType = "Polygon"
	GeometryCollection    GeoJSONPointType = "GeometryCollection"
)

type StickyType string

const (
	Feature StickyType = "Feature"
)

type Wgs84CoordinatesType string

const (
	FeatureCollection Wgs84CoordinatesType = "FeatureCollection"
)

type ReferenceKind string

const (
	AzimuthReference ReferenceKind = "AzimuthReference"
	CRS              ReferenceKind = "CRS"
	DateTime         ReferenceKind = "DateTime"
	Unit             ReferenceKind = "Unit"
)

type PackerStingerMeasuredDepth string

const (
	InSLBPlannedCementJob PackerStingerMeasuredDepth = "?? In SLB PlannedCementJob?"
)

type PipePulledRate string

const (
	FtMinNotStdMin PipePulledRate = "ft/min not std/min"
)

// Indicate if a grid has been topologically expanded in a particular dimension (K
// expansion, J expansion, I expansion)
type ExpansionInDirection string

const (
	I ExpansionInDirection = "I"
	J ExpansionInDirection = "J"
	K ExpansionInDirection = "K"
)

// The fixed type 'Downtime Event' for this AbstractDowntimeContext
type ContextType string

const (
	ContextTypeDowntimeEvent ContextType = "Downtime Event"
)

type AnyCRSGeoJSONPointCoordinate struct {
	Double     *float64
	UnionArray []PurpleCoordinate
}

func (x *AnyCRSGeoJSONPointCoordinate) UnmarshalJSON(data []byte) error {
	x.UnionArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.UnionArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *AnyCRSGeoJSONPointCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.UnionArray != nil, x.UnionArray, false, nil, false, nil, false, nil, false)
}

type PurpleCoordinate struct {
	Double     *float64
	UnionArray []FluffyCoordinate
}

func (x *PurpleCoordinate) UnmarshalJSON(data []byte) error {
	x.UnionArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.UnionArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *PurpleCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.UnionArray != nil, x.UnionArray, false, nil, false, nil, false, nil, false)
}

type FluffyCoordinate struct {
	Double      *float64
	DoubleArray []float64
}

func (x *FluffyCoordinate) UnmarshalJSON(data []byte) error {
	x.DoubleArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.DoubleArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *FluffyCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.DoubleArray != nil, x.DoubleArray, false, nil, false, nil, false, nil, false)
}

func unmarshalUnion(data []byte, pi **int64, pf **float64, pb **bool, ps **string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) (bool, error) {
	if pi != nil {
			*pi = nil
	}
	if pf != nil {
			*pf = nil
	}
	if pb != nil {
			*pb = nil
	}
	if ps != nil {
			*ps = nil
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.UseNumber()
	tok, err := dec.Token()
	if err != nil {
			return false, err
	}

	switch v := tok.(type) {
	case json.Number:
			if pi != nil {
					i, err := v.Int64()
					if err == nil {
							*pi = &i
							return false, nil
					}
			}
			if pf != nil {
					f, err := v.Float64()
					if err == nil {
							*pf = &f
							return false, nil
					}
					return false, errors.New("Unparsable number")
			}
			return false, errors.New("Union does not contain number")
	case float64:
			return false, errors.New("Decoder should not return float64")
	case bool:
			if pb != nil {
					*pb = &v
					return false, nil
			}
			return false, errors.New("Union does not contain bool")
	case string:
			if haveEnum {
					return false, json.Unmarshal(data, pe)
			}
			if ps != nil {
					*ps = &v
					return false, nil
			}
			return false, errors.New("Union does not contain string")
	case nil:
			if nullable {
					return false, nil
			}
			return false, errors.New("Union does not contain null")
	case json.Delim:
			if v == '{' {
					if haveObject {
							return true, json.Unmarshal(data, pc)
					}
					if haveMap {
							return false, json.Unmarshal(data, pm)
					}
					return false, errors.New("Union does not contain object")
			}
			if v == '[' {
					if haveArray {
							return false, json.Unmarshal(data, pa)
					}
					return false, errors.New("Union does not contain array")
			}
			return false, errors.New("Cannot handle delimiter")
	}
	return false, errors.New("Cannot unmarshal union")
}

func marshalUnion(pi *int64, pf *float64, pb *bool, ps *string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) ([]byte, error) {
	if pi != nil {
			return json.Marshal(*pi)
	}
	if pf != nil {
			return json.Marshal(*pf)
	}
	if pb != nil {
			return json.Marshal(*pb)
	}
	if ps != nil {
			return json.Marshal(*ps)
	}
	if haveArray {
			return json.Marshal(pa)
	}
	if haveObject {
			return json.Marshal(pc)
	}
	if haveMap {
			return json.Marshal(pm)
	}
	if haveEnum {
			return json.Marshal(pe)
	}
	if nullable {
			return json.Marshal(nil)
	}
	return nil, errors.New("Union must not be null")
}
