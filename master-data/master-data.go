// Code generated from JSON Schema using quicktype. DO NOT EDIT.
// To parse and unparse this JSON data, add this code to your project and do:
//
//    activityPlan, err := UnmarshalActivityPlan(bytes)
//    bytes, err = activityPlan.Marshal()
//
//    activityTemplate, err := UnmarshalActivityTemplate(bytes)
//    bytes, err = activityTemplate.Marshal()
//
//    activityTemplateArc, err := UnmarshalActivityTemplateArc(bytes)
//    bytes, err = activityTemplateArc.Marshal()
//
//    agreement, err := UnmarshalAgreement(bytes)
//    bytes, err = agreement.Marshal()
//
//    bHARun, err := UnmarshalBHARun(bytes)
//    bytes, err = bHARun.Marshal()
//
//    basin, err := UnmarshalBasin(bytes)
//    bytes, err = basin.Marshal()
//
//    blowoutPreventer, err := UnmarshalBlowoutPreventer(bytes)
//    bytes, err = blowoutPreventer.Marshal()
//
//    blowoutPreventerComponent, err := UnmarshalBlowoutPreventerComponent(bytes)
//    bytes, err = blowoutPreventerComponent.Marshal()
//
//    boundaryFeature, err := UnmarshalBoundaryFeature(bytes)
//    bytes, err = boundaryFeature.Marshal()
//
//    businessAssociate, err := UnmarshalBusinessAssociate(bytes)
//    bytes, err = businessAssociate.Marshal()
//
//    businessDecision, err := UnmarshalBusinessDecision(bytes)
//    bytes, err = businessDecision.Marshal()
//
//    casingDesign, err := UnmarshalCasingDesign(bytes)
//    bytes, err = casingDesign.Marshal()
//
//    collaborationProject, err := UnmarshalCollaborationProject(bytes)
//    bytes, err = collaborationProject.Marshal()
//
//    columnBasedTableTemplate, err := UnmarshalColumnBasedTableTemplate(bytes)
//    bytes, err = columnBasedTableTemplate.Marshal()
//
//    connectedSourceDataJob, err := UnmarshalConnectedSourceDataJob(bytes)
//    bytes, err = connectedSourceDataJob.Marshal()
//
//    connectedSourceRegistryEntry, err := UnmarshalConnectedSourceRegistryEntry(bytes)
//    bytes, err = connectedSourceRegistryEntry.Marshal()
//
//    coring, err := UnmarshalCoring(bytes)
//    bytes, err = coring.Marshal()
//
//    evaluationPlan, err := UnmarshalEvaluationPlan(bytes)
//    bytes, err = evaluationPlan.Marshal()
//
//    field, err := UnmarshalField(bytes)
//    bytes, err = field.Marshal()
//
//    fluidsProgram, err := UnmarshalFluidsProgram(bytes)
//    bytes, err = fluidsProgram.Marshal()
//
//    fluidsReport, err := UnmarshalFluidsReport(bytes)
//    bytes, err = fluidsReport.Marshal()
//
//    genericFacility, err := UnmarshalGenericFacility(bytes)
//    bytes, err = genericFacility.Marshal()
//
//    genericSite, err := UnmarshalGenericSite(bytes)
//    bytes, err = genericSite.Marshal()
//
//    geoPoliticalEntity, err := UnmarshalGeoPoliticalEntity(bytes)
//    bytes, err = geoPoliticalEntity.Marshal()
//
//    geometricTargetSet, err := UnmarshalGeometricTargetSet(bytes)
//    bytes, err = geometricTargetSet.Marshal()
//
//    gravityMagneticAcquisitionSurvey, err := UnmarshalGravityMagneticAcquisitionSurvey(bytes)
//    bytes, err = gravityMagneticAcquisitionSurvey.Marshal()
//
//    holeSection, err := UnmarshalHoleSection(bytes)
//    bytes, err = holeSection.Marshal()
//
//    isolatedInterval, err := UnmarshalIsolatedInterval(bytes)
//    bytes, err = isolatedInterval.Marshal()
//
//    modelFeature, err := UnmarshalModelFeature(bytes)
//    bytes, err = modelFeature.Marshal()
//
//    operationsReport, err := UnmarshalOperationsReport(bytes)
//    bytes, err = operationsReport.Marshal()
//
//    organisation, err := UnmarshalOrganisation(bytes)
//    bytes, err = organisation.Marshal()
//
//    perforationInterval, err := UnmarshalPerforationInterval(bytes)
//    bytes, err = perforationInterval.Marshal()
//
//    perforationJob, err := UnmarshalPerforationJob(bytes)
//    bytes, err = perforationJob.Marshal()
//
//    plannedCementJob, err := UnmarshalPlannedCementJob(bytes)
//    bytes, err = plannedCementJob.Marshal()
//
//    play, err := UnmarshalPlay(bytes)
//    bytes, err = play.Marshal()
//
//    prospect, err := UnmarshalProspect(bytes)
//    bytes, err = prospect.Marshal()
//
//    referenceLevel, err := UnmarshalReferenceLevel(bytes)
//    bytes, err = referenceLevel.Marshal()
//
//    reservoir, err := UnmarshalReservoir(bytes)
//    bytes, err = reservoir.Marshal()
//
//    reservoirSegment, err := UnmarshalReservoirSegment(bytes)
//    bytes, err = reservoirSegment.Marshal()
//
//    rig, err := UnmarshalRig(bytes)
//    bytes, err = rig.Marshal()
//
//    rigUtilization, err := UnmarshalRigUtilization(bytes)
//    bytes, err = rigUtilization.Marshal()
//
//    risk, err := UnmarshalRisk(bytes)
//    bytes, err = risk.Marshal()
//
//    rockSample, err := UnmarshalRockSample(bytes)
//    bytes, err = rockSample.Marshal()
//
//    rockVolumeFeature, err := UnmarshalRockVolumeFeature(bytes)
//    bytes, err = rockVolumeFeature.Marshal()
//
//    sample, err := UnmarshalSample(bytes)
//    bytes, err = sample.Marshal()
//
//    sampleAcquisitionJob, err := UnmarshalSampleAcquisitionJob(bytes)
//    bytes, err = sampleAcquisitionJob.Marshal()
//
//    sampleChainOfCustodyEvent, err := UnmarshalSampleChainOfCustodyEvent(bytes)
//    bytes, err = sampleChainOfCustodyEvent.Marshal()
//
//    sampleContainer, err := UnmarshalSampleContainer(bytes)
//    bytes, err = sampleContainer.Marshal()
//
//    seismic2DInterpretationSet, err := UnmarshalSeismic2DInterpretationSet(bytes)
//    bytes, err = seismic2DInterpretationSet.Marshal()
//
//    seismic3DInterpretationSet, err := UnmarshalSeismic3DInterpretationSet(bytes)
//    bytes, err = seismic3DInterpretationSet.Marshal()
//
//    seismicAcquisitionSurvey, err := UnmarshalSeismicAcquisitionSurvey(bytes)
//    bytes, err = seismicAcquisitionSurvey.Marshal()
//
//    seismicProcessingProject, err := UnmarshalSeismicProcessingProject(bytes)
//    bytes, err = seismicProcessingProject.Marshal()
//
//    storageFacility, err := UnmarshalStorageFacility(bytes)
//    bytes, err = storageFacility.Marshal()
//
//    surveyProgram, err := UnmarshalSurveyProgram(bytes)
//    bytes, err = surveyProgram.Marshal()
//
//    tubularAssembly, err := UnmarshalTubularAssembly(bytes)
//    bytes, err = tubularAssembly.Marshal()
//
//    tubularComponent, err := UnmarshalTubularComponent(bytes)
//    bytes, err = tubularComponent.Marshal()
//
//    tubularExternalComponent, err := UnmarshalTubularExternalComponent(bytes)
//    bytes, err = tubularExternalComponent.Marshal()
//
//    tubularUmbilical, err := UnmarshalTubularUmbilical(bytes)
//    bytes, err = tubularUmbilical.Marshal()
//
//    userProfile, err := UnmarshalUserProfile(bytes)
//    bytes, err = userProfile.Marshal()
//
//    well, err := UnmarshalWell(bytes)
//    bytes, err = well.Marshal()
//
//    wellActivity, err := UnmarshalWellActivity(bytes)
//    bytes, err = wellActivity.Marshal()
//
//    wellActivityProgram, err := UnmarshalWellActivityProgram(bytes)
//    bytes, err = wellActivityProgram.Marshal()
//
//    wellBarrierElementTest, err := UnmarshalWellBarrierElementTest(bytes)
//    bytes, err = wellBarrierElementTest.Marshal()
//
//    wellLicense, err := UnmarshalWellLicense(bytes)
//    bytes, err = wellLicense.Marshal()
//
//    wellLogAcquisition, err := UnmarshalWellLogAcquisition(bytes)
//    bytes, err = wellLogAcquisition.Marshal()
//
//    wellPlanningWell, err := UnmarshalWellPlanningWell(bytes)
//    bytes, err = wellPlanningWell.Marshal()
//
//    wellPlanningWellbore, err := UnmarshalWellPlanningWellbore(bytes)
//    bytes, err = wellPlanningWellbore.Marshal()
//
//    wellPressureTestAcquisitionJob, err := UnmarshalWellPressureTestAcquisitionJob(bytes)
//    bytes, err = wellPressureTestAcquisitionJob.Marshal()
//
//    wellSiteStructure, err := UnmarshalWellSiteStructure(bytes)
//    bytes, err = wellSiteStructure.Marshal()
//
//    wellbore, err := UnmarshalWellbore(bytes)
//    bytes, err = wellbore.Marshal()
//
//    wellboreArchitecture, err := UnmarshalWellboreArchitecture(bytes)
//    bytes, err = wellboreArchitecture.Marshal()
//
//    wellboreOpening, err := UnmarshalWellboreOpening(bytes)
//    bytes, err = wellboreOpening.Marshal()

package masterdata

import "bytes"
import "errors"
import "time"

import "encoding/json"

func UnmarshalActivityPlan(data []byte) (ActivityPlan, error) {
	var r ActivityPlan
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ActivityPlan) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalActivityTemplate(data []byte) (ActivityTemplate, error) {
	var r ActivityTemplate
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ActivityTemplate) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalActivityTemplateArc(data []byte) (ActivityTemplateArc, error) {
	var r ActivityTemplateArc
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ActivityTemplateArc) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalAgreement(data []byte) (Agreement, error) {
	var r Agreement
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Agreement) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBHARun(data []byte) (BHARun, error) {
	var r BHARun
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BHARun) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBasin(data []byte) (Basin, error) {
	var r Basin
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Basin) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBlowoutPreventer(data []byte) (BlowoutPreventer, error) {
	var r BlowoutPreventer
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BlowoutPreventer) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBlowoutPreventerComponent(data []byte) (BlowoutPreventerComponent, error) {
	var r BlowoutPreventerComponent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BlowoutPreventerComponent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBoundaryFeature(data []byte) (BoundaryFeature, error) {
	var r BoundaryFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BoundaryFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBusinessAssociate(data []byte) (BusinessAssociate, error) {
	var r BusinessAssociate
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BusinessAssociate) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalBusinessDecision(data []byte) (BusinessDecision, error) {
	var r BusinessDecision
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *BusinessDecision) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalCasingDesign(data []byte) (CasingDesign, error) {
	var r CasingDesign
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *CasingDesign) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalCollaborationProject(data []byte) (CollaborationProject, error) {
	var r CollaborationProject
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *CollaborationProject) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalColumnBasedTableTemplate(data []byte) (ColumnBasedTableTemplate, error) {
	var r ColumnBasedTableTemplate
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ColumnBasedTableTemplate) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalConnectedSourceDataJob(data []byte) (ConnectedSourceDataJob, error) {
	var r ConnectedSourceDataJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ConnectedSourceDataJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalConnectedSourceRegistryEntry(data []byte) (ConnectedSourceRegistryEntry, error) {
	var r ConnectedSourceRegistryEntry
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ConnectedSourceRegistryEntry) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalCoring(data []byte) (Coring, error) {
	var r Coring
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Coring) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalEvaluationPlan(data []byte) (EvaluationPlan, error) {
	var r EvaluationPlan
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *EvaluationPlan) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalField(data []byte) (Field, error) {
	var r Field
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Field) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFluidsProgram(data []byte) (FluidsProgram, error) {
	var r FluidsProgram
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FluidsProgram) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalFluidsReport(data []byte) (FluidsReport, error) {
	var r FluidsReport
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *FluidsReport) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGenericFacility(data []byte) (GenericFacility, error) {
	var r GenericFacility
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GenericFacility) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGenericSite(data []byte) (GenericSite, error) {
	var r GenericSite
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GenericSite) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeoPoliticalEntity(data []byte) (GeoPoliticalEntity, error) {
	var r GeoPoliticalEntity
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeoPoliticalEntity) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGeometricTargetSet(data []byte) (GeometricTargetSet, error) {
	var r GeometricTargetSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GeometricTargetSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalGravityMagneticAcquisitionSurvey(data []byte) (GravityMagneticAcquisitionSurvey, error) {
	var r GravityMagneticAcquisitionSurvey
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *GravityMagneticAcquisitionSurvey) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalHoleSection(data []byte) (HoleSection, error) {
	var r HoleSection
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *HoleSection) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalIsolatedInterval(data []byte) (IsolatedInterval, error) {
	var r IsolatedInterval
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *IsolatedInterval) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalModelFeature(data []byte) (ModelFeature, error) {
	var r ModelFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ModelFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalOperationsReport(data []byte) (OperationsReport, error) {
	var r OperationsReport
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *OperationsReport) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalOrganisation(data []byte) (Organisation, error) {
	var r Organisation
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Organisation) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPerforationInterval(data []byte) (PerforationInterval, error) {
	var r PerforationInterval
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PerforationInterval) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPerforationJob(data []byte) (PerforationJob, error) {
	var r PerforationJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PerforationJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPlannedCementJob(data []byte) (PlannedCementJob, error) {
	var r PlannedCementJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *PlannedCementJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalPlay(data []byte) (Play, error) {
	var r Play
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Play) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalProspect(data []byte) (Prospect, error) {
	var r Prospect
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Prospect) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReferenceLevel(data []byte) (ReferenceLevel, error) {
	var r ReferenceLevel
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ReferenceLevel) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReservoir(data []byte) (Reservoir, error) {
	var r Reservoir
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Reservoir) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalReservoirSegment(data []byte) (ReservoirSegment, error) {
	var r ReservoirSegment
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *ReservoirSegment) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRig(data []byte) (Rig, error) {
	var r Rig
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Rig) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRigUtilization(data []byte) (RigUtilization, error) {
	var r RigUtilization
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RigUtilization) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRisk(data []byte) (Risk, error) {
	var r Risk
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Risk) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockSample(data []byte) (RockSample, error) {
	var r RockSample
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockSample) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalRockVolumeFeature(data []byte) (RockVolumeFeature, error) {
	var r RockVolumeFeature
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *RockVolumeFeature) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSample(data []byte) (Sample, error) {
	var r Sample
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Sample) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSampleAcquisitionJob(data []byte) (SampleAcquisitionJob, error) {
	var r SampleAcquisitionJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SampleAcquisitionJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSampleChainOfCustodyEvent(data []byte) (SampleChainOfCustodyEvent, error) {
	var r SampleChainOfCustodyEvent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SampleChainOfCustodyEvent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSampleContainer(data []byte) (SampleContainer, error) {
	var r SampleContainer
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SampleContainer) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismic2DInterpretationSet(data []byte) (Seismic2DInterpretationSet, error) {
	var r Seismic2DInterpretationSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Seismic2DInterpretationSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismic3DInterpretationSet(data []byte) (Seismic3DInterpretationSet, error) {
	var r Seismic3DInterpretationSet
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Seismic3DInterpretationSet) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicAcquisitionSurvey(data []byte) (SeismicAcquisitionSurvey, error) {
	var r SeismicAcquisitionSurvey
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicAcquisitionSurvey) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSeismicProcessingProject(data []byte) (SeismicProcessingProject, error) {
	var r SeismicProcessingProject
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SeismicProcessingProject) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalStorageFacility(data []byte) (StorageFacility, error) {
	var r StorageFacility
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *StorageFacility) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSurveyProgram(data []byte) (SurveyProgram, error) {
	var r SurveyProgram
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *SurveyProgram) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularAssembly(data []byte) (TubularAssembly, error) {
	var r TubularAssembly
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularAssembly) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularComponent(data []byte) (TubularComponent, error) {
	var r TubularComponent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularComponent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularExternalComponent(data []byte) (TubularExternalComponent, error) {
	var r TubularExternalComponent
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularExternalComponent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalTubularUmbilical(data []byte) (TubularUmbilical, error) {
	var r TubularUmbilical
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *TubularUmbilical) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalUserProfile(data []byte) (UserProfile, error) {
	var r UserProfile
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *UserProfile) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWell(data []byte) (Well, error) {
	var r Well
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Well) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellActivity(data []byte) (WellActivity, error) {
	var r WellActivity
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellActivity) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellActivityProgram(data []byte) (WellActivityProgram, error) {
	var r WellActivityProgram
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellActivityProgram) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellBarrierElementTest(data []byte) (WellBarrierElementTest, error) {
	var r WellBarrierElementTest
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellBarrierElementTest) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellLicense(data []byte) (WellLicense, error) {
	var r WellLicense
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellLicense) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellLogAcquisition(data []byte) (WellLogAcquisition, error) {
	var r WellLogAcquisition
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellLogAcquisition) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellPlanningWell(data []byte) (WellPlanningWell, error) {
	var r WellPlanningWell
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellPlanningWell) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellPlanningWellbore(data []byte) (WellPlanningWellbore, error) {
	var r WellPlanningWellbore
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellPlanningWellbore) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellPressureTestAcquisitionJob(data []byte) (WellPressureTestAcquisitionJob, error) {
	var r WellPressureTestAcquisitionJob
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellPressureTestAcquisitionJob) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellSiteStructure(data []byte) (WellSiteStructure, error) {
	var r WellSiteStructure
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellSiteStructure) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellbore(data []byte) (Wellbore, error) {
	var r Wellbore
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *Wellbore) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellboreArchitecture(data []byte) (WellboreArchitecture, error) {
	var r WellboreArchitecture
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellboreArchitecture) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalWellboreOpening(data []byte) (WellboreOpening, error) {
	var r WellboreOpening
	err := json.Unmarshal(data, &r)
	return r, err
}

func (r *WellboreOpening) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

// Information about a series of well-planning activities.
type ActivityPlan struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ActivityPlanData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// The access control tags associated with this entity.
//
// The access control tags associated with this entity. This structure is included by the
// SystemProperties "acl", which is part of all OSDU records. Not extensible.
//
// ACL applied to WIP resources (resources in this CP's namespace) by default.
//
// ACL applied to project contributors. Controls CPDC and WIP data access.
//
// List of access control lists (ACLs) to be injected into the manifests of external data
// before ingestion
type AccessControlList struct {
	// The list of owners of this data record formatted as an email                                    
	// (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).                               
	Owners                                                                                    []string `json:"owners"`
	// The list of viewers to which this data record is accessible/visible/discoverable                
	// formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).         
	Viewers                                                                                   []string `json:"viewers"`
}

// The links to data, which constitute the inputs, from which this record instance is
// derived.
//
// A list of entity id:version references to record instances recorded in the data platform,
// from which the current record is derived and from which the legal tags must be derived.
// This structure is included by the SystemProperties "ancestry", which is part of all OSDU
// records. Not extensible.
type ParentList struct {
	// An array of none, one or many entity references of 'direct parents' in the data platform,         
	// which mark the current record as a derivative. In contrast to other relationships, the            
	// source record version is required. During record creation or update the                           
	// ancestry.parents[] relationships are used to collect the legal tags from the sources and          
	// aggregate them in the legal.legaltags[] array. As a consequence, should e.g., one or more         
	// of the legal tags of the source data expire, the access to the derivatives is also                
	// terminated. For details, see ComplianceService tutorial, 'Creating derivative Records'.           
	Parents                                                                                     []string `json:"parents,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type ActivityPlanData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// Name of Activity Plan                                                                                                 
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// A reference to the wellbore that is the subject of this activity plan                                                 
	WellboreID                                                                                  *string                      `json:"WellboreID,omitempty"`
	// The activities that compose this plan                                                                                 
	WellPlanningActivities                                                                      []WellPlanningActivity       `json:"WellPlanningActivities"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// References to organisations which supplied services to the Project.
type Contractors struct {
	// Name of the team, unit, crew, party, or other subdivision of the Contractor that provided        
	// services.                                                                                        
	ContractorCrew                                                                              *string `json:"ContractorCrew,omitempty"`
	// Reference to a company that provided services.                                                   
	ContractorOrganisationID                                                                    *string `json:"ContractorOrganisationID,omitempty"`
	// The identifier of a reference value for the role of a contractor providing services, such        
	// as Recording, Line Clearing, Positioning, Data Processing.                                       
	ContractorTypeID                                                                            *string `json:"ContractorTypeID,omitempty"`
}

// The history of expenditure approvals.
type FundsAuthorizations struct {
	// Internal Company control number which identifies the allocation of funds to the Project.           
	AuthorizationID                                                                            *string    `json:"AuthorizationID,omitempty"`
	// Type of currency for the authorized expenditure.                                                   
	CurrencyID                                                                                 *string    `json:"CurrencyID,omitempty"`
	// The date and time when the funds were approved.                                                    
	EffectiveDateTime                                                                          *time.Time `json:"EffectiveDateTime,omitempty"`
	// The level of expenditure approved.                                                                 
	FundsAmount                                                                                *float64   `json:"FundsAmount,omitempty"`
}

// A geographic context to an entity. It can be either a reference to a GeoPoliticalEntity,
// Basin, Field, Play or Prospect.
//
// A single, typed geo-political entity reference, which is 'abstracted' to
// AbstractGeoContext and then aggregated by GeoContexts properties.
//
// City as GeoPoliticalContext.
//
// Unique identifier for the area that is the Country. Note that if you choose, you could
// use only the City relationship and derive the Country and StateProvince (or other
// subdivision). Alternatively, you may choose to populate all three relationships
// explicitly. For example Austria, Canada, United Kingdom, USA, Venezuela.
//
// Unique identifier for the area that is the Country Note that if you choose, you could use
// only the City relationship and derive the Country and StateProvince (or other
// subdivision). Alternatively, you may choose to populate all three relationships
// explicitly. For example states, provinces or other political subdivisions of countries.
//
// A single, typed basin entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed field entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed Play entity reference, which is 'abstracted' to AbstractGeoContext and
// then aggregated by GeoContexts properties.
//
// A single, typed Prospect entity reference, which is 'abstracted' to AbstractGeoContext
// and then aggregated by GeoContexts properties.
type AbstractGeoContext struct {
	// Reference to GeoPoliticalEntity.                                                                 
	GeoPoliticalEntityID                                                                        *string `json:"GeoPoliticalEntityID,omitempty"`
	// The GeoPoliticalEntityType reference of the GeoPoliticalEntity (via GeoPoliticalEntityID)        
	// for application convenience.                                                                     
	//                                                                                                  
	// The BasinType reference of the Basin (via BasinID) for application convenience.                  
	//                                                                                                  
	// The fixed type 'Field' for this AbstractGeoFieldContext.                                         
	//                                                                                                  
	// The PlayType reference of the Play (via PlayID) for application convenience.                     
	//                                                                                                  
	// The ProspectType reference of the Prospect (via ProspectID) for application convenience.         
	GeoTypeID                                                                                   *string `json:"GeoTypeID,omitempty"`
	// Reference to Basin.                                                                              
	BasinID                                                                                     *string `json:"BasinID,omitempty"`
	// Reference to Field.                                                                              
	FieldID                                                                                     *string `json:"FieldID,omitempty"`
	// Reference to the play.                                                                           
	PlayID                                                                                      *string `json:"PlayID,omitempty"`
	// Reference to the prospect.                                                                       
	ProspectID                                                                                  *string `json:"ProspectID,omitempty"`
}

// A list of alternative names for an object.  The preferred name is in a separate, scalar
// property.  It may or may not be repeated in the alias list, though a best practice is to
// include it if the list is present, but to omit the list if there are no other names.
// Note that the abstract entity is an array so the $ref to it is a simple property
// reference.
type AbstractAliasNames struct {
	// Alternative Name value of defined name type for an object.                                       
	AliasName                                                                                *string    `json:"AliasName,omitempty"`
	// A classification of alias names such as by role played or type of source, such as                
	// regulatory name, regulatory code, company code, international standard name, etc.                
	AliasNameTypeID                                                                          *string    `json:"AliasNameTypeID,omitempty"`
	// The StandardsOrganisation (reference-data) or Organisation (master-data) that provided           
	// the name (the source).                                                                           
	DefinitionOrganisationID                                                                 *string    `json:"DefinitionOrganisationID,omitempty"`
	// The date and time when an alias name becomes effective.                                          
	EffectiveDateTime                                                                        *time.Time `json:"EffectiveDateTime,omitempty"`
	// The data and time when an alias name is no longer in effect.                                     
	TerminationDateTime                                                                      *time.Time `json:"TerminationDateTime,omitempty"`
}

// List of key individuals supporting the Project.  This could be Abstracted for re-use, and
// could reference a separate Persons master data object.
type PurplePersonnel struct {
	// Reference to the company which employs Personnel.                                              
	CompanyOrganisationID                                                                     *string `json:"CompanyOrganisationID,omitempty"`
	// Name of an individual supporting the Project.                                                  
	PersonName                                                                                *string `json:"PersonName,omitempty"`
	// The identifier of a reference value for the role of an individual supporting a Project,        
	// such as Project Manager, Party Chief, Client Representative, Senior Observer.                  
	ProjectRoleID                                                                             *string `json:"ProjectRoleID,omitempty"`
}

// General parameters defining the configuration of the Project.  In the case of a seismic
// acquisition project it is like receiver interval, source depth, source type.  In the case
// of a processing project, it is like replacement velocity, reference datum above mean sea
// level.
type ProjectSpecifications struct {
	// The date and time at which a ProjectSpecification becomes effective.                            
	EffectiveDateTime                                                                       *time.Time `json:"EffectiveDateTime,omitempty"`
	// Parameter type of property or characteristic.                                                   
	ParameterTypeID                                                                         *string    `json:"ParameterTypeID,omitempty"`
	// The actual date and time value of the parameter.  ISO format permits specification of           
	// time or date only.                                                                              
	ProjectSpecificationDateTime                                                            *time.Time `json:"ProjectSpecificationDateTime,omitempty"`
	// The actual indicator value of the parameter.                                                    
	ProjectSpecificationIndicator                                                           *bool      `json:"ProjectSpecificationIndicator,omitempty"`
	// The value for the specified parameter type.                                                     
	ProjectSpecificationQuantity                                                            *float64   `json:"ProjectSpecificationQuantity,omitempty"`
	// The actual text value of the parameter.                                                         
	ProjectSpecificationText                                                                *string    `json:"ProjectSpecificationText,omitempty"`
	// The date and time at which a ProjectSpecification is no longer in effect.                       
	TerminationDateTime                                                                     *time.Time `json:"TerminationDateTime,omitempty"`
	// The unit for the quantity parameter if overriding the default for this ParameterType,           
	// like metre (m in SI units system) for quantity Length.                                          
	UnitOfMeasureID                                                                         *string    `json:"UnitOfMeasureID,omitempty"`
}

// The history of life cycle states that the Project has been through..
type ProjectStates struct {
	// The date and time at which the state becomes effective.                
	EffectiveDateTime                                              *time.Time `json:"EffectiveDateTime,omitempty"`
	// The Project life cycle state from planning to completion.              
	ProjectStateTypeID                                             *string    `json:"ProjectStateTypeID,omitempty"`
	// The date and time at which the state is no longer in effect.           
	TerminationDateTime                                            *time.Time `json:"TerminationDateTime,omitempty"`
}

// The spatial location information such as coordinates, CRS information (left empty when
// not appropriate).
//
// A geographic object which can be described by a set of points.
//
// 2D coordinates that defines the start of the section.
//
// The geographic location of the target
//
// Slot Location
//
// The bottom hole location of the wellbore denoted by a specified geographic horizontal
// coordinate reference system (Horizontal CRS), such as WGS84, NAD27, or ED50. If both
// GeographicBottomHoleLocation and ProjectedBottomHoleLocation properties are populated on
// this wellbore, they must identify the same point, just in different CRSs.
//
// The bottom hole location of the wellbore denoted by a projected horizontal coordinate
// reference system (Horizontal CRS), such a UTM zone. 'Projected' in this property does not
// mean 'planned' or 'projected-to-bit'. If both GeographicBottomHoleLocation and
// ProjectedBottomHoleLocation properties are populated on this wellbore, they must identify
// the same point, just in different CRSs.
type AbstractSpatialLocation struct {
	// The audit trail of operations applied to the coordinates from the original state to the                                   
	// current state. The list may contain operations applied prior to ingestion as well as the                                  
	// operations applied to produce the Wgs84Coordinates. The text elements refer to ESRI style                                 
	// CRS and Transformation names, which may have to be translated to EPSG standard names.                                     
	AppliedOperations                                                                           []string                         `json:"AppliedOperations,omitempty"`
	// The original or 'as ingested' coordinates (Point, MultiPoint, LineString,                                                 
	// MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates' was chosen to                                 
	// contrast it to 'OriginalCoordinates', which carries the uncertainty whether any                                           
	// coordinate operations took place before ingestion. In cases where the original CRS is                                     
	// different from the as-ingested CRS, the AppliedOperations can also contain the list of                                    
	// operations applied to the coordinate prior to ingestion. The data structure is similar to                                 
	// GeoJSON FeatureCollection, however in a CRS context explicitly defined within the                                         
	// AbstractAnyCrsFeatureCollection. The coordinate sequence follows GeoJSON standard, i.e.                                   
	// 'eastward/longitude', 'northward/latitude' {, 'upward/height' unless overridden by an                                     
	// explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.                                     
	AsIngestedCoordinates                                                                       *AbstractAnyCRSFeatureCollection `json:"AsIngestedCoordinates,omitempty"`
	// The date of the Quality Check.                                                                                            
	CoordinateQualityCheckDateTime                                                              *time.Time                       `json:"CoordinateQualityCheckDateTime,omitempty"`
	// The user who performed the Quality Check.                                                                                 
	CoordinateQualityCheckPerformedBy                                                           *string                          `json:"CoordinateQualityCheckPerformedBy,omitempty"`
	// Freetext remarks on Quality Check.                                                                                        
	CoordinateQualityCheckRemarks                                                               []string                         `json:"CoordinateQualityCheckRemarks,omitempty"`
	// A qualitative description of the quality of a spatial location, e.g. unverifiable, not                                    
	// verified, basic validation.                                                                                               
	QualitativeSpatialAccuracyTypeID                                                            *string                          `json:"QualitativeSpatialAccuracyTypeID,omitempty"`
	// An approximate quantitative assessment of the quality of a location (accurate to > 500 m                                  
	// (i.e. not very accurate)), to < 1 m, etc.                                                                                 
	QuantitativeAccuracyBandID                                                                  *string                          `json:"QuantitativeAccuracyBandID,omitempty"`
	// Indicates the expected look of the SpatialParameterType, e.g. Point, MultiPoint,                                          
	// LineString, MultiLineString, Polygon, MultiPolygon. The value constrains the type of                                      
	// geometries in the GeoJSON Wgs84Coordinates and AsIngestedCoordinates.                                                     
	SpatialGeometryTypeID                                                                       *string                          `json:"SpatialGeometryTypeID,omitempty"`
	// Date when coordinates were measured or retrieved.                                                                         
	SpatialLocationCoordinatesDate                                                              *time.Time                       `json:"SpatialLocationCoordinatesDate,omitempty"`
	// A type of spatial representation of an object, often general (e.g. an Outline, which                                      
	// could be applied to Field, Reservoir, Facility, etc.) or sometimes specific (e.g. Onshore                                 
	// Outline, State Offshore Outline, Federal Offshore Outline, 3 spatial representations that                                 
	// may be used by Countries).                                                                                                
	SpatialParameterTypeID                                                                      *string                          `json:"SpatialParameterTypeID,omitempty"`
	// The normalized coordinates (Point, MultiPoint, LineString, MultiLineString, Polygon or                                    
	// MultiPolygon) based on WGS 84 (EPSG:4326 for 2-dimensional coordinates, EPSG:4326 +                                       
	// EPSG:5714 (MSL) for 3-dimensional coordinates). This derived coordinate representation is                                 
	// intended for global discoverability only. The schema of this substructure is identical to                                 
	// the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json. The                                      
	// coordinate sequence follows GeoJSON standard, i.e. longitude, latitude {, height}                                         
	Wgs84Coordinates                                                                            *GeoJSONFeatureCollection        `json:"Wgs84Coordinates,omitempty"`
}

// The original or 'as ingested' coordinates (Point, MultiPoint, LineString,
// MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates' was chosen to
// contrast it to 'OriginalCoordinates', which carries the uncertainty whether any
// coordinate operations took place before ingestion. In cases where the original CRS is
// different from the as-ingested CRS, the AppliedOperations can also contain the list of
// operations applied to the coordinate prior to ingestion. The data structure is similar to
// GeoJSON FeatureCollection, however in a CRS context explicitly defined within the
// AbstractAnyCrsFeatureCollection. The coordinate sequence follows GeoJSON standard, i.e.
// 'eastward/longitude', 'northward/latitude' {, 'upward/height' unless overridden by an
// explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
//
// A schema like GeoJSON FeatureCollection with a non-WGS 84 CRS context; based on
// https://geojson.org/schema/FeatureCollection.json. Attention: the coordinate order is
// fixed: Longitude/Easting/Westing/X first, followed by Latitude/Northing/Southing/Y,
// optionally height as third coordinate.
type AbstractAnyCRSFeatureCollection struct {
	Bbox                                                                                        []float64                 `json:"bbox,omitempty"`
	// The CRS reference into the CoordinateReferenceSystem catalog.                                                      
	CoordinateReferenceSystemID                                                                 *string                   `json:"CoordinateReferenceSystemID,omitempty"`
	Features                                                                                    []AnyCRSGeoJSONFeature    `json:"features"`
	// The CRS reference as persistableReference string. If populated, the                                                
	// CoordinateReferenceSystemID takes precedence.                                                                      
	PersistableReferenceCRS                                                                     string                    `json:"persistableReferenceCrs"`
	// The unit of measure for the Z-axis (only for 3-dimensional coordinates, where the CRS                              
	// does not describe the vertical unit). Note that the direction is upwards positive, i.e. Z                          
	// means height.                                                                                                      
	PersistableReferenceUnitZ                                                                   *string                   `json:"persistableReferenceUnitZ,omitempty"`
	// The VerticalCRS reference as persistableReference string. If populated, the                                        
	// VerticalCoordinateReferenceSystemID takes precedence. The property is null or empty for                            
	// 2D geometries. For 3D geometries and absent or null persistableReferenceVerticalCrs the                            
	// vertical CRS is either provided via persistableReferenceCrs's CompoundCRS or it is                                 
	// implicitly defined as EPSG:5714 MSL height.                                                                        
	PersistableReferenceVerticalCRS                                                             *string                   `json:"persistableReferenceVerticalCrs,omitempty"`
	Type                                                                                        AsIngestedCoordinatesType `json:"type"`
	// The explicit VerticalCRS reference into the CoordinateReferenceSystem catalog. This                                
	// property stays empty for 2D geometries. Absent or empty values for 3D geometries mean the                          
	// context may be provided by a CompoundCRS in 'CoordinateReferenceSystemID' or implicitly                            
	// EPSG:5714 MSL height                                                                                               
	VerticalCoordinateReferenceSystemID                                                         *string                   `json:"VerticalCoordinateReferenceSystemID,omitempty"`
	// The explicit vertical unit ID, referring to a reference-data--UnitOfMeasure record; this                           
	// is only required for features containing 3-dimensional coordinates and undefined vertical                          
	// CoordinateReferenceSystems; if a VerticalCoordinateReferenceSystemID is populated, the                             
	// VerticalUnitID is given by the VerticalCoordinateReferenceSystemID's                                               
	// data.CoordinateSystem.VerticalAxisUnitID. The VerticalUnitID definition overrides any                              
	// self-contained definition in persistableReferenceUnitZ.                                                            
	VerticalUnitID                                                                              *string                   `json:"VerticalUnitID,omitempty"`
}

type AnyCRSGeoJSONFeature struct {
	Bbox       []float64              `json:"bbox,omitempty"`
	Geometry   *AnyCRSGeoJSON         `json:"geometry"`
	Properties map[string]interface{} `json:"properties"`
	Type       FluffyType             `json:"type"`
}

type AnyCRSGeoJSON struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates,omitempty"`
	Type        AnyCRSGeoJSONPointType         `json:"type"`
	Geometries  []GeometryElement              `json:"geometries,omitempty"`
}

type GeometryElement struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates"`
	Type        PurpleType                     `json:"type"`
}

// The normalized coordinates (Point, MultiPoint, LineString, MultiLineString, Polygon or
// MultiPolygon) based on WGS 84 (EPSG:4326 for 2-dimensional coordinates, EPSG:4326 +
// EPSG:5714 (MSL) for 3-dimensional coordinates). This derived coordinate representation is
// intended for global discoverability only. The schema of this substructure is identical to
// the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json. The
// coordinate sequence follows GeoJSON standard, i.e. longitude, latitude {, height}
//
// GeoJSON feature collection as originally published in
// https://geojson.org/schema/FeatureCollection.json. Attention: the coordinate order is
// fixed: Longitude first, followed by Latitude, optionally height above MSL (EPSG:5714) as
// third coordinate.
type GeoJSONFeatureCollection struct {
	Bbox     []float64            `json:"bbox,omitempty"`
	Features []GeoJSONFeature     `json:"features"`
	Type     Wgs84CoordinatesType `json:"type"`
}

type GeoJSONFeature struct {
	Bbox       []float64              `json:"bbox,omitempty"`
	Geometry   *GeoJSON               `json:"geometry"`
	Properties map[string]interface{} `json:"properties"`
	Type       StickyType             `json:"type"`
}

type GeoJSON struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates,omitempty"`
	Type        GeoJSONPointType               `json:"type"`
	Geometries  []GeometryClass                `json:"geometries,omitempty"`
}

type GeometryClass struct {
	Bbox        []float64                      `json:"bbox,omitempty"`
	Coordinates []AnyCRSGeoJSONPointCoordinate `json:"coordinates"`
	Type        TentacledType                  `json:"type"`
}

// Describes a record's overall suitability for general business consumption based on level
// of trust.
type AbstractTechnicalAssurance struct {
	// List of workflows and/or personas that the technical assurance value is valid for (e.g.,                     
	// This data is trusted for Seismic Processing)                                                                 
	AcceptableUsage                                                                             []AcceptableUsage   `json:"AcceptableUsage,omitempty"`
	// Any additional context to support the determination of technical assurance                                   
	Comment                                                                                     *string             `json:"Comment,omitempty"`
	// Date when the technical assurance determination for this record has taken place                              
	EffectiveDate                                                                               *string             `json:"EffectiveDate,omitempty"`
	// The individuals, or roles, that reviewed and determined the technical assurance value                        
	Reviewers                                                                                   []AbstractContact   `json:"Reviewers,omitempty"`
	// Describes a record's overall suitability for general business consumption based on data                      
	// quality. Clarifications: Since Certified is the highest classification of suitable                           
	// quality, any further change or versioning of a Certified record should be carefully                          
	// considered and justified. If a Technical Assurance value is not populated then one can                       
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                             
	// Technical Assurance values are not intended to be used for the identification of a single                    
	// "preferred" or "definitive" record by comparison with other records.                                         
	TechnicalAssuranceTypeID                                                                    string              `json:"TechnicalAssuranceTypeID"`
	// List of workflows and/or personas that the technical assurance value is not valid for                        
	// (e.g., This data is not trusted for seismic interpretation)                                                  
	UnacceptableUsage                                                                           []UnacceptableUsage `json:"UnacceptableUsage,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is valid for
// (e.g., This data has a technical assurance property of "trusted" and it is suitable for
// Seismic Interpretation).
type AcceptableUsage struct {
	// The relationship to a work-product-component--DataQuality assessment record, which was           
	// used as the basis for this decision.                                                             
	DataQualityID                                                                               *string `json:"DataQualityID,omitempty"`
	// The DataQualityRuleSet, which had to pass successfully to achieve this level of technical        
	// assurance.                                                                                       
	DataQualityRuleSetID                                                                        *string `json:"DataQualityRuleSetID,omitempty"`
	// DEPRECATED: superseded by DataQualityRuleSetID referring to DataQualityRuleSet. The              
	// QualityDataRuleSet, which had to pass successfully to achieve this level of technical            
	// assurance.                                                                                       
	QualityDataRuleSetID                                                                        *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is acceptable for workflow usage.                         
	ValueChainStatusTypeID                                                                      *string `json:"ValueChainStatusTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowPersonaTypeID. Name of the role or personas that the           
	// record is technical assurance value is valid for.                                                
	WorkflowPersona                                                                             *string `json:"WorkflowPersona,omitempty"`
	// Name of the role or personas that the record's technical assurance value is valid for.           
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowUsageTypeID. Name of the business activities,                  
	// processes, and/or workflows that the record is technical assurance value is valid for.           
	WorkflowUsage                                                                               *string `json:"WorkflowUsage,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record's technical         
	// assurance value is valid for.                                                                    
	WorkflowUsageTypeID                                                                         *string `json:"WorkflowUsageTypeID,omitempty"`
}

// An object with properties that describe a specific person or other point-of-contact (like
// an email distribution list) that is relevant in this context (like a given data set or
// business project). The contact specified may be either internal or external to the
// organisation (something denoted via the Organisation object that is referenced). Note
// that some properties contain personally identifiable information, so it might not be
// appropriate to populate all properties in all scenarios.
//
// Unique identifier for a business associate, such as a person, company, regulatory agency,
// government or consortium.
type AbstractContact struct {
	// Additional information about the contact                                                         
	Comment                                                                                     *string `json:"Comment,omitempty"`
	// The data governance role assigned to this contact if and only if the context has a data          
	// governance role (in context of TechnicalAssurance). The value is kept absent in all other        
	// cases.                                                                                           
	DataGovernanceRoleTypeID                                                                    *string `json:"DataGovernanceRoleTypeID,omitempty"`
	// Contact email address. Property may be left empty where it is inappropriate to provide           
	// personally identifiable information.                                                             
	EmailAddress                                                                                *string `json:"EmailAddress,omitempty"`
	// Name of the individual contact. Property may be left empty where it is inappropriate to          
	// provide personally identifiable information.                                                     
	Name                                                                                        *string `json:"Name,omitempty"`
	// Reference to the company the contact is associated with.                                         
	OrganisationID                                                                              *string `json:"OrganisationID,omitempty"`
	// Contact phone number. Property may be left empty where it is inappropriate to provide            
	// personally identifiable information.                                                             
	PhoneNumber                                                                                 *string `json:"PhoneNumber,omitempty"`
	// The identifier of a reference value for the role of the contact within the associated            
	// organisation, such as Account owner, Sales Representative, Technical Support, Project            
	// Manager, Party Chief, Client Representative, Senior Observer.                                    
	RoleTypeID                                                                                  *string `json:"RoleTypeID,omitempty"`
	// The persona in context of workflows associated with this contact, as used in                     
	// TechnicalAssurance.                                                                              
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
}

// Describes the workflows and/or personas that the technical assurance value is not valid
// for (e.g., This data has a technical assurance property of "trusted", but it is not
// suitable for Seismic Interpretation).
type UnacceptableUsage struct {
	// The relationship to a work-product-component--DataQuality assessment record, which was            
	// used as the basis for this decision.                                                              
	DataQualityID                                                                                *string `json:"DataQualityID,omitempty"`
	// The DataQualityRuleSet, which did not pass successfully to achieve this level of                  
	// technical assurance.                                                                              
	DataQualityRuleSetID                                                                         *string `json:"DataQualityRuleSetID,omitempty"`
	// DEPRECATED: superseded by DataQualityRuleSetID referring to DataQualityRuleSet. The               
	// QualityDataRuleSet, which did not pass successfully to achieve this level of technical            
	// assurance.                                                                                        
	QualityDataRuleSetID                                                                         *string `json:"QualityDataRuleSetID,omitempty"`
	// The stage of business where the record is not acceptable for workflow usage.                      
	ValueChainStatusTypeID                                                                       *string `json:"ValueChainStatusTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowPersonaTypeID. Name of the role or personas that the            
	// record is technical assurance value is not valid for.                                             
	WorkflowPersona                                                                              *string `json:"WorkflowPersona,omitempty"`
	// Name of the role or personas that the record is technical assurance value is not valid            
	// for.                                                                                              
	WorkflowPersonaTypeID                                                                        *string `json:"WorkflowPersonaTypeID,omitempty"`
	// DEPRECATED: superseded by WorkflowUsageTypeID. Name of the business activities,                   
	// processes, and/or workflows that the record is technical assurance value is not valid for.        
	WorkflowUsage                                                                                *string `json:"WorkflowUsage,omitempty"`
	// Name of the business activities, processes, and/or workflows that the record's technical          
	// assurance value is not valid for.                                                                 
	WorkflowUsageTypeID                                                                          *string `json:"WorkflowUsageTypeID,omitempty"`
}

// Information regarding an individual activity that is part of the ActivityPlan
type WellPlanningActivity struct {
	// the catalog version of this activity                                                                                       
	ActivityCodeCatalogVersion                                                                *string                             `json:"ActivityCodeCatalogVersion,omitempty"`
	// The activity code of the activity                                                                                          
	ActivityCodeID                                                                            *string                             `json:"ActivityCodeID,omitempty"`
	// Identifier of the activity                                                                                                 
	ActivityID                                                                                string                              `json:"ActivityID"`
	// The activity level of this activity. Levels go from L1 to L6                                                               
	ActivityLevel                                                                             *string                             `json:"ActivityLevel,omitempty"`
	// Free form comments associated with this activity                                                                           
	Comment                                                                                   *string                             `json:"Comment,omitempty"`
	// The depth range over which the the activity takes place                                                                    
	DepthRange                                                                                *DepthRange                         `json:"DepthRange,omitempty"`
	// Estimated duration for the planned activity.                                                                               
	EstimatedDuration                                                                         *float64                            `json:"EstimatedDuration,omitempty"`
	// Flag used to indicates this particular activity is optional in the plan.                                                   
	IsOptional                                                                                *bool                               `json:"IsOptional,omitempty"`
	// A name given to this activity                                                                                              
	Name                                                                                      *string                             `json:"Name,omitempty"`
	// The expected duration of the non productive time of the activity                                                           
	NonProductiveTimeDuration                                                                 *float64                            `json:"NonProductiveTimeDuration,omitempty"`
	// Statistics that define the non productive time of this activity                                                            
	NonProductiveTimeStatistics                                                               []NonProductiveTimeStatisticElement `json:"NonProductiveTimeStatistics,omitempty"`
	// Reference to objects that is defined within the context of a wellbore. The WITSML 1.4.1                                    
	// standard has only one object reference, but a risk may related with multiple objects.                                      
	ObjectReferenceIDs                                                                        []string                            `json:"ObjectReferenceIDs,omitempty"`
	// The parent activity to this activity                                                                                       
	ParentID                                                                                  *string                             `json:"ParentID,omitempty"`
	// DEPRECATED: Overall duration as planned for the activity                                                                   
	PlannedDuration                                                                           *time.Time                          `json:"PlannedDuration,omitempty"`
	// Date/Time the activity is planned to end                                                                                   
	PlannedEndTime                                                                            *time.Time                          `json:"PlannedEndTime,omitempty"`
	// Date/Time the activity is planned to start                                                                                 
	PlannedStartTime                                                                          *time.Time                          `json:"PlannedStartTime,omitempty"`
	// The preceding activity in the plan                                                                                         
	PredecessorsID                                                                            *string                             `json:"PredecessorsID,omitempty"`
	// The expected productive time of the activity - if "clean time probability" distribution                                    
	// is populated then this should be the expected value of the distribution                                                    
	ProductiveTimeDuration                                                                    *float64                            `json:"ProductiveTimeDuration,omitempty"`
	// Statistics that define the expected productivity time of this activity                                                     
	ProductiveTimeStatistics                                                                  []ProductiveTimeStatisticElement    `json:"ProductiveTimeStatistics,omitempty"`
	// Statistics that define the rate of penetration of this activity                                                            
	RateOfPenetrationStatistics                                                               []ROPStatistics                     `json:"RateOfPenetrationStatistics,omitempty"`
	// A reference to the object that holds the information about the risks that apply to the                                     
	// activity                                                                                                                   
	RiskIDs                                                                                   []string                            `json:"RiskIDs,omitempty"`
}

// The depth range over which the the activity takes place
type DepthRange struct {
	// The end depth of the activity. Depth relative to Planned wellbore ZDP. Navigate via               
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in               
	// data.VerticalMeasurement.                                                                         
	ActivityDepthEnd                                                                            *float64 `json:"ActivityDepthEnd,omitempty"`
	// The start depth of the activity. Depth relative to Planned wellbore ZDP. Navigate via             
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in               
	// data.VerticalMeasurement.                                                                         
	ActivityDepthStart                                                                          *float64 `json:"ActivityDepthStart,omitempty"`
	// The depth of the hole at the end of the activity. Depth relative to Planned wellbore ZDP.         
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth               
	// reference in data.VerticalMeasurement.                                                            
	HoleDepthEnd                                                                                *float64 `json:"HoleDepthEnd,omitempty"`
	// The depth of the hole at the start of the activity. Depth relative to Planned wellbore            
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth          
	// reference in data.VerticalMeasurement.                                                            
	HoleDepthStart                                                                              *float64 `json:"HoleDepthStart,omitempty"`
}

// Structure that describes a individual statistic record of the operations from an activity.
type NonProductiveTimeStatisticElement struct {
	// Identifier of the probability type the value is describing        
	ProbabilityTypeID                                            string  `json:"ProbabilityTypeID"`
	// Record of the statistic estimation                                
	StatisticRecord                                              float64 `json:"StatisticRecord"`
}

// Structure that describes a individual statistic record of the operations from an activity.
type ProductiveTimeStatisticElement struct {
	// Identifier of the probability type the value is describing        
	ProbabilityTypeID                                            string  `json:"ProbabilityTypeID"`
	// Record of the statistic estimation                                
	StatisticRecord                                              float64 `json:"StatisticRecord"`
}

// Individual Statistics that define the rate of penetration of an activity
type ROPStatistics struct {
	// Identifier of the probability type the value is describing        
	ProbabilityTypeID                                            string  `json:"ProbabilityTypeID"`
	// Record of the statistic estimation                                
	StatisticRecord                                              float64 `json:"StatisticRecord"`
}

// The entity's legal tags and compliance status. The actual contents associated with the
// legal tags is managed by the Compliance Service.
//
// Legal meta data like legal tags, relevant other countries, legal status. This structure
// is included by the SystemProperties "legal", which is part of all OSDU records. Not
// extensible.
//
// List of legal tags to be injected into the manifests of external data before ingestion
type LegalMetaData struct {
	// The list of legal tags, which resolve to legal properties (like country of origin, export         
	// classification code, etc.) and rules with the help of the Compliance Service.                     
	Legaltags                                                                                   []string `json:"legaltags"`
	// The list of other relevant data countries as an array of two-letter country codes, see            
	// https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.                                                 
	OtherRelevantDataCountries                                                                  []string `json:"otherRelevantDataCountries"`
	// The legal status. Set by the system after evaluation against the compliance rules                 
	// associated with the "legaltags" using the Compliance Service.                                     
	Status                                                                                      *string  `json:"status,omitempty"`
}

// A meta data item, which allows the association of named properties or property values to
// a Unit/Measurement/CRS/Azimuth/Time context.
type FrameOfReferenceMetaDataItem struct {
	// The kind of reference, 'Unit' for FrameOfReferenceUOM.                                                 
	//                                                                                                        
	// The kind of reference, constant 'CRS' for FrameOfReferenceCRS.                                         
	//                                                                                                        
	// The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.                              
	//                                                                                                        
	// The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.              
	Kind                                                                                        ReferenceKind `json:"kind"`
	// The unit symbol or name of the unit.                                                                   
	//                                                                                                        
	// The name of the CRS.                                                                                   
	//                                                                                                        
	// The name of the DateTime format and reference.                                                         
	//                                                                                                        
	// The name of the CRS or the symbol/name of the unit.                                                    
	Name                                                                                        *string       `json:"name,omitempty"`
	// The self-contained, persistable reference string uniquely identifying the Unit.                        
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying the CRS.                         
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying DateTime                         
	// reference.                                                                                             
	//                                                                                                        
	// The self-contained, persistable reference string uniquely identifying AzimuthReference.                
	PersistableReference                                                                        string        `json:"persistableReference"`
	// The list of property names, to which this meta data item provides Unit context to. A full              
	// path like "StructureA.PropertyB" is required to define a unique context; "data" is                     
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides CRS context to. A full               
	// path like "StructureA.PropertyB" is required to define a unique context; "data" is                     
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides DateTime context to. A               
	// full path like "StructureA.PropertyB" is required to define a unique context; "data" is                
	// omitted since frame-of reference normalization only applies to the data block.                         
	//                                                                                                        
	// The list of property names, to which this meta data item provides AzimuthReference                     
	// context to. A full path like "StructureA.PropertyB" is required to define a unique                     
	// context; "data" is omitted since frame-of reference normalization only applies to the                  
	// data block.                                                                                            
	PropertyNames                                                                               []string      `json:"propertyNames,omitempty"`
	// SRN to unit of measure reference.                                                                      
	UnitOfMeasureID                                                                             *string       `json:"unitOfMeasureID,omitempty"`
	// SRN to CRS reference.                                                                                  
	CoordinateReferenceSystemID                                                                 *string       `json:"coordinateReferenceSystemID,omitempty"`
}

// Description of one type of activity, e.g., a work-step in a workflow.
type ActivityTemplate struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ActivityTemplateData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type ActivityTemplateData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// A detailed textual description of this activity template or workflow.                                                 
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// The descriptive name of this activity template or work-step in a workflow.                                            
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// The parameters that participate in this type of activity.                                                             
	Parameters                                                                                  []ParameterTemplate          `json:"Parameters"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Description of one parameter that participates in one type of activity. [Without
// inheritance, combined specializations.]
type ParameterTemplate struct {
	// If no allowed kind is given, then all kind of data types are allowed.                                          
	AllowedParameterKind                                                                        *string               `json:"AllowedParameterKind,omitempty"`
	// Textual description of additional constraint associated with the parameter. (note that it                      
	// will be better to have a formal description of the constraint)                                                 
	Constraint                                                                                  *string               `json:"Constraint,omitempty"`
	// When parameter is limited to data object of given types, describe the allowed types. Used                      
	// only when ParameterType is dataObject.  String is an OSDU kind of work product component.                      
	DataObjectContentType                                                                       []string              `json:"DataObjectContentType,omitempty"`
	// Activity Parameter value to use if one not supplied.                                                           
	DefaultValue                                                                                *DefaultValueElement  `json:"DefaultValue,omitempty"`
	// Indicates if the parameter is an input of the activity. If the parameter is a data object                      
	// and is also an output of the activity, it is strongly advised to use two parameters : one                      
	// for input and one for output. The reason is to be able to give two different versions                          
	// strings for the input and output data object which has got obviously the same UUID.                            
	IsInput                                                                                     bool                  `json:"IsInput"`
	// Indicates if the parameter is an output of the activity. If the parameter is a data                            
	// object and is also an input of the activity, it is strongly advised to use two parameters                      
	// : one for input and one for output. The reason is to be able to give two different                             
	// versions strings for the input and output data object which has got obviously the same                         
	// UUID.                                                                                                          
	IsOutput                                                                                    bool                  `json:"IsOutput"`
	// Allows to indicate that, in the same activity, this parameter template must be associated                      
	// to another parameter template identified by its title. The associated parameter value                          
	// constrains this parameter.                                                                                     
	KeyConstraints                                                                              []string              `json:"KeyConstraints,omitempty"`
	// Maximum number of parameters of this type allowed in the activity. If the maximum number                       
	// of parameters is infinite, use -1 value.                                                                       
	MaxOccurs                                                                                   int64                 `json:"MaxOccurs"`
	// Minimum number of parameter of this type required by the activity. If the minimum number                       
	// of parameters is infinite, use -1 value.                                                                       
	MinOccurs                                                                                   int64                 `json:"MinOccurs"`
	// The property type ID and Name, which determines eventually the UnitQuantity of the                             
	// parameter value. Used to provide a more scoped context than UnitQuantityID. If                                 
	// PropertyType is provided, UnitQuantityID is expected to be omitted.                                            
	PropertyType                                                                                *AbstractPropertyType `json:"PropertyType,omitempty"`
	// Name of the parameter in the activity. Key to identify parameter.                                              
	Title                                                                                       string                `json:"Title"`
	// The expected UnitQuantity for the parameter value. A more precise context can be                               
	// provided by PropertyType. If UnitQuantityID is provided, PropertyType is expected to be                        
	// omitted.                                                                                                       
	UnitQuantityID                                                                              *string               `json:"UnitQuantityID,omitempty"`
}

// Activity Parameter value to use if one not supplied.
//
// General parameter value used in one instance of activity.
// [Without inheritance, combined specializations.]
type DefaultValueElement struct {
	// The boolean parameter value, if ParameterKindID refers to the Boolean type.                                
	BooleanParameter                                                                            *bool             `json:"BooleanParameter,omitempty"`
	// Parameter referencing to a top level object.                                                               
	DataObjectParameter                                                                         *string           `json:"DataObjectParameter,omitempty"`
	// Parameter containing a double value.                                                                       
	DataQuantityParameter                                                                       *float64          `json:"DataQuantityParameter,omitempty"`
	// Identifies unit of measure for floating point value.                                                       
	DataQuantityParameterUOMID                                                                  *string           `json:"DataQuantityParameterUOMID,omitempty"`
	// When parameter is an array, used to indicate the index in the array.                                       
	Index                                                                                       *int64            `json:"Index,omitempty"`
	// Parameter containing an integer value.                                                                     
	IntegerQuantityParameter                                                                    *int64            `json:"IntegerQuantityParameter,omitempty"`
	// A nested array describing keys used to identify a parameter value. When multiple values                    
	// are provided for a given parameter, the key provides a way to identify the parameter                       
	// through its association with an object, a time index or a parameter array member via                       
	// ParameterKey value.                                                                                        
	Keys                                                                                        []DefaultValueKey `json:"Keys,omitempty"`
	// [Added to cover lack of inheritance]                                                                       
	ParameterKindID                                                                             string            `json:"ParameterKindID"`
	// Reference data describing how the parameter was used by the activity, such as input,                       
	// output, control, constraint, agent, predecessor activity, successor activity.                              
	ParameterRoleID                                                                             *string           `json:"ParameterRoleID,omitempty"`
	// Textual description about how this parameter was selected.                                                 
	Selection                                                                                   *string           `json:"Selection,omitempty"`
	// Parameter containing a string value.                                                                       
	StringParameter                                                                             *string           `json:"StringParameter,omitempty"`
	// Parameter containing a time index value.  It is assumed that all TimeIndexParameters                       
	// within an Activity have the same date-time format, which is then described by the                          
	// FrameOfReference mechanism.                                                                                
	TimeIndexParameter                                                                          *time.Time        `json:"TimeIndexParameter,omitempty"`
	// Name of the parameter, used to identify it in the activity. It must have an equivalent in                  
	// the ActivityTemplate parameters.                                                                           
	Title                                                                                       string            `json:"Title"`
}

// Abstract class describing a key used to identify a parameter value. When multiple values
// are provided for a given parameter, provides a way to identify the parameter through its
// association with an object, a time index, an integer...
// [Without inheritance, combined specializations.] Note: floating point numbers are not
// supported as key values; the numbers have to be formatted as strings for robust equality
// operations, which are necessary for keys.
type DefaultValueKey struct {
	// Integer value from "ParameterKey" parameter, associated with this parameter. Example:          
	// {"ParameterKey": "index", "StringParameterKey: 2}.                                             
	IntegerParameterKey                                                                       *int64  `json:"IntegerParameterKey,omitempty"`
	// Relationship to an object ID, which acts as the parameter.                                     
	ObjectParameterKey                                                                        *string `json:"ObjectParameterKey,omitempty"`
	// The key name, which establishes an association between parameters.                             
	ParameterKey                                                                              *string `json:"ParameterKey,omitempty"`
	// String value from "ParameterKey" parameter, associated with this parameter. Can be used        
	// to associate with parameter values of type string or data quantity. In the later case,         
	// the string representation of the quantity value will be used. Example: {"ParameterKey":        
	// "facies", "StringParameterKey: "shale"}, {"ParameterKey":"depth",                              
	// "StringParameterKey":"1545.43m"}.                                                              
	StringParameterKey                                                                        *string `json:"StringParameterKey,omitempty"`
	// The time index acting as parameter key value.                                                  
	TimeIndexParameterKey                                                                     *string `json:"TimeIndexParameterKey,omitempty"`
}

// The property type ID and Name, which determines eventually the UnitQuantity of the
// parameter value. Used to provide a more scoped context than UnitQuantityID. If
// PropertyType is provided, UnitQuantityID is expected to be omitted.
//
// A nested object holding the relationship to a PropertyType by id (uuid) and a derived,
// human-readable name.
//
// It holds the PropertyType associated with this reference property type, further defining
// the semantics of the value. It contains a relationship to PropertyType record and its
// (de-normalized) name. String or number values can represent e.g. A date or a time by
// referring to the respective PropertyType record id.
type AbstractPropertyType struct {
	// The name of the PropertyType, de-normalized, derived from the record referenced in               
	// PropertyTypeID.                                                                                  
	Name                                                                                        *string `json:"Name,omitempty"`
	// The relationship to the PropertyType reference data item, typically containing an                
	// Energistics PWLS 3 uuid. For better traceability and usability the property name is to be        
	// populated in the Name property.                                                                  
	PropertyTypeID                                                                              *string `json:"PropertyTypeID,omitempty"`
}

// An 'arc' establishing a link between ActivityTemplate output and input parameters.
type ActivityTemplateArc struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ActivityTemplateArcData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type ActivityTemplateArcData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The array of arcs, which link pairs of ActivityTemplate as predecessor and successor.                                 
	ActivityArcs                                                                                []ActivityArcElement         `json:"ActivityArcs,omitempty"`
	// A detailed textual description of the activity template arc connecting inputs and outputs                             
	// of workflows (ActivityTemplate).                                                                                      
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// The name of this input/output parameter definition set.                                                               
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// The array of arcs, which associate ActivityTemplate outputs to ActivityTemplate inputs.                               
	OutputInputArcs                                                                             []OutputInputArcElement      `json:"OutputInputArcs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// An 'arc' establishing a link between a single pair of ActivityTemplate input and output
// parameters.
type ActivityArcElement struct {
	// The relationship to the ActivityTemplate first in a pair of ActivityTemplates in the        
	// context of a workflow.                                                                      
	PrecedingActivityTemplateID                                                             string `json:"PrecedingActivityTemplateID"`
	// The relationship to the ActivityTemplate succeeding the first ActivityTemplate in the       
	// workflow.                                                                                   
	SucceedingActivityTemplateID                                                            string `json:"SucceedingActivityTemplateID"`
}

// An 'arc' establishing a link between a single pair of ActivityTemplate input and output
// parameters.
type OutputInputArcElement struct {
	// The relationship to the consuming ActivityTemplate.                        
	ConsumingActivityTemplateID                                            string `json:"ConsumingActivityTemplateID"`
	// The Title of the consuming ActivityTemplate Parameter array element.       
	ConsumingParameterTitle                                                string `json:"ConsumingParameterTitle"`
	// The relationship to the producing ActivityTemplate.                        
	ProducingActivityTemplateID                                            string `json:"ProducingActivityTemplateID"`
	// The Title of the producing ActivityTemplate Parameter array element.       
	ProducingParameterTitle                                                string `json:"ProducingParameterTitle"`
}

// A contract or other covenant between Company and counterparties which is relevant to the
// data universe because it includes terms governing use of data.
type Agreement struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *AgreementData                 `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type AgreementData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Unique identifier of agreement in Company contracts system of record.                                                 
	AgreementExternalID                                                                         *string                      `json:"AgreementExternalID,omitempty"`
	// Name of Company contracts system of record containing authorized version of agreement.                                
	AgreementExternalSystem                                                                     *string                      `json:"AgreementExternalSystem,omitempty"`
	// Natural unique identifier of an agreement.                                                                            
	AgreementIdentifier                                                                         *string                      `json:"AgreementIdentifier,omitempty"`
	// Familiar name of agreement.  May be a code name for highly restricted agreements.                                     
	AgreementName                                                                               *string                      `json:"AgreementName,omitempty"`
	// Reference to master agreement or other parental agreement in a hierarchy of related                                   
	// agreements.                                                                                                           
	AgreementParentID                                                                           *string                      `json:"AgreementParentID,omitempty"`
	// General purpose of agreement, such as license, purchase, trade, NDA.                                                  
	AgreementTypeID                                                                             *string                      `json:"AgreementTypeID,omitempty"`
	// A list of references to legal entities which are party to the agreement in addition to                                
	// Company.                                                                                                              
	Counterparties                                                                              []string                     `json:"Counterparties,omitempty"`
	// The Date when the agreement was put in force.                                                                         
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// A list of Resources that are governed by the agreement.  Note that different terms may                                
	// apply to different resources, but that granularity is handled by the Entitlements                                     
	// Rulebase.                                                                                                             
	RestrictedResources                                                                         []RestrictedResources        `json:"RestrictedResources,omitempty"`
	// A list of obligations or allowed activities specified by the agreement that apply to                                  
	// stored resources.  These are translated into rules, which the Entitlement Rulebase                                    
	// enforces.  Each rule should reference the agreement it codifies.                                                      
	Terms                                                                                       []Terms                      `json:"Terms,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A list of Resources that are governed by the agreement.  Note that different terms may
// apply to different resources, but that granularity is handled by the Entitlements
// Rulebase.
type RestrictedResources struct {
	// Reference to an information Resource which is governed by the agreement.        
	ResourceID                                                                 *string `json:"ResourceID,omitempty"`
}

// A list of obligations or allowed activities specified by the agreement that apply to
// stored resources.  These are translated into rules, which the Entitlement Rulebase
// enforces.  Each rule should reference the agreement it codifies.
type Terms struct {
	// The Date when the obligation no longer needs to be fulfilled.                                      
	EndDate                                                                                    *time.Time `json:"EndDate,omitempty"`
	// Lengthy description of a legal restriction imposed on data governed by the agreement.              
	ObligationDescription                                                                      *string    `json:"ObligationDescription,omitempty"`
	// Reference to the general class of obligation, such as nondisclosure, termination of use,           
	// non-assignment, export restriction, limitation on derivatives.                                     
	ObligationTypeID                                                                           *string    `json:"ObligationTypeID,omitempty"`
	// The Date when the obligation becomes enforceable.                                                  
	StartDate                                                                                  *time.Time `json:"StartDate,omitempty"`
}

// Planned and/or actual bottom hole assembly run including running parameters. This
// represents the period beginning when the BHA enters the hole until it leaves the hole.
type BHARun struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BHARunData                    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type BHARunData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                           
	ContractIDs                                                                                 []string                             `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                           
	Contractors                                                                                 []Contractors                        `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                         
	FundsAuthorizations                                                                         []FundsAuthorizations                `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                 
	Operator                                                                                    *string                              `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                     
	// could reference a separate Persons master data object.                                                                        
	Personnel                                                                                   []PurplePersonnel                    `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                             
	ProjectBeginDate                                                                            *time.Time                           `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                             
	ProjectEndDate                                                                              *time.Time                           `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system.                                                            
	ProjectID                                                                                   *string                              `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                    
	ProjectName                                                                                 *string                              `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                       
	// business identifiers.                                                                                                         
	ProjectNames                                                                                []AbstractAliasNames                 `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                       
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                     
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                      
	// level.                                                                                                                        
	ProjectSpecifications                                                                       []ProjectSpecifications              `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                          
	ProjectStates                                                                               []ProjectStates                      `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                   
	Purpose                                                                                     *string                              `json:"Purpose,omitempty"`
	// Date and time that activities started (BHA started to be made up, then Run In Hole)                                           
	ActivityStartDateTime                                                                       *time.Time                           `json:"ActivityStartDateTime,omitempty"`
	// Date and time that activities stopped (BHA was POOH).                                                                         
	ActivityStopDateTime                                                                        *time.Time                           `json:"ActivityStopDateTime,omitempty"`
	// Actual Performance of the BHA                                                                                                 
	ActualPerformanceDescription                                                                *string                              `json:"ActualPerformanceDescription,omitempty"`
	// Bit run number.                                                                                                               
	BitRunNumber                                                                                *string                              `json:"BitRunNumber,omitempty"`
	// Dogleg severity over the depth range of the BHA run.                                                                          
	Dogleg                                                                                      *float64                             `json:"Dogleg,omitempty"`
	// The parameters that were actually used during the BHA run                                                                     
	DrillingParams                                                                              []DrillingParameters                 `json:"DrillingParams,omitempty"`
	// Start on bottom - date and time.                                                                                              
	DrillingStartDateTime                                                                       *time.Time                           `json:"DrillingStartDateTime,omitempty"`
	// Start off bottom - date and time.                                                                                             
	DrillingStopDateTime                                                                        *time.Time                           `json:"DrillingStopDateTime,omitempty"`
	// Diameter of the hole drilled by the BHA. Note that Hole Size determine by the diameter of                                     
	// the Drill Bit and/or a Hole Opener/Under-reamer                                                                               
	HoleDiameter                                                                                *float64                             `json:"HoleDiameter,omitempty"`
	// This represents a foreign key to the Hole Section in which this BHA Run was performed.                                        
	HoleSectionID                                                                               *string                              `json:"HoleSectionID,omitempty"`
	// Part or all of the BHA is left in the hole                                                                                    
	IsLeftInHole                                                                                *bool                                `json:"IsLeftInHole,omitempty"`
	// The BHA component(s) contained a Nuclear Source.                                                                              
	IsNuclearSource                                                                             *bool                                `json:"IsNuclearSource,omitempty"`
	// Dogleg severity - Maximum.                                                                                                    
	MaximumDogleg                                                                               *float64                             `json:"MaximumDogleg,omitempty"`
	// Measured depth at run start. Depth relative to Planned wellbore ZDP. Navigate via                                             
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                                           
	// data.VerticalMeasurement.                                                                                                     
	MeasuredDepthRunStart                                                                       *float64                             `json:"MeasuredDepthRunStart,omitempty"`
	// Measured depth at run stop. Depth relative to Planned wellbore ZDP. Navigate via                                              
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                                           
	// data.VerticalMeasurement.                                                                                                     
	MeasuredDepthRunStop                                                                        *float64                             `json:"MeasuredDepthRunStop,omitempty"`
	// Human recognizable context for the BHA run.                                                                                   
	Name                                                                                        string                               `json:"Name"`
	// Objective of bottom hole assembly.                                                                                            
	ObjectiveBha                                                                                *string                              `json:"ObjectiveBha,omitempty"`
	// Planned/anticipated Dogleg severity over the depth range of the BHA run.                                                      
	PlannedDogleg                                                                               *float64                             `json:"PlannedDogleg,omitempty"`
	// Description of planned or expected Performance of the BHA                                                                     
	PredictedPerformanceDescription                                                             *string                              `json:"PredictedPerformanceDescription,omitempty"`
	// Free text allowing any comment associated to the run                                                                          
	RunComment                                                                                  *string                              `json:"RunComment,omitempty"`
	// Identifiers of the associated run parameter plans.                                                                            
	RunParameterPlans                                                                           []RunParameterPlan                   `json:"RunParameterPlans,omitempty"`
	// Bottom hole assembly status.                                                                                                  
	StatusBhaID                                                                                 *string                              `json:"StatusBhaID,omitempty"`
	// The BHA (drilling string) run number.                                                                                         
	StringRunNumber                                                                             *float64                             `json:"StringRunNumber,omitempty"`
	// Reason for trip.                                                                                                              
	TripReasonID                                                                                *string                              `json:"TripReasonID,omitempty"`
	// Duration of time to run BHA from surface to bottom of the hole                                                                
	TripTimeIn                                                                                  *float64                             `json:"TripTimeIn,omitempty"`
	// Duration of time to pull BHA from bottom of the hole to surface                                                               
	TripTimeOut                                                                                 *float64                             `json:"TripTimeOut,omitempty"`
	// This represents a foreign key to the tubular (assembly) that was utilized in this run.                                        
	TubularID                                                                                   string                               `json:"TubularID"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                          
	// WellboreID, or a standalone vertical reference elevation for all measured depths within                                       
	// the BHA Run record. If this is not populated, the VerticalMeasurement is derived from the                                     
	// Wellbore default Vertical Measure Elevation.                                                                                  
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Unique identifier for the wellbore.  This uniquely represents                                                                 
	// the wellbore referenced by the (possibly non-unique) nameWellbore.                                                            
	WellboreID                                                                                  *string                              `json:"WellboreID,omitempty"`
	// Desired weight to be placed above the Jar - to optimize its efficiency                                                        
	WtAboveJar                                                                                  *float64                             `json:"WtAboveJar,omitempty"`
	// Desired weight to be placed blow the Jar - to optimize its efficiency                                                         
	WtBelowJar                                                                                  *float64                             `json:"WtBelowJar,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// The bottomhole assembly drilling parameters schema, which contains statistical and
// calculated operations data for the run, related to depths, activities, temperature,
// pressure, flow rates, torque, etc.
type DrillingParameters struct {
	// The average flowrate at the bit during the run                                            
	AverageBitFlowrate                                                                *float64   `json:"AverageBitFlowrate,omitempty"`
	// Average mud pump flow rate.                                                               
	AverageFlowratePump                                                               *float64   `json:"AverageFlowratePump,omitempty"`
	// The average pump pressure used during the run                                             
	AveragePumpPressure                                                               *float64   `json:"AveragePumpPressure,omitempty"`
	// Average rate of penetration through Interval.                                             
	AverageROP                                                                        *float64   `json:"AverageROP,omitempty"`
	// Average surface turn rate (commonly in rpm) through Interval.                             
	AverageRPM                                                                        *float64   `json:"AverageRpm,omitempty"`
	// Average turn rate (commonly in rpm) downhole.                                             
	AverageRPMDownhole                                                                *float64   `json:"AverageRpmDownhole,omitempty"`
	// Average torque: downhole.                                                                 
	AverageTorqueDownhole                                                             *float64   `json:"AverageTorqueDownhole,omitempty"`
	// Average torque: off bottom.                                                               
	AverageTorqueOffBottom                                                            *float64   `json:"AverageTorqueOffBottom,omitempty"`
	// Average Torque: on bottom.                                                                
	AverageTorqueOnBottom                                                             *float64   `json:"AverageTorqueOnBottom,omitempty"`
	// Bit nozzle average velocity.                                                              
	AverageVelocityBitNozzle                                                          *float64   `json:"AverageVelocityBitNozzle,omitempty"`
	// Surface weight on bit - average through interval.                                         
	AverageWOB                                                                        *float64   `json:"AverageWOB,omitempty"`
	// Weight on bit - average downhole.                                                         
	AverageWOBDownhole                                                                *float64   `json:"AverageWOBDownhole,omitempty"`
	// Azimuth at stop measured depth.                                                           
	AzimuthBottom                                                                     *float64   `json:"AzimuthBottom,omitempty"`
	// Azimuth at start measured depth.                                                          
	AzimuthTop                                                                        *float64   `json:"AzimuthTop,omitempty"`
	// Operating time spent by bit for run.                                                      
	//                                                                                           
	// BUSINESS RULE: When reporting an actual as opposed to design, this is required.           
	BitRunTIME                                                                        *time.Time `json:"BitRunTIme,omitempty"`
	// Comments and remarks.                                                                     
	Comments                                                                          *string    `json:"Comments,omitempty"`
	// Distance drilled - rotating.                                                              
	DistanceDrilledRotating                                                           *float64   `json:"DistanceDrilledRotating,omitempty"`
	// Distance drilled - sliding                                                                
	DistanceDrilledSliding                                                            *float64   `json:"DistanceDrilledSliding,omitempty"`
	// Distance covered while holding angle with a steerable drilling assembly.                  
	DistanceHolding                                                                   *float64   `json:"DistanceHolding,omitempty"`
	// Distance reamed.                                                                          
	DistanceReamed                                                                    *float64   `json:"DistanceReamed,omitempty"`
	// Distance covered while actively steering with a steerable drilling assembly.              
	DistanceSteering                                                                  *float64   `json:"DistanceSteering,omitempty"`
	// Hookload when the string is moving down.                                                  
	HookloadDown                                                                      *float64   `json:"HookloadDown,omitempty"`
	// Hookload when the string is moving up.                                                    
	HookloadUp                                                                        *float64   `json:"HookloadUp,omitempty"`
	// Inclination at start measured depth.                                                      
	InclinationStart                                                                  *float64   `json:"InclinationStart,omitempty"`
	// Inclination at stop measured depth.                                                       
	InclinationStop                                                                   *float64   `json:"InclinationStop,omitempty"`
	// The maximum flowrate at the bit during the run                                            
	MaximumBitFlowrate                                                                *float64   `json:"MaximumBitFlowrate,omitempty"`
	// Maximum mud pump flow rate.                                                               
	MaximumFlowratePump                                                               *float64   `json:"MaximumFlowratePump,omitempty"`
	// Maximum inclination.                                                                      
	MaximumInclination                                                                *float64   `json:"MaximumInclination,omitempty"`
	// Maximum mud temperature downhole during run.                                              
	MaximumMudTemperatureDownhole                                                     *float64   `json:"MaximumMudTemperatureDownhole,omitempty"`
	// The maximum pump pressure used during the run                                             
	MaximumPumpPressure                                                               *float64   `json:"MaximumPumpPressure,omitempty"`
	// Maximum rate of penetration through Interval.                                             
	MaximumROP                                                                        *float64   `json:"MaximumROP,omitempty"`
	// Maximum turn rate (commonly in rpm).                                                      
	MaximumRPM                                                                        *float64   `json:"MaximumRpm,omitempty"`
	// Maximum torque: on bottom.                                                                
	MaximumTorqueOnBottom                                                             *float64   `json:"MaximumTorqueOnBottom,omitempty"`
	// Weight on bit - maximum.                                                                  
	MaximumWOB                                                                        *float64   `json:"MaximumWOB,omitempty"`
	// The minimum flowrate at the bit during the run                                            
	MinimumBitFlowrate                                                                *float64   `json:"MinimumBitFlowrate,omitempty"`
	// Minimum mud pump flow rate.                                                               
	MinimumFlowratePump                                                               *float64   `json:"MinimumFlowratePump,omitempty"`
	// Minimum inclination.                                                                      
	MinimumInclination                                                                *float64   `json:"MinimumInclination,omitempty"`
	// The minimum pump pressure used during the run                                             
	MinimumPumpPressure                                                               *float64   `json:"MinimumPumpPressure,omitempty"`
	// Minimum rate of penetration through Interval.                                             
	MinimumROP                                                                        *float64   `json:"MinimumROP,omitempty"`
	// Minimum turn rate (commonly in rpm).                                                      
	MinimumRPM                                                                        *float64   `json:"MinimumRpm,omitempty"`
	// Minimum torque: on bottom.                                                                
	MinimumTorqueOnBottom                                                             *float64   `json:"MinimumTorqueOnBottom,omitempty"`
	// Weight on bit - minimum.                                                                  
	MinimumWOB                                                                        *float64   `json:"MinimumWOB,omitempty"`
	// The class of the drilling fluid.                                                          
	MudClass                                                                          *string    `json:"MudClass,omitempty"`
	// Overpull = HookloadUp - HookloadRotating                                                  
	OverPull                                                                          *float64   `json:"OverPull,omitempty"`
	// Bit hydraulic.                                                                            
	PowerBit                                                                          *float64   `json:"PowerBit,omitempty"`
	// Pressure drop in bit.                                                                     
	PressureDropBit                                                                   *float64   `json:"PressureDropBit,omitempty"`
	// Hookload rotating.                                                                        
	RotatingHookload                                                                  *float64   `json:"RotatingHookload,omitempty"`
	// Measured depth at the end of the run.                                                     
	RunEndHoleMeasuredDepth                                                           *float64   `json:"RunEndHoleMeasuredDepth,omitempty"`
	// Measured depth at start of the run.                                                       
	RunStartHoleMeasuredDepth                                                         *float64   `json:"RunStartHoleMeasuredDepth,omitempty"`
	// Slackoff = HookloadRotating  - HookloadDown.                                              
	SlackOff                                                                          *float64   `json:"SlackOff,omitempty"`
	// Time spent circulating from start of bit run.                                             
	TimeCirculating                                                                   *float64   `json:"TimeCirculating,omitempty"`
	// Time spent rotary drilling from start of bit run.                                         
	TimeDrillingRotating                                                              *float64   `json:"TimeDrillingRotating,omitempty"`
	// Time spent slide drilling from start of bit run.                                          
	TimeDrillingSliding                                                               *float64   `json:"TimeDrillingSliding,omitempty"`
	// Time spent on hold from start of bit run.                                                 
	TimeHolding                                                                       *float64   `json:"TimeHolding,omitempty"`
	// Time spent reaming from start of bit run.                                                 
	TimeReaming                                                                       *float64   `json:"TimeReaming,omitempty"`
	// Time spent steering from start of bit run.                                                
	TimeSteering                                                                      *float64   `json:"TimeSteering,omitempty"`
	// Weight of the string above the jars.                                                      
	WeightAboveJar                                                                    *float64   `json:"WeightAboveJar,omitempty"`
	// Weight of the string below the jars.                                                      
	WeightBelowJar                                                                    *float64   `json:"WeightBelowJar,omitempty"`
	// Drilling fluid density.                                                                   
	WeightMud                                                                         *float64   `json:"WeightMud,omitempty"`
}

// Operating parameters of a drill string run
type RunParameterPlan struct {
	// A series of operating parameters observed during the run                                                         
	OperationParameterPlan                                                                      *OperationParameterPlan `json:"OperationParameterPlan,omitempty"`
	// The end measured depth of the hole section at the end of the run. Depth relative to                              
	// Planned wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which                        
	// holds the depth reference in data.VerticalMeasurement.                                                           
	RunEndHoleMeasuredDepth                                                                     *float64                `json:"RunEndHoleMeasuredDepth,omitempty"`
	// The start measured depth of the hole section at the start of the run. Depth relative to                          
	// Planned wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which                        
	// holds the depth reference in data.VerticalMeasurement.                                                           
	RunStartHoleMeasuredDepth                                                                   *float64                `json:"RunStartHoleMeasuredDepth,omitempty"`
}

// A series of operating parameters observed during the run
type OperationParameterPlan struct {
	// A group of parameters that refer to flowrate                                                  
	FlowratePumpGroup                                                          *FlowratePumpGroup    `json:"FlowratePumpGroup,omitempty"`
	// The realization strategy utilized in this series of operation parameters                      
	RealizationStrategy                                                        *string               `json:"RealizationStrategy,omitempty"`
	// A group of parameters that refer to ROP (rate of penetration)                                 
	ROPGroup                                                                   *ROPGroup             `json:"ROPGroup,omitempty"`
	// A group of parameters that refer to RPM (rotations per minute)                                
	RPMGroup                                                                   *RPMGroup             `json:"RPMGroup,omitempty"`
	// A group of parameters that refer to anticipated Torque at Surface                             
	TorqueAtSurfaceGroup                                                       *TorqueAtSurfaceGroup `json:"TorqueAtSurfaceGroup,omitempty"`
	// A group of parameters that refer to Torque on Bottom                                          
	TorqueOnBottomGroup                                                        *TorqueOnBottomGroup  `json:"TorqueOnBottomGroup,omitempty"`
	// A group of parameters that refer to WOB (weight on bit)                                       
	WOBGroup                                                                   *WOBGroup             `json:"WOBGroup,omitempty"`
}

// A group of parameters that refer to flowrate
type FlowratePumpGroup struct {
	// The planned maximum value for the considered parameter                                            
	MaximumParameter                                             []FlowratePumpGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                            
	MinimumParameter                                             []FlowratePumpGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                                        
	RecommendedParameter                                         []FlowratePumpGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type FlowratePumpGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                         
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                     
	// the depth reference in data.VerticalMeasurement.                                                            
	ObservationMeasuredDepth                                                                  *float64             `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                            
	PointsSources                                                                             []PurplePointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                    
	Value                                                                                     *float64             `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                          
	ValueUnitID                                                                               *string              `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PurplePointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type FlowratePumpGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                         
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                     
	// the depth reference in data.VerticalMeasurement.                                                            
	ObservationMeasuredDepth                                                                  *float64             `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                            
	PointsSources                                                                             []FluffyPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                    
	Value                                                                                     *float64             `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                          
	ValueUnitID                                                                               *string              `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type FluffyPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type FlowratePumpGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                            
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                        
	// the depth reference in data.VerticalMeasurement.                                                               
	ObservationMeasuredDepth                                                                  *float64                `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                               
	PointsSources                                                                             []TentacledPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                       
	Value                                                                                     *float64                `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                             
	ValueUnitID                                                                               *string                 `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type TentacledPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// A group of parameters that refer to ROP (rate of penetration)
type ROPGroup struct {
	// The planned maximum value for the considered parameter                                   
	MaximumParameter                                             []ROPGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                   
	MinimumParameter                                             []ROPGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                               
	RecommendedParameter                                         []ROPGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type ROPGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                         
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                     
	// the depth reference in data.VerticalMeasurement.                                                            
	ObservationMeasuredDepth                                                                  *float64             `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                            
	PointsSources                                                                             []StickyPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                    
	Value                                                                                     *float64             `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                          
	ValueUnitID                                                                               *string              `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type StickyPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type ROPGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                         
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                     
	// the depth reference in data.VerticalMeasurement.                                                            
	ObservationMeasuredDepth                                                                  *float64             `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                            
	PointsSources                                                                             []IndigoPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                    
	Value                                                                                     *float64             `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                          
	ValueUnitID                                                                               *string              `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type IndigoPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type ROPGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                           
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                       
	// the depth reference in data.VerticalMeasurement.                                                              
	ObservationMeasuredDepth                                                                  *float64               `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                              
	PointsSources                                                                             []IndecentPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                      
	Value                                                                                     *float64               `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                            
	ValueUnitID                                                                               *string                `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type IndecentPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// A group of parameters that refer to RPM (rotations per minute)
type RPMGroup struct {
	// The planned downhole rotary speed values for the BHA run.                  
	DownHoleRPMGroup                                            *DownHoleRPMGroup `json:"DownHoleRPMGroup,omitempty"`
	// The planned surface rotary speed values for the BHA run.                   
	SurfaceRPMGroup                                             *SurfaceRPMGroup  `json:"SurfaceRPMGroup,omitempty"`
}

// The planned downhole rotary speed values for the BHA run.
type DownHoleRPMGroup struct {
	// The planned maximum value for the considered parameter                                           
	MaximumParameter                                             []DownHoleRPMGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                           
	MinimumParameter                                             []DownHoleRPMGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                                       
	RecommendedParameter                                         []DownHoleRPMGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type DownHoleRPMGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                            
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                        
	// the depth reference in data.VerticalMeasurement.                                                               
	ObservationMeasuredDepth                                                                  *float64                `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                               
	PointsSources                                                                             []HilariousPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                       
	Value                                                                                     *float64                `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                             
	ValueUnitID                                                                               *string                 `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type HilariousPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type DownHoleRPMGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                            
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                        
	// the depth reference in data.VerticalMeasurement.                                                               
	ObservationMeasuredDepth                                                                  *float64                `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                               
	PointsSources                                                                             []AmbitiousPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                       
	Value                                                                                     *float64                `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                             
	ValueUnitID                                                                               *string                 `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type AmbitiousPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type DownHoleRPMGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                          
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                      
	// the depth reference in data.VerticalMeasurement.                                                             
	ObservationMeasuredDepth                                                                  *float64              `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                             
	PointsSources                                                                             []CunningPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                     
	Value                                                                                     *float64              `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                           
	ValueUnitID                                                                               *string               `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type CunningPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The planned surface rotary speed values for the BHA run.
type SurfaceRPMGroup struct {
	// The planned maximum value for the considered parameter                                          
	MaximumParameter                                             []SurfaceRPMGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                          
	MinimumParameter                                             []SurfaceRPMGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                                      
	RecommendedParameter                                         []SurfaceRPMGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type SurfaceRPMGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                          
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                      
	// the depth reference in data.VerticalMeasurement.                                                             
	ObservationMeasuredDepth                                                                  *float64              `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                             
	PointsSources                                                                             []MagentaPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                     
	Value                                                                                     *float64              `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                           
	ValueUnitID                                                                               *string               `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type MagentaPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type SurfaceRPMGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                         
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                     
	// the depth reference in data.VerticalMeasurement.                                                            
	ObservationMeasuredDepth                                                                  *float64             `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                            
	PointsSources                                                                             []FriskyPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                    
	Value                                                                                     *float64             `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                          
	ValueUnitID                                                                               *string              `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type FriskyPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type SurfaceRPMGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                              
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                          
	// the depth reference in data.VerticalMeasurement.                                                                 
	ObservationMeasuredDepth                                                                  *float64                  `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                                 
	PointsSources                                                                             []MischievousPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                         
	Value                                                                                     *float64                  `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                               
	ValueUnitID                                                                               *string                   `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type MischievousPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// A group of parameters that refer to anticipated Torque at Surface
type TorqueAtSurfaceGroup struct {
	// The planned maximum value for the considered parameter                                               
	MaximumParameter                                             []TorqueAtSurfaceGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                               
	MinimumParameter                                             []TorqueAtSurfaceGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                                           
	RecommendedParameter                                         []TorqueAtSurfaceGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type TorqueAtSurfaceGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                                
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                            
	// the depth reference in data.VerticalMeasurement.                                                                   
	ObservationMeasuredDepth                                                                  *float64                    `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                                   
	PointsSources                                                                             []BraggadociousPointsSource `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                                           
	Value                                                                                     *float64                    `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                                 
	ValueUnitID                                                                               *string                     `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type BraggadociousPointsSource struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type TorqueAtSurfaceGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource1 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource1 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type TorqueAtSurfaceGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource2 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource2 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// A group of parameters that refer to Torque on Bottom
type TorqueOnBottomGroup struct {
	// The planned maximum value for the considered parameter                                              
	MaximumParameter                                             []TorqueOnBottomGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                              
	MinimumParameter                                             []TorqueOnBottomGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                                          
	RecommendedParameter                                         []TorqueOnBottomGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type TorqueOnBottomGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource3 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource3 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type TorqueOnBottomGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource4 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource4 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type TorqueOnBottomGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource5 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource5 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// A group of parameters that refer to WOB (weight on bit)
type WOBGroup struct {
	// The planned maximum value for the considered parameter                                   
	MaximumParameter                                             []WOBGroupMaximumParameter     `json:"MaximumParameter,omitempty"`
	// The planned minimum value for the considered parameter                                   
	MinimumParameter                                             []WOBGroupMinimumParameter     `json:"MinimumParameter,omitempty"`
	// The planned recommended value for the considered parameter                               
	RecommendedParameter                                         []WOBGroupRecommendedParameter `json:"RecommendedParameter,omitempty"`
}

// The definition of the point
type WOBGroupMaximumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource6 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource6 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type WOBGroupMinimumParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource7 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource7 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// The definition of the point
type WOBGroupRecommendedParameter struct {
	// The measured depth at which the measurement was observed. Depth relative to Planned                    
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                
	// the depth reference in data.VerticalMeasurement.                                                       
	ObservationMeasuredDepth                                                                  *float64        `json:"ObservationMeasuredDepth,omitempty"`
	// The source indicator associated with this point.                                                       
	PointsSources                                                                             []PointsSource8 `json:"PointsSources,omitempty"`
	// The value observed at the measured depth                                                               
	Value                                                                                     *float64        `json:"Value,omitempty"`
	// Unit of measure of the Value value                                                                     
	ValueUnitID                                                                               *string         `json:"ValueUnitID,omitempty"`
}

// The definition of the points used as a source for each individual critical point,
// resulting from parameters set or observed during a BHA run
type PointsSource8 struct {
	// Description associated with the source indicator type.                  
	Description                                                       *string  `json:"Description,omitempty"`
	// The name of the Source Indicator Type. For example Manual Input         
	Name                                                              *string  `json:"Name,omitempty"`
	// The value at that point.                                                
	Value                                                             *float64 `json:"Value,omitempty"`
	// Unit of measure of the Value value                                      
	ValueUnitID                                                       *string  `json:"ValueUnitID,omitempty"`
}

// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference elevation for all measured depths within
// the BHA Run record. If this is not populated, the VerticalMeasurement is derived from the
// Wellbore default Vertical Measure Elevation.
//
// A location along a wellbore, _usually_ associated with some aspect of the drilling of the
// wellbore, but not with any intersecting _subsurface_ natural surfaces.
//
// Either a self-contained vertical reference for the depths in this blowout preventer or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the Coring record.
//
// The vertical measurement reference for a wellbore or borehole acquisition platform,
// defining the vertical reference datum, elevation and relevant depths.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the HoleSection record. If this is not populated, the
// VerticalMeasurement is derived from the Wellbore.
//
// The vertical measurement reference for the interval tops and bases. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
//
// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,
// depth correction used to correlate MDs to original drilling rig MD. References an entry
// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the RockSample record. If this is not populated, the
// VerticalMeasurement is derived from the Coring.
//
// Information on the list of all depths and elevations pertaining to the target wellbore
// involved in the Sample Acquisition event, like, plug back measured depth, total measured
// depth, KB elevation. The property is always used except with WellheadSampleAcquisition,
// SeparatorSampleAcquisition, FacilitySampleAcquisition
//
// The vertical measurement reference for VSP surveys, which defines the vertical reference
// datum for the measured depths.
//
// References an entry in the VerticalMeasurements array of the Rig, Well or Wellbore
// identified by VerticalReferenceEntityID or a standalone vertical reference which defines
// the vertical reference datum for all measured depths of the SurveyProgram record. For
// planned SurveyPrograms, this property may be absent; then depths are relative to Planned
// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds
// the depth reference in data.VerticalMeasurement.
//
// Either a self-contained vertical reference for the depths in this TubularAssembly or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// The measured elevation from a known reference datum to a permanent geodetic datum.  This
// measurement is the foundation for calculating and correlating depths from geodetic
// datums, which in turn allow depth correlation between wellbores.
//
// The vertical measurement reference for this well logging acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The zero depth point (ZDP) definition for the all measured depths related to this
// WellPlanningWellbore.
//
// The vertical measurement reference for this well testing acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The vertical measurement reference for the interval top and base. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
type AbstractFacilityVerticalMeasurement struct {
	// The date and time at which a vertical measurement instance becomes effective.                        
	EffectiveDateTime                                                                            *time.Time `json:"EffectiveDateTime,omitempty"`
	// The date and time at which a vertical measurement instance is no longer in effect.                   
	TerminationDateTime                                                                          *time.Time `json:"TerminationDateTime,omitempty"`
	// A vertical coordinate reference system defines the origin for height or depth values. It             
	// is expected that either VerticalCRSID or VerticalReferenceID reference is provided in a              
	// given vertical measurement array object, but not both.                                               
	VerticalCRSID                                                                                *string    `json:"VerticalCRSID,omitempty"`
	// The value of the elevation or depth. Depth is positive downwards from a vertical                     
	// reference or geodetic datum along a path, which can be vertical; elevation is positive               
	// upwards from a geodetic datum along a vertical path. Either can be negative.                         
	VerticalMeasurement                                                                          *float64   `json:"VerticalMeasurement,omitempty"`
	// Text which describes a vertical measurement in detail.                                               
	VerticalMeasurementDescription                                                               *string    `json:"VerticalMeasurementDescription,omitempty"`
	// Specifies Measured Depth, True Vertical Depth, or Elevation.                                         
	VerticalMeasurementPathID                                                                    *string    `json:"VerticalMeasurementPathID,omitempty"`
	// Specifies Driller vs Logger.                                                                         
	VerticalMeasurementSourceID                                                                  *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (TD, Plugback, Kickoff, Drill Floor, Rotary               
	// Table...).                                                                                           
	VerticalMeasurementTypeID                                                                    *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The unit of measure for the vertical measurement. If a unit of measure and a vertical CRS            
	// are provided, the unit of measure provided is taken over the unit of measure from the CRS.           
	VerticalMeasurementUnitOfMeasureID                                                           *string    `json:"VerticalMeasurementUnitOfMeasureID,omitempty"`
	// This relationship identifies the entity (aka record) in which the VerticalReferenceID is             
	// found; It could be a different OSDU entity or a self-reference. For example, a Wellbore              
	// VerticalMeasurement may reference a member of a VerticalMeasurements[] array in its                  
	// parent Well record. Alternatively, VerticalReferenceEntityID may be populated with the ID            
	// of its own Wellbore record to make explicit that VerticalReferenceID is intended to be               
	// found in this record, not another.                                                                   
	VerticalReferenceEntityID                                                                    *string    `json:"VerticalReferenceEntityID,omitempty"`
	// The reference point from which the relative vertical measurement is made. This is only               
	// populated if the measurement has no VerticalCRSID specified. The value entered must match            
	// the VerticalMeasurementID for another vertical measurement array element in Wellbore or              
	// Well or in a related parent facility. The relationship should be  declared explicitly in             
	// VerticalReferenceEntityID. Any chain of measurements must ultimately resolve to a                    
	// Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID is provided in            
	// a given vertical measurement array object, but not both.                                             
	VerticalReferenceID                                                                          *string    `json:"VerticalReferenceID,omitempty"`
	// Specifies what directional survey or wellpath was used to calculate the TVD.                         
	WellboreTVDTrajectoryID                                                                      *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// A natural geographic area covering a single depositional system.
type Basin struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BasinData                     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type BasinData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// A textual description of the Basin.                                                                                   
	BasinDescription                                                                            *string                      `json:"BasinDescription,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	BasinID                                                                                     *string                      `json:"BasinID,omitempty"`
	// Name of the Basin.                                                                                                    
	BasinName                                                                                   *string                      `json:"BasinName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                  
	// which this basin is/has been known.                                                                                   
	BasinNameAliases                                                                            []AbstractAliasNames         `json:"BasinNameAliases,omitempty"`
	// High level classification of the geological characteristics of the Basin; for example,                                
	// Foothills, Active Margin, Passive Margin, etc.                                                                        
	BasinTypeID                                                                                 *string                      `json:"BasinTypeID,omitempty"`
	// The date and time at which a given basin becomes effective.                                                           
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// Optional relationship to the parent Basin.                                                                            
	ParentBasinID                                                                               *string                      `json:"ParentBasinID,omitempty"`
	// Indicator showing whether the basin is considered prospective for hydrocarbons.                                       
	ProspectFlag                                                                                *bool                        `json:"ProspectFlag,omitempty"`
	// The date and time at which a given basin is no longer in effect.                                                      
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Information related to a Blowout Preventer actually or planned to be installed during
// well operations.
type BlowoutPreventer struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BlowoutPreventerData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type BlowoutPreventerData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// Type of accumulator/description.                                                                                              
	AccumulatorDescription                                                                      *string                              `json:"AccumulatorDescription,omitempty"`
	// Accumulator fluid capacity.                                                                                                   
	AccumulatorFluidCapacity                                                                    *float64                             `json:"AccumulatorFluidCapacity,omitempty"`
	// Accumulator operating pressure rating.                                                                                        
	AccumulatorOperatingPressureRating                                                          *float64                             `json:"AccumulatorOperatingPressureRating,omitempty"`
	// Accumulator pre-charge pressure.                                                                                              
	AccumulatorPreChargePressure                                                                *float64                             `json:"AccumulatorPreChargePressure,omitempty"`
	// Accumulator pre-charge volume.                                                                                                
	AccumulatorPreChargeVolume                                                                  *float64                             `json:"AccumulatorPreChargeVolume,omitempty"`
	// Identifier of the type of connection to the blowout preventer.                                                                
	BlowoutPreventerConnectionTypeID                                                            *string                              `json:"BlowoutPreventerConnectionTypeID,omitempty"`
	// Inner diameter of the booster line.                                                                                           
	BoosterLineInnerDiameter                                                                    *float64                             `json:"BoosterLineInnerDiameter,omitempty"`
	// Length of the booster line along the riser.                                                                                   
	BoosterLineLength                                                                           *float64                             `json:"BoosterLineLength,omitempty"`
	// Outer diameter of the booster line.                                                                                           
	BoosterLineOuterDiameter                                                                    *float64                             `json:"BoosterLineOuterDiameter,omitempty"`
	// Inner diameter of the choke line.                                                                                             
	ChokeLineInnerDiameter                                                                      *float64                             `json:"ChokeLineInnerDiameter,omitempty"`
	// Length of the choke line along the riser.                                                                                     
	ChokeLineLength                                                                             *float64                             `json:"ChokeLineLength,omitempty"`
	// Outer diameter of the choke line.                                                                                             
	ChokeLineOuterDiameter                                                                      *float64                             `json:"ChokeLineOuterDiameter,omitempty"`
	// Choke manifold pressure.                                                                                                      
	ChokeManifoldPressure                                                                       *float64                             `json:"ChokeManifoldPressure,omitempty"`
	// Identifier of the type of choke manifold.                                                                                     
	ChokeManifoldTypeID                                                                         *string                              `json:"ChokeManifoldTypeID,omitempty"`
	// The class designation of the blowout preventer.                                                                               
	Class                                                                                       *string                              `json:"Class,omitempty"`
	// Comments and remarks related to the blowout preventer.                                                                        
	Comment                                                                                     *string                              `json:"Comment,omitempty"`
	// Size of the connection to the blowout preventer.                                                                              
	ConnectionSize                                                                              *float64                             `json:"ConnectionSize,omitempty"`
	// Identifier of the type of control manifold.                                                                                   
	ControlManifoldTypeID                                                                       *string                              `json:"ControlManifoldTypeID,omitempty"`
	// A description of the blowout preventer.                                                                                       
	Description                                                                                 *string                              `json:"Description,omitempty"`
	// Description of the diverter.                                                                                                  
	DiverterDescription                                                                         *string                              `json:"DiverterDescription,omitempty"`
	// Diameter of the diverter.                                                                                                     
	DiverterDiameter                                                                            *float64                             `json:"DiverterDiameter,omitempty"`
	// Working pressure rating of the diverter.                                                                                      
	DiverterWorkingPressureRating                                                               *float64                             `json:"DiverterWorkingPressureRating,omitempty"`
	// The height of the blowout preventer                                                                                           
	Height                                                                                      *float64                             `json:"Height,omitempty"`
	// The pressure required to operate the blowout preventer's hydraulic system, which includes                                     
	// opening and closing the preventer. It is typically lower than the maximum operating                                           
	// pressure.                                                                                                                     
	HydraulicOperatingPressure                                                                  *float64                             `json:"HydraulicOperatingPressure,omitempty"`
	// An identification tag for the blowout preventer. A serial number is a type of                                                 
	// identification tag; however, some tags contain many pieces of information.This element                                        
	// only identifies the tag and does not describe the contents.                                                                   
	IdentificationTag                                                                           *string                              `json:"IdentificationTag,omitempty"`
	// Date and time the blowout preventer was installed.                                                                            
	InstallationDateTime                                                                        *time.Time                           `json:"InstallationDateTime,omitempty"`
	// Is this a rotating blowout preventer?                                                                                         
	IsRotating                                                                                  *bool                                `json:"IsRotating,omitempty"`
	// Inner diameter of the kill line.                                                                                              
	KillLineInnerDiameter                                                                       *float64                             `json:"KillLineInnerDiameter,omitempty"`
	// Length of kill line line along the riser.                                                                                     
	KillLineLength                                                                              *float64                             `json:"KillLineLength,omitempty"`
	// Outer diameter of the kill line.                                                                                              
	KillLineOuterDiameter                                                                       *float64                             `json:"KillLineOuterDiameter,omitempty"`
	// The last data and time the blowout preventer was certified.                                                                   
	LastCertificationDateTime                                                                   *time.Time                           `json:"LastCertificationDateTime,omitempty"`
	// Unique identifier for the manufacturer of this equipment.                                                                     
	ManufacturerID                                                                              *string                              `json:"ManufacturerID,omitempty"`
	// Manufacturer's designated model.                                                                                              
	Model                                                                                       *string                              `json:"Model,omitempty"`
	// The name of the blowout preventer.                                                                                            
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// The nominal inner diameter of the blowout preventer.                                                                          
	NominalInnerDiameter                                                                        *float64                             `json:"NominalInnerDiameter,omitempty"`
	// The nominal outer diameter of the blowout preventer.                                                                          
	NominalOuterDiameter                                                                        *float64                             `json:"NominalOuterDiameter,omitempty"`
	// Maximum pressure at which the blowout preventer is expected to operate under normal                                           
	// conditions. It is typically set below the pressure rating to provide a safety margin.                                         
	OperatingPressureRating                                                                     *float64                             `json:"OperatingPressureRating,omitempty"`
	// Maximum pressure rating of the blowout preventer.                                                                             
	PressureRating                                                                              *float64                             `json:"PressureRating,omitempty"`
	// Date and time the blowout preventer was removed.                                                                              
	RemovalDateTime                                                                             *time.Time                           `json:"RemovalDateTime,omitempty"`
	// The ID of the Rig associated with the blowout preventer.                                                                      
	RigUtilizationID                                                                            *string                              `json:"RigUtilizationID,omitempty"`
	// Indicates the service standard the blowout preventer must be able to operate under.                                           
	ServiceStandard                                                                             *string                              `json:"ServiceStandard,omitempty"`
	// The measured depth where the blowout preventer was/will be set.                                                               
	SetMeasuredDepth                                                                            *float64                             `json:"SetMeasuredDepth,omitempty"`
	// Inner diameter of the surface line.                                                                                           
	SurfaceLineInnerDiameter                                                                    *float64                             `json:"SurfaceLineInnerDiameter,omitempty"`
	// Length of the surface line.                                                                                                   
	SurfaceLineLength                                                                           *float64                             `json:"SurfaceLineLength,omitempty"`
	// Outer diameter of the surface line.                                                                                           
	SurfaceLineOuterDiameter                                                                    *float64                             `json:"SurfaceLineOuterDiameter,omitempty"`
	// The vertical space required above the blowout preventer stack to allow for safe and                                           
	// efficient operation, maintenance,  and components.                                                                            
	TopClearance                                                                                *float64                             `json:"TopClearance,omitempty"`
	// Either a self-contained vertical reference for the depths in this blowout preventer or a                                      
	// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the                                           
	// entity defined by VerticalReferenceEntityID e.g. the parent Well.                                                             
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// The weight of the blowout preventer.                                                                                          
	Weight                                                                                      *float64                             `json:"Weight,omitempty"`
	// The ID of the well associated with the blowout preventer.                                                                     
	WellID                                                                                      string                               `json:"WellID"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Information related to a component associated with a blowout preventer.
type BlowoutPreventerComponent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BlowoutPreventerComponentData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type BlowoutPreventerComponentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Measured depth of the the base of the component.                                                                      
	BaseMeasuredDepth                                                                           *float64                     `json:"BaseMeasuredDepth,omitempty"`
	// Identifier of the type of blowout preventer component.                                                                
	BlowoutPreventerComponentTypeID                                                             *string                      `json:"BlowoutPreventerComponentTypeID,omitempty"`
	// Identifier of the blowout preventer the component is a part of.                                                       
	BlowoutPreventerID                                                                          string                       `json:"BlowoutPreventerID"`
	// General comments and remarks related to the component.                                                                
	Comment                                                                                     *string                      `json:"Comment,omitempty"`
	// Description of the blowout preventer component.                                                                       
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// The fluid volume required to close the component.                                                                     
	FluidVolumeToClose                                                                          *float64                     `json:"FluidVolumeToClose,omitempty"`
	// The fluid volume required to open the component.                                                                      
	FluidVolumeToOpen                                                                           *float64                     `json:"FluidVolumeToOpen,omitempty"`
	// Is ram bore variable?                                                                                                 
	IsVariable                                                                                  *bool                        `json:"IsVariable,omitempty"`
	// Is the blowout preventer component vertical?                                                                          
	IsVertical                                                                                  *bool                        `json:"IsVertical,omitempty"`
	// The last data and time the component was certified.                                                                   
	LastCertificationDateTime                                                                   *time.Time                   `json:"LastCertificationDateTime,omitempty"`
	// Total length of the component.                                                                                        
	Length                                                                                      *float64                     `json:"Length,omitempty"`
	// Unique identifier for the manufacturer of this equipment.                                                             
	ManufacturerID                                                                              *string                      `json:"ManufacturerID,omitempty"`
	// The allowable maximum outer diameter of pipe that can be safely closed around.                                        
	MaximumCloseDiameter                                                                        *float64                     `json:"MaximumCloseDiameter,omitempty"`
	// The maximum allowable hang-off weight supported by the component.                                                     
	MaximumHangOffWeight                                                                        *float64                     `json:"MaximumHangOffWeight,omitempty"`
	// The minimum outer diameter of pipe that can be safely closed around (only applicable for                              
	// blowout preventers with variable bore rams).                                                                          
	MinimumCloseDiameter                                                                        *float64                     `json:"MinimumCloseDiameter,omitempty"`
	// Manufacturer's designated model.                                                                                      
	Model                                                                                       *string                      `json:"Model,omitempty"`
	// The name of the blowout preventer component.                                                                          
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// The nominal inner diameter of the blowout preventer component.                                                        
	NominalInnerDiameter                                                                        *float64                     `json:"NominalInnerDiameter,omitempty"`
	// The nominal outer diameter of the blowout preventer component.                                                        
	NominalOuterDiameter                                                                        *float64                     `json:"NominalOuterDiameter,omitempty"`
	// Maximum pressure at which the blowout preventer component is expected to operate under                                
	// normal conditions. It is typically set below the pressure rating to provide a safety                                  
	// margin.                                                                                                               
	OperatingPressureRating                                                                     *float64                     `json:"OperatingPressureRating,omitempty"`
	// Maximum pressure rating of the blowout preventer component.                                                           
	PressureRating                                                                              *float64                     `json:"PressureRating,omitempty"`
	// The sequence within which the components entered the hole. That is, a sequence number of                              
	// 1 entered first, 2 entered next, etc.                                                                                 
	SequenceNumber                                                                              *int64                       `json:"SequenceNumber,omitempty"`
	// Serial number of the component as provided by the manufacturer and/or the supplier.                                   
	SerialNumber                                                                                *string                      `json:"SerialNumber,omitempty"`
	// Measured depth of the the top of the component.                                                                       
	TopMeasuredDepth                                                                            *float64                     `json:"TopMeasuredDepth,omitempty"`
	// Identifier of the Well the component is associated with.                                                              
	WellID                                                                                      *string                      `json:"WellID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// An interface between two geological objects, such as horizons and faults. It is a surface
// object.
type BoundaryFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BoundaryFeatureData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type BoundaryFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The name of the boundary feature.                                                                                     
	Name                                                                                        *string                      `json:"Name,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A legal or administrative body, person, institution, or company, or any of its divisions.
type BusinessAssociate struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BusinessAssociateData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type BusinessAssociateData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                           
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// The Addresses array contains information on the address, phone numbers, primary contacts,                                
	// and location of the business associate, allowing clients to have multiple addresses. For                                 
	// example, companies that have a headquarters and various satellite offices.                                               
	Addresses                                                                                   []Address                       `json:"Addresses,omitempty"`
	// Describes the set of authorities held by a business associate to make payments, sign                                     
	// contracts etc. Considered as business context.                                                                           
	Authorities                                                                                 []OrganisationAuthority         `json:"Authorities,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                  
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                 
	// If used, the "Source" property should identify that source system.                                                       
	BusinessAssociateID                                                                         *string                         `json:"BusinessAssociateID,omitempty"`
	// Represents the contact information for a company. May be a phone number, fax number,                                     
	// EMail address, Web URL etc.                                                                                              
	Contacts                                                                                    []AbstractContactUserProfile    `json:"Contacts,omitempty"`
	// The current status of the Business Associate, such as Active, In Receivership, Sold,                                     
	// Merged. Main sheet                                                                                                       
	CurrentStatus                                                                               *CurrentBusinessAssociateStatus `json:"CurrentStatus,omitempty"`
	// Textual description of the nature of the organisation.                                                                   
	Description                                                                                 *string                         `json:"Description,omitempty"`
	// The date and time at which a given business associate becomes effective.                                                 
	EffectiveDate                                                                               *string                         `json:"EffectiveDate,omitempty"`
	// The name of the business associate.                                                                                      
	Name                                                                                        *string                         `json:"Name,omitempty"`
	// The relationship to an organisation.                                                                                     
	OrganisationID                                                                              *string                         `json:"OrganisationID,omitempty"`
	// Category the organisational structure fits into. Possible values - Operating Unit,                                       
	// Operating sub Unit, A Business, A Department, Government Agency, etc.                                                    
	OrganisationTypeID                                                                          *string                         `json:"OrganisationTypeID,omitempty"`
	// If populated, this is the parent business associate of the current business associate. In                                
	// case of de-mergers/splits, this relationship identified the Business Associate, which was                                
	// split up.                                                                                                                
	ParentBusinessAssociateID                                                                   *string                         `json:"ParentBusinessAssociateID,omitempty"`
	// Where the Business Associate is a person, this holds the contact information.                                            
	Person                                                                                      *AbstractContactUserProfile     `json:"Person,omitempty"`
	// The array of historical business associate status together with the time interval of                                     
	// validity and a remark.                                                                                                   
	PreviousStates                                                                              []BAStatus                      `json:"PreviousStates,omitempty"`
	// The reason why the business associated was formed.                                                                       
	PurposeDescription                                                                          *string                         `json:"PurposeDescription,omitempty"`
	// Narrative remarks about this Business Associate.                                                                         
	Remark                                                                                      *string                         `json:"Remark,omitempty"`
	// Describes the set of primary services provided by a business associate. For example                                      
	// drilling contractor, logging com pany, seismic broker etc.                                                               
	Services                                                                                    []Service                       `json:"Services,omitempty"`
	// The succeeding organisation/business associate in case of mergers and acquisitions.                                      
	SuccessorID                                                                                 *string                         `json:"SuccessorID,omitempty"`
	// The date and time at which a given business associate is no longer in effect.                                            
	TerminationDate                                                                             *string                         `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// An array of many addresses displayed as table. Organisation Address table contains
// information on the address, phone numbers, primary contacts, and location of the business
// associate, allowing clients to have multiple addresses. For example, compan ies that have
// a headquarters and various satellite offices.
type Address struct {
	// One or more lines of address for a business associate.                                                                
	AddressLines                                                                                []string                     `json:"AddressLines,omitempty"`
	// The type of business associate address. For example shipping, billing, sales...                                       
	AddressTypeID                                                                               *string                      `json:"AddressTypeID,omitempty"`
	// City as GeoPoliticalContext.                                                                                          
	City                                                                                        *AbstractGeoPoliticalContext `json:"City,omitempty"`
	// Unique identifier for the area that is the Country. Note that if you choose, you could                                
	// use only the City relationship and derive the Country and StateProvince (or other                                     
	// subdivision). Alternatively, you may choose to populate all three relationships                                       
	// explicitly. For example Austria, Canada, United Kingdom, USA, Venezuela.                                              
	Country                                                                                     *AbstractGeoPoliticalContext `json:"Country,omitempty"`
	// A Y/N flag indicating whether this Organisation Address is currently either active /                                  
	// valid (Y) or inactive / invalid (N).                                                                                  
	IsActive                                                                                    *bool                        `json:"IsActive,omitempty"`
	// A flag indicating this contact information is primary or preferred for the given                                      
	// AddressTypeID.                                                                                                        
	IsPreferred                                                                                 *bool                        `json:"IsPreferred,omitempty"`
	// The type of office, such as branch, lab facility, etc.                                                                
	OfficeTypeID                                                                                *string                      `json:"OfficeTypeID,omitempty"`
	// Code number assigned by the postal service identifying a mail delivery zone.                                          
	PostalCode                                                                                  *string                      `json:"PostalCode,omitempty"`
	// The primary contact for this address.                                                                                 
	PrimaryContact                                                                              *AbstractContactUserProfile  `json:"PrimaryContact,omitempty"`
	// Unique identifier for the area that is the Country Note that if you choose, you could use                             
	// only the City relationship and derive the Country and StateProvince (or other                                         
	// subdivision). Alternatively, you may choose to populate all three relationships                                       
	// explicitly. For example states, provinces or other political subdivisions of countries.                               
	ProvinceState                                                                               *AbstractGeoPoliticalContext `json:"ProvinceState,omitempty"`
	// Narrative remarks about this address.                                                                                 
	Remark                                                                                      *string                      `json:"Remark,omitempty"`
}

// A single, typed geo-political entity reference, which is 'abstracted' to
// AbstractGeoContext and then aggregated by GeoContexts properties.
//
// City as GeoPoliticalContext.
//
// Unique identifier for the area that is the Country. Note that if you choose, you could
// use only the City relationship and derive the Country and StateProvince (or other
// subdivision). Alternatively, you may choose to populate all three relationships
// explicitly. For example Austria, Canada, United Kingdom, USA, Venezuela.
//
// Unique identifier for the area that is the Country Note that if you choose, you could use
// only the City relationship and derive the Country and StateProvince (or other
// subdivision). Alternatively, you may choose to populate all three relationships
// explicitly. For example states, provinces or other political subdivisions of countries.
type AbstractGeoPoliticalContext struct {
	// Reference to GeoPoliticalEntity.                                                                 
	GeoPoliticalEntityID                                                                        *string `json:"GeoPoliticalEntityID,omitempty"`
	// The GeoPoliticalEntityType reference of the GeoPoliticalEntity (via GeoPoliticalEntityID)        
	// for application convenience.                                                                     
	GeoTypeID                                                                                   *string `json:"GeoTypeID,omitempty"`
}

// The primary contact for this address.
//
// Where the Business Associate is a person, this holds the contact information.
//
// A schema fragment, which can hold explicit contact information (contact by value) and a
// relationship to a UserProfile (contact by reference). Both ways of capturing contact
// information can be used simultaneously : the 'by value' may capture the state of the
// contact at the time of recording, while the 'by reference' relationship to UserProfile
// captures the current state of the contact.
//
// An object with properties that describe a specific person or other point-of-contact (like
// an email distribution list) that is relevant in this context (like a given data set or
// business project). The contact specified may be either internal or external to the
// organisation (something denoted via the Organisation object that is referenced). Note
// that some properties contain personally identifiable information, so it might not be
// appropriate to populate all properties in all scenarios.
//
// Unique identifier for a business associate, such as a person, company, regulatory agency,
// government or consortium.
type AbstractContactUserProfile struct {
	// Additional information about the contact                                                         
	Comment                                                                                     *string `json:"Comment,omitempty"`
	// The data governance role assigned to this contact if and only if the context has a data          
	// governance role (in context of TechnicalAssurance). The value is kept absent in all other        
	// cases.                                                                                           
	DataGovernanceRoleTypeID                                                                    *string `json:"DataGovernanceRoleTypeID,omitempty"`
	// Contact email address. Property may be left empty where it is inappropriate to provide           
	// personally identifiable information.                                                             
	EmailAddress                                                                                *string `json:"EmailAddress,omitempty"`
	// Name of the individual contact. Property may be left empty where it is inappropriate to          
	// provide personally identifiable information.                                                     
	Name                                                                                        *string `json:"Name,omitempty"`
	// Reference to the company the contact is associated with.                                         
	OrganisationID                                                                              *string `json:"OrganisationID,omitempty"`
	// Contact phone number. Property may be left empty where it is inappropriate to provide            
	// personally identifiable information.                                                             
	PhoneNumber                                                                                 *string `json:"PhoneNumber,omitempty"`
	// The identifier of a reference value for the role of the contact within the associated            
	// organisation, such as Account owner, Sales Representative, Technical Support, Project            
	// Manager, Party Chief, Client Representative, Senior Observer.                                    
	RoleTypeID                                                                                  *string `json:"RoleTypeID,omitempty"`
	// The persona in context of workflows associated with this contact, as used in                     
	// TechnicalAssurance.                                                                              
	WorkflowPersonaTypeID                                                                       *string `json:"WorkflowPersonaTypeID,omitempty"`
	// The contact information by reference to a UserProfile record.                                    
	UserProfileID                                                                               *string `json:"UserProfileID,omitempty"`
}

// Describes the authority held by a business associate to make payments, sign contracts
// etc. Considered in a business context. Application or database authorities are held in
// ENTITLEMENTS.
type OrganisationAuthority struct {
	// The unique identifier of the BusinessAssociate who authorized this level of authority.           
	AuthorisedByID                                                                              *string `json:"AuthorisedByID,omitempty"`
	// Unique identifier for the row that describes the authority that a business associate has         
	// over business objects.                                                                           
	AuthorityID                                                                                 *string `json:"AuthorityID,omitempty"`
	// The type of authority given to a business associate, often an employee of a company.             
	// Authority may be extended for purchase authorizations, to sign contracts or to enter into        
	// negotiations etc.                                                                                
	AuthorityTypeID                                                                             *string `json:"AuthorityTypeID,omitempty"`
	// Date on which this Authority came into effect.                                                   
	EffectiveDate                                                                               *string `json:"EffectiveDate,omitempty"`
	// A flag indicating whether this data is currently either active / valid (True) or inactive        
	// / invalid (False).                                                                               
	IsActive                                                                                    *bool   `json:"IsActive,omitempty"`
	// Narrative remarks about this BusinessAssociate Authority.                                        
	Remark                                                                                      *string `json:"Remark,omitempty"`
	// The unique identifier of the BusinessAssociate who the authorized person represents for          
	// this authority. May be a subsidiary, a company etc.                                              
	RepresentedByID                                                                             *string `json:"RepresentedByID,omitempty"`
	// Date on which this Authority was no longer in effect.                                            
	TerminationDate                                                                             *string `json:"TerminationDate,omitempty"`
}

// The current status of the Business Associate, such as Active, In Receivership, Sold,
// Merged. Main sheet
type CurrentBusinessAssociateStatus struct {
	// The date and time at which a given business associate status becomes effective.             
	EffectiveDate                                                                          *string `json:"EffectiveDate,omitempty"`
	// A remark about the business associate status in time.                                       
	Remark                                                                                 *string `json:"Remark,omitempty"`
	// The current status of the Business Associate, such as Active, In Receivership, Sold,        
	// Merged. Property #1                                                                         
	StatusTypeID                                                                           *string `json:"StatusTypeID,omitempty"`
	// The date and time at which a given business associate status is no longer in effect.        
	TerminationDate                                                                        *string `json:"TerminationDate,omitempty"`
}

// Describes a BusinessAssociate's status in time.
type BAStatus struct {
	// The date and time at which a given business associate status becomes effective.             
	EffectiveDate                                                                          *string `json:"EffectiveDate,omitempty"`
	// A remark about the business associate status in time.                                       
	Remark                                                                                 *string `json:"Remark,omitempty"`
	// The current status of the Business Associate, such as Active, In Receivership, Sold,        
	// Merged. Property #1                                                                         
	StatusTypeID                                                                           *string `json:"StatusTypeID,omitempty"`
	// The date and time at which a given business associate status is no longer in effect.        
	TerminationDate                                                                        *string `json:"TerminationDate,omitempty"`
}

// Describes the primary services provided by a business associate. For example drilling
// contractor, logging company, seismic broker etc.
type Service struct {
	// The date on which the service came into effect.                                            
	EffectiveDate                                                                         *string `json:"EffectiveDate,omitempty"`
	// A flag indicating whether this Service is currently either active/valid (True) or          
	// inactive/invalid (False).                                                                  
	IsActive                                                                              *bool   `json:"IsActive,omitempty"`
	// Narrative remarks about this service.                                                      
	Remark                                                                                *string `json:"Remark,omitempty"`
	// A code indicating the quality of service received from this service.                       
	ServiceQualityTypeID                                                                  *string `json:"ServiceQualityTypeID,omitempty"`
	// The service that a business associate provides. For example well logging, drilling,        
	// application development.                                                                   
	ServiceTypeID                                                                         *string `json:"ServiceTypeID,omitempty"`
	// The date on which this service was no longer in effect.                                    
	TerminationDate                                                                       *string `json:"TerminationDate,omitempty"`
}

// The record of a technical or business decision capturing the context of the decision.
type BusinessDecision struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *BusinessDecisionData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type BusinessDecisionData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// The relationship to the current DecisionApprovalStatus.                                                               
	ApprovalStatusID                                                                            *string                      `json:"ApprovalStatusID,omitempty"`
	// Individuals involved in the decision, including those who might not be decision makers or                             
	// owners. Decision contributors might gather alternatives, data points, and decision                                    
	// criteria that are ultimately used by decision makers.                                                                 
	Contributors                                                                                []AbstractContactUserProfile `json:"Contributors,omitempty"`
	// The actual date when the decision was taken.                                                                          
	DecisionDate                                                                                *string                      `json:"DecisionDate,omitempty"`
	// The planned due date for the decision to be taken.                                                                    
	DecisionDueDate                                                                             *string                      `json:"DecisionDueDate,omitempty"`
	// The relationship to the current DecisionLevel.                                                                        
	DecisionLevelID                                                                             *string                      `json:"DecisionLevelID,omitempty"`
	// Individuals who decide on one option upon which to take action, usually by comparison                                 
	// with other option alternatives. Decision makers are usually responsible for the decision                              
	// date and weighing decision alternatives.                                                                              
	DecisionMakers                                                                              []AbstractContactUserProfile `json:"DecisionMakers,omitempty"`
	// Individuals who are responsible for taking action based on the decision that was made and                             
	// defending the option chosen, or reviewing it in the future if change is needed.                                       
	DecisionOwners                                                                              []AbstractContactUserProfile `json:"DecisionOwners,omitempty"`
	// The 6-component decision quality object.                                                                              
	DecisionQualities                                                                           *DecisionQualities           `json:"DecisionQualities,omitempty"`
	// A text summarizing decision highlights and the reasoning behind the decision.                                         
	DecisionSummary                                                                             *string                      `json:"DecisionSummary,omitempty"`
	// The project name this decision is associated with to be used for discovery.                                           
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// The relationships to potential multiple preceding activity or projects.                                               
	PriorActivityIDs                                                                            []string                     `json:"PriorActivityIDs,omitempty"`
	// An array of free remarks or annotations.                                                                              
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// The document containing the risk assessment.                                                                          
	RiskAssessmentDocument                                                                      *string                      `json:"RiskAssessmentDocument,omitempty"`
	// The list of identified risks.                                                                                         
	RiskIDs                                                                                     []string                     `json:"RiskIDs,omitempty"`
	// If multiple DecisionQualities.DoableAlternatives[] are recorded, this property holds the                              
	// SequenceNumber decided as the selected alternative.                                                                   
	SelectedAlternativeSequenceNumber                                                           *int64                       `json:"SelectedAlternativeSequenceNumber,omitempty"`
	// Any events, that may cause a re-evaluation of the decision.                                                           
	Triggers                                                                                    []AbstractTrigger            `json:"Triggers,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// One step/interval in an Activity's or ProjectActivity's state.
//
// The current or last state this activity transitioned to. It is a copy of the last element
// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay
// empty.
type AbstractActivityState struct {
	// The ActivityStatus is a set of major activity phases that are significant to business             
	// stakeholders.                                                                                     
	ActivityStatusID                                                                          *string    `json:"ActivityStatusID,omitempty"`
	// The date and time at which the activity status becomes effective.                                 
	EffectiveDateTime                                                                         *time.Time `json:"EffectiveDateTime,omitempty"`
	// An optional remark associated with the ActivityStatus and time interval.                          
	Remark                                                                                    *string    `json:"Remark,omitempty"`
	// The date and time at which the activity status is no longer in effect. For still                  
	// effective activity states, the TerminationDateTime is left absent. For zero-duration              
	// intervals (events), the TerminationDateTime set to the same value as EffectiveDateTime.           
	TerminationDateTime                                                                       *time.Time `json:"TerminationDateTime,omitempty"`
}

// The 6-component decision quality object.
type DecisionQualities struct {
	// Context about the decision quality 'appropriate frame' element.                                               
	AppropriateFrame                                                                 *AbstractDecisionQualityElement `json:"AppropriateFrame,omitempty"`
	// Context about the decision quality 'commitment to action' element.                                            
	CommitmentToAction                                                               *AbstractDecisionQualityElement `json:"CommitmentToAction,omitempty"`
	// Context about the decision quality 'creative, doable alternatives' elements.                                  
	DoableAlternatives                                                               []OneAlternative                `json:"DoableAlternatives,omitempty"`
	// Context about the decision quality 'meaningful, reliable information' element.                                
	InformationReliability                                                           *AbstractDecisionQualityElement `json:"InformationReliability,omitempty"`
	// Context about the decision quality 'logically correct reasoning' element.                                     
	ReasoningCorrectness                                                             *AbstractDecisionQualityElement `json:"ReasoningCorrectness,omitempty"`
	// Context about the decision quality 'clear values and trade-off' element.                                      
	TradeOffAnalysis                                                                 *AbstractDecisionQualityElement `json:"TradeOffAnalysis,omitempty"`
}

// Context about the decision quality 'appropriate frame' element.
//
// The context for a decision quality element according to
// https://www.decisionprofessionals.com, i.e., one of AppropriateFrame, DoableAlternatives,
// InformationReliability, TradeOffAnalysis, ReasoningCorrectness, CommitmentToAction.
//
// Context about the decision quality 'commitment to action' element.
//
// Context about the decision quality 'meaningful, reliable information' element.
//
// Context about the decision quality 'logically correct reasoning' element.
//
// Context about the decision quality 'clear values and trade-off' element.
type AbstractDecisionQualityElement struct {
	// The assessed decision quality (Sufficient, within acceptable range and residual risk,                     
	// insufficient)                                                                                             
	AssessmentID                                                                                *string          `json:"AssessmentID,omitempty"`
	// A simple text providing the necessary evidence for this aspect of decision quality.                       
	EvidenceAsText                                                                              *string          `json:"EvidenceAsText,omitempty"`
	// The related PersistedCollection, which keeps the data context for this aspect of decision                 
	// quality.                                                                                                  
	EvidenceDataCollectionID                                                                    *string          `json:"EvidenceDataCollectionID,omitempty"`
	// The related Document holding the evidence for this aspect of decision quality.                            
	EvidenceDocumentID                                                                          *string          `json:"EvidenceDocumentID,omitempty"`
	// The array of remarks.                                                                                     
	Remarks                                                                                     []AbstractRemark `json:"Remarks,omitempty"`
}

// A remark object, pairing a remark text with a source, e.g. an author, and a date, which
// is typically included in an array. The RemarkSequenceNumber acts as unique key in this
// case.
//
// This is used to capture information regarding the methodology used in correcting rates
// acquired during the sample acquisition event. The property is only used in conjunction
// with SeparatorSampleAcquisition
//
// Remarks or comments about this sample container.
type AbstractRemark struct {
	// A descriptive comment for this remark.                                                          
	Remark                                                                                     *string `json:"Remark,omitempty"`
	// The date the remark was issued.                                                                 
	RemarkDate                                                                                 *string `json:"RemarkDate,omitempty"`
	// A unique identifier for each remark record. This identifier is used to uniquely identify        
	// a member in an array of remarks.                                                                
	RemarkSequenceNumber                                                                       *int64  `json:"RemarkSequenceNumber,omitempty"`
	// The person, vendor, interpreter or other provider of information.                               
	RemarkSource                                                                               *string `json:"RemarkSource,omitempty"`
}

// A condition, which causes a re-evaluation of the decision and optionally the re-execution
// of a workflow.
//
// Context about the decision quality 'appropriate frame' element.
//
// The context for a decision quality element according to
// https://www.decisionprofessionals.com, i.e., one of AppropriateFrame, DoableAlternatives,
// InformationReliability, TradeOffAnalysis, ReasoningCorrectness, CommitmentToAction.
//
// Context about the decision quality 'commitment to action' element.
//
// Context about the decision quality 'meaningful, reliable information' element.
//
// Context about the decision quality 'logically correct reasoning' element.
//
// Context about the decision quality 'clear values and trade-off' element.
type OneAlternative struct {
	// The sequence number as key into the array of  DoableAlternatives. The sequence number                      
	// stays invariant in the life of the record. The SequenceNumber is mandatory.                                
	SequenceNumber                                                                              int64             `json:"SequenceNumber"`
	// The optional list of ActivityTemplates to trigger activities if the DoableAlternatives                     
	// element is selected.                                                                                       
	Triggers                                                                                    []AbstractTrigger `json:"Triggers,omitempty"`
	// The assessed decision quality (Sufficient, within acceptable range and residual risk,                      
	// insufficient)                                                                                              
	AssessmentID                                                                                *string           `json:"AssessmentID,omitempty"`
	// A simple text providing the necessary evidence for this aspect of decision quality.                        
	EvidenceAsText                                                                              *string           `json:"EvidenceAsText,omitempty"`
	// The related PersistedCollection, which keeps the data context for this aspect of decision                  
	// quality.                                                                                                   
	EvidenceDataCollectionID                                                                    *string           `json:"EvidenceDataCollectionID,omitempty"`
	// The related Document holding the evidence for this aspect of decision quality.                             
	EvidenceDocumentID                                                                          *string           `json:"EvidenceDocumentID,omitempty"`
	// The array of remarks.                                                                                      
	Remarks                                                                                     []AbstractRemark  `json:"Remarks,omitempty"`
}

// A condition, which causes a re-evaluation of the decision and optionally the re-execution
// of a workflow.
type AbstractTrigger struct {
	// The condition expressed as human readable text, which triggers the re-evaluation of the                   
	// decision.                                                                                                 
	Condition                                                                                   *string          `json:"Condition,omitempty"`
	// An array of free remarks or annotations.                                                                  
	Remarks                                                                                     []AbstractRemark `json:"Remarks,omitempty"`
	// Relationships to zero or more activity templates representing workflows, which need to be                 
	// executed when the condition is met.                                                                       
	WorkflowIDs                                                                                 []string         `json:"WorkflowIDs,omitempty"`
}

// The design of the Casing in a wellbore
type CasingDesign struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *CasingDesignData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type CasingDesignData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Description of the Hole Section to which this Casing Design belongs                                                   
	HoleSectionID                                                                               string                       `json:"HoleSectionID"`
	// Name of Casing Design                                                                                                 
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// A reference to the PPFG data set associated with this Casing Design                                                   
	PPFGDatasetID                                                                               *string                      `json:"PPFGDatasetID,omitempty"`
	// A reference to the trajectory used to define this casing design                                                       
	TrajectoryID                                                                                *string                      `json:"TrajectoryID,omitempty"`
	// A reference to the Tubular records that are associated with this Casing Design                                        
	TubularID                                                                                   string                       `json:"TubularID"`
	// Identifier of the planned Wellbore                                                                                    
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// The context for a collaboration project, a multi-user collaboration space, also known as
// "system of engagement" with references to data in the "system of record".
type CollaborationProject struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *CollaborationProjectData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type CollaborationProjectData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                
	ExistenceKind                                                                               *string                               `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                         
	ResourceCurationStatus                                                                      *string                               `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                 
	ResourceHomeRegionID                                                                        *string                               `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                              
	ResourceHostRegionIDs                                                                       []string                              `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                               
	ResourceLifecycleStatus                                                                     *string                               `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                 
	ResourceSecurityClassification                                                              *string                               `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                 
	// organization, agency, system, internal team, or individual. For informational purposes                                         
	// only, the list of sources is not governed.                                                                                     
	Source                                                                                      *string                               `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                          
	// based on data quality. Clarifications: Since Certified is the highest classification of                                        
	// suitable quality, any further change or versioning of a Certified record should be                                             
	// carefully considered and justified. If a Technical Assurance value is not populated then                                       
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                       
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceID                                                                        *string                               `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                         
	// multiple types or multiple values of the same type.                                                                            
	GeoContexts                                                                                 []AbstractGeoContext                  `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                       
	// should include all the identifiers).                                                                                           
	NameAliases                                                                                 []AbstractAliasNames                  `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                         
	// not appropriate).                                                                                                              
	SpatialLocation                                                                             *AbstractSpatialLocation              `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                        
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                 
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                         
	// further change or versioning of a Certified record should be carefully considered and                                          
	// justified. If a Technical Assurance value is not populated then one can assume the data                                        
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                           
	// values are not intended to be used for the identification of a single "preferred" or                                           
	// "definitive" record by comparison with other records.                                                                          
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance          `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                 
	// master-data record's overall suitability for general business consumption based on data                                        
	// quality. Clarifications: Since Certified is the highest classification of suitable                                             
	// quality, any further change or versioning of a Certified record should be carefully                                            
	// considered and justified. If a Technical Assurance value is not populated then one can                                         
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                               
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceTypeID                                                                    *string                               `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                       
	VersionCreationReason                                                                       *string                               `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                            
	ContractIDs                                                                                 []string                              `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                            
	Contractors                                                                                 []Contractors                         `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                          
	FundsAuthorizations                                                                         []FundsAuthorizations                 `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                  
	Operator                                                                                    *string                               `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                      
	// could reference a separate Persons master data object.                                                                         
	Personnel                                                                                   []PurplePersonnel                     `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                              
	ProjectBeginDate                                                                            *time.Time                            `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                              
	ProjectEndDate                                                                              *time.Time                            `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                        
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                       
	// If used, the "Source" property should identify that source system.                                                             
	ProjectID                                                                                   *string                               `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                     
	ProjectName                                                                                 *string                               `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                        
	// business identifiers.                                                                                                          
	ProjectNames                                                                                []AbstractAliasNames                  `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                        
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                      
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                       
	// level.                                                                                                                         
	ProjectSpecifications                                                                       []ProjectSpecifications               `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                           
	ProjectStates                                                                               []ProjectStates                       `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                    
	Purpose                                                                                     *string                               `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                           
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                       
	ActivityStates                                                                              []AbstractActivityState               `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                       
	// values.                                                                                                                        
	ActivityTemplateID                                                                          *string                               `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                      
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                        
	// empty.                                                                                                                         
	LastActivityState                                                                           *AbstractActivityState                `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                          
	// objects which are inputs and outputs of the activity.                                                                          
	Parameters                                                                                  []DefaultValueElement                 `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                              
	ParentProjectID                                                                             *string                               `json:"ParentProjectID,omitempty"`
	// Collaboration Project's Timeline end date. Used for planning and tracking but no expected                                      
	// enforcement by DP Services.                                                                                                    
	CreationDateTime                                                                            *time.Time                            `json:"CreationDateTime,omitempty"`
	// ACL applied to WIP resources (resources in this CP's namespace) by default.                                                    
	DefaultWIPACL                                                                               *AccessControlList                    `json:"DefaultWIPACL,omitempty"`
	// Human-readable project description.                                                                                            
	Description                                                                                 *string                               `json:"Description,omitempty"`
	// Collaboration Project's Timeline end date. Used for planning and tracking but no expected                                      
	// enforcement by DP Services.                                                                                                    
	EndDateTime                                                                                 *time.Time                            `json:"EndDateTime,omitempty"`
	// Recorded lifecycle events, like lifecycle status transitions and publish WIP events.                                           
	LifecycleEvents                                                                             []AbstractCollaborationLifecycleEvent `json:"LifecycleEvents,omitempty"`
	// CollaborationProject lifecycle status, determining, what operations are permitted.                                             
	LifecycleStatusID                                                                           *string                               `json:"LifecycleStatusID,omitempty"`
	// Data platform namespace used for storing CP's WIP resources.                                                                   
	Namespace                                                                                   *string                               `json:"Namespace,omitempty"`
	// ACL applied to project contributors. Controls CPDC and WIP data access.                                                        
	ProjectContributorACL                                                                       *AccessControlList                    `json:"ProjectContributorACL,omitempty"`
	// Data Platform System of Record trusted (input) resources that make up the Collaboration                                        
	// Project Data Collection.                                                                                                       
	TrustedCollectionID                                                                         *string                               `json:"TrustedCollectionID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}                `json:"ExtensionProperties,omitempty"`
}

// An event in the lifecycle of a CollaborationProject containing references to the
// CollaborationProjectCollections involved at the time of the event.
type AbstractCollaborationLifecycleEvent struct {
	// The date and time of the event.                                                                
	DateTime                                                                               *time.Time `json:"DateTime,omitempty"`
	// A unique identifier of this event element in a sequence of events as, e.g., in                 
	// CollaborationProject.                                                                          
	EventID                                                                                *string    `json:"EventID,omitempty"`
	// A user-given event name.                                                                       
	Name                                                                                   *string    `json:"Name,omitempty"`
	// A user defined remark associated with this event.                                              
	Remark                                                                                 *string    `json:"Remark,omitempty"`
	// The relationship to a CollaborationProjectCollection containing the System of Record           
	// resources used by the project.                                                                 
	ResourceCollectionID                                                                   *string    `json:"ResourceCollectionID,omitempty"`
	// The relationship to a CollaborationProjectCollection containing the Work in Progress           
	// resources published in the context of the project.                                             
	WIPResourceCollectionID                                                                *string    `json:"WIPResourceCollectionID,omitempty"`
}

// An instance of a ColumnBasedTableTemplate provides a re-usable set of column definitions,
// or column meta data, which column based table records may selectively refer to. The
// references is established via the ColumnName in the Columns[] array. The
// ColumnBasedTableTemplate can be used with all (typically work-product-component) types,
// which include AbstractColumnBasedTable  or the generic
// work-product-component--ColumnBasedTable itself.
type ColumnBasedTableTemplate struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ColumnBasedTableTemplateData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type ColumnBasedTableTemplateData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                              
	// classification associated to the legal.legaltags[] is evaluated by platform services                                     
	// instead. Previously:  Classifies the security level of the resource.                                                     
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// A common column storing values of a particular property kind. For the                                                    
	// ColumnBasedTableTemplate the data.Columns[].ColumnName is *mandatory* although it is                                     
	// defined as optional in the schema. Instances of column based table records will use their                                
	// data.Columns[].ColumnName as reference (matching key) into the Columns[] array of the                                    
	// template.                                                                                                                
	Columns                                                                                     []AbstractReferencePropertyType `json:"Columns,omitempty"`
	// A text explaining what the ColumnBasedTableTemplate is expected to be used for.                                          
	Description                                                                                 *string                         `json:"Description,omitempty"`
	// An optional list of column metadata whose values are considered as keys/indices.                                         
	KeyColumns                                                                                  []AbstractReferencePropertyType `json:"KeyColumns,omitempty"`
	// The user facing name of this ColumnBasedTable template.                                                                  
	Name                                                                                        *string                         `json:"Name,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// The purpose of this schema is best understood in the context of a columnar dataset: the
// AbstractReferencePropertyType describes a column in a columnar dataset by declaring its
// value type (number, string), a UnitQuantity if the value type is a number, a kind if the
// string value is actually a relationship to a e.g. reference-data type.
type AbstractReferencePropertyType struct {
	// When describing a table column, e.g., in an associated dataset, this optional property                         
	// allows the association of the record column definition(s) to dataset table column(s).                          
	ColumnName                                                                                  *string               `json:"ColumnName,omitempty"`
	// Ordered array with: FacetType, FacetRole, both calling specific references                                     
	//                                                                                                                
	// FacetType: Enumerations of the type of additional context about the nature of a property                       
	// type (it may include conditions, direction, qualifiers, or statistics).                                        
	//                                                                                                                
	// FacetRole: Additional context about the nature of a property type. The purpose of such                         
	// attribute is to minimize the need to create specialized property types by mutualizing                          
	// some well known qualifiers such as "maximum", "minimum" which apply to a lot of different                      
	// property types.                                                                                                
	FacetIDs                                                                                    []AbstractFacet       `json:"FacetIDs,omitempty"`
	// It holds the PropertyType associated with this reference property type, further defining                       
	// the semantics of the value. It contains a relationship to PropertyType record and its                          
	// (de-normalized) name. String or number values can represent e.g. A date or a time by                           
	// referring to the respective PropertyType record id.                                                            
	PropertyType                                                                                *AbstractPropertyType `json:"PropertyType,omitempty"`
	// Only populated if ValueType=="string" and the values are expected to represent record                          
	// ids, e.g. to a reference-data type, then this value holds the kind (optionally without                         
	// the semantic version number).                                                                                  
	RelationshipTargetKind                                                                      *string               `json:"RelationshipTargetKind,omitempty"`
	// Only populated of the ValueType is "number". It holds the UnitOfMeasure associated with                        
	// this reference property type. It is a relationship to a UnitOfMeasure record. If the                           
	// UnitQuantityID and/or PropertyType.PropertyTypeID are populated in addition to                                 
	// UnitOfMeasureID, the referenced records must finally share the same dimension code. See                        
	// Schema Usage Guide 'Unit of Measure Foundation'.                                                               
	UnitOfMeasureID                                                                             *string               `json:"UnitOfMeasureID,omitempty"`
	// Only populated of the ValueType is "number". It holds the UnitQuantity associated with                         
	// this reference property type. It is a relationship to UnitQuantity record.                                     
	UnitQuantityID                                                                              *string               `json:"UnitQuantityID,omitempty"`
	// The number of values in a tuple, e.g. For coordinates. The default is 1.                                       
	ValueCount                                                                                  *int64                `json:"ValueCount,omitempty"`
	// The type of value to expect for this reference property, either "number" (floating point                       
	// number), "integer",  "string", or "boolean".                                                                   
	ValueType                                                                                   *string               `json:"ValueType,omitempty"`
}

// A tuple FacetType, FacetRole, both calling specific references
//
// FacetType: Enumeration of the type of additional context about the nature of a property
// type (it may include conditions, direction, qualifiers, or statistics).
//
// FacetRole: Additional context about the nature of a property type. The purpose of such
// attribute is to minimize the need to create specialized property types by mutualizing
// some well known qualifiers such as "maximum", "minimum" which apply to a lot of different
// property types.
type AbstractFacet struct {
	// Additional context about the nature of a property type. The purpose of such attribute is        
	// to minimize the need to create specialized property types by mutualizing some well known        
	// qualifiers such as "maximum", "minimum" which apply to a lot of different property types.       
	FacetRoleID                                                                                 string `json:"FacetRoleID"`
	// FacetType: An 'enumeration' of the type of additional context about the nature of a             
	// property type (it may include conditions, direction, qualifiers, or statistics).                
	FacetTypeID                                                                                 string `json:"FacetTypeID"`
}

// Scheduling, data fetch, and ingestion configuration for automated jobs against a
// registered connected data source.
type ConnectedSourceDataJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ConnectedSourceDataJobData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type ConnectedSourceDataJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// Indicates if a scheduled job is active (will be executed) or not (won't be executed)                                  
	ActiveIndicator                                                                             bool                         `json:"ActiveIndicator"`
	// ID of the external partition containing the desired data                                                              
	ConnectedSourceDataPartitionID                                                              string                       `json:"ConnectedSourceDataPartitionID"`
	// ID reference of the parent Connected Source Registry Entry                                                            
	ConnectedSourceRegistryEntryID                                                              string                       `json:"ConnectedSourceRegistryEntryID"`
	// Source system schema authority.                                                                                       
	ConnectedSourceSchemaAuthority                                                              *string                      `json:"ConnectedSourceSchemaAuthority,omitempty"`
	// The maximum create/update time for data records (UTC).                                                                
	CreateTimeMax                                                                               *time.Time                   `json:"CreateTimeMax,omitempty"`
	// The wait time, in seconds, for the eds_Ingest DAG run upon completion of the Manifest                                 
	// Ingestion (osdu_ingest) DAG run, used to retrieve details from the XCom summary.                                      
	EdsIngestWaitTime                                                                           *float64                     `json:"EdsIngestWaitTime,omitempty"`
	// A list of external processes configuration to be executed by EDS                                                      
	ExternalProcesses                                                                           []ExternalProcess            `json:"ExternalProcesses,omitempty"`
	// A temporary solution before these references are stored in a related, external record for                             
	// scalability: The data type/schema/kind of data being retrieved form the external source.                              
	// The failed records list which is retrieved from the external source.                                                  
	FailedRecords                                                                               []string                     `json:"FailedRecords,omitempty"`
	// End time of the records to be fetched from the source system.                                                         
	FetchEndDateTime                                                                            *time.Time                   `json:"FetchEndDateTime,omitempty"`
	// The data type/schema/kind of data being retrieved form the external source. The returned                              
	// value should validate against the corresponding registered schema in the OSDU schema                                  
	// service.                                                                                                              
	FetchKind                                                                                   string                       `json:"FetchKind"`
	// Start time of the records to be fetched from the source system.                                                       
	FetchStartDateTime                                                                          *time.Time                   `json:"FetchStartDateTime,omitempty"`
	// Filter applied to the data fetch request, using data members in the FetchKind schema.                                 
	Filter                                                                                      string                       `json:"Filter"`
	// Indicates if the dummy parent data mapping should be considered or not, by default it                                 
	// will be false (and false if absent), if true ParentDataMappingDummyMasterIDs should be                                
	// set.                                                                                                                  
	IsDummyParentMappingEnabled                                                                 *bool                        `json:"IsDummyParentMappingEnabled,omitempty"`
	// The last successful run date of the job (UTC)                                                                         
	LastSuccessfulRunDateUTC                                                                    *time.Time                   `json:"LastSuccessfulRunDateUTC,omitempty"`
	// The maximum number of records to be processed in this job.                                                            
	LimitRecords                                                                                *int64                       `json:"LimitRecords,omitempty"`
	// Descriptive label given to a scheduled job.                                                                           
	Name                                                                                        string                       `json:"Name"`
	// List of access control lists (ACLs) to be injected into the manifests of external data                                
	// before ingestion                                                                                                      
	OnIngestionACL                                                                              *AccessControlList           `json:"OnIngestionAcl,omitempty"`
	// Consumer partition the incoming data will be placed in.                                                               
	OnIngestionDataPartitionID                                                                  string                       `json:"OnIngestionDataPartitionID"`
	// List of legal tags to be injected into the manifests of external data before ingestion                                
	OnIngestionLegalTags                                                                        *LegalMetaData               `json:"OnIngestionLegalTags,omitempty"`
	// Consumer schema authority for the incoming data will be placed in.                                                    
	OnIngestionSchemaAuthority                                                                  *string                      `json:"OnIngestionSchemaAuthority,omitempty"`
	// A fixed dummy master ID is set in advance and will be used if the master record is                                    
	// unavailable in the consumer system. Multiple master ids can be defined as array members;                              
	// ids are defined without data-partition example: 'master-data--Well:DummyWell'.                                        
	ParentDataMappingDummyMasterIDs                                                             []string                     `json:"ParentDataMappingDummyMasterIDs,omitempty"`
	// Schedule this job should run on, in CRON format                                                                       
	ScheduleUTC                                                                                 string                       `json:"ScheduleUTC"`
	// TriggerNaturalizationDAG (default false) triggers, if true, a naturalization DAG                                      
	// (directed acyclic graph) that will add the data file (SEG-Y, LAS, etc.) to the target                                 
	// OSDU Platform from the source system and convert the WPC's child dataset from "external"                              
	// to "internal".                                                                                                        
	TriggerNaturalizationDAG                                                                    *bool                        `json:"TriggerNaturalizationDAG,omitempty"`
	// DEPRECATED: Superseded by the contents of appropriate parameters in an ActivityTemplate                               
	// instance identified by data.ActivityTemplateID. In earlier versions: List of workflows                                
	// and their configuration used in this scheduled job                                                                    
	Workflows                                                                                   []Workflow                   `json:"Workflows,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A workflow configuration in the context of a scheduled job.
type ExternalProcess struct {
	// ID reference of the External Process Type                                                      
	EdsExternalProcessTypeID                                                                   string `json:"EdsExternalProcessTypeID"`
	// Reference name for the security scheme in the ConnectedSourceRegistryEntry document this       
	// external process belongs to.                                                                   
	SecuritySchemeName                                                                         string `json:"SecuritySchemeName"`
	// External Process endpoint                                                                      
	URL                                                                                        string `json:"Url"`
}

// A workflow configuration in the context of a scheduled job.
type Workflow struct {
	// Allows creation of a specific handler DAG for the source type                                               
	Handler                                                                                    *string             `json:"Handler,omitempty"`
	// Name value or object Id                                                                                     
	Parameters                                                                                 []WorkflowParameter `json:"Parameters,omitempty"`
	// Reference name for the security scheme in the ConnectedSourceRegistryEntry document this                    
	// scheduled job belongs to.                                                                                   
	SecuritySchemeName                                                                         string              `json:"SecuritySchemeName"`
	// Tag given to a workflow category, such as Fetch, Ingest, Delivery                                           
	Tag                                                                                        *string             `json:"Tag,omitempty"`
	// Data source endpoint used in workflow                                                                       
	URL                                                                                        *string             `json:"Url,omitempty"`
}

// Parameter name value pair.
type WorkflowParameter struct {
	// Name of the parameter the handler expects         
	Name                                         *string `json:"Name,omitempty"`
	// Value of the parameter the handler expects        
	Value                                        *string `json:"Value,omitempty"`
}

// System-level object containing business and technical metadata for an external
// OSDU-compliant data source, used for registration of that source within the OSDU external
// data framework.
type ConnectedSourceRegistryEntry struct {
	// The access control tags associated with this entity.                                                                        
	ACL                                                                                          AccessControlList                 `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                          
	// derived.                                                                                                                    
	Ancestry                                                                                     *ParentList                       `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                    
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                       
	CreateTime                                                                                   *time.Time                        `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                     
	// System.                                                                                                                     
	CreateUser                                                                                   *string                           `json:"createUser,omitempty"`
	Data                                                                                         *ConnectedSourceRegistryEntryData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                      
	// version.                                                                                                                    
	ID                                                                                           *string                           `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                    
	// scheme follows the semantic versioning, https://semver.org/.                                                                
	Kind                                                                                         string                            `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                      
	// legal tags is managed by the Compliance Service.                                                                            
	Legal                                                                                        LegalMetaData                     `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                     
	// definitions.                                                                                                                
	Meta                                                                                         []FrameOfReferenceMetaDataItem    `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                    
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                           
	ModifyTime                                                                                   *time.Time                        `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                  
	ModifyUser                                                                                   *string                           `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                     
	// as keys and values.                                                                                                         
	Tags                                                                                         map[string]string                 `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                             
	Version                                                                                      *int64                            `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type ConnectedSourceRegistryEntryData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// References to applicable agreements governing the use of the data source                                              
	AgreementIDs                                                                                []string                     `json:"AgreementIDs,omitempty"`
	// Connectivity information for Airflow endpoints to get more information of Manifest                                    
	// Ingestion.                                                                                                            
	AirflowStableAPIURL                                                                         *string                      `json:"AirflowStableAPIUrl,omitempty"`
	// A placeholder to keep the data provider Dataset URL.                                                                  
	DatasetURL                                                                                  *string                      `json:"DatasetURL,omitempty"`
	// Additional information/description about the data source                                                              
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// Flag that determines whether the external source has a full OSDU implementation (true) or                             
	// a wrapper facade over proprietary APIs (false)                                                                        
	FullOSDUImplementationIndicator                                                             *bool                        `json:"FullOSDUImplementationIndicator,omitempty"`
	// Descriptive label given to the data source. This could be the name of an organisation                                 
	// and/or the name of a specific database or system.                                                                     
	Name                                                                                        string                       `json:"Name"`
	// DEPRECATED: Please use reference-data--ExternalReferenceValueMapping reference catalog                                
	// items instead. Temporary property awaiting a external reference-value mapping framework.                              
	// A generic dictionary of string reference-data as keys mapping to reference-value as                                   
	// string value. Only predefined reference-data and its values are permitted.                                            
	ReferenceValueMappings                                                                      map[string]interface{}       `json:"ReferenceValueMappings,omitempty"`
	// A placeholder to store the data provider Search service URL.                                                          
	SearchURL                                                                                   *string                      `json:"SearchURL,omitempty"`
	// List of security schemes available for use in authorizing against OSDU-compliant APIs of                              
	// a connected data source.                                                                                              
	SecuritySchemes                                                                             []SecurityScheme             `json:"SecuritySchemes"`
	// List of SMTP server schemes available for use in mailing the detailed EDS's report.                                   
	SMTPSchemes                                                                                 []SMTPScheme                 `json:"SmtpSchemes,omitempty"`
	// Identifier of the organisation that the registered source belongs to.                                                 
	SourceOrganisationID                                                                        *string                      `json:"SourceOrganisationID,omitempty"`
	// A placeholder to keep the data provider Storage service URL.                                                          
	StorageURL                                                                                  *string                      `json:"StorageURL,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Metadata used to mail the EDS's Report.
type SMTPScheme struct {
	// Email Trigger Frequency for the EDS report, cron job format            
	EmailTriggerFrequency                                          *string    `json:"EmailTriggerFrequency,omitempty"`
	// Unique name given to a SMTP scheme.                                    
	Name                                                           string     `json:"Name"`
	// End date till report is required.                                      
	ReportEndDate                                                  *time.Time `json:"ReportEndDate,omitempty"`
	// Start date from which report is required.                              
	ReportStartDate                                                *time.Time `json:"ReportStartDate,omitempty"`
	// Key for the SMTP host.                                                 
	SMTPHostKeyName                                                *string    `json:"SmtpHostKeyName,omitempty"`
	// Key for the SMTP password.                                             
	SMTPPasswordKeyName                                            *string    `json:"SmtpPasswordKeyName,omitempty"`
	// SMTP Port for the connection,its different for SSL/StartTLS.           
	SMTPPort                                                       *int64     `json:"SmtpPort,omitempty"`
	// List of receiver's mail addresses.                                     
	SMTPReceiverMail                                               []string   `json:"SmtpReceiverMail,omitempty"`
	// Limit to retry for the connection.                                     
	SMTPRetryLimit                                                 *int64     `json:"SmtpRetryLimit,omitempty"`
	// Sender's mail address.                                                 
	SMTPSenderMail                                                 *string    `json:"SmtpSenderMail,omitempty"`
	// Type of protocol for connection.                                       
	SMTPSSL                                                        *bool      `json:"SmtpSSL,omitempty"`
	// Type of protocol for connection.                                       
	SMTPStartTLS                                                   *bool      `json:"SmtpStartTLS,omitempty"`
	// Timeout time for the SMTP server.                                      
	SMTPTimeOut                                                    *int64     `json:"SmtpTimeOut,omitempty"`
	// Key for the SMTP user.                                                 
	SMTPUserKeyName                                                *string    `json:"SmtpUserKeyName,omitempty"`
}

// Metadata used to retrieve or generate credentials needed for authorization.
type SecurityScheme struct {
	// Key for obtaining an access token from the secret repository                                     
	AccessTokenKeyName                                                                          *string `json:"AccessTokenKeyName,omitempty"`
	// Key for obtaining an API key from the secret repository                                          
	APIKeyKeyName                                                                               *string `json:"APIKeyKeyName,omitempty"`
	// Audience used in OAuth2 flows                                                                    
	Audience                                                                                    *string `json:"Audience,omitempty"`
	// Authorization endpoint of the identity provider used in OAuth2 flows                             
	AuthorizationURL                                                                            *string `json:"AuthorizationUrl,omitempty"`
	// Url the identity provider will send the token to in OAuth2 authorization code flows              
	CallbackURL                                                                                 *string `json:"CallbackUrl,omitempty"`
	// DEPRECATED: Superseded  by ClientIDKeyName. Client ID                                            
	ClientID                                                                                    *string `json:"ClientID,omitempty"`
	// Key for obtaining the client id for use in the OAuth2 flows from the secret repository           
	ClientIDKeyName                                                                             *string `json:"ClientIDKeyName,omitempty"`
	// Key for obtaining the client secret for use in OAuth2 flows from the secret repository           
	ClientSecretKeyName                                                                         *string `json:"ClientSecretKeyName,omitempty"`
	// OAuth2 flow, or grant type                                                                       
	FlowTypeID                                                                                  *string `json:"FlowTypeID,omitempty"`
	// Unique name given to a security scheme                                                           
	Name                                                                                        string  `json:"Name"`
	// Key for obtaining Password from the secret repository                                            
	PasswordKeyName                                                                             *string `json:"PasswordKeyName,omitempty"`
	// Key for obtaining a refresh token from the secret repository                                     
	RefreshTokenKeyName                                                                         *string `json:"RefreshTokenKeyName,omitempty"`
	// Key for obtaining the space-delimited scopes list for use in OAuth2 flows from the secret        
	// repository                                                                                       
	ScopesKeyName                                                                               *string `json:"ScopesKeyName,omitempty"`
	// Url of the secret repository containing secrets for this security scheme                         
	SecretRepoURL                                                                               *string `json:"SecretRepoUrl,omitempty"`
	// Token endpoint of the identity provider used in OAuth2 flows                                     
	TokenURL                                                                                    *string `json:"TokenUrl,omitempty"`
	// Type of security schema                                                                          
	TypeID                                                                                      string  `json:"TypeID"`
	// Key for obtaining Username from the secret repository                                            
	UsernameKeyName                                                                             *string `json:"UsernameKeyName,omitempty"`
}

// DEPRECATED: Please use osdu:wks:master-data--Sample:2.1.0 or the latest version instead.
// Look for the tab sample acquisition. The activity of acquiring a core from within a
// wellbore. The two predominant types are by drilling, or by sidewall. In drilling a
// cylindrical sample of rock is collected using a core bit in conjunction with a core
// barrel and core catcher. Sidewall cores are taken from the side of the borehole, usually
// by a wireline tool. Sidewall cores may be taken using percussion or mechanical drilling.
type Coring struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *CoringData                    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The activity abstraction for projects and surveys (master-data).
type CoringData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                      
	// values.                                                                                                                       
	ActivityTemplateID                                                                          *string                              `json:"ActivityTemplateID,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                         
	// objects which are inputs and outputs of the activity.                                                                         
	Parameters                                                                                  []PurpleAbstractActivityParameter    `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                             
	ParentProjectID                                                                             *string                              `json:"ParentProjectID,omitempty"`
	// The depth of the base of the core. The reference and kind of depth (e.g. driller's depth                                      
	// versus logger's depth) is described in data.VerticalMeasurement. For SidewallCores this                                       
	// is the depth of the deepest core.                                                                                             
	BottomDepth                                                                                 *float64                             `json:"BottomDepth,omitempty"`
	// The diameter of the core.                                                                                                     
	CoreDiameter                                                                                *float64                             `json:"CoreDiameter,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system. i.e. this item is                                          
	// optional.                                                                                                                     
	CoreIdentifier                                                                              *string                              `json:"CoreIdentifier,omitempty"`
	// The vendor assigned core number.                                                                                              
	CoreNumber                                                                                  *string                              `json:"CoreNumber,omitempty"`
	// The date the core returned to surface.                                                                                        
	CoreRecoveredDate                                                                           *string                              `json:"CoreRecoveredDate,omitempty"`
	// An array contains narrative remarks pertaining to a core.                                                                     
	CoreRemarks                                                                                 []CoreRemark                         `json:"CoreRemarks,omitempty"`
	// The date of the coring operation.                                                                                             
	CoringOperationDate                                                                         *string                              `json:"CoringOperationDate,omitempty"`
	// Flag indicating whether a detailed tripping schedule is available. Available tripping                                         
	// schedules are usually a sign of controlled coring sample quality.                                                             
	HasTrippingSchedule                                                                         *bool                                `json:"HasTrippingSchedule,omitempty"`
	// Indicates if the core was oriented.                                                                                           
	IsOriented                                                                                  *bool                                `json:"IsOriented,omitempty"`
	// The name of the core. For example ACME 1 Core 1                                                                               
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// The WellLog representation carrying the preferred core-depth to logging-depth correction                                      
	// or mapping.                                                                                                                   
	PreferredDepthShiftsID                                                                      *string                              `json:"PreferredDepthShiftsID,omitempty"`
	// The kind of preservation applied to this conventional coring or sidewall core.                                                
	PreservationTypeID                                                                          *string                              `json:"PreservationTypeID,omitempty"`
	// The coring run number.                                                                                                        
	RunNumber                                                                                   *int64                               `json:"RunNumber,omitempty"`
	// The coring company that extracted the well core. For Example: ACME Limited PLC                                                
	ServiceCompanyID                                                                            *string                              `json:"ServiceCompanyID,omitempty"`
	// The depth of the top of the core. The reference and kind of depth (e.g. driller's depth                                       
	// versus logger's depth) is described in data.VerticalMeasurement. For SidewallCores this                                       
	// is the depth of the shallowest core.                                                                                          
	TopDepth                                                                                    *float64                             `json:"TopDepth,omitempty"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                          
	// WellboreID, or a standalone vertical reference which defines the vertical reference datum                                     
	// for all measured depths of the Coring record.                                                                                 
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// The relationship to the wellbore.                                                                                             
	WellboreID                                                                                  *string                              `json:"WellboreID,omitempty"`
	// The Conventional Coring specific sub-structure.                                                                               
	ConventionalCoring                                                                          *ConventionalCoring                  `json:"ConventionalCoring,omitempty"`
	// The Sidewall Coring specific sub-structure.                                                                                   
	SidewallCoring                                                                              *SidewallCoring                      `json:"SidewallCoring,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// The Conventional Coring specific sub-structure.
type ConventionalCoring struct {
	// An array of core sections.                                                                     
	CoreSections                                                                        []CoreSection `json:"CoreSections,omitempty"`
	// The name identifying the type of coring procedure used to extract the core, e.g.,              
	// Conventional Core,  Drop Cores.                                                                
	CoreTypeID                                                                          *string       `json:"CoreTypeID,omitempty"`
	// The length of core recovered in this run.                                                      
	RecoveredLength                                                                     *float64      `json:"RecoveredLength,omitempty"`
}

// An array of core sections.
type CoreSection struct {
	// The measured depth at the base of this section, typically driller's depth.           
	BottomDepth                                                                    *float64 `json:"BottomDepth,omitempty"`
	// A unique core section identifier, typically for human consumption.                   
	CoreSectionID                                                                  *string  `json:"CoreSectionID,omitempty"`
	// The length of core section recovered.                                                
	RecoveredLength                                                                *float64 `json:"RecoveredLength,omitempty"`
	// The measured depth at the top of this section, typically in driller's depth.         
	TopDepth                                                                       *float64 `json:"TopDepth,omitempty"`
}

// An array contains narrative remarks pertaining to a core.
type CoreRemark struct {
	// A descriptive comment for this remark.                                   
	Remark                                                              *string `json:"Remark,omitempty"`
	// A unique identifier for each remark record.                              
	RemarkID                                                            *string `json:"RemarkID,omitempty"`
	// The person, vendor, interpreter or other provider of information.        
	RemarkSource                                                        *string `json:"RemarkSource,omitempty"`
}

// General parameter value used in one instance of activity.
// [Without inheritance, combined specializations.]
type PurpleAbstractActivityParameter struct {
	// Parameter referencing to a top level object.                                                                  
	DataObjectParameter                                                                         *string              `json:"DataObjectParameter,omitempty"`
	// Parameter containing a double value.                                                                          
	DataQuantityParameter                                                                       *float64             `json:"DataQuantityParameter,omitempty"`
	// Identifies unit of measure for floating point value.                                                          
	DataQuantityParameterUOMID                                                                  *string              `json:"DataQuantityParameterUOMID,omitempty"`
	// When parameter is an array, used to indicate the index in the array.                                          
	Index                                                                                       *int64               `json:"Index,omitempty"`
	// Parameter containing an integer value.                                                                        
	IntegerQuantityParameter                                                                    *int64               `json:"IntegerQuantityParameter,omitempty"`
	// A nested array describing keys used to identify a parameter value. When multiple values                       
	// are provided for a given parameter, the key provides a way to identify the parameter                          
	// through its association with an object, a time index or a parameter array member via                          
	// ParameterKey value.                                                                                           
	Keys                                                                                        []PurpleParameterKey `json:"Keys,omitempty"`
	// [Added to cover lack of inheritance]                                                                          
	ParameterKindID                                                                             string               `json:"ParameterKindID"`
	// Reference data describing how the parameter was used by the activity, such as input,                          
	// output, control, constraint, agent, predecessor activity, successor activity.                                 
	ParameterRoleID                                                                             *string              `json:"ParameterRoleID,omitempty"`
	// Textual description about how this parameter was selected.                                                    
	Selection                                                                                   *string              `json:"Selection,omitempty"`
	// Parameter containing a string value.                                                                          
	StringParameter                                                                             *string              `json:"StringParameter,omitempty"`
	// Parameter containing a time index value.  It is assumed that all TimeIndexParameters                          
	// within an Activity have the same date-time format, which is then described by the                             
	// FrameOfReference mechanism.                                                                                   
	TimeIndexParameter                                                                          *time.Time           `json:"TimeIndexParameter,omitempty"`
	// Name of the parameter, used to identify it in the activity. It must have an equivalent in                     
	// the ActivityTemplate parameters.                                                                              
	Title                                                                                       string               `json:"Title"`
}

// Abstract class describing a key used to identify a parameter value. When multiple values
// are provided for a given parameter, provides a way to identify the parameter through its
// association with an object, a time index, an integer...
// [Without inheritance, combined specializations.] Note: floating point numbers are not
// supported as key values; the numbers have to be formatted as strings for robust equality
// operations, which are necessary for keys.
type PurpleParameterKey struct {
	// Integer value from "ParameterKey" parameter, associated with this parameter. Example:          
	// {"ParameterKey": "index", "StringParameterKey: 2}.                                             
	IntegerParameterKey                                                                       *int64  `json:"IntegerParameterKey,omitempty"`
	// Relationship to an object ID, which acts as the parameter.                                     
	ObjectParameterKey                                                                        *string `json:"ObjectParameterKey,omitempty"`
	// The key name, which establishes an association between parameters.                             
	ParameterKey                                                                              *string `json:"ParameterKey,omitempty"`
	// String value from "ParameterKey" parameter, associated with this parameter. Can be used        
	// to associate with parameter values of type string or data quantity. In the later case,         
	// the string representation of the quantity value will be used. Example: {"ParameterKey":        
	// "facies", "StringParameterKey: "shale"}, {"ParameterKey":"depth",                              
	// "StringParameterKey":"1545.43m"}.                                                              
	StringParameterKey                                                                        *string `json:"StringParameterKey,omitempty"`
	// The time index acting as parameter key value.                                                  
	TimeIndexParameterKey                                                                     *string `json:"TimeIndexParameterKey,omitempty"`
}

// The Sidewall Coring specific sub-structure.
type SidewallCoring struct {
	// The name identifying the type of coring procedure used to extract the sidewall core,                       
	// e.g., percussion or rotary (mechanical)  sidewall core.                                                    
	CoreTypeID                                                                               *string              `json:"CoreTypeID,omitempty"`
	// The ratio between planned sidewall cores versus the actually retrieved sidewall cores.                     
	PlannedVersusActual                                                                      *float64             `json:"PlannedVersusActual,omitempty"`
	// The array of sidewall core samples, their depth and description.                                           
	SidewallCores                                                                            []SidewallCoreSample `json:"SidewallCores,omitempty"`
}

// A core taken during sidewall coring.
type SidewallCoreSample struct {
	// The measured depth at position the sidewall core was taken, typically in logger's depth.         
	Depth                                                                                      *float64 `json:"Depth,omitempty"`
	// The sidewall core sample description, if available.                                              
	Description                                                                                *string  `json:"Description,omitempty"`
	// The recovered length of the sidewall core.                                                       
	RecoveredLength                                                                            *float64 `json:"RecoveredLength,omitempty"`
	// Typically a sequential number identifying the sidewall core sample.                              
	SampleID                                                                                   *string  `json:"SampleID,omitempty"`
}

// A planned evaluation on a drilling operation
type EvaluationPlan struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *EvaluationPlanData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type EvaluationPlanData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                         
	ExistenceKind                                                                               *string                        `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                  
	ResourceCurationStatus                                                                      *string                        `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                          
	ResourceHomeRegionID                                                                        *string                        `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                       
	ResourceHostRegionIDs                                                                       []string                       `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                        
	ResourceLifecycleStatus                                                                     *string                        `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                          
	ResourceSecurityClassification                                                              *string                        `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                          
	// organization, agency, system, internal team, or individual. For informational purposes                                  
	// only, the list of sources is not governed.                                                                              
	Source                                                                                      *string                        `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                   
	// based on data quality. Clarifications: Since Certified is the highest classification of                                 
	// suitable quality, any further change or versioning of a Certified record should be                                      
	// carefully considered and justified. If a Technical Assurance value is not populated then                                
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                
	// Technical Assurance values are not intended to be used for the identification of a single                               
	// "preferred" or "definitive" record by comparison with other records.                                                    
	TechnicalAssuranceID                                                                        *string                        `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                  
	// multiple types or multiple values of the same type.                                                                     
	GeoContexts                                                                                 []AbstractGeoContext           `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                
	// should include all the identifiers).                                                                                    
	NameAliases                                                                                 []AbstractAliasNames           `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                  
	// not appropriate).                                                                                                       
	SpatialLocation                                                                             *AbstractSpatialLocation       `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                 
	// one or more workflows/personas based on data quality and reviewer's decisions.                                          
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                  
	// further change or versioning of a Certified record should be carefully considered and                                   
	// justified. If a Technical Assurance value is not populated then one can assume the data                                 
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                    
	// values are not intended to be used for the identification of a single "preferred" or                                    
	// "definitive" record by comparison with other records.                                                                   
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance   `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                          
	// master-data record's overall suitability for general business consumption based on data                                 
	// quality. Clarifications: Since Certified is the highest classification of suitable                                      
	// quality, any further change or versioning of a Certified record should be carefully                                     
	// considered and justified. If a Technical Assurance value is not populated then one can                                  
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                        
	// Technical Assurance values are not intended to be used for the identification of a single                               
	// "preferred" or "definitive" record by comparison with other records.                                                    
	TechnicalAssuranceTypeID                                                                    *string                        `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                
	VersionCreationReason                                                                       *string                        `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                     
	ContractIDs                                                                                 []string                       `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                     
	Contractors                                                                                 []Contractors                  `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                   
	FundsAuthorizations                                                                         []FundsAuthorizations          `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                           
	Operator                                                                                    *string                        `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                               
	// could reference a separate Persons master data object.                                                                  
	Personnel                                                                                   []PurplePersonnel              `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                       
	ProjectBeginDate                                                                            *time.Time                     `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                       
	ProjectEndDate                                                                              *time.Time                     `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                 
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                
	// If used, the "Source" property should identify that source system.                                                      
	ProjectID                                                                                   *string                        `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                              
	ProjectName                                                                                 *string                        `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                 
	// business identifiers.                                                                                                   
	ProjectNames                                                                                []AbstractAliasNames           `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                 
	// acquisition project it is like receiver interval, source depth, source type.  In the case                               
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                
	// level.                                                                                                                  
	ProjectSpecifications                                                                       []ProjectSpecifications        `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                    
	ProjectStates                                                                               []ProjectStates                `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                             
	Purpose                                                                                     *string                        `json:"Purpose,omitempty"`
	// Information regarding any evaluation made on the formation by analyzing cores                                           
	FormationEvaluationCorings                                                                  []Core                         `json:"FormationEvaluationCorings,omitempty"`
	// A collection of integrity evaluations made on a formation                                                               
	FormationIntegrityEvaluations                                                               []FormationIntegrityEvaluation `json:"FormationIntegrityEvaluations,omitempty"`
	// Information regarding the evaluation of the reservoir                                                                   
	ReservoirEvaluations                                                                        []DSTRun                       `json:"ReservoirEvaluations,omitempty"`
	// Identifier of the planned Wellbore                                                                                      
	WellboreID                                                                                  string                         `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}         `json:"ExtensionProperties,omitempty"`
}

// A rock sample obtained by drilling into the earth with a pipe conveyed hollow bit and
// core barrel
type Core struct {
	// A description of the core                                                                         
	Comments                                                                                    *string  `json:"Comments,omitempty"`
	// A measurement that represents the diameter of the recovered core.                                 
	CoreDiameter                                                                                *float64 `json:"CoreDiameter,omitempty"`
	// An identifier, assigned by the well operator, that uniquely identifies the sample.                
	CoreNumber                                                                                  *string  `json:"CoreNumber,omitempty"`
	// The name of the formation from which the core was extracted                                       
	FormationName                                                                               *string  `json:"FormationName,omitempty"`
	// A measurement that represents the length of the core that was recovered from the core             
	// acquisition activity.                                                                             
	Length                                                                                      *float64 `json:"Length,omitempty"`
	// The base depth of the interval to which the coring activity refers. Depth relative to             
	// Planned wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which         
	// holds the depth reference in data.VerticalMeasurement.                                            
	MeasuredDepthBase                                                                           *float64 `json:"MeasuredDepthBase,omitempty"`
	// The start depth of the interval to which the coring activity refers. Depth relative to            
	// Planned wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which         
	// holds the depth reference in data.VerticalMeasurement.                                            
	MeasuredDepthTop                                                                            *float64 `json:"MeasuredDepthTop,omitempty"`
}

// A test performed to determine the integrity of a formation
type FormationIntegrityEvaluation struct {
	// Comments associated with the formation integrity test                                             
	Comments                                                                                    *string  `json:"Comments,omitempty"`
	// The designed maximum gas volume for a given degree of underbalance which the circulation          
	// can be performed without exceeding the weakest formation in the wellbore                          
	DesignKickTolerance                                                                         *float64 `json:"DesignKickTolerance,omitempty"`
	// The depth of the interval drilled before the integrity test. Depth relative to Planned            
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds           
	// the depth reference in data.VerticalMeasurement.                                                  
	DrilledIntervalBeforeTest                                                                   *float64 `json:"DrilledIntervalBeforeTest,omitempty"`
	// The total amount of pressure exerted at a true vertical depth which is denoted in the mud         
	// density.                                                                                          
	EquivalentMudWeightEstimated                                                                *float64 `json:"EquivalentMudWeightEstimated,omitempty"`
	// The name of the formation on which the integrity test has been run.                               
	FormationName                                                                               *string  `json:"FormationName,omitempty"`
	// Indicates if a leak off has occurred during the test                                              
	HasLeakOffOccurred                                                                          *bool    `json:"HasLeakOffOccurred,omitempty"`
	// The pressure observed from the LeakOff                                                            
	LeakOffPressure                                                                             *float64 `json:"LeakOffPressure,omitempty"`
	// The maximum pressure observed at the surface during the test.                                     
	MaxTestPressureAtSurface                                                                    *float64 `json:"MaxTestPressureAtSurface,omitempty"`
	// The measured depth of the Casing Shoe during this evaluation. Depth relative to Planned           
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds           
	// the depth reference in data.VerticalMeasurement.                                                  
	MeasuredDepthCasingShoe                                                                     *float64 `json:"MeasuredDepthCasingShoe,omitempty"`
	// The type of pressure test used in the evaluation of the formation                                 
	PressureTestType                                                                            *string  `json:"PressureTestType,omitempty"`
	// The density of the fluid measured during the evaluation test                                      
	TestFluidDensity                                                                            *float64 `json:"TestFluidDensity,omitempty"`
	// The pumping rate used during the integrity test.                                                  
	TestingPumpingRate                                                                          *float64 `json:"TestingPumpingRate,omitempty"`
	// The pressure observed at the surface during the test.                                             
	TestPressureAtSurface                                                                       *float64 `json:"TestPressureAtSurface,omitempty"`
	// The true vertical depth of the Casing Shoe during this evaluation. Depth relative to              
	// Planned wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which         
	// holds the depth reference in data.VerticalMeasurement.                                            
	TrueVerticalDepthCasingShoe                                                                 *float64 `json:"TrueVerticalDepthCasingShoe,omitempty"`
	// Amount of fluid pumped during the test                                                            
	VolumePumped                                                                                *float64 `json:"VolumePumped,omitempty"`
}

// A test performed on a drillstem
type DSTRun struct {
	// Comments made regarding the Drillstem Test                                                        
	Comments                                                                                    *string  `json:"Comments,omitempty"`
	// Perforation Base Depth for the DST to run through. Depth relative to Planned wellbore             
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth          
	// reference in data.VerticalMeasurement.                                                            
	DepthPerforationBase                                                                        *float64 `json:"DepthPerforationBase,omitempty"`
	// Perforation Top Depth for the DST to run through. Depth relative to Planned wellbore ZDP.         
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth               
	// reference in data.VerticalMeasurement.                                                            
	DepthPerforationTop                                                                         *float64 `json:"DepthPerforationTop,omitempty"`
	// The name of the formation in which the test was performed.                                        
	FormationName                                                                               *string  `json:"FormationName,omitempty"`
	// Description of the Hole Section in which the evaluation will be performed                         
	HoleSectionID                                                                               *string  `json:"HoleSectionID,omitempty"`
	// Free text describing the type of the hole the DST is running through (such as "Cased",            
	// "OpenHole",…)                                                                                     
	HoleType                                                                                    *string  `json:"HoleType,omitempty"`
	// The maximum start depth for the drillstem test. Depth relative to Planned wellbore ZDP.           
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth               
	// reference in data.VerticalMeasurement.                                                            
	MaximumDepthTestStart                                                                       *float64 `json:"MaximumDepthTestStart,omitempty"`
	// The minimum start depth for the drillstem test. Depth relative to Planned wellbore ZDP.           
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth               
	// reference in data.VerticalMeasurement.                                                            
	MinimumDepthTestStart                                                                       *float64 `json:"MinimumDepthTestStart,omitempty"`
	// Depth of the Packer while running the DST                                                         
	PackerDepth                                                                                 *float64 `json:"PackerDepth,omitempty"`
	// Sequential number of the perforation that the DST is running through                              
	PerforationNumber                                                                           *float64 `json:"PerforationNumber,omitempty"`
	// Sequential number of the DST                                                                      
	Sequence                                                                                    *float64 `json:"Sequence,omitempty"`
	// Planned test length                                                                               
	TestIntervalLength                                                                          *float64 `json:"TestIntervalLength,omitempty"`
	// Planned test duration                                                                             
	TestTimeDuration                                                                            *float64 `json:"TestTimeDuration,omitempty"`
}

// A mineral deposit that has been exploited for commercial purposes.
type Field struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FieldData                     `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type FieldData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The date and time at which a given field becomes effective.                                                           
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// A textual description of the field.                                                                                   
	FieldDescription                                                                            *string                      `json:"FieldDescription,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	FieldID                                                                                     *string                      `json:"FieldID,omitempty"`
	// The name of the field, which may or may not coincide with a hydrocarbon field.                                        
	FieldName                                                                                   *string                      `json:"FieldName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                  
	// which this field entity is/has been known                                                                             
	FieldNameAliases                                                                            []AbstractAliasNames         `json:"FieldNameAliases,omitempty"`
	// The date and time at which a given field is no longer in effect.                                                      
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// The planned or actual drilling fluid program per hole section or depth interval.
type FluidsProgram struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FluidsProgramData             `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type FluidsProgramData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// An array of fluid intervals that in turn describe the target fluid properties that should                             
	// be implemented                                                                                                        
	FluidIntervals                                                                              []FluidsInterval             `json:"FluidIntervals"`
	// Identifier of the fluids supplier company                                                                             
	FluidsSupplierID                                                                            *string                      `json:"FluidsSupplierID,omitempty"`
	// Name of Fluids Program                                                                                                
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Identifier of the planned Wellbore                                                                                    
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A fluid used in the drilling of a wellbore's section
type FluidsInterval struct {
	// Comments and remarks.                                                                                
	Comments                                                                                    *string     `json:"Comments,omitempty"`
	// Provides the overall description of the drilling fluids system.                                      
	FluidsSystem                                                                                FluidSystem `json:"FluidsSystem"`
	// A fixed list of reference values describing the high level type of the drilling fluid                
	FluidTypeID                                                                                 *string     `json:"FluidTypeID,omitempty"`
	// Description of the Hole Section for this Fluids Program                                              
	HoleSectionID                                                                               *string     `json:"HoleSectionID,omitempty"`
	// The identifier of the tubular to be installed.                                                       
	InstalledTubularAssemblyID                                                                  *string     `json:"InstalledTubularAssemblyID,omitempty"`
	// The bottom measured depth of the interval in which the fluid will be used (in many cases,            
	// this Measured Depth will be the same than the one provided by                                        
	// WellboreArchitecture.HoleSection content). Depth relative to Planned wellbore ZDP.                   
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                  
	// reference in data.VerticalMeasurement.                                                               
	IntervalBaseMeasuredDepth                                                                   float64     `json:"IntervalBaseMeasuredDepth"`
	// The name of an interval in which the fluid will be used                                              
	IntervalName                                                                                string      `json:"IntervalName"`
	// The top measured depth of the interval in which the fluid will be used (in many cases,               
	// this Measured Depth will be the same than the one provided by                                        
	// WellboreArchitecture.HoleSection content). Depth relative to Planned wellbore ZDP.                   
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                  
	// reference in data.VerticalMeasurement.                                                               
	IntervalTopMeasuredDepth                                                                    float64     `json:"IntervalTopMeasuredDepth"`
	// A reference number allowing traceability back to the analysis of the fluid in a lab                  
	LabReferenceNumber                                                                          *float64    `json:"LabReferenceNumber,omitempty"`
	// Funnel viscosity in seconds.                                                                         
	ViscosityFunnel                                                                             *float64    `json:"ViscosityFunnel,omitempty"`
}

// Provides the overall description of the drilling fluids system.
type FluidSystem struct {
	// Description of the formulation to be used for the drilling activity                                     
	BarrelFormulation                                                                      []BarrelFormulation `json:"BarrelFormulation,omitempty"`
	// An array of planned / designed properties of the fluid for the Interval / Phase.                        
	// Properties may have a specified value or a range that should be maintained                              
	FluidProperties                                                                        []FluidsProperty    `json:"FluidProperties"`
	// The purpose the mud will play in this hole section (can be Sweep, Displacement Mud).                    
	FluidPurposeID                                                                         *string             `json:"FluidPurposeID,omitempty"`
	// Free text string of the common name or product name of the drilling mud.                                
	FluidSystemName                                                                        *string             `json:"FluidSystemName,omitempty"`
	// Type of polymers present in mud system.                                                                 
	PolymerType                                                                            *string             `json:"PolymerType,omitempty"`
}

// Description of the formulation of the barrel that will be part of the drilling mud
type BarrelFormulation struct {
	// The unit of measure of the planned product concentration                                          
	ConcentrationUnitOfMeasure                                                                  *string  `json:"ConcentrationUnitOfMeasure,omitempty"`
	// The actual value of the planned product concentration                                             
	ConcentrationValue                                                                          *float64 `json:"ConcentrationValue,omitempty"`
	// The code associated with the product                                                              
	ProductCode                                                                                 *string  `json:"ProductCode,omitempty"`
	// The function that the component plays in the formulation. For example Base Oil, Fresh             
	// Water, Chemical Additive                                                                          
	ProductFunction                                                                             *string  `json:"ProductFunction,omitempty"`
	// Name of the Product                                                                               
	ProductName                                                                                 string   `json:"ProductName"`
	// The packaging that the component comes in. For example Sacks, Bags. For Liquids this is           
	// usually N/A                                                                                       
	ProductPackage                                                                              *string  `json:"ProductPackage,omitempty"`
	// The specific gravity value of the component.                                                      
	ProductSg                                                                                   *float64 `json:"ProductSg,omitempty"`
	// The unit size of the component. For example if this product came in 25 lb bags then the           
	// Unit would be lbs, the UnitSize would be 25 and the Product Package would be "Bag"                
	ProductUnitOfMeasure                                                                        *string  `json:"ProductUnitOfMeasure,omitempty"`
	// The unit size of the component. For example if this product came in 25 lb bags then the           
	// Unit would be lbs, the UnitSize would be 25 and the Product Package would be "Bag"                
	ProductUnitSize                                                                             *string  `json:"ProductUnitSize,omitempty"`
	// The actual number of units of the component. The unit size of the component. For example          
	// if you wanted to use 15 x 25 lb bags then the Unit would be lbs, the UnitSize would be 25         
	// and the Product Package would be "Bag" and the Quantity would be 15                               
	Quantity                                                                                    *float64 `json:"Quantity,omitempty"`
}

// A description of fluid used in the drilling of a wellbore
type FluidsProperty struct {
	// Array of Fluids facet that describes each individual programmed property of the fluids.             
	FluidFacets                                                                               []FluidFacet `json:"FluidFacets"`
	// An open reference list of fluid properties                                                          
	FluidPropertyNameID                                                                       string       `json:"FluidPropertyNameID"`
}

// A description of an individual facet composing a fluid
type FluidFacet struct {
	// Identifier to the list of potential types of Fluid Property Facet (e.g. Measured, Range        
	// (Min), Range (Max)                                                                             
	FluidPropertyFacetNameID                                                                  string  `json:"FluidPropertyFacetNameID"`
	// The measurement unit of the Fluid Property Value                                               
	FluidPropertyUnit                                                                         string  `json:"FluidPropertyUnit"`
	// The actual value of the property                                                               
	FluidPropertyValue                                                                        float64 `json:"FluidPropertyValue"`
	// The unique identifier of the fluid property (density or temperature measurement,….)            
	MeasuredPropertyID                                                                        string  `json:"MeasuredPropertyID"`
}

// Used to capture an analysis of the drilling mud, completion fluid or other fluids pumped
// during well construction. Printed snapshots, e.g. PDF files, are captured as
// work-product-component--Document, which relate via data.LineageAssertions.
type FluidsReport struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *FluidsReportData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type FluidsReportData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// End DateTime of the reporting period                                                                                  
	EndDateTime                                                                                 time.Time                    `json:"EndDateTime"`
	// The drilling fluids that are represented on this report                                                               
	Fluid                                                                                       []Fluid                      `json:"Fluid,omitempty"`
	// Name of Fluids Report                                                                                                 
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Fluids report number                                                                                                  
	NumReport                                                                                   *float64                     `json:"NumReport,omitempty"`
	// Start DateTime of the reporting period                                                                                
	StartDateTime                                                                               time.Time                    `json:"StartDateTime"`
	// Reference to the wellbore that is the subject of this fluids report                                                   
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Information regarding an individual fluid that is part of the Drilling Report.
type Fluid struct {
	// Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid                      
	// to reach the phenolphthalein endpoint).                                                             
	AlkalinityP1                                                                               *float64    `json:"AlkalinityP1,omitempty"`
	// Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to                   
	// titrate, the reagent mixture to the phenolphthalein endpoint).                                      
	AlkalinityP2                                                                               *float64    `json:"AlkalinityP2,omitempty"`
	// Cleaning coefficient of drilling fluid                                                              
	AnnularShapeRatio                                                                          *float64    `json:"AnnularShapeRatio,omitempty"`
	// Average specific gravity of solids.                                                                 
	ASG                                                                                        *float64    `json:"Asg,omitempty"`
	// Average size of the drill cuttings.                                                                 
	AverageCuttingSize                                                                         *float64    `json:"AverageCuttingSize,omitempty"`
	// Barite content percent.                                                                             
	BaritePC                                                                                   *float64    `json:"BaritePc,omitempty"`
	// The name of the fluid as given by the supplier                                                      
	BrandName                                                                                  *string     `json:"BrandName,omitempty"`
	// Density of water phase of NAF.                                                                      
	BrineDensity                                                                               *float64    `json:"BrineDensity,omitempty"`
	// Percent brine content.                                                                              
	BrinePC                                                                                    *float64    `json:"BrinePc,omitempty"`
	// Calcium content.                                                                                    
	Calcium                                                                                    *float64    `json:"Calcium,omitempty"`
	// Calcium chloride content.                                                                           
	CalciumChloride                                                                            *float64    `json:"CalciumChloride,omitempty"`
	// Calcium chloride percent.                                                                           
	CalciumChloridePC                                                                          *float64    `json:"CalciumChloridePc,omitempty"`
	// Carbonate content.                                                                                  
	Carbonate                                                                                  *float64    `json:"Carbonate,omitempty"`
	// Chloride content.                                                                                   
	Chloride                                                                                   *float64    `json:"Chloride,omitempty"`
	// Comments and remarks.                                                                               
	Comments                                                                                   *string     `json:"Comments,omitempty"`
	// Reference to the Company performing the analysis                                                    
	CompanyID                                                                                  *string     `json:"CompanyID,omitempty"`
	// Fluid density. This excludes the cuttings.                                                          
	Density                                                                                    *float64    `json:"Density,omitempty"`
	// Measurement of the emulsion stability and oil-wetting capability in oil-based muds.                 
	ElectStab                                                                                  *float64    `json:"ElectStab,omitempty"`
	// Equivalent circulating density where fluid reading was recorded or calculated/simulated             
	EquivalentCirculatingDensity                                                               *float64    `json:"EquivalentCirculatingDensity,omitempty"`
	// Equivalent static density where fluid reading was recorded or calculated/simulated                  
	EquivalentStaticDensity                                                                    *float64    `json:"EquivalentStaticDensity,omitempty"`
	// High temperature high pressure (HTHP) filter cake thickness.                                        
	FilterCakeHthp                                                                             *float64    `json:"FilterCakeHthp,omitempty"`
	// Filter cake thickness at low (normal) temperature and pressure.                                     
	FilterCakeLtlp                                                                             *float64    `json:"FilterCakeLtlp,omitempty"`
	// High temperature high pressure (HTHP) filtrate (volume per 30 min).                                 
	FiltrateHthp                                                                               *float64    `json:"FiltrateHthp,omitempty"`
	// API water loss (low temperature and pressure mud filtrate measurement) (volume per 30               
	// min).                                                                                               
	FiltrateLtlp                                                                               *float64    `json:"FiltrateLtlp,omitempty"`
	// High temperature high pressure (HTHP) pressure.                                                     
	FiltratePressureHthp                                                                       *float64    `json:"FiltratePressureHthp,omitempty"`
	// High temperature high pressure (HTHP) temperature.                                                  
	FiltrateTemperatureHthp                                                                    *float64    `json:"FiltrateTemperatureHthp,omitempty"`
	// Zero-second gels.                                                                                   
	Gel0SEC                                                                                    *float64    `json:"Gel0Sec,omitempty"`
	// Ten-minute gels.                                                                                    
	Gel10Min                                                                                   *float64    `json:"Gel10Min,omitempty"`
	// Ten-second gels.                                                                                    
	Gel10SEC                                                                                   *float64    `json:"Gel10Sec,omitempty"`
	// Thirty-minute gels.                                                                                 
	Gel30Min                                                                                   *float64    `json:"Gel30Min,omitempty"`
	// Total calcium hardness.                                                                             
	HardnessCA                                                                                 *float64    `json:"HardnessCa,omitempty"`
	// Iron content.                                                                                       
	Iron                                                                                       *float64    `json:"Iron,omitempty"`
	// Assumed kick density for calculation of kick tolerance where the fluid reading was                  
	// recorded.                                                                                           
	KickToleranceIntensity                                                                     *float64    `json:"KickToleranceIntensity,omitempty"`
	// Assumed kick volume for calculation of kick tolerance based on the kick intensity where             
	// the fluid reading was recorded.                                                                     
	KickToleranceVolume                                                                        *float64    `json:"KickToleranceVolume,omitempty"`
	// Lost circulation material.                                                                          
	Lcm                                                                                        *float64    `json:"Lcm,omitempty"`
	// Lime content.                                                                                       
	Lime                                                                                       *float64    `json:"Lime,omitempty"`
	// Shearing capacity of mud at low velocity                                                            
	LowShearYieldPoint                                                                         *float64    `json:"LowShearYieldPoint,omitempty"`
	// Magnesium content.                                                                                  
	Magnesium                                                                                  *float64    `json:"Magnesium,omitempty"`
	// Cation exchange capacity (CEC) of the mud sample as measured by methylene blue titration            
	// (MBT).                                                                                              
	//                                                                                                     
	// NOTE: This is temporarily set to be a GenericMeasure with no unit validation, pending               
	// addition of CEC units to the Energistics UoM spec.                                                  
	Mbt                                                                                        *float64    `json:"Mbt,omitempty"`
	// The measured depth where the fluid readings were recorded.                                          
	MeasuredDepth                                                                              *float64    `json:"MeasuredDepth,omitempty"`
	// Metal recovered from the wellbore.                                                                  
	MetalRecovered                                                                             *float64    `json:"MetalRecovered,omitempty"`
	// Methyl orange alkalinity of filtrate.                                                               
	MF                                                                                         *float64    `json:"Mf,omitempty"`
	// The class of the drilling fluid.                                                                    
	MudClass                                                                                   *string     `json:"MudClass,omitempty"`
	// The name of the Mud Engineer                                                                        
	MudEngineer                                                                                *string     `json:"MudEngineer,omitempty"`
	// Mud pH.                                                                                             
	MudPh                                                                                      *float64    `json:"MudPh,omitempty"`
	// Mud pH measurement temperature.                                                                     
	MudTempPh                                                                                  *float64    `json:"MudTempPh,omitempty"`
	// Oil on cuttings.                                                                                    
	OilCtg                                                                                     *float64    `json:"OilCtg,omitempty"`
	// Oil on dried cuttings.                                                                              
	OilCtgDry                                                                                  *float64    `json:"OilCtgDry,omitempty"`
	// Oil and grease content.                                                                             
	OilGrease                                                                                  *float64    `json:"OilGrease,omitempty"`
	// Percent oil content from retort.                                                                    
	OilPC                                                                                      *float64    `json:"OilPc,omitempty"`
	// Plastic viscosity.                                                                                  
	PlasticViscosity                                                                           *float64    `json:"PlasticViscosity,omitempty"`
	// Phenolphthalein alkalinity of whole mud.                                                            
	Pm                                                                                         *float64    `json:"Pm,omitempty"`
	// Phenolphthalein alkalinity of mud filtrate.                                                         
	PmFiltrate                                                                                 *float64    `json:"PmFiltrate,omitempty"`
	// Polymers present in the mud system.                                                                 
	Polymer                                                                                    *float64    `json:"Polymer,omitempty"`
	// Type of polymers present in the mud system.                                                         
	PolymerType                                                                                []string    `json:"PolymerType,omitempty"`
	// Potassium content.                                                                                  
	Potassium                                                                                  *float64    `json:"Potassium,omitempty"`
	// Details of the Rheometer tests performed on the fluid sample                                        
	Rheometer                                                                                  []Rheometer `json:"Rheometer,omitempty"`
	// Salt content.                                                                                       
	Salt                                                                                       *float64    `json:"Salt,omitempty"`
	// Salt percent.                                                                                       
	SaltPC                                                                                     *float64    `json:"SaltPc,omitempty"`
	// The time when fluid readings were recorded.                                                         
	SampleDateTime                                                                             *time.Time  `json:"SampleDateTime,omitempty"`
	// Sample location.                                                                                    
	SampleLocation                                                                             *string     `json:"SampleLocation,omitempty"`
	// Sand content percent.                                                                               
	SandPC                                                                                     *float64    `json:"SandPc,omitempty"`
	// Sodium chloride content.                                                                            
	SodiumChloride                                                                             *float64    `json:"SodiumChloride,omitempty"`
	// Sodium chloride percent.                                                                            
	SodiumChloridePC                                                                           *float64    `json:"SodiumChloridePc,omitempty"`
	// Solids corrected for chloride content percent.                                                      
	SolCorPC                                                                                   *float64    `json:"SolCorPc,omitempty"`
	// Percent calculated solids content.                                                                  
	SolidsCalcPC                                                                               *float64    `json:"SolidsCalcPc,omitempty"`
	// Solids high gravity content.                                                                        
	SolidsHiGrav                                                                               *float64    `json:"SolidsHiGrav,omitempty"`
	// Solids high gravity content corrected for chloride content                                          
	SolidsHiGravCorrected                                                                      *float64    `json:"SolidsHiGravCorrected,omitempty"`
	// Solids high gravity percent.                                                                        
	SolidsHiGravPC                                                                             *float64    `json:"SolidsHiGravPc,omitempty"`
	// Solids low gravity content.                                                                         
	SolidsLowGrav                                                                              *float64    `json:"SolidsLowGrav,omitempty"`
	// Solids low gravity content corrected for chloride content                                           
	SolidsLowGravCorrected                                                                     *float64    `json:"SolidsLowGravCorrected,omitempty"`
	// Low gravity solids percent.                                                                         
	SolidsLowGravPC                                                                            *float64    `json:"SolidsLowGravPc,omitempty"`
	// Solids percentage from retort.                                                                      
	SolidsPC                                                                                   *float64    `json:"SolidsPc,omitempty"`
	// Sulfide content.                                                                                    
	Sulfide                                                                                    *float64    `json:"Sulfide,omitempty"`
	// True crystallization temperature.                                                                   
	Tct                                                                                        *float64    `json:"Tct,omitempty"`
	// Flow line temperature measurement where the fluid reading was recorded.                             
	TemperatureFlowLine                                                                        *float64    `json:"TemperatureFlowLine,omitempty"`
	// Funnel viscosity temperature.                                                                       
	TemperatureViscosity                                                                       *float64    `json:"TemperatureViscosity,omitempty"`
	// Turbidity units to measure the cloudiness or haziness of a fluid.                                   
	Turbidity                                                                                  *float64    `json:"Turbidity,omitempty"`
	// The true vertical depth where the fluid readings were recorded.                                     
	Tvd                                                                                        *float64    `json:"TVD,omitempty"`
	// Description for the type of fluid.                                                                  
	Type                                                                                       *string     `json:"Type,omitempty"`
	// Funnel viscosity in seconds.                                                                        
	ViscosityFunnel                                                                            *float64    `json:"ViscosityFunnel,omitempty"`
	// Water content percent.                                                                              
	WaterPC                                                                                    *float64    `json:"WaterPc,omitempty"`
	// A factor showing the activity level of salt in oil-based mud.                                       
	WaterPhaseSalinity                                                                         *float64    `json:"WaterPhaseSalinity,omitempty"`
	// Calcium content in the whole mud sample, including oil and water phases.                            
	WholeMudCalcium                                                                            *float64    `json:"WholeMudCalcium,omitempty"`
	// Chloride content in the whole mud sample, including oil and water phases.                           
	WholeMudChloride                                                                           *float64    `json:"WholeMudChloride,omitempty"`
	// Yield point (Bingham and Herschel Bulkley models).                                                  
	YieldPoint                                                                                 *float64    `json:"YieldPoint,omitempty"`
	// Zinc oxide content.                                                                                 
	ZincOxide                                                                                  *float64    `json:"ZincOxide,omitempty"`
}

// Rheometer values observed
type Rheometer struct {
	// The pressure at which the rheometer values were measured                        
	PressureRheometer                                             float64              `json:"PressureRheometer"`
	// The viscosities recorder during the Rheometer test                              
	RheometerViscosities                                          []RheometerViscosity `json:"RheometerViscosities,omitempty"`
	// The temperature at which the rheometer values were measured                     
	TemperatureRheometer                                          float64              `json:"TemperatureRheometer"`
}

// Viscosity values observed
type RheometerViscosity struct {
	// Rotational speed of the rheometer, typically in RPM.                                         
	Speed                                                                                   float64 `json:"Speed"`
	// The raw reading from a rheometer. This could be, but is not necessarily, a viscosity.        
	Viscosity                                                                               float64 `json:"Viscosity"`
}

// A generic facility, which is not one of the explicitly modelled 'facilities', like Well,
// Wellbore, StorageFacility , IsolatedInterval, Rig, etc.
type GenericFacility struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GenericFacilityData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type GenericFacilityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                           
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                       
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	CurrentOperatorID                                                                           *string                         `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                               
	DataSourceOrganisationID                                                                    *string                         `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                         
	FacilityDescription                                                                         *string                         `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                           
	FacilityEvents                                                                              []AbstractFacilityEvent         `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                  
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                 
	// If used, the "Source" property should identify that source system.                                                       
	FacilityID                                                                                  *string                         `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                    
	FacilityName                                                                                *string                         `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                     
	// which this facility is/has been known.                                                                                   
	FacilityNameAliases                                                                         []AbstractAliasNames            `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                   
	FacilityOperators                                                                           []AbstractFacilityOperator      `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                      
	// permit number, rig name etc.                                                                                             
	FacilitySpecifications                                                                      []AbstractFacilitySpecification `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                          
	FacilityStates                                                                              []AbstractFacilityState         `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                      
	FacilityTypeID                                                                              *string                         `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                         
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	InitialOperatorID                                                                           *string                         `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                
	OperatingEnvironmentID                                                                      *string                         `json:"OperatingEnvironmentID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// A significant occurrence in the life of a facility, which often changes its state, or the
// state of one of its components. It can describe a point-in-time (event) or a time
// interval of a specific type (FacilityEventType).
type AbstractFacilityEvent struct {
	// The date and time at which the event took place or takes effect.                                    
	EffectiveDateTime                                                                           *time.Time `json:"EffectiveDateTime,omitempty"`
	// The facility event type is a picklist. Examples: 'Permit', 'Spud', 'Abandon', etc.                  
	FacilityEventTypeID                                                                         *string    `json:"FacilityEventTypeID,omitempty"`
	// A comment or remark about the facility event.                                                       
	Remark                                                                                      *string    `json:"Remark,omitempty"`
	// The date and time at which the event is no longer in effect. For point-in-time events the           
	// 'TerminationDateTime' must be set equal to 'EffectiveDateTime'. Open time intervals have            
	// an absent 'TerminationDateTime'.                                                                    
	TerminationDateTime                                                                         *time.Time `json:"TerminationDateTime,omitempty"`
}

// The organisation that was responsible for a facility at some point in time.
type AbstractFacilityOperator struct {
	// The date and time at which the facility operator becomes effective.                                
	EffectiveDateTime                                                                          *time.Time `json:"EffectiveDateTime,omitempty"`
	// Internal, unique identifier for an item 'AbstractFacilityOperator'. This identifier is             
	// used by 'AbstractFacility.CurrentOperatorID' and 'AbstractFacility.InitialOperatorID'.             
	FacilityOperatorID                                                                         *string    `json:"FacilityOperatorID,omitempty"`
	// The company that currently operates, or previously operated the facility                           
	FacilityOperatorOrganisationID                                                             *string    `json:"FacilityOperatorOrganisationID,omitempty"`
	// A comment or remark about the facility operator.                                                   
	Remark                                                                                     *string    `json:"Remark,omitempty"`
	// The date and time at which the facility operator is no longer in effect. If the operator           
	// is still effective, the 'TerminationDateTime' is left absent.                                      
	TerminationDateTime                                                                        *time.Time `json:"TerminationDateTime,omitempty"`
}

// A property, characteristic, or attribute about a facility that is not described
// explicitly elsewhere.
type AbstractFacilitySpecification struct {
	// The date and time at which the facility specification instance becomes effective.                
	EffectiveDateTime                                                                        *time.Time `json:"EffectiveDateTime,omitempty"`
	// The actual date and time value of the parameter.                                                 
	FacilitySpecificationDateTime                                                            *time.Time `json:"FacilitySpecificationDateTime,omitempty"`
	// The actual indicator value of the parameter.                                                     
	FacilitySpecificationIndicator                                                           *bool      `json:"FacilitySpecificationIndicator,omitempty"`
	// The value for the specified parameter type.                                                      
	FacilitySpecificationQuantity                                                            *float64   `json:"FacilitySpecificationQuantity,omitempty"`
	// The actual text value of the parameter.                                                          
	FacilitySpecificationText                                                                *string    `json:"FacilitySpecificationText,omitempty"`
	// Parameter type of property or characteristic.                                                    
	ParameterTypeID                                                                          *string    `json:"ParameterTypeID,omitempty"`
	// The date and time at which the facility specification instance is no longer in effect.           
	TerminationDateTime                                                                      *time.Time `json:"TerminationDateTime,omitempty"`
	// The unit for the quantity parameter, like metre (m in SI units system) for quantity              
	// Length.                                                                                          
	UnitOfMeasureID                                                                          *string    `json:"UnitOfMeasureID,omitempty"`
}

// The life cycle status of a facility at some point in time.
type AbstractFacilityState struct {
	// The date and time at which the facility state becomes effective.                                    
	EffectiveDateTime                                                                           *time.Time `json:"EffectiveDateTime,omitempty"`
	// Life Cycle [Facility State Type] is a set of major phases that are significant to                   
	// regulators and/or business stakeholders. Life Cycle may apply to a well or its components           
	// [or other facility].                                                                                
	FacilityStateTypeID                                                                         *string    `json:"FacilityStateTypeID,omitempty"`
	// A comment or remark about the facility state.                                                       
	Remark                                                                                      *string    `json:"Remark,omitempty"`
	// The date and time at which the facility state is no longer in effect.                               
	TerminationDateTime                                                                         *time.Time `json:"TerminationDateTime,omitempty"`
}

// A location of interest classified by a site type, for example an outcrop, where a sample
// has been acquired.
type GenericSite struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GenericSiteData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type GenericSiteData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Uncertainty for site location                                                                                         
	LocationUncertainty                                                                         *AbstractLocationUncertainty `json:"LocationUncertainty,omitempty"`
	// The name of this generic site.                                                                                        
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// An array of remarks.                                                                                                  
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// The classification of the site.                                                                                       
	SiteTypeID                                                                                  *string                      `json:"SiteTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Uncertainty for site location
//
// A simple uncertainty quantification for a point location.
//
// Uncertainty for well location
//
// Location Uncertainty for the WellsiteStructure location coordinates
//
// Slot Local Uncertainty within the Wellsite Structure
type AbstractLocationUncertainty struct {
	// The confidence level, expressed as sigma and using Rayleigh distribution, indicates the           
	// degree of certainty that the predicted three-dimensional location is accurate. For                
	// example, if the location uncertainty radius is 1.5 meters and the confidence level is 1           
	// sigma, it means that the actual position is expected to fall within a sphere with a               
	// radius of 1.5 meters from the reported position 61% of the time. The radius represents            
	// the extent of this sphere, defined by the location uncertainty. For a three-dimensional           
	// position given in x, y, and z coordinates, the rule of thumb for sigma levels is as               
	// follows when using Rayleigh distribution: 1 sigma corresponds to a 61% confidence level,          
	// 2 sigma corresponds to a 99% confidence level and 3 sigma corresponds to nearly a 100%            
	// confidence level. In comparison, for a one-dimensional case assuming Gaussian                     
	// distribution, these sigma levels represent: 1 sigma corresponds to a 68% confidence               
	// level, 2 sigma corresponds to a 95% confidence level and 3 sigma corresponds to a 99.7%           
	// confidence level.                                                                                 
	ConfidenceLevel                                                                             *float64 `json:"ConfidenceLevel,omitempty"`
	// Position uncertainty refers to the radius around a given location that is likely to               
	// contain the true value of the measurement with a specified confidence level. The position         
	// is defined in three-dimensional space with x, y, and z coordinates. For instance, if the          
	// location uncertainty radius is 1.5 meters and the confidence level is 1 sigma                     
	// (approximately 61% using Rayleigh distribution), it means that the actual location is             
	// expected to be within a sphere of 1.5 meters radius from the reported position 61% of the         
	// time.                                                                                             
	Radius3D                                                                                    *float64 `json:"Radius3D,omitempty"`
}

// A named geographical area which is defined and administered by an official entity.
type GeoPoliticalEntity struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GeoPoliticalEntityData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type GeoPoliticalEntityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Day light saving end date.                                                                                            
	DaylightSavingTimeEndDate                                                                   *time.Time                   `json:"DaylightSavingTimeEndDate,omitempty"`
	// Day light saving start date.                                                                                          
	DaylightSavingTimeStartDate                                                                 *time.Time                   `json:"DaylightSavingTimeStartDate,omitempty"`
	// Indicates whether the GeoPolitical entity has a disputed status.                                                      
	DisputedIndicator                                                                           *bool                        `json:"DisputedIndicator,omitempty"`
	// The date and time at which a given geopolitical entity becomes effective.                                             
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	GeoPoliticalEntityID                                                                        *string                      `json:"GeoPoliticalEntityID,omitempty"`
	// Name of the geopolitical entity.                                                                                      
	GeoPoliticalEntityName                                                                      *string                      `json:"GeoPoliticalEntityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                  
	// which this geopolitical entity is/has been known.                                                                     
	GeoPoliticalEntityNameAliases                                                               []AbstractAliasNames         `json:"GeoPoliticalEntityNameAliases,omitempty"`
	// Type of geopolitical entity.                                                                                          
	GeoPoliticalEntityTypeID                                                                    *string                      `json:"GeoPoliticalEntityTypeID,omitempty"`
	// The identifier of the parent GeoPoliticalEntity, for example the GeoPoliticalEntity Texas                             
	// has parent ID representing the GeoPoliticalEntity USA                                                                 
	ParentGeoPoliticalEntityID                                                                  *string                      `json:"ParentGeoPoliticalEntityID,omitempty"`
	// The date and time at which a given geopolitical entity is no longer in effect.                                        
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Targets (in the geometrical point of view) for a drilling plan
type GeometricTargetSet struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *GeometricTargetSetData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type GeometricTargetSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Name of Geometric Target Set                                                                                          
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// A collection of drill targets.                                                                                        
	Targets                                                                                     []Target                     `json:"Targets"`
	// Identifier of the Wellbore                                                                                            
	WellboreID                                                                                  string                       `json:"WellboreID"`
	// Human recognizable context for the wellbore.                                                                          
	WellboreName                                                                                *string                      `json:"WellboreName,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// This is a geometric body describing a volume in the earth intended to be a target of one
// or more wellbores.
type Target struct {
	// A comment or description of the target                                                                           
	Comments                                                                                   *string                  `json:"Comments,omitempty"`
	// The Geometry of the target.                                                                                      
	Geometry                                                                                   *Geometry                `json:"Geometry,omitempty"`
	// The geographic location of the target                                                                            
	Location                                                                                   *AbstractSpatialLocation `json:"Location,omitempty"`
	// Human recognizable context for the target - the name must be unique within the set.                              
	Name                                                                                       *string                  `json:"Name,omitempty"`
	// The target could be Primary or Secondary                                                                         
	ObjectiveType                                                                              *string                  `json:"ObjectiveType,omitempty"`
	// Name of the parent target in this set, this one has been defined from (this represents a                         
	// pointer to the parent target. This may represents a relationship between a driller and                           
	// geological target).                                                                                              
	ParentTargetName                                                                           *string                  `json:"ParentTargetName,omitempty"`
	// Confidence factor for target                                                                                     
	TargetConfidence                                                                           *float64                 `json:"TargetConfidence,omitempty"`
	// The type of the target. Only possible values are: "Geological", "Driller" or "Unknown"                           
	Type                                                                                       *string                  `json:"Type,omitempty"`
}

// The Geometry of the target.
type Geometry struct {
	// Angle of dip of target reference plane with respect to horizontal                                         
	DIP                                                                                        *float64          `json:"Dip,omitempty"`
	// Direction of dip of target reference plane with respect to north azimuth reference                        
	DIPAzimuth                                                                                 *float64          `json:"DipAzimuth,omitempty"`
	// The geometry sections which define the spatial geometry ot the target                                     
	GeometrySections                                                                           []GeometrySection `json:"GeometrySections,omitempty"`
	// The measured length of a rectangular target along the shortest side                                       
	Length                                                                                     *float64          `json:"Length,omitempty"`
	// Measured length of the target along Target Ref Azimuth                                                    
	MajorAxis                                                                                  *float64          `json:"MajorAxis,omitempty"`
	// Measured length of the target perpendicular to Target Ref Azimuth, assumed to be on                       
	// target dip, strike, rotation plane.                                                                       
	MinorAxis                                                                                  *float64          `json:"MinorAxis,omitempty"`
	// Radius of arc for continuous curve segment. Center assumed to be offset from start point                  
	// normal to its beginning azimuth; positive value is to right, negative to left                             
	Radius                                                                                     *float64          `json:"Radius,omitempty"`
	// The shape of the target. Examples of this are Elliptical, Point etc                                       
	Shape                                                                                      *string           `json:"Shape,omitempty"`
	// Depth of target bottom surface below reference plane, measured normal to dip plane                        
	ThicknessDown                                                                              *float64          `json:"ThicknessDown,omitempty"`
	// Height of target top surface above reference plane, measured normal to dip plane                          
	ThicknessUp                                                                                *float64          `json:"ThicknessUp,omitempty"`
	// The measured length of a rectangular target along the longest side                                        
	Width                                                                                      *float64          `json:"Width,omitempty"`
}

// The geometric sections that combine to define the shape of a complex target
type GeometrySection struct {
	// Direction of straight line section or radius of arc for continuous curve section.                                
	AngleArc                                                                                   *float64                 `json:"AngleArc,omitempty"`
	// Length of straight line section or radius of arc for continuous curve section.                                   
	LengthRadius                                                                               *float64                 `json:"LengthRadius,omitempty"`
	// 2D coordinates that defines the start of the section.                                                            
	Location                                                                                   *AbstractSpatialLocation `json:"Location,omitempty"`
	// Name of this Geometry Section                                                                                    
	SectionName                                                                                *string                  `json:"SectionName,omitempty"`
	// Sequence number of the section (1,2,3…)                                                                          
	SectionNumber                                                                              *float64                 `json:"SectionNumber,omitempty"`
	// True Vertical Depth of this section                                                                              
	SectionTVD                                                                                 *float64                 `json:"SectionTVD,omitempty"`
	// Height of target above center point at the start of the section.  In the case of an arc,                         
	// the thickness above should vary linearly with the arc length.                                                    
	ThicknessAbove                                                                             *float64                 `json:"ThicknessAbove,omitempty"`
	// Depth of target below center point at the start of the section. In the case of an arc,                           
	// the thickness below should vary linearly with the arc length.                                                    
	ThicknessBelow                                                                             *float64                 `json:"ThicknessBelow,omitempty"`
	// Section scope : Line or Arc                                                                                      
	TypeTargetSectionScope                                                                     *string                  `json:"TypeTargetSectionScope,omitempty"`
}

// A gravity and magnetics acquisition survey is a type of a geophysical survey acquisition
// and a business project that deploys resources to the field to record (passive) gravity
// and or magnetic geophysical measurement data.
//
// Several types of gravity and magnetic data can be acquired simultaneously from the same
// survey, and different acquisition platforms can be used to acquire the data, for example,
// land, air, marine, satellite and borehole.
//
// It may be referred to as a field survey, acquisition survey, or field program.
type GravityMagneticAcquisitionSurvey struct {
	// The access control tags associated with this entity.                                                                            
	ACL                                                                                          AccessControlList                     `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                              
	// derived.                                                                                                                        
	Ancestry                                                                                     *ParentList                           `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                        
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                           
	CreateTime                                                                                   *time.Time                            `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                         
	// System.                                                                                                                         
	CreateUser                                                                                   *string                               `json:"createUser,omitempty"`
	Data                                                                                         *GravityMagneticAcquisitionSurveyData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                          
	// version.                                                                                                                        
	ID                                                                                           *string                               `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                    
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                        
	// scheme follows the semantic versioning, https://semver.org/.                                                                    
	Kind                                                                                         string                                `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                          
	// legal tags is managed by the Compliance Service.                                                                                
	Legal                                                                                        LegalMetaData                         `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                         
	// definitions.                                                                                                                    
	Meta                                                                                         []FrameOfReferenceMetaDataItem        `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                        
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                               
	ModifyTime                                                                                   *time.Time                            `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                      
	ModifyUser                                                                                   *string                               `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                         
	// as keys and values.                                                                                                             
	Tags                                                                                         map[string]string                     `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                                 
	Version                                                                                      *int64                                `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type GravityMagneticAcquisitionSurveyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                           
	ContractIDs                                                                                 []string                             `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                           
	Contractors                                                                                 []Contractors                        `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                         
	FundsAuthorizations                                                                         []FundsAuthorizations                `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                 
	Operator                                                                                    *string                              `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                     
	// could reference a separate Persons master data object.                                                                        
	Personnel                                                                                   []PurplePersonnel                    `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                             
	ProjectBeginDate                                                                            *time.Time                           `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                             
	ProjectEndDate                                                                              *time.Time                           `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system.                                                            
	ProjectID                                                                                   *string                              `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                    
	ProjectName                                                                                 *string                              `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                       
	// business identifiers.                                                                                                         
	ProjectNames                                                                                []AbstractAliasNames                 `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                       
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                     
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                      
	// level.                                                                                                                        
	ProjectSpecifications                                                                       []ProjectSpecifications              `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                          
	ProjectStates                                                                               []ProjectStates                      `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                   
	Purpose                                                                                     *string                              `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                          
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                      
	ActivityStates                                                                              []AbstractActivityState              `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                      
	// values.                                                                                                                       
	ActivityTemplateID                                                                          *string                              `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                     
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                       
	// empty.                                                                                                                        
	LastActivityState                                                                           *AbstractActivityState               `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                         
	// objects which are inputs and outputs of the activity.                                                                         
	Parameters                                                                                  []DefaultValueElement                `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                             
	ParentProjectID                                                                             *string                              `json:"ParentProjectID,omitempty"`
	// Describes the start and end date range of the survey acquisition                                                              
	AcquisitionDateRange                                                                        *AcquisitionDateRange                `json:"AcquisitionDateRange,omitempty"`
	// The acquisition platform method for this survey, for example, airborne, marine, land,                                         
	// satellite, borehole, ocean bottom, UAV, etc.                                                                                  
	AcquisitionPlatformMethodID                                                                 *string                              `json:"AcquisitionPlatformMethodID,omitempty"`
	// The calculated area covered by the survey. This value is often calculated during the                                          
	// loading of the survey                                                                                                         
	AreaCalculated                                                                              *float64                             `json:"AreaCalculated,omitempty"`
	// The nominal area covered by the survey. This value is usually entered by the end user                                         
	AreaNominal                                                                                 *float64                             `json:"AreaNominal,omitempty"`
	// The average horizontal, or vertical for wellbore/borehole, distance or spacing between                                        
	// sampling stations in length, or a depth for a wellbore/borehole. This value can be                                            
	// calculated for moving platform survey from the time based sampling intervals.                                                 
	AverageStationDistance                                                                      *float64                             `json:"AverageStationDistance,omitempty"`
	// The type of gravity and magnetics geophysical data acquired in this survey, for example,                                      
	// gravity, magnetic, full tensor gradiometry/airborne gravity gradiometry.                                                      
	// This could be one or several acquisition types that were acquired simultaneously in the                                       
	// same survey.                                                                                                                  
	DataAcquisitionTypeIDs                                                                      []string                             `json:"DataAcquisitionTypeIDs,omitempty"`
	// An array that describes the equipment sensors, meters or tools used to acquire the                                            
	// geophysical data. One or more items of equipment may be used in a survey acquisition.                                         
	EquipmentDetails                                                                            []Equipment                          `json:"EquipmentDetails,omitempty"`
	// An array that describes the survey acquisition properties relevant to a moving platform                                       
	// survey, for example, airborne, marine vessel or other moving vehicle                                                          
	MovingPlatform                                                                              *MovingPlatform                      `json:"MovingPlatform,omitempty"`
	// Identifies the environmental settings of the survey acquisition, for example, land,                                           
	// marine or transition zone. A survey can be conducted over one or more environments.                                           
	OperatingEnvironmentIDs                                                                     []string                             `json:"OperatingEnvironmentIDs,omitempty"`
	// If populated, this survey is part of a time-lapse survey sequence. It identifies the                                          
	// preceding Gravity Magnetic Acquisition Survey. The first survey in the sequence has an                                        
	// empty or absent PrecedingTimeLapseSurveyID.                                                                                   
	PrecedingTimeLapseSurveyID                                                                  *string                              `json:"PrecedingTimeLapseSurveyID,omitempty"`
	// General remarks regarding the survey acquisition. An array utilising the AbstractRemark                                       
	// fragment                                                                                                                      
	Remarks                                                                                     []AbstractRemark                     `json:"Remarks,omitempty"`
	// The company or organisation that acquired the survey                                                                          
	ServiceCompanyID                                                                            *string                              `json:"ServiceCompanyID,omitempty"`
	// The vertical measurement reference for a wellbore or borehole acquisition platform,                                           
	// defining the vertical reference datum, elevation and relevant depths.                                                         
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Describes the start and end date range of the survey acquisition
type AcquisitionDateRange struct {
	// The end date of the acquisition survey          
	EndDate                                    *string `json:"EndDate,omitempty"`
	// The start date of the acquisition survey        
	StartDate                                  *string `json:"StartDate,omitempty"`
}

// The sensor, meter or tool equipment used to acquire the gravity and magnetic geophysical
// measurements
type Equipment struct {
	// The manufacturer of a sensor, meter or tool used to acquire gravity or magnetics                         
	// geophysical data.                                                                                        
	Manufacturer                                                                               *string          `json:"Manufacturer,omitempty"`
	// The model name or number, typically given by the manufacturer of a sensor, meter or tool                 
	// used to acquire gravity or magnetics geophysical data.                                                   
	Model                                                                                      *string          `json:"Model,omitempty"`
	// A name given to a sensor, meter or tool used to acquire gravity or magnetics geophysical                 
	// data. This could be a common or colloquial name.                                                         
	// Where possible, for better search results, the manufacturer, model and serial number                     
	// should be completed also.                                                                                
	Name                                                                                       *string          `json:"Name,omitempty"`
	// An array of remarks about the equipment used to acquire the measurements, for example,                   
	// the orientation of equipment. This utilises the AbstractRemark fragment.                                 
	Remarks                                                                                    []AbstractRemark `json:"Remarks,omitempty"`
	// The serial number, typically given by the manufacturer, of a sensor, meter or tool used                  
	// to acquire gravity or magnetics geophysical data.                                                        
	SerialNumber                                                                               *string          `json:"SerialNumber,omitempty"`
}

// An array that describes the survey acquisition properties relevant to a moving platform
// survey, for example, airborne, marine vessel or other moving vehicle
type MovingPlatform struct {
	// The total length of the line distance calculated from the line data.                                              
	CalculatedLineLength                                                                         *float64                `json:"CalculatedLineLength,omitempty"`
	// Captures the average flying height and the flying height parameters such as the                                   
	// instrumentation, datum and the clearance method.                                                                  
	FlyingHeightParameters                                                                       *FlyingHeightParameters `json:"FlyingHeightParameters,omitempty"`
	// A boolean flag indicating if the survey was acquired from a moving platform, for example,                         
	// airborne, marine vessel or other moving vehicle.                                                                  
	// This boolean flag also permits a moving platform survey to be identified prior to the                             
	// loading of the moving platform related properties.                                                                
	// This should be true if any of the below moving platform properties could be populated now                         
	// or in the future.                                                                                                 
	IsMovingPlatformSurvey                                                                       *bool                   `json:"IsMovingPlatformSurvey,omitempty"`
	// The nominal line length covered by the survey. This value is usually entered by the end                           
	// user. Equivalent to the two boxes for an area.                                                                    
	NominalLineLength                                                                            *float64                `json:"NominalLineLength,omitempty"`
	// The free text name of the platform or the vessel that acquired the survey                                         
	PlatformName                                                                                 *string                 `json:"PlatformName,omitempty"`
	// The distance between primary lines. If acquired with seismic data this will be the inline.                        
	PrimaryLineSpacing                                                                           *float64                `json:"PrimaryLineSpacing,omitempty"`
	// The sampling station intervals recorded in time. Sampling intervals are often received in                         
	// 1 second intervals or similar and/or p190 for marine data                                                         
	SamplingIntervalTime                                                                         *float64                `json:"SamplingIntervalTime,omitempty"`
	// An association to a seismic acquisition survey when seismic and gravity and magnetic data                         
	// are acquired simultaneously, typically in the marine environment.                                                 
	// The seismic acquisition survey object contains data relevant to the acquisition such as                           
	// the survey geometry.                                                                                              
	SeismicAcquisitionSurveyID                                                                   *string                 `json:"SeismicAcquisitionSurveyID,omitempty"`
	// The distance between lines that intersect the primary lines. These lines are at a                                 
	// different azimuth to the primary lines. Typically perpendicular to the primary line.                              
	TieLineSpacing                                                                               *float64                `json:"TieLineSpacing,omitempty"`
}

// Captures the average flying height and the flying height parameters such as the
// instrumentation, datum and the clearance method.
type FlyingHeightParameters struct {
	// The average flying height for this airborne platform survey.                                      
	AverageFlyingHeight                                                                         *float64 `json:"AverageFlyingHeight,omitempty"`
	// The airborne survey ground clearance method, for example, constant or drape.                      
	ClearanceMethodID                                                                           *string  `json:"ClearanceMethodID,omitempty"`
	// The topographic information utilised in this survey, for example, Shuttle Radar                   
	// Topography Mission (SRTM) v3.                                                                     
	ExternalTopographicalInformation                                                            *string  `json:"ExternalTopographicalInformation,omitempty"`
	// The instruments or equipment used to measure the specified flying height. See                     
	// AverageFlyingHeight. This can be one or several different types of equipment, for                 
	// example, laser scanner, GPS, radar altimeter.                                                     
	MeasurementInstrumentationIDs                                                               []string `json:"MeasurementInstrumentationIDs,omitempty"`
	// The relationship to the vertical CRS defining the absolute reference surface. If both the         
	// vertical and horizontal CRS are the same, then the vertical CRS should instead be                 
	// captured only in the AbstractSpatialLocation.                                                     
	VerticalCoordinateReferenceSystemID                                                         *string  `json:"VerticalCoordinateReferenceSystemID,omitempty"`
}

// A section of a wellbore drilled with a constant bit and/or under-reamer diameter
type HoleSection struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *HoleSectionData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type HoleSectionData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// A comment or description associated with the hole section                                                                     
	Comment                                                                                     *string                              `json:"Comment,omitempty"`
	// Activity Code relevant for drilling the hole section.                                                                         
	DrillingActivityCode                                                                        *string                              `json:"DrillingActivityCode,omitempty"`
	// Date/time when drilling completed on the hole section.                                                                        
	EndDateTime                                                                                 *time.Time                           `json:"EndDateTime,omitempty"`
	// Boolean flag to indicate whether the HoleSection is in the process of being drilled                                           
	// (true) or completed (false or absent). During drilling (IsBeingDrilled=true) the                                              
	// MeasuredDepthBase value is set to MeasuredDepthTop.                                                                           
	IsBeingDrilled                                                                              *bool                                `json:"IsBeingDrilled,omitempty"`
	// Flag if Hole Section was drilled as a pilot hole                                                                              
	IsPilotHole                                                                                 *bool                                `json:"IsPilotHole,omitempty"`
	// The Measured depth at the base ('TD') of the hole section. For actual wellbores use                                           
	// data.VerticalMeasurement as wellbore ZDP. For planned wellbores, navigate via WellboreID                                      
	// to the side-car WellPlanningWellbore, which holds the depth reference in                                                      
	// data.VerticalMeasurement. This property is required, which is inconvenient under drilling                                     
	// of the HoleSection. In such a case IsBeingDrilled is set to true and, by convention,                                          
	// MeasuredDepthBase is set to MeasuredDepthTop.                                                                                 
	MeasuredDepthBase                                                                           float64                              `json:"MeasuredDepthBase"`
	// The Measured depth at the top of the hole section. For actual wellbores use                                                   
	// data.VerticalMeasurement as wellbore ZDP. For planned wellbores, navigate via WellboreID                                      
	// to the side-car WellPlanningWellbore, which holds the depth reference in                                                      
	// data.VerticalMeasurement.                                                                                                     
	MeasuredDepthTop                                                                            float64                              `json:"MeasuredDepthTop"`
	// Human recognizable context/name of the hole section.                                                                          
	Name                                                                                        string                               `json:"Name"`
	// Planned Base measured depth of the Hole Section. Only used for Actual Hole Sections to                                        
	// enable a comparison against plan.                                                                                             
	PlannedMeasuredDepthBase                                                                    *float64                             `json:"PlannedMeasuredDepthBase,omitempty"`
	// Planned Base true vertical depth of the Hole Section. Only used for Actual Hole Sections                                      
	// to enable a comparison against plan.                                                                                          
	PlannedTrueVerticalDepthBase                                                                *float64                             `json:"PlannedTrueVerticalDepthBase,omitempty"`
	// The nominal diameter of the hole section.                                                                                     
	Size                                                                                        float64                              `json:"Size"`
	// Date/time when drilling commenced on the hole section.                                                                        
	StartDateTime                                                                               *time.Time                           `json:"StartDateTime,omitempty"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                          
	// WellboreID, or a standalone vertical reference which defines the vertical reference datum                                     
	// for all measured depths of the HoleSection record. If this is not populated, the                                              
	// VerticalMeasurement is derived from the Wellbore.                                                                             
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Identifier of the Well Activity in which the hole section was drilled                                                         
	WellActivityID                                                                              *string                              `json:"WellActivityID,omitempty"`
	// Parent Wellbore Identifier                                                                                                    
	WellboreID                                                                                  string                               `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// A hydraulic/pressure isolated interval in one or more Wellbores that functions to produce
// or inject fluids. The isolated interval must be capable of isolating a fluid flow for
// continuous measurement.
type IsolatedInterval struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *IsolatedIntervalData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type IsolatedIntervalData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                
	ExistenceKind                                                                                *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                         
	ResourceCurationStatus                                                                       *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                 
	ResourceHomeRegionID                                                                         *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                              
	ResourceHostRegionIDs                                                                        []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                               
	ResourceLifecycleStatus                                                                      *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                 
	ResourceSecurityClassification                                                               *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                 
	// organization, agency, system, internal team, or individual. For informational purposes                                         
	// only, the list of sources is not governed.                                                                                     
	Source                                                                                       *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                          
	// based on data quality. Clarifications: Since Certified is the highest classification of                                        
	// suitable quality, any further change or versioning of a Certified record should be                                             
	// carefully considered and justified. If a Technical Assurance value is not populated then                                       
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                       
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceID                                                                         *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                         
	// multiple types or multiple values of the same type.                                                                            
	GeoContexts                                                                                  []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                       
	// should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                         
	// not appropriate).                                                                                                              
	SpatialLocation                                                                              *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                        
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                 
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                         
	// further change or versioning of a Certified record should be carefully considered and                                          
	// justified. If a Technical Assurance value is not populated then one can assume the data                                        
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                           
	// values are not intended to be used for the identification of a single "preferred" or                                           
	// "definitive" record by comparison with other records.                                                                          
	TechnicalAssurances                                                                          []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                 
	// master-data record's overall suitability for general business consumption based on data                                        
	// quality. Clarifications: Since Certified is the highest classification of suitable                                             
	// quality, any further change or versioning of a Certified record should be carefully                                            
	// considered and justified. If a Technical Assurance value is not populated then one can                                         
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                               
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceTypeID                                                                     *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                       
	VersionCreationReason                                                                        *string                              `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                             
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                       
	CurrentOperatorID                                                                            *string                              `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                                     
	DataSourceOrganisationID                                                                     *string                              `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                               
	FacilityDescription                                                                          *string                              `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                                 
	FacilityEvents                                                                               []AbstractFacilityEvent              `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                        
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                       
	// If used, the "Source" property should identify that source system.                                                             
	FacilityID                                                                                   *string                              `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                          
	FacilityName                                                                                 *string                              `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                           
	// which this facility is/has been known.                                                                                         
	FacilityNameAliases                                                                          []AbstractAliasNames                 `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                         
	FacilityOperators                                                                            []AbstractFacilityOperator           `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                            
	// permit number, rig name etc.                                                                                                   
	FacilitySpecifications                                                                       []AbstractFacilitySpecification      `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                                
	FacilityStates                                                                               []AbstractFacilityState              `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                            
	FacilityTypeID                                                                               *string                              `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                               
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                       
	InitialOperatorID                                                                            *string                              `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                      
	OperatingEnvironmentID                                                                       *string                              `json:"OperatingEnvironmentID,omitempty"`
	// What type of cement option used for the isolated interval                                                                      
	CementOptionID                                                                               *string                              `json:"CementOptionID,omitempty"`
	// Isolated Interval Classification                                                                                               
	ClassificationID                                                                             *string                              `json:"ClassificationID,omitempty"`
	// A remark, comment or generic description.                                                                                      
	Description                                                                                  *string                              `json:"Description,omitempty"`
	// Does the Isolated Interval include commingled production?                                                                      
	IsCommingled                                                                                 *bool                                `json:"IsCommingled,omitempty"`
	// An array of one or more Wellbore(s) that complete the base of the interval. Can be used                                        
	// for Isolated Intervals that span multiple Wellbores within the same Well.                                                      
	IsolatedIntervalBases                                                                        []IsolatedIntervalBase               `json:"IsolatedIntervalBases,omitempty"`
	// The 'parent' Isolated Interval ID, if there is a hierarchy of IsolatedIntervals.                                               
	IsolatedIntervalID                                                                           *string                              `json:"IsolatedIntervalID,omitempty"`
	// Denotes the category or type of the Isolated Interval. Reference Values: "Open hole"  or                                       
	// "Cased Hole"                                                                                                                   
	IsolatedIntervalTypeID                                                                       *string                              `json:"IsolatedIntervalTypeID,omitempty"`
	// Mechanism used to achieve pressure/hydraulic isolation within the interval                                                     
	IsolationMechanismID                                                                         *string                              `json:"IsolationMechanismID,omitempty"`
	// Top measured depth of the interval relative to the VerticalMeasurement vertical reference.                                     
	MeasuredDepthTop                                                                             *float64                             `json:"MeasuredDepthTop,omitempty"`
	// The sequential number assigned to a Isolated Interval in the order it is created in the                                        
	// Wellbore.                                                                                                                      
	SequenceNumber                                                                               *int64                               `json:"SequenceNumber,omitempty"`
	// Top true vertical depth of the interval relative to the VerticalMeasurement vertical                                           
	// reference.                                                                                                                     
	TrueVerticalDepthTop                                                                         *float64                             `json:"TrueVerticalDepthTop,omitempty"`
	// What type of completion assembly is used for the mechanical completion.                                                        
	TubularAssemblyTypeID                                                                        *string                              `json:"TubularAssemblyTypeID,omitempty"`
	// The vertical measurement reference for the interval tops and bases. Either                                                     
	// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an                                            
	// external vertical reference defined in the object VerticalReferenceEntityID) are                                               
	// populated.                                                                                                                     
	VerticalMeasurement                                                                          *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// The record id  of the upper most isolation point within the wellbore object, to which                                          
	// this record belongs                                                                                                            
	WellboreID                                                                                   *string                              `json:"WellboreID,omitempty"`
	// A list of associated Wellbore Opening IDs.                                                                                     
	WellboreOpeningIDs                                                                           []string                             `json:"WellboreOpeningIDs,omitempty"`
	// Zone access mechanism used to create a flow path between the formation/reservoir and the                                       
	// production annulus                                                                                                             
	ZoneAccessMechanismID                                                                        *string                              `json:"ZoneAccessMechanismID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// The base of the IsolatedInterval.
type IsolatedIntervalBase struct {
	// Bottom Measured depth of the interval                                                             
	MeasuredDepthBase                                                                           *float64 `json:"MeasuredDepthBase,omitempty"`
	// Bottom true vertical depth of the interval                                                        
	TrueVerticalDepthBase                                                                       *float64 `json:"TrueVerticalDepthBase,omitempty"`
	// The record id  of the wellbore object, to which this IsolatedIntervalBase element belongs         
	WellboreID                                                                                  *string  `json:"WellboreID,omitempty"`
}

// A ModelFeature is an explicit description of the relationships between geologic features
// such as rock volume features (e.g. stratigraphic units, geobodies, phase unit) and
// boundary features (e.g., genetic, tectonic, and fluid boundaries).
type ModelFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ModelFeatureData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type ModelFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The name of the model feature.                                                                                        
	Name                                                                                        *string                      `json:"Name,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A standard report of all drilling, completion or well work events conducted on a well
// during a given period, usually a 24-hour day, not necessarily aligned with the local time
// zone. Printed snapshots, e.g. PDF files, are captured as
// work-product-component--Document, which relate via data.LineageAssertions.
type OperationsReport struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *OperationsReportData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type OperationsReportData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Information about a bit.                                                                                              
	BitRecord                                                                                   []BitRecord                  `json:"BitRecord,omitempty"`
	// Hole condition description.                                                                                           
	ConditionHole                                                                               *string                      `json:"ConditionHole,omitempty"`
	// Cost information captured for a defined time period during operations and/or drilling                                 
	Cost                                                                                        []Cost                       `json:"Cost,omitempty"`
	// Daily cost.                                                                                                           
	CostDay                                                                                     *float64                     `json:"CostDay,omitempty"`
	// Daily mud cost.                                                                                                       
	CostDayMud                                                                                  *float64                     `json:"CostDayMud,omitempty"`
	// DEPRECATED: Individual, company, or corporate division that work is being executed on                                 
	// behalf of. With 1.1.0 or higher, please move this value to the associated Well Activity                               
	// record (data.WellActivityID), i.e. data.Customer.                                                                     
	Customer                                                                                    *string                      `json:"Customer,omitempty"`
	// DEPRECATED: Reference to the Organisation that represents the Customer. With 1.1.0 or                                 
	// higher, please obtain the Organisation's data.Name and set it as data.Customer value in                               
	// the Well Activity record (via data.WellActivityID).                                                                   
	CustomerID                                                                                  *string                      `json:"CustomerId,omitempty"`
	// DEPRECATED: An Array of sequential operation activities descriptions performed during                                 
	// this reporting period. Potentially includes critical path and offline activities.                                     
	DrillActivity                                                                               []DrillingActivity           `json:"DrillActivity,omitempty"`
	// Date and time that the reporting period ended. A report period is commonly 24 hours.                                  
	EndDateTime                                                                                 time.Time                    `json:"EndDateTime"`
	// References to the Fluids Reports generated during this reporting period.                                              
	FluidsIDs                                                                                   []string                     `json:"FluidsIDs,omitempty"`
	// DEPRECATED: Forecast of activities for the next 24 hrs. This is a redundant property                                  
	// given the data.StatusInfo[].Forecast24Hr. Consolidate in StatusInfo.                                                  
	Forecast24Hr                                                                                *string                      `json:"Forecast24Hr,omitempty"`
	// General information about a gas reading taken during the drill report period                                          
	GasReading                                                                                  []GasReading                 `json:"GasReading,omitempty"`
	// Health Safety or Environment events that occurred since the last drilling/operation                                   
	// report. Captures data related to HSE events (e.g., tests, inspections, meetings, and                                  
	// drills), test values (e.g., pressure tested to), and/or incidents (e.g., discharges,                                  
	// non-compliance notices received, etc.).                                                                               
	Hse                                                                                         []HealthSafetyEnvironment    `json:"HSE,omitempty"`
	// Description of incidents that have occurred during the last drilling/operations report                                
	Incident                                                                                    []Incident                   `json:"Incident,omitempty"`
	// Quantity of items inventoried during drilling and/or operations                                                       
	Inventory                                                                                   []Inventory                  `json:"Inventory,omitempty"`
	// Operator personnel contact information on an operations report                                                        
	JobContact                                                                                  []AbstractContact            `json:"JobContact,omitempty"`
	// Description of the lithology for the interval.                                                                        
	Lithology                                                                                   *string                      `json:"Lithology,omitempty"`
	// Mud that has been lost during drilling / operations                                                                   
	MudLosses                                                                                   []MudLosses                  `json:"MudLosses,omitempty"`
	// Information related to mud volumes for drilling/operations report                                                     
	MudVolume                                                                                   []MudVolume                  `json:"MudVolume,omitempty"`
	// Name of Operations Report                                                                                             
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// An array of sequential operation activities descriptions performed during this reporting                              
	// period. Potentially includes critical path and offline activities.                                                    
	OperationsActivity                                                                          []OperationsActivity         `json:"OperationsActivity,omitempty"`
	// Snapshot of operations personnel broken down by each company on the rig at the time of                                
	// the report.                                                                                                           
	Personnel                                                                                   []FluffyPersonnel            `json:"Personnel,omitempty"`
	// A reference to the PPFG information for this reporting period                                                         
	PorePressure                                                                                []string                     `json:"PorePressure,omitempty"`
	// Information related to pump operations on a drilling/operations report                                                
	PumpOp                                                                                      []PumpOperations             `json:"PumpOp,omitempty"`
	// Report description                                                                                                    
	ReportDescription                                                                           *string                      `json:"ReportDescription,omitempty"`
	// Sequential number assigned to report header.                                                                          
	ReportNumber                                                                                *string                      `json:"ReportNumber,omitempty"`
	// Report remarks                                                                                                        
	ReportRemarks                                                                               *string                      `json:"ReportRemarks,omitempty"`
	// Date and time that the reporting period started. A report period is commonly 24 hours.                                
	StartDateTime                                                                               time.Time                    `json:"StartDateTime"`
	// Information regarding the status of the wellbore during this reporting period                                         
	StatusInfo                                                                                  []DrillingReportStatusInfo   `json:"StatusInfo,omitempty"`
	// DEPRECATED: Company or corporate division that is responsible for executing the work.                                 
	// With 1.1.0 or higher, please move this value to the associated Well Activity record                                   
	// (data.WellActivityID), i.e. data.StewardingCompany.                                                                   
	StewardingCompany                                                                           *string                      `json:"StewardingCompany,omitempty"`
	// DEPRECATED: Reference to the Organisation that represents the StewardingCompany. With                                 
	// 1.1.0 or higher, please obtain the Organisation's data.Name and set it as                                             
	// data.StewardingCompany value in the Well Activity record.                                                             
	StewardingCompanyID                                                                         *string                      `json:"StewardingCompanyID,omitempty"`
	// DEPRECATED: Team within a company or corporate division that is responsible for executing                             
	// the work. With 1.1.0 or higher, please move this value to the associated Well Activity                                
	// record (data.WellActivityID), i.e. data.StewardingCompanyTeam.                                                        
	StewardingCompanyTeam                                                                       *string                      `json:"StewardingCompanyTeam,omitempty"`
	// DEPRECATED: Reference to the Organisation that represents the StewardingCompanyTeam. With                             
	// 1.1.0 or higher, please obtain the Organisation's data.Name and set it as                                             
	// data.StewardingCompanyTeam value in the Well Activity record.                                                         
	StewardingCompanyTeamID                                                                     *string                      `json:"StewardingCompanyTeamID,omitempty"`
	// Authorized cost for the total job                                                                                     
	TargetCost                                                                                  *float64                     `json:"TargetCost,omitempty"`
	// Planned days for the total job                                                                                        
	TargetDays                                                                                  *float64                     `json:"TargetDays,omitempty"`
	// A series of time stamped comments which comprise part of this operations report.                                      
	TimedComments                                                                               []TimedComment               `json:"TimedComments,omitempty"`
	// Cumulative cost for the job through the end of current report                                                         
	TotalCost                                                                                   *float64                     `json:"TotalCost,omitempty"`
	// Cumulative days for the job through the end of the current report                                                     
	TotalDays                                                                                   *float64                     `json:"TotalDays,omitempty"`
	// Total days of non-productive time through the end of the current report                                               
	TotalNPT                                                                                    *float64                     `json:"TotalNPT,omitempty"`
	// Meteorological readings for the defined time period on an operations report                                           
	Weather                                                                                     []Weather                    `json:"Weather,omitempty"`
	// A link to the well activity to which this report is associated.                                                       
	WellActivityID                                                                              *string                      `json:"WellActivityID,omitempty"`
	// Local name defined for the Well                                                                                       
	WellAlias                                                                                   *WellAlias                   `json:"WellAlias,omitempty"`
	// Local name defined for the wellbore                                                                                   
	WellboreAlias                                                                               []WellboreAliasElement       `json:"WellboreAlias,omitempty"`
	// A link to the wellbore that was active at the end of this report period.                                              
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Information on the condition of the Drill Bit as recorded during an operations report
type BitRecord struct {
	// N = new, U = used.                                                                                 
	BitClass                                                                                     *string  `json:"BitClass,omitempty"`
	// Bit cost in local currency.                                                                        
	Cost                                                                                         *float64 `json:"Cost,omitempty"`
	// The name of the local currency                                                                     
	CostCurrency                                                                                 *string  `json:"CostCurrency,omitempty"`
	// Diameter of drilled hole.                                                                          
	DiameterBit                                                                                  *float64 `json:"DiameterBit,omitempty"`
	// Minimum hole or tubing which bit will pass through (for bi-center bits).                           
	DiameterPassThrough                                                                          *float64 `json:"DiameterPassThrough,omitempty"`
	// Diameter of pilot bit (for bi-center bits).                                                        
	DiameterPilot                                                                                *float64 `json:"DiameterPilot,omitempty"`
	// Bit drive type (Motor, rotary table etc).                                                          
	DriveType                                                                                    *string  `json:"DriveType,omitempty"`
	// Condition of bit bearings (integer 0-8 or E, F, N or X).                                           
	FinalConditionBearing                                                                        *string  `json:"FinalConditionBearing,omitempty"`
	// Overall dull condition from IADC bit wear 2 character codes.                                       
	FinalConditionDull                                                                           *string  `json:"FinalConditionDull,omitempty"`
	// Condition of bit gauge in 1/16 of a inch. I = in gauge, else number of 16ths out of gauge.         
	FinalConditionGauge                                                                          *string  `json:"FinalConditionGauge,omitempty"`
	// Condition of inner tooth rows (inner 2/3 of bit) (0-8).                                            
	FinalConditionInner                                                                          *float64 `json:"FinalConditionInner,omitempty"`
	// Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost            
	// Cone etc).                                                                                         
	FinalConditionLocation                                                                       *string  `json:"FinalConditionLocation,omitempty"`
	// Other comments on bit condition from IADC list (BitDullCode in Standard LISTS).                    
	FinalConditionOther                                                                          *string  `json:"FinalConditionOther,omitempty"`
	// Condition of outer tooth rows (outer 1/3 of bit) (0-8).                                            
	FinalConditionOuter                                                                          *float64 `json:"FinalConditionOuter,omitempty"`
	// Reason bit was pulled from IADC codes.                                                             
	FinalConditionReason                                                                         *string  `json:"FinalConditionReason,omitempty"`
	// IADC bit code.                                                                                     
	IADCCode                                                                                     *string  `json:"IADCCode,omitempty"`
	// Condition of bit bearings (integer 0-8 or E, F, N or X)).                                          
	InitialConditionBearing                                                                      *string  `json:"InitialConditionBearing,omitempty"`
	// Overall dull condition from IADC bit wear 2 character codes.                                       
	InitialConditionDull                                                                         *string  `json:"InitialConditionDull,omitempty"`
	// Condition of bit gauge in 1/16 of an inch. I = in gauge, else number of 16ths out of               
	// gauge.                                                                                             
	InitialConditionGauge                                                                        *string  `json:"InitialConditionGauge,omitempty"`
	// Condition of inner tooth rows (inner 2/3 of bit) (0-8).                                            
	InitialConditionInner                                                                        *float64 `json:"InitialConditionInner,omitempty"`
	// Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost            
	// Cone etc).                                                                                         
	InitialConditionLocation                                                                     *string  `json:"InitialConditionLocation,omitempty"`
	// Other comments on bit condition from IADC list (BitDullCode in standard list).                     
	InitialConditionOther                                                                        *string  `json:"InitialConditionOther,omitempty"`
	// Condition of outer tooth rows (outer 1/3 of bit) (0-8).                                            
	InitialConditionOuter                                                                        *float64 `json:"InitialConditionOuter,omitempty"`
	// Reason bit was pulled from IADC codes.                                                             
	InitialConditionReason                                                                       *string  `json:"InitialConditionReason,omitempty"`
	// Manufacturer / supplier of the item.                                                               
	Manufacturer                                                                                 *string  `json:"Manufacturer,omitempty"`
	// The manufacturers code for the bit.                                                                
	MfgCode                                                                                      *string  `json:"MfgCode,omitempty"`
	// Bit number and rerun number e.g. "4.1" for the first rerun of bit 4.                               
	NumBit                                                                                       string   `json:"NumBit"`
	// Type of bit.                                                                                       
	TypeBit                                                                                      *string  `json:"TypeBit,omitempty"`
}

// Cost information captured for a defined time period during operations and/or drilling
type Cost struct {
	// Activity code classification describing higher level steps in the Well Activity                 
	ActivityPhaseID                                                                           *string  `json:"ActivityPhaseID,omitempty"`
	// AFE number that this cost item applies to.                                                      
	AFENumber                                                                                 *string  `json:"AFENumber,omitempty"`
	// Comments and remarks                                                                            
	Comments                                                                                  *string  `json:"Comments,omitempty"`
	// Cost class code.                                                                                
	CostClass                                                                                 *string  `json:"CostClass,omitempty"`
	// Cost code.                                                                                      
	CostCode                                                                                  *string  `json:"CostCode,omitempty"`
	// Currency used for Cost Amount                                                                   
	CostCurrency                                                                              string   `json:"CostCurrency"`
	// Cost group code.                                                                                
	CostGroup                                                                                 *string  `json:"CostGroup,omitempty"`
	// Name of pool/reservoir that this cost item can be accounted to.                                 
	CostPoolName                                                                              *string  `json:"CostPoolName,omitempty"`
	// Cost subcode.                                                                                   
	CostSubCode                                                                               *string  `json:"CostSubCode,omitempty"`
	// Used to indicate if Equipment or Service in scope for the Cost Item is being used. Can          
	// drive different Standby/In Use Rental Rates where applicable.                                   
	InUse                                                                                     *bool    `json:"InUse,omitempty"`
	// Invoice number for cost item; the bill is sent to the operator.                                 
	InvoiceNumber                                                                             *string  `json:"InvoiceNumber,omitempty"`
	// Is this item carried from day to day?                                                           
	IsCarryOver                                                                               *bool    `json:"IsCarryOver,omitempty"`
	// Is this an estimated cost?                                                                      
	IsEstimated                                                                               *bool    `json:"IsEstimated,omitempty"`
	// Is this item a rental?                                                                          
	IsRental                                                                                  *bool    `json:"IsRental,omitempty"`
	// Description of the cost item.                                                                   
	ItemDescription                                                                           *string  `json:"ItemDescription,omitempty"`
	// Serial number.                                                                                  
	ItemSerialNumber                                                                          *string  `json:"ItemSerialNumber,omitempty"`
	// Purchase order number provided by the operator.                                                 
	PONumber                                                                                  *string  `json:"PONumber,omitempty"`
	// High Level cost category qualifier                                                              
	ProductType                                                                               *string  `json:"ProductType,omitempty"`
	// An identification tag for the item. A serial number is a type of identification tag;            
	// however, some tags contain many pieces of information. This element only identifies the         
	// tag and does not describe the contents.                                                         
	TagName                                                                                   *string  `json:"TagName,omitempty"`
	// The field ticket number issued by the service company on location.                              
	TicketNumber                                                                              *string  `json:"TicketNumber,omitempty"`
	// Total cost for the item for this period                                                         
	TotalCostAmount                                                                           float64  `json:"TotalCostAmount"`
	// Number of cost items used that day, e.g., 1 rig dayrate, 30 joints of casing.                   
	TotalQuantityItemsUsed                                                                    *int64   `json:"TotalQuantityItemsUsed,omitempty"`
	// Cost per item, assume same currency.                                                            
	UnitCost                                                                                  *float64 `json:"UnitCost,omitempty"`
	// The kind of cost item specified (e.g., barrel, sack, gallon)                                    
	UnitKind                                                                                  *string  `json:"UnitKind,omitempty"`
	// Quantity of the unit kind (e.g., 50)                                                            
	UnitSize                                                                                  *float64 `json:"UnitSize,omitempty"`
	// Name of the vendor.                                                                             
	VendorName                                                                                *string  `json:"VendorName,omitempty"`
	// Vendor number.                                                                                  
	VendorNumber                                                                              *string  `json:"VendorNumber,omitempty"`
}

// DEPRECATED: Use data.OperationsReport instead. Information regarding an individual
// activity that is part of the Drilling Report
type DrillingActivity struct {
	// DEPRECATED: Use data.OperationsActivity.ActivityCodeID instead. The activity code of the                                        
	// activity                                                                                                                        
	ActivityCodeID                                                                              *string                                `json:"ActivityCodeID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityID instead. Identifier of the activity                                          
	ActivityID                                                                                  *string                                `json:"ActivityID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityMDBase instead. Measured depth at the                                           
	// base of interval over which the activity was conducted.                                                                         
	ActivityMDBase                                                                              *float64                               `json:"ActivityMDBase,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityMDTop instead. Measured depth at the top                                        
	// of interval over which the activity was conducted.                                                                              
	ActivityMDTop                                                                               *float64                               `json:"ActivityMDTop,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityOutcomeDetailID instead. More detail on                                         
	// the outcome of the activity. For Example Injury, Operation Failed, Kick, Circulation                                            
	// Loss, Mud Loss                                                                                                                  
	ActivityOutcomeDetailID                                                                     *string                                `json:"ActivityOutcomeDetailID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityOutcomeID instead. OK, Finish,                                                  
	// interrupted, failed, etc.                                                                                                       
	ActivityOutcomeID                                                                           *string                                `json:"ActivityOutcomeID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityTVDBase instead. TVD at the base of                                             
	// interval over which the activity was conducted.                                                                                 
	ActivityTVDBase                                                                             *float64                               `json:"ActivityTVDBase,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ActivityTVDTop instead. TVD at the top of                                               
	// interval over which the activity was conducted.                                                                                 
	ActivityTVDTop                                                                              *float64                               `json:"ActivityTVDTop,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.AttachmentIDs instead. Attachments associated                                           
	// with the activity                                                                                                               
	AttachmentIDs                                                                               []string                               `json:"AttachmentIDs,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.BitMDBase instead. Measured depth of the bit at                                         
	// the ase of interval over which the activity was conducted.                                                                      
	BitMDBase                                                                                   *float64                               `json:"BitMDBase,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.BitMDTop instead. Measured depth of the bit at                                          
	// the top of interval over which the activity was conducted.                                                                      
	BitMDTop                                                                                    *float64                               `json:"BitMDTop,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.Comments instead. Comments and remarks.                                                 
	Comments                                                                                    *string                                `json:"Comments,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.DetailActivity instead. Custom string to further                                        
	// define an activity.                                                                                                             
	DetailActivity                                                                              *string                                `json:"DetailActivity,omitempty"`
	// DEPRECATED: Transform the string value to a number and assign it to                                                             
	// data.OperationsActivity.ActualDuration (and assign the actual unit in meta[]). The                                              
	// activity duration (commonly in hours).                                                                                          
	Duration                                                                                    *time.Time                             `json:"Duration,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.EndDateTime instead. Date and time that                                                 
	// activities ended.                                                                                                               
	EndDateTime                                                                                 *time.Time                             `json:"EndDateTime,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.IsOffline instead. Is the activity an Offline                                           
	// activity, Values are "true" (or "1") and "false" (or "0").                                                                      
	IsOffline                                                                                   *bool                                  `json:"IsOffline,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.IsOptimum instead. Is the activity optimum?                                             
	// Values are "true" (or "1") and "false" (or "0").                                                                                
	IsOptimum                                                                                   *bool                                  `json:"IsOptimum,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.IsProductive instead. Does activity bring closer                                        
	// to objective?  Values are "true" (or "1") and "false" (or "0").                                                                 
	IsProductive                                                                                *bool                                  `json:"IsProductive,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ItemState instead. The item state for the data                                          
	// object. (Actual, Planned, Unknown and Modeled)                                                                                  
	ItemState                                                                                   *string                                `json:"ItemState,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.MeasuredDepth instead. The measured depth to the                                        
	// drilling activity/operation.                                                                                                    
	MeasuredDepth                                                                               *float64                               `json:"MeasuredDepth,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ObjectReference instead. link to an external                                            
	// object or document. For example Regulatory submission, Tour sheet.                                                              
	ObjectReference                                                                             *string                                `json:"ObjectReference,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.OperationalNotes instead. Notes associated with                                         
	// the operation                                                                                                                   
	OperationalNotes                                                                            *string                                `json:"OperationalNotes,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.OperatorID instead. Reference to the Organisation                                       
	// that represents the Operator                                                                                                    
	OperatorID                                                                                  *string                                `json:"OperatorID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ParentID instead. The UID of the parent activity                                        
	ParentID                                                                                    *string                                `json:"ParentID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.Phase instead. Phase refers to a large activity                                         
	// classification, e.g., drill surface hole.                                                                                       
	Phase                                                                                       *string                                `json:"Phase,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.PlannedDuration instead. The planned duration for                                       
	// the activity.                                                                                                                   
	PlannedDuration                                                                             *float64                               `json:"PlannedDuration,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.PlannedHoleDepthIn  instead. The planned hole                                           
	// depth at the start of the activity                                                                                              
	PlannedHoleDepthIn                                                                          *float64                               `json:"PlannedHoleDepthIn,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.PlannedHoleDepthOut instead. The planned hole                                           
	// depth at the end of the activity                                                                                                
	PlannedHoleDepthOut                                                                         *float64                               `json:"PlannedHoleDepthOut,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.PredecessorID instead. The UID of the preceding                                         
	// activity                                                                                                                        
	PredecessorID                                                                               *string                                `json:"PredecessorID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ProprietaryActivityCode instead. Alternate                                              
	// proprietary activity code. For example contractor specific activity code                                                        
	ProprietaryActivityCode                                                                     []DrillActivityProprietaryActivityCode `json:"ProprietaryActivityCode,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.SectionDiameter instead. The Diameter of the                                            
	// section in which the activity took place                                                                                        
	SectionDiameter                                                                             *float64                               `json:"SectionDiameter,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.ServiceProviderID instead. Reference to the                                             
	// Organisation that represents the Service Provider                                                                               
	ServiceProviderID                                                                           *string                                `json:"ServiceProviderID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.StartDateTime instead. Date and time that                                               
	// activities started.                                                                                                             
	StartDateTime                                                                               *time.Time                             `json:"StartDateTime,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.TargetDepth instead. The target depth of the                                            
	// activity                                                                                                                        
	TargetDepth                                                                                 *float64                               `json:"TargetDepth,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.TubularID instead. A pointer to the tubular                                             
	// object related to this activity. Not the Hole Section that you are operating within.                                            
	TubularID                                                                                   *string                                `json:"TubularID,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.TVD instead. True vertical depth to the drilling                                        
	// activity/operation.                                                                                                             
	Tvd                                                                                         *float64                               `json:"TVD,omitempty"`
	// DEPRECATED: Use data.OperationsActivity.TypeActivityClassID instead. Classifier (planned,                                       
	// unplanned, downtime).                                                                                                           
	TypeActivityClassID                                                                         *string                                `json:"TypeActivityClassID,omitempty"`
}

// Definition of an alias
type DrillActivityProprietaryActivityCode struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// General information about a gas reading taken during the drill report period
type GasReading struct {
	// Date and time of the gas reading.                                                               
	DateTime                                                                                 time.Time `json:"DateTime"`
	// Ethane (C2) concentration.                                                                      
	Ethane                                                                                   *float64  `json:"Ethane,omitempty"`
	// Top measured depth for which the gas reading was conducted                                      
	GasReadingMeasureDepthTop                                                                *float64  `json:"GasReadingMeasureDepthTop,omitempty"`
	// Bottom true vertical depth interval over which the gas reading was conducted.                   
	GasReadingTvdBase                                                                        *float64  `json:"GasReadingTvdBase,omitempty"`
	// Iso-butane (iC4) concentration.                                                                 
	Isobutane                                                                                *float64  `json:"Isobutane,omitempty"`
	// Iso-pentane (iC5) concentration                                                                 
	Isopentane                                                                               *float64  `json:"Isopentane,omitempty"`
	// Methane (C1) concentration                                                                      
	Methane                                                                                  *float64  `json:"Methane,omitempty"`
	// Nor-butane (nC4) concentration.                                                                 
	Norbutane                                                                                *float64  `json:"Norbutane,omitempty"`
	// Propane (C3) concentration.                                                                     
	Propane                                                                                  *float64  `json:"Propane,omitempty"`
	// Type of gas reading, e.g.circulating, background gas, connection gas, drilling                  
	// background, gas, drilling gas peak, flow check gas, no readings, other, shut down gas,          
	// trip gas, unknown.                                                                              
	ReadingType                                                                              *string   `json:"ReadingType,omitempty"`
	// The average gas reading                                                                         
	TotalGasAverage                                                                          *float64  `json:"TotalGasAverage,omitempty"`
	// The highest gas reading.                                                                        
	TotalGasMax                                                                              *float64  `json:"TotalGasMax,omitempty"`
	// The lowest gas reading.                                                                         
	TotalGasMin                                                                              *float64  `json:"TotalGasMin,omitempty"`
}

// Health Safety or Environment events that occurred since the last drilling/operation
// report. Captures data related to HSE events (e.g., tests, inspections, meetings, and
// drills), test values (e.g., pressure tested to), and/or incidents (e.g., discharges,
// non-compliance notices received, etc.).
type HealthSafetyEnvironment struct {
	// Comments and remarks                                                   
	Comments                                                       *string    `json:"Comments,omitempty"`
	// Incident free duration (commonly in days).                             
	DaysIncidentFree                                               *int64     `json:"DaysIncidentFree,omitempty"`
	// Last abandonment drill.                                                
	LastAbandonDrillDate                                           *time.Time `json:"LastAbandonDrillDate,omitempty"`
	// Last blow out preventer drill.                                         
	LastBopDrillDate                                               *time.Time `json:"LastBopDrillDate,omitempty"`
	// Last blow out preventer pressure test.                                 
	LastBopPressureTestDate                                        *time.Time `json:"LastBopPressureTestDate,omitempty"`
	// Last casing pressure test date and time.                               
	LastCasingPressureTestDate                                     *time.Time `json:"LastCasingPressureTestDate,omitempty"`
	// Last diverter drill.                                                   
	LastDiverterDrillDate                                          *time.Time `json:"LastDiverterDrillDate,omitempty"`
	// Last fire or life boat drill.                                          
	LastFireBoatDrillDate                                          *time.Time `json:"LastFireBoatDrillDate,omitempty"`
	// Last rig inspection/check.                                             
	LastRigInspectionDate                                          *time.Time `json:"LastRigInspectionDate,omitempty"`
	// Last safety inspection.                                                
	LastSafetyInspectionDate                                       *time.Time `json:"LastSafetyInspectionDate,omitempty"`
	// Last safety meeting.                                                   
	LastSafetyMeetingDate                                          *time.Time `json:"LastSafetyMeetingDate,omitempty"`
	// Last trip drill.                                                       
	LastTripDrillDate                                              *time.Time `json:"LastTripDrillDate,omitempty"`
	// Next blow out preventer pressure test.                                 
	NextBopPresTestDate                                            *time.Time `json:"NextBopPresTestDate,omitempty"`
	// Inspection non-compliance notice served?                               
	NonComplianceIssued                                            *bool      `json:"NonComplianceIssued,omitempty"`
	// Blow out preventer annular preventer pressure tested to.               
	PressureAnnular                                                *float64   `json:"PressureAnnular,omitempty"`
	// Blow out preventer ram pressure tested to.                             
	PressureBOPRAM                                                 *float64   `json:"PressureBOPRam,omitempty"`
	// Choke line pressure tested to.                                         
	PressureChokeLine                                              *float64   `json:"PressureChokeLine,omitempty"`
	// Choke line manifold pressure tested to.                                
	PressureChokeMan                                               *float64   `json:"PressureChokeMan,omitempty"`
	// Blow out preventer diverter pressure tested to.                        
	PressureDiverter                                               *float64   `json:"PressureDiverter,omitempty"`
	// Kelly hose pressure tested to.                                         
	PressureKellyHose                                              *float64   `json:"PressureKellyHose,omitempty"`
	// Last casing pressure test pressure.                                    
	PressureLastCasing                                             *float64   `json:"PressureLastCasing,omitempty"`
	// Standpipe manifold pressure tested to.                                 
	PressureStandPipeManifold                                      *float64   `json:"PressureStandPipeManifold,omitempty"`
	// Governmental regulatory inspection agency inspection?                  
	RegulatoryAgencyInspection                                     *bool      `json:"RegulatoryAgencyInspection,omitempty"`
	// Number of health, safety and environment incidents reported.           
	TotalStopCards                                                 *int64     `json:"TotalStopCards,omitempty"`
	// Volume of cuttings discharged.                                         
	VolumeCuttingDischarged                                        *float64   `json:"VolumeCuttingDischarged,omitempty"`
	// Daily whole mud discarded.                                             
	VolumeFluidDischarged                                          *float64   `json:"VolumeFluidDischarged,omitempty"`
	// Oil on cuttings daily discharge.                                       
	VolumeOilCuttingDischarge                                      *float64   `json:"VolumeOilCuttingDischarge,omitempty"`
	// Volume of sanitary waste discharged.                                   
	VolumeWasteDischarged                                          *float64   `json:"VolumeWasteDischarged,omitempty"`
}

// Description of incidents that have occurred during the last drilling/operations report
type Incident struct {
	// Accident description.                                                                            
	AccidentDescription                                                                       *string   `json:"AccidentDescription,omitempty"`
	// Cause description.                                                                               
	CauseDescription                                                                          *string   `json:"CauseDescription,omitempty"`
	// Comments and remarks                                                                             
	Comments                                                                                  *string   `json:"Comments,omitempty"`
	// Gross estimate of the cost incurred due to the incident.                                         
	CostLossEstimate                                                                          *float64  `json:"CostLossEstimate,omitempty"`
	// Date and time that incident occurred                                                             
	DateTime                                                                                  time.Time `json:"DateTime"`
	// Number of hours lost due to the incident.                                                        
	EstimateHoursLost                                                                         *float64  `json:"EstimateHoursLost,omitempty"`
	// Name of the person who prepared the incident report.                                             
	IncidentReporterName                                                                      *string   `json:"IncidentReporterName,omitempty"`
	// Near miss incident occurrence?                                                                   
	IsNearMiss                                                                                *bool     `json:"IsNearMiss,omitempty"`
	// Location description.                                                                            
	LocationDescription                                                                       *string   `json:"LocationDescription,omitempty"`
	// A reference to the organisation for which is the company primarily involved in managing          
	// the incident.                                                                                    
	OrganisationID                                                                            *string   `json:"OrganisationID,omitempty"`
	// Remedial action description.                                                                     
	RemedialActionDescription                                                                 *string   `json:"RemedialActionDescription,omitempty"`
	// Number of personnel killed due to the incident.                                                  
	TotalFatality                                                                             *int64    `json:"TotalFatality,omitempty"`
	// Number of personnel with major injuries.                                                         
	TotalMajorInjury                                                                          *int64    `json:"TotalMajorInjury,omitempty"`
	// Number of personnel with minor injuries.                                                         
	TotalMinorInjury                                                                          *int64    `json:"TotalMinorInjury,omitempty"`
}

// Quantity of items inventoried during drilling and/or operations
type Inventory struct {
	// Comments and remarks                                                                            
	Comments                                                                                  *string  `json:"Comments,omitempty"`
	// DEPRECATED: Cost for the product for the report interval.                                       
	CostItem                                                                                  *string  `json:"CostItem,omitempty"`
	// Cost for the product for the report interval.                                                   
	CostOfItem                                                                                *float64 `json:"CostOfItem,omitempty"`
	// Description of the inventory item                                                               
	ItemDescription                                                                           *string  `json:"ItemDescription,omitempty"`
	// DEPRECATED: This property is incorrectly defined as a number, please use the Name               
	// property instead. Name or type of inventory item.                                               
	ItemName                                                                                  *float64 `json:"ItemName,omitempty"`
	// Name or type of inventory item.                                                                 
	Name                                                                                      *string  `json:"Name,omitempty"`
	// Price per item unit, assume same currency for all items.                                        
	PricePerUnit                                                                              *float64 `json:"PricePerUnit,omitempty"`
	// Daily quantity adjustment/correction.                                                           
	TotalQuantityAdjustment                                                                   *float64 `json:"TotalQuantityAdjustment,omitempty"`
	// Amount of the item remaining on location after all adjustments for the report interval.         
	TotalQuantityOnLocation                                                                   *float64 `json:"TotalQuantityOnLocation,omitempty"`
	// Quantity received at the site.                                                                  
	TotalQuantityReceived                                                                     *float64 `json:"TotalQuantityReceived,omitempty"`
	// Quantity returned to base from site.                                                            
	TotalQuantityReturned                                                                     *float64 `json:"TotalQuantityReturned,omitempty"`
	// Start quantity for report interval.                                                             
	TotalQuantityStart                                                                        *float64 `json:"TotalQuantityStart,omitempty"`
	// Quantity used for the report interval.                                                          
	TotalQuantityUsed                                                                         *float64 `json:"TotalQuantityUsed,omitempty"`
	// Item volume per unit.                                                                           
	VolumeItem                                                                                *float64 `json:"VolumeItem,omitempty"`
	// Item weight per unit.                                                                           
	WeightItem                                                                                *float64 `json:"WeightItem,omitempty"`
}

// Mud that has been lost during drilling / operations
type MudLosses struct {
	// Comments and remarks                                                                      
	Comments                                                                           *string   `json:"Comments,omitempty"`
	// Date and time that the mud loss occurred                                                  
	DateTime                                                                           time.Time `json:"DateTime"`
	// Mud volume lost downhole during abandonment.                                              
	MudLostVolumeAbandonDownhole                                                       *float64  `json:"MudLostVolumeAbandonDownhole,omitempty"`
	// Mud volume lost downhole behind casing.                                                   
	MudLostVolumeBehindCasingDownhole                                                  *float64  `json:"MudLostVolumeBehindCasingDownhole,omitempty"`
	// Mud volume lost downhole running casing                                                   
	MudLostVolumeCasingHole                                                            *float64  `json:"MudLostVolumeCasingHole,omitempty"`
	// Mud volume lost downhole while cementing.                                                 
	MudLostVolumeCementingDownhole                                                     *float64  `json:"MudLostVolumeCementingDownhole,omitempty"`
	// Mud volume lost downhole while circulating.                                               
	MudLostVolumeCirculatingDownhole                                                   *float64  `json:"MudLostVolumeCirculatingDownhole,omitempty"`
	// Bottom measured depth for which the mud loss reading was occurred                         
	MudLostVolumeMeasureDepthBase                                                      *float64  `json:"MudLostVolumeMeasureDepthBase,omitempty"`
	// Top measured depth for which the mud loss reading was occurred                            
	MudLostVolumeMeasureDepthTop                                                       *float64  `json:"MudLostVolumeMeasureDepthTop,omitempty"`
	// Volume of mud lost in mud cleaning equipment (at surface).                                
	MudLostVolumeMudCleanerSurface                                                     *float64  `json:"MudLostVolumeMudCleanerSurface,omitempty"`
	// Mud volume lost downhole from other location.                                             
	MudLostVolumeOtherLocationDownhole                                                 *float64  `json:"MudLostVolumeOtherLocationDownhole,omitempty"`
	// Surface volume lost other location.                                                       
	MudLostVolumeOtherLocationSurface                                                  *float64  `json:"MudLostVolumeOtherLocationSurface,omitempty"`
	// Volume of mud lost in pit room (at surface).                                              
	MudLostVolumePitsSurface                                                           *float64  `json:"MudLostVolumePitsSurface,omitempty"`
	// Volume of mud lost at shakers (at surface).                                               
	MudLostVolumeShakerSurface                                                         *float64  `json:"MudLostVolumeShakerSurface,omitempty"`
	// Volume of mud lost while tripping (at surface).                                           
	MudLostVolumeTrippingSurface                                                       *float64  `json:"MudLostVolumeTrippingSurface,omitempty"`
	// Bottom true vertical depth interval over which the mud loss reading was occurred          
	MudLostVolumeTvdBase                                                               *float64  `json:"MudLostVolumeTvdBase,omitempty"`
	// Top  true vertical depth interval over which the mud loss reading was occurred            
	MudLostVolumeTvdTop                                                                *float64  `json:"MudLostVolumeTvdTop,omitempty"`
	// Total volume of mud lost downhole.                                                        
	TotalMudLostVolumeDownhole                                                         *float64  `json:"TotalMudLostVolumeDownhole,omitempty"`
	// Total volume of mud lost at surface.                                                      
	TotalMudLostVolumeSurface                                                          *float64  `json:"TotalMudLostVolumeSurface,omitempty"`
}

// Information related to mud volumes for drilling/operations report
type MudVolume struct {
	// Comments and remarks                                                                          
	Comments                                                                               *string   `json:"Comments,omitempty"`
	// Date and time of the mud volume                                                               
	DateTime                                                                               time.Time `json:"DateTime"`
	// Total mud volume that was expected                                                            
	ExpectedMudVolume                                                                      *float64  `json:"ExpectedMudVolume,omitempty"`
	// Volume of mud built.                                                                          
	MudVolumeBuild                                                                         *float64  `json:"MudVolumeBuild,omitempty"`
	// DEPRECATED - CHANGED OBJECT TYPE.  Volume of mud built.                                       
	MudVolumeBuilt                                                                         *string   `json:"MudVolumeBuilt,omitempty"`
	// Volume of mud contained in casing annulus.                                                    
	MudVolumeCasing                                                                        *float64  `json:"MudVolumeCasing,omitempty"`
	// Volume of mud dumped.                                                                         
	MudVolumeDumped                                                                        *float64  `json:"MudVolumeDumped,omitempty"`
	// Volume of mud at the end of the report interval (including pits and hole).                    
	MudVolumeEnd                                                                           *float64  `json:"MudVolumeEnd,omitempty"`
	// Volume of mud contained in the openhole annulus.                                              
	MudVolumeHole                                                                          *float64  `json:"MudVolumeHole,omitempty"`
	// Bottom measured depth for which the mud volume reading was conducted                          
	MudVolumeMeasureDepthBase                                                              *float64  `json:"MudVolumeMeasureDepthBase,omitempty"`
	// Top measured depth for which the mud volume reading was conducted                             
	MudVolumeMeasureDepthTop                                                               *float64  `json:"MudVolumeMeasureDepthTop,omitempty"`
	// Volume of mud received from mud warehouse.                                                    
	MudVolumeReceived                                                                      *float64  `json:"MudVolumeReceived,omitempty"`
	// Volume of mud returned to mud warehouse.                                                      
	MudVolumeReturned                                                                      *float64  `json:"MudVolumeReturned,omitempty"`
	// Volume of mud contained in riser section annulus.                                             
	MudVolumeRiser                                                                         *float64  `json:"MudVolumeRiser,omitempty"`
	// Volume of mud at start of report interval (including pits and hole).                          
	MudVolumeStart                                                                         *float64  `json:"MudVolumeStart,omitempty"`
	// Volume of mud contained within active string.                                                 
	MudVolumeString                                                                        *float64  `json:"MudVolumeString,omitempty"`
	// Bottom true vertical depth interval over which the mud volume reading was conducted.          
	MudVolumeTvdBase                                                                       *float64  `json:"MudVolumeTvdBase,omitempty"`
	// Top  true vertical depth interval over which the mud volume reading was conducted.            
	MudVolumeTvdTop                                                                        *float64  `json:"MudVolumeTvdTop,omitempty"`
	// Actual total mud volume that was measured                                                     
	TotalMudVolume                                                                         *float64  `json:"TotalMudVolume,omitempty"`
}

// Information regarding an individual activity that is part of the Operations Report
type OperationsActivity struct {
	// The activity code of the activity                                                                                                     
	ActivityCodeID                                                                               *string                                     `json:"ActivityCodeID,omitempty"`
	// Identifier of the activity.                                                                                                           
	ActivityID                                                                                   *string                                     `json:"ActivityID,omitempty"`
	// Measured depth at the base of interval over which the activity was conducted.                                                         
	ActivityMDBase                                                                               *float64                                    `json:"ActivityMDBase,omitempty"`
	// Measured depth at the top of interval over which the activity was conducted.                                                          
	ActivityMDTop                                                                                *float64                                    `json:"ActivityMDTop,omitempty"`
	// More detail on the outcome of the activity. For Example Injury, Operation Failed, Kick,                                               
	// Circulation Loss, Mud Loss                                                                                                            
	ActivityOutcomeDetailID                                                                      *string                                     `json:"ActivityOutcomeDetailID,omitempty"`
	// OK, Finish, interrupted, failed, etc.                                                                                                 
	ActivityOutcomeID                                                                            *string                                     `json:"ActivityOutcomeID,omitempty"`
	// TVD at the base of interval over which the activity was conducted.                                                                    
	ActivityTVDBase                                                                              *float64                                    `json:"ActivityTVDBase,omitempty"`
	// TVD at the top of interval over which the activity was conducted.                                                                     
	ActivityTVDTop                                                                               *float64                                    `json:"ActivityTVDTop,omitempty"`
	// Actual duration of the activity.                                                                                                      
	ActualDuration                                                                               *float64                                    `json:"ActualDuration,omitempty"`
	// Attachments associated with the activity                                                                                              
	AttachmentIDs                                                                                []string                                    `json:"AttachmentIDs,omitempty"`
	// Measured depth of the bit at the ase of interval over which the activity was conducted.                                               
	BitMDBase                                                                                    *float64                                    `json:"BitMDBase,omitempty"`
	// Measured depth of the bit at the top of interval over which the activity was conducted.                                               
	BitMDTop                                                                                     *float64                                    `json:"BitMDTop,omitempty"`
	// Comments and remarks.                                                                                                                 
	Comments                                                                                     *string                                     `json:"Comments,omitempty"`
	// Custom string to further define an activity.                                                                                          
	DetailActivity                                                                               *string                                     `json:"DetailActivity,omitempty"`
	// Date and time that activities ended.                                                                                                  
	EndDateTime                                                                                  *time.Time                                  `json:"EndDateTime,omitempty"`
	// Is the activity an Offline activity, Values are "true" (or "1") and "false" (or "0").                                                 
	IsOffline                                                                                    *bool                                       `json:"IsOffline,omitempty"`
	// Is the activity optimum? Values are "true" (or "1") and "false" (or "0").                                                             
	IsOptimum                                                                                    *bool                                       `json:"IsOptimum,omitempty"`
	// Does activity bring closer to objective?  Values are "true" (or "1") and "false" (or "0").                                            
	IsProductive                                                                                 *bool                                       `json:"IsProductive,omitempty"`
	// The item state for the data object. (Actual, Planned, Unknown and Modeled)                                                            
	ItemState                                                                                    *string                                     `json:"ItemState,omitempty"`
	// DEPRECATED: The measured depth to the activity/operation.  Use ActivityMDBase instead.                                                
	MeasuredDepth                                                                                *float64                                    `json:"MeasuredDepth,omitempty"`
	// link to an external object or document. For example Regulatory submission, Tour sheet.                                                
	ObjectReference                                                                              *string                                     `json:"ObjectReference,omitempty"`
	// Notes associated with the operation                                                                                                   
	OperationalNotes                                                                             *string                                     `json:"OperationalNotes,omitempty"`
	// Reference to the Organisation that represents the Operator                                                                            
	OperatorID                                                                                   *string                                     `json:"OperatorID,omitempty"`
	// The UID of the parent activity                                                                                                        
	ParentID                                                                                     *string                                     `json:"ParentID,omitempty"`
	// Phase refers to a large activity classification, e.g., drill surface hole.                                                            
	Phase                                                                                        *string                                     `json:"Phase,omitempty"`
	// The planned duration for the activity.                                                                                                
	PlannedDuration                                                                              *float64                                    `json:"PlannedDuration,omitempty"`
	// The planned hole depth at the start of the activity                                                                                   
	PlannedHoleDepthIn                                                                           *float64                                    `json:"PlannedHoleDepthIn,omitempty"`
	// The planned hole depth at the end of the activity                                                                                     
	PlannedHoleDepthOut                                                                          *float64                                    `json:"PlannedHoleDepthOut,omitempty"`
	// The UID of the preceding activity                                                                                                     
	PredecessorID                                                                                *string                                     `json:"PredecessorID,omitempty"`
	// Alternate proprietary activity code. For example contractor specific activity code                                                    
	ProprietaryActivityCode                                                                      []OperationsActivityProprietaryActivityCode `json:"ProprietaryActivityCode,omitempty"`
	// The Diameter of the section in which the activity took place                                                                          
	SectionDiameter                                                                              *float64                                    `json:"SectionDiameter,omitempty"`
	// Reference to the Organisation that represents the Service Provider                                                                    
	ServiceProviderID                                                                            *string                                     `json:"ServiceProviderID,omitempty"`
	// Date and time that activities started.                                                                                                
	StartDateTime                                                                                *time.Time                                  `json:"StartDateTime,omitempty"`
	// The target depth of the activity                                                                                                      
	TargetDepth                                                                                  *float64                                    `json:"TargetDepth,omitempty"`
	// A pointer to the tubular object related to this activity. Not the Hole Section that you                                               
	// are operating within.                                                                                                                 
	TubularID                                                                                    *string                                     `json:"TubularID,omitempty"`
	// DEPRECATED: True vertical depth to the activity/operation. Use ActivityTVDBase instead.                                               
	Tvd                                                                                          *float64                                    `json:"TVD,omitempty"`
	// Classifier (planned, unplanned, downtime).                                                                                            
	TypeActivityClassID                                                                          *string                                     `json:"TypeActivityClassID,omitempty"`
	// A Reference to the wellbore in which the activities take place.                                                                       
	WellboreID                                                                                   *string                                     `json:"WellboreID,omitempty"`
}

// Definition of an alias
type OperationsActivityProprietaryActivityCode struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// Snapshot of operations personnel broken down by each company on the rig at the time of
// the report.
type FluffyPersonnel struct {
	// Comments and remarks                                                                               
	Comments                                                                                     *string  `json:"Comments,omitempty"`
	// Number of persons on board or on location for the selected company/organization.                   
	// HeadCount should be reported as a non-negative integer.                                            
	HeadCount                                                                                    float64  `json:"HeadCount"`
	// A Reference to the organization for which have their headcount measured during this report         
	OrganizationID                                                                               string   `json:"OrganizationID"`
	// Role the organization is playing for the service being provided                                    
	OrganizationRole                                                                             *string  `json:"OrganizationRole,omitempty"`
	// Service provided by the company.                                                                   
	ServiceType                                                                                  *string  `json:"ServiceType,omitempty"`
	// Total time worked by the company (commonly in hours).                                              
	TotalTime                                                                                    *float64 `json:"TotalTime,omitempty"`
}

// Information related to pump operations on a drilling/operations report
type PumpOperations struct {
	// Comments and remarks                                                        
	Comments                                                             *string   `json:"Comments,omitempty"`
	// Date and time when the pump operation occurred                              
	DateTime                                                             time.Time `json:"DateTime"`
	// Liner inside diameter.                                                      
	LinerInnerDiameter                                                   *float64  `json:"LinerInnerDiameter,omitempty"`
	// Along-hole measured depth of the measurement from the drill datum.          
	MeasuredDepthBit                                                     *float64  `json:"MeasuredDepthBit,omitempty"`
	// Type of pump operation.                                                     
	OperationType                                                        *string   `json:"OperationType,omitempty"`
	// how much fluid is moved by the pump in one cycle                            
	PumpDisplacement                                                     *float64  `json:"PumpDisplacement,omitempty"`
	// Pump efficiency.                                                            
	PumpEfficiency                                                       *float64  `json:"PumpEfficiency,omitempty"`
	// The model name for the pump                                                 
	PumpModelName                                                        *string   `json:"PumpModelName,omitempty"`
	// The sequence number of the pump (e.g., pump 1)                              
	PumpNumber                                                           *string   `json:"PumpNumber,omitempty"`
	// Pump output (included for efficiency).                                      
	PumpOutput                                                           *float64  `json:"PumpOutput,omitempty"`
	// Pump pressure recorded.                                                     
	PumpPressure                                                         *float64  `json:"PumpPressure,omitempty"`
	// Pump stroke length.                                                         
	StrokeLength                                                         *float64  `json:"StrokeLength,omitempty"`
	// Pump rate (strokes per minute).                                             
	StrokeRate                                                           *float64  `json:"StrokeRate,omitempty"`
}

// Status information related to an Operations Report
type DrillingReportStatusInfo struct {
	// Diameter of the last casing joint.                                                               
	CasingDiameterLast                                                                        *float64  `json:"CasingDiameterLast,omitempty"`
	// Measured depth of the last casing joint.                                                         
	CasingMDLast                                                                              *float64  `json:"CasingMDLast,omitempty"`
	// True vertical depth of last casing joint.                                                        
	CasingTVDLast                                                                             *float64  `json:"CasingTVDLast,omitempty"`
	// Description of the hole condition.                                                               
	ConditionHole                                                                             *string   `json:"ConditionHole,omitempty"`
	// The cost per day of the mud used                                                                 
	CostDayMud                                                                                *float64  `json:"CostDayMud,omitempty"`
	// Hole nominal inside diameter.                                                                    
	DiameterHole                                                                              *float64  `json:"DiameterHole,omitempty"`
	// Measured depth to the start of the current hole diameter.                                        
	DiameterHoleStartMD                                                                       *float64  `json:"DiameterHoleStartMD,omitempty"`
	// Pilot hole nominal inside diameter.                                                              
	DiameterPilot                                                                             *float64  `json:"DiameterPilot,omitempty"`
	// The planned measured depth of the pilot hole.                                                    
	DiameterPilotPlanMD                                                                       *float64  `json:"DiameterPilotPlanMD,omitempty"`
	// The planned true vertical depth of the pilot hole.                                               
	DiameterPilotPlanTVD                                                                      *float64  `json:"DiameterPilotPlanTVD,omitempty"`
	// Distance drilled: rotating.                                                                      
	DistDrillRot                                                                              *float64  `json:"DistDrillRot,omitempty"`
	// Distance drilled: sliding.                                                                       
	DistDrillSlid                                                                             *float64  `json:"DistDrillSlid,omitempty"`
	// Distance covered while holding angle with a steerable drilling assembly.                         
	DistHold                                                                                  *float64  `json:"DistHold,omitempty"`
	// Distance reamed.                                                                                 
	DistReam                                                                                  *float64  `json:"DistReam,omitempty"`
	// Distance covered while actively steering with a steerable drilling assembly.                     
	DistSteering                                                                              *float64  `json:"DistSteering,omitempty"`
	// Distance drilled.  This should be measured along the centerline of the wellbore.                 
	DrilledDistance                                                                           *float64  `json:"DrilledDistance,omitempty"`
	// Time spent circulating from the start of the bit run.                                            
	ElapsedTimeCirc                                                                           *float64  `json:"ElapsedTimeCirc,omitempty"`
	// Drilling time.                                                                                   
	ElapsedTimeDrill                                                                          *float64  `json:"ElapsedTimeDrill,omitempty"`
	// Time spent rotary drilling.                                                                      
	ElapsedTimeDrillRot                                                                       *float64  `json:"ElapsedTimeDrillRot,omitempty"`
	// Time spent slide drilling from the start of the bit run.                                         
	ElapsedTimeDrillSlid                                                                      *float64  `json:"ElapsedTimeDrillSlid,omitempty"`
	// Time spent with no directional drilling work (commonly in hours).                                
	ElapsedTimeHold                                                                           *float64  `json:"ElapsedTimeHold,omitempty"`
	// Time the rig has been on location (commonly in days).                                            
	ElapsedTimeLOC                                                                            *float64  `json:"ElapsedTimeLoc,omitempty"`
	// Time spent reaming from the start of the bit run.                                                
	ElapsedTimeReam                                                                           *float64  `json:"ElapsedTimeReam,omitempty"`
	// Time since the bit broke ground (commonly in days).                                              
	ElapsedTimeSpud                                                                           *float64  `json:"ElapsedTimeSpud,omitempty"`
	// Time from the start of operations (commonly in days).                                            
	ElapsedTimeStart                                                                          *float64  `json:"ElapsedTimeStart,omitempty"`
	// Time spent steering the bottomhole assembly (commonly in hours).                                 
	ElapsedTimeSteering                                                                       *float64  `json:"ElapsedTimeSteering,omitempty"`
	// Name of the operator's drilling engineer.                                                        
	Engineer                                                                                  *string   `json:"Engineer,omitempty"`
	// A summary of  planned activities for the next reporting period.                                  
	Forecast24Hr                                                                              *string   `json:"Forecast24Hr,omitempty"`
	// The measured formation strength. This should be the final measurement before the end of          
	// the report period.                                                                               
	FormationStrength                                                                         *float64  `json:"FormationStrength,omitempty"`
	// The measured depth of the formation strength measurement.                                        
	FormationStrengthMD                                                                       *float64  `json:"FormationStrengthMD,omitempty"`
	// The true vertical depth of the formation strength measurement.                                   
	FormationStrengthTVD                                                                      *float64  `json:"FormationStrengthTVD,omitempty"`
	// Name of operator's wellsite geologist.                                                           
	Geologist                                                                                 *string   `json:"Geologist,omitempty"`
	// Measured depth to the kickoff point of the wellbore.                                             
	KickoffMD                                                                                 *float64  `json:"KickoffMD,omitempty"`
	// True vertical depth to the kickoff point of the wellbore.                                        
	KickoffTVD                                                                                *float64  `json:"KickoffTVD,omitempty"`
	// Maximum allowable shut-in casing pressure.                                                       
	Maasp                                                                                     *float64  `json:"MAASP,omitempty"`
	// The measured depth planned to be reached.                                                        
	MdPlanned                                                                                 *float64  `json:"MdPlanned,omitempty"`
	// Authorization for expenditure (AFE) number that this cost item applies to.                       
	NumAFE                                                                                    *string   `json:"NumAFE,omitempty"`
	// Number of contractor personnel on the rig.                                                       
	NumContract                                                                               *int64    `json:"NumContract,omitempty"`
	// Number of operator personnel on the rig.                                                         
	NumOperator                                                                               *int64    `json:"NumOperator,omitempty"`
	// Total number of personnel on board the rig.                                                      
	NumPOB                                                                                    *int64    `json:"NumPOB,omitempty"`
	// Number of service company personnel on the rig.                                                  
	NumService                                                                                *int64    `json:"NumService,omitempty"`
	// The measured plug back depth.                                                                    
	PlugTopMD                                                                                 *float64  `json:"PlugTopMD,omitempty"`
	// Kick tolerance pressure.                                                                         
	PresKickTol                                                                               *float64  `json:"PresKickTol,omitempty"`
	// Leak off test equivalent mud weight.                                                             
	PresLotEmw                                                                                *float64  `json:"PresLotEmw,omitempty"`
	// The type of pressure test that was run.                                                          
	PresTestType                                                                              *string   `json:"PresTestType,omitempty"`
	// Wellbore measured depth at the end of the report period.                                         
	ReportEndMD                                                                               *float64  `json:"ReportEndMD,omitempty"`
	// Wellbore true vertical depth at the end of the report.                                           
	ReportEndTVD                                                                              *float64  `json:"ReportEndTVD,omitempty"`
	// A pointer to the rig used.                                                                       
	Rig                                                                                       *string   `json:"Rig,omitempty"`
	// Average rate of penetration.                                                                     
	RopAverage                                                                                *float64  `json:"RopAverage,omitempty"`
	// Rate of penetration at the end of the reporting period.                                          
	RopCurrent                                                                                *float64  `json:"RopCurrent,omitempty"`
	// The date and time for which the well status is reported.                                         
	StatusDateTime                                                                            time.Time `json:"StatusDateTime"`
	// A summary of the activities performed and the status of the ongoing activities.                  
	Summary24Hr                                                                               *string   `json:"Summary24Hr,omitempty"`
	// Name of the rig supervisor                                                                       
	Supervisor                                                                                *string   `json:"Supervisor,omitempty"`
	// A pointer to the tubular (assembly) used in this report period.                                  
	Tubular                                                                                   *string   `json:"Tubular,omitempty"`
	// True vertical depth of a leak off test point.                                                    
	TvdLot                                                                                    *float64  `json:"TvdLot,omitempty"`
	// Type of wellbore.                                                                                
	TypeWellbore                                                                              *string   `json:"TypeWellbore,omitempty"`
	// Kick tolerance volume.                                                                           
	VolKickTol                                                                                *float64  `json:"VolKickTol,omitempty"`
}

// Information about a series of drilling activities.
type TimedComment struct {
	// A comment that has been recorded at a particular time           
	Comment                                                 *string    `json:"Comment,omitempty"`
	// The time that the comment was made                              
	CommentTime                                             *time.Time `json:"CommentTime,omitempty"`
}

// Meteorological readings for the defined time period on an operations report
type Weather struct {
	// Name of company that supplied the weather data.                                                    
	Agency                                                                                      *string   `json:"Agency,omitempty"`
	// Atmospheric pressure.                                                                              
	BarometricPressure                                                                          *float64  `json:"BarometricPressure,omitempty"`
	// The Beaufort wind force scale is a system used to estimate and report wind speeds when no          
	// measuring apparatus is available. It was invented in the early 19th century by Admiral             
	// Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.              
	// Values range from 0 (calm) to 12 (hurricane force).                                                
	BeaufortScaleNumber                                                                         *float64  `json:"BeaufortScaleNumber,omitempty"`
	// Height of cloud cover.                                                                             
	CloudCeiling                                                                                *float64  `json:"CloudCeiling,omitempty"`
	// Description of cloud cover.                                                                        
	CloudCover                                                                                  *string   `json:"CloudCover,omitempty"`
	// Comments and remarks                                                                               
	Comments                                                                                    *string   `json:"Comments,omitempty"`
	// The speed of the ocean current.                                                                    
	CurrentSeaSpeed                                                                             *float64  `json:"CurrentSeaSpeed,omitempty"`
	// Date and time that weather was observed                                                            
	DateTime                                                                                    time.Time `json:"DateTime"`
	// Amount of precipitation.                                                                           
	PrecipitationAmount                                                                         *float64  `json:"PrecipitationAmount,omitempty"`
	// Azimuth of current.                                                                                
	SeaCurrentDirection                                                                         *float64  `json:"SeaCurrentDirection,omitempty"`
	// Sea temperature.                                                                                   
	SeaTemp                                                                                     *float64  `json:"SeaTemp,omitempty"`
	// Maximum temperature above ground.                                                                  
	SurfaceTempMax                                                                              *float64  `json:"SurfaceTempMax,omitempty"`
	// Minimum temperature above ground. Temperature of the atmosphere.                                   
	SurfaceTempMin                                                                              *float64  `json:"SurfaceTempMin,omitempty"`
	// Horizontal visibility.                                                                             
	Visibility                                                                                  *float64  `json:"Visibility,omitempty"`
	// The direction from which the waves are coming, measured from true north.                           
	WaveDirection                                                                               *float64  `json:"WaveDirection,omitempty"`
	// Average height of the sea waves.                                                                   
	WaveHeightAverage                                                                           *float64  `json:"WaveHeightAverage,omitempty"`
	// The maximum wave height.                                                                           
	WaveHeightMax                                                                               *float64  `json:"WaveHeightMax,omitempty"`
	// DEPRECATED: The elapsed time between the passing of two wave tops.                                 
	WavePeriod                                                                                  *string   `json:"WavePeriod,omitempty"`
	// The elapsed time between the passing of two wave tops.                                             
	WavePeriodDuration                                                                          *float64  `json:"WavePeriodDuration,omitempty"`
	// An average of the higher 1/3 of the wave heights passing during a sample period                    
	// (typically 20 to 30 minutes).                                                                      
	WaveSignificant                                                                             *float64  `json:"WaveSignificant,omitempty"`
	// Type of weather.                                                                                   
	WeatherType                                                                                 *string   `json:"WeatherType,omitempty"`
	// A measure of the combined chilling effect of wind and low temperature on living things,            
	// also named chill factor, e.g., according to the US weather service table, an air                   
	// temperature of 30 degF with a 10 mph corresponds to a windchill of 22 degF.                        
	WindChillTemp                                                                               *float64  `json:"WindChillTemp,omitempty"`
	// The direction from which the wind is blowing, measured from true north.                            
	WindDirection                                                                               *float64  `json:"WindDirection,omitempty"`
	// Wind speed.                                                                                        
	WindSpeed                                                                                   *float64  `json:"WindSpeed,omitempty"`
}

// Local name defined for the Well
type WellAlias struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// Definition of an alias
type WellboreAliasElement struct {
	// Authority property          
	Authority              string  `json:"Authority"`
	// Description Property        
	Description            *string `json:"Description,omitempty"`
	// Identifier property         
	Identifier             string  `json:"Identifier"`
}

// A legal or administrative body, institution, or company, or any of its divisions.
type Organisation struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *OrganisationData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type OrganisationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The date and time at which a given organisation becomes effective.                                                    
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// Indicates if the organisation is internal to the enterprise.                                                          
	InternalOrganisationIndicator                                                               *bool                        `json:"InternalOrganisationIndicator,omitempty"`
	// Textual description of the nature of the organisation.                                                                
	OrganisationDescription                                                                     *string                      `json:"OrganisationDescription,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	OrganisationID                                                                              *string                      `json:"OrganisationID,omitempty"`
	// Text which identifies an organisation.                                                                                
	OrganisationName                                                                            *string                      `json:"OrganisationName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                  
	// which this organisation entity is/has been known.                                                                     
	OrganisationNameAliases                                                                     []AbstractAliasNames         `json:"OrganisationNameAliases,omitempty"`
	// The reason why the organization was formed.                                                                           
	OrganisationPurposeDescription                                                              *string                      `json:"OrganisationPurposeDescription,omitempty"`
	// Category the organisational structure fits into. Possible values - Operating Unit,                                    
	// Operating sub Unit, A Business, A Department, Government Agency, etc.                                                 
	OrganisationTypeID                                                                          *string                      `json:"OrganisationTypeID,omitempty"`
	// If populated, this is the parent organisation of the current organisation.                                            
	ParentOrganisationID                                                                        *string                      `json:"ParentOrganisationID,omitempty"`
	// The date and time at which a given organisation is no longer in effect.                                               
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A Perforation Interval is associated to a Perforation Job. An interval is the Top & Base
// depth range that a specific Perforating Gun suite was fired in unison to produce
// Openings. An interval should be created for each Gun suite fired. A interval should also
// be created for a specific Tubing Punch firing events also.
type PerforationInterval struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PerforationIntervalData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type PerforationIntervalData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// How was the bottom hole pressure determined?  Measured, estimated, etc.                                                       
	BHPressureTypeID                                                                            *string                              `json:"BHPressureTypeID,omitempty"`
	// Measured Depth of the Casing Collar Locator used to align perforating guns on depth                                           
	CasingCollarLocatorMD                                                                       *float64                             `json:"CasingCollarLocatorMD,omitempty"`
	// Distance from CCL to Interval Top                                                                                             
	CCLTopShotDistance                                                                          *float64                             `json:"CCLTopShotDistance,omitempty"`
	// Charge Description                                                                                                            
	ChargeDescription                                                                           *string                              `json:"ChargeDescription,omitempty"`
	// Charge Make/Manufacturer                                                                                                      
	ChargeManufacturerID                                                                        *string                              `json:"ChargeManufacturerID,omitempty"`
	// Charge Shape                                                                                                                  
	ChargeShapeID                                                                               *string                              `json:"ChargeShapeID,omitempty"`
	// Charge Size                                                                                                                   
	ChargeSize                                                                                  *string                              `json:"ChargeSize,omitempty"`
	// Charge Type                                                                                                                   
	ChargeTypeID                                                                                *string                              `json:"ChargeTypeID,omitempty"`
	// Cluster reference number                                                                                                      
	ClusterRefNo                                                                                *float64                             `json:"ClusterRefNo,omitempty"`
	// Crush Damage Ratio                                                                                                            
	CrushDamageRatio                                                                            *float64                             `json:"CrushDamageRatio,omitempty"`
	// Crush Zone Diameter                                                                                                           
	CrushZoneDiameter                                                                           *float64                             `json:"CrushZoneDiameter,omitempty"`
	// Initial discharge coefficient after perforating but prior to hydraulic fracturing.  A                                         
	// coefficient used in the equation for calculation of pressure drop                                                             
	// across a perforation set.                                                                                                     
	DischargeCoefficient                                                                        *float64                             `json:"DischargeCoefficient,omitempty"`
	// Pressure during perforation                                                                                                   
	DuringPerfGaugePressure                                                                     *float64                             `json:"DuringPerfGaugePressure,omitempty"`
	// Perforation Entrance Hole Diameter                                                                                            
	EntranceHoleDiameter                                                                        *float64                             `json:"EntranceHoleDiameter,omitempty"`
	// Final surface pressure                                                                                                        
	FinalSurfPressure                                                                           *float64                             `json:"FinalSurfPressure,omitempty"`
	// Static fluid level after perforating                                                                                          
	FluidAfterMD                                                                                *float64                             `json:"FluidAfterMD,omitempty"`
	// Static fluid level before perforating                                                                                         
	FluidBeforeMD                                                                               *float64                             `json:"FluidBeforeMD,omitempty"`
	// Fluid lossrate after perforating                                                                                              
	FluidLossAfterRate                                                                          *float64                             `json:"FluidLossAfterRate,omitempty"`
	// Fluid loss rate  before perforating                                                                                           
	FluidLossBeforeRate                                                                         *float64                             `json:"FluidLossBeforeRate,omitempty"`
	// Friction Factor                                                                                                               
	FrictionFactor                                                                              *float64                             `json:"FrictionFactor,omitempty"`
	// Friction Pressure                                                                                                             
	FrictionPressure                                                                            *float64                             `json:"FrictionPressure,omitempty"`
	// Depth of gauge(s) run while perforating.                                                                                      
	GaugeMD                                                                                     *float64                             `json:"GaugeMD,omitempty"`
	// Gun Carrier Category                                                                                                          
	GunCarrierCategoryTypeID                                                                    *string                              `json:"GunCarrierCategoryTypeID,omitempty"`
	// Gun Carrier Description                                                                                                       
	GunCarrierDescription                                                                       *string                              `json:"GunCarrierDescription,omitempty"`
	// Gun Carrier Manufacturer                                                                                                      
	GunCarrierManufacturerID                                                                    *string                              `json:"GunCarrierManufacturerID,omitempty"`
	// Gun Carrier Model                                                                                                             
	GunCarrierModelID                                                                           *string                              `json:"GunCarrierModelID,omitempty"`
	// Gun Carrier Phasing (angle between perfs). Implemented via a reference list in order to                                       
	// standardize the values.                                                                                                       
	GunCarrierPhasing                                                                           *string                              `json:"GunCarrierPhasing,omitempty"`
	// Gun Carrier Type                                                                                                              
	GunCarrierTypeID                                                                            *string                              `json:"GunCarrierTypeID,omitempty"`
	// Gun diameter                                                                                                                  
	GunDiameter                                                                                 *float64                             `json:"GunDiameter,omitempty"`
	// Gun Firing Head Type                                                                                                          
	GunFiringHeadTypeID                                                                         *string                              `json:"GunFiringHeadTypeID,omitempty"`
	// Metallurgy of the gun                                                                                                         
	GunMetallurgyTypeID                                                                         *string                              `json:"GunMetallurgyTypeID,omitempty"`
	// Gun Swell Diameter                                                                                                            
	GunSwellDiameter                                                                            *float64                             `json:"GunSwellDiameter,omitempty"`
	// Initial surface pressure                                                                                                      
	InitialSurfPressure                                                                         *float64                             `json:"InitialSurfPressure,omitempty"`
	// MD at base of perfed interval                                                                                                 
	IntervalBaseMD                                                                              *float64                             `json:"IntervalBaseMD,omitempty"`
	// Interval Comments                                                                                                             
	IntervalComments                                                                            *string                              `json:"IntervalComments,omitempty"`
	// Perforation interval date/time                                                                                                
	IntervalDateTime                                                                            time.Time                            `json:"IntervalDateTime"`
	// Distance between MD top and base of interval (net distance) aka 'Top Shot to Bottom Shot'                                     
	// Interval.                                                                                                                     
	IntervalLength                                                                              *float64                             `json:"IntervalLength,omitempty"`
	// Interval Reason                                                                                                               
	IntervalReasonTypeID                                                                        *string                              `json:"IntervalReasonTypeID,omitempty"`
	// MD at top of perfed interval                                                                                                  
	IntervalTopMD                                                                               float64                              `json:"IntervalTopMD"`
	// Perforated interval type                                                                                                      
	IntervalTypeID                                                                              string                               `json:"IntervalTypeID"`
	// Additional shot Y/N (+1 to Tot Shots calc)                                                                                    
	IsAdditionalShot                                                                            *bool                                `json:"IsAdditionalShot,omitempty"`
	// Total number of gun / charge misfires                                                                                         
	Misfires                                                                                    *int64                               `json:"Misfires,omitempty"`
	// Mid point perf pressure                                                                                                       
	MPPPressure                                                                                 *float64                             `json:"MPPPressure,omitempty"`
	// The name under which this perforation interval is known.                                                                      
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Estimated perforation penetration distance                                                                                    
	PenetrationDepth                                                                            *float64                             `json:"PenetrationDepth,omitempty"`
	// SRN to Job performed to construct the Perf Intervals                                                                          
	PerforationJobID                                                                            string                               `json:"PerforationJobID"`
	// Reservoir Temperature                                                                                                         
	ReservoirTemperature                                                                        *float64                             `json:"ReservoirTemperature,omitempty"`
	// Sequence Number (guns fired sequence)                                                                                         
	SequenceNumber                                                                              int64                                `json:"SequenceNumber"`
	// Gun Shot Density (shots per foot)                                                                                             
	ShotDensity                                                                                 *float64                             `json:"ShotDensity,omitempty"`
	// Technical Result                                                                                                              
	TechnicalResult                                                                             *string                              `json:"TechnicalResult,omitempty"`
	// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,                                     
	// depth correction used to correlate MDs to original drilling rig MD. References an entry                                       
	// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.                                       
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Business natural key or code of the parent Wellbore to which this record belongs                                              
	WellboreID                                                                                  string                               `json:"WellboreID"`
	// Wireline diameter                                                                                                             
	WirelineDiameterTypeID                                                                      *string                              `json:"WirelineDiameterTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// A Perforation Job describes an activity performed on a well for the purpose of firing
// perforation guns or puncher inside Casing, Liner or Tubing to create a flow path between
// the reservoir outside the pipe and the production annulus within the pipe. A Squeeze job
// is a remedial effort performed to create a temporary flow path to allow cement to be
// pumped outside the casing to repair the annular seal. Perf Intervals result in the
// creation of equivalent Wellbore Openings where they are managed as part of the
// Completion. A Squeeze job would not result in creation of Wellbore Openings as these are
// temporary to better seal that interval.
type PerforationJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PerforationJobData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type PerforationJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// Post pill fluid loss rate                                                                                                     
	AfterPillFluidLossRate                                                                      *float64                             `json:"AfterPillFluidLossRate,omitempty"`
	// Annulus Fluid Density used to calculate hydrostatic pressure                                                                  
	AnnulusFluidDensity                                                                         *float64                             `json:"AnnulusFluidDensity,omitempty"`
	// TVD of annulus fluid top used to calculate Hydrostatic pressure prior to first gun run                                        
	AnnulusFluidTopTVD                                                                          *float64                             `json:"AnnulusFluidTopTVD,omitempty"`
	// Annulus Fluid Type                                                                                                            
	AnnulusFluidTypeID                                                                          *string                              `json:"AnnulusFluidTypeID,omitempty"`
	// Hydrostatic pressure at Reservoir / perforated intervals top                                                                  
	AnticipatedReservoirPressure                                                                *float64                             `json:"AnticipatedReservoirPressure,omitempty"`
	// Downhole temperature at mid-point of perforation intervals                                                                    
	BottomHoleTemperature                                                                       *float64                             `json:"BottomHoleTemperature,omitempty"`
	// Centralization Method                                                                                                         
	CentralizationMethodID                                                                      *string                              `json:"CentralizationMethodID,omitempty"`
	// Perforation job comments                                                                                                      
	Comment                                                                                     *string                              `json:"Comment,omitempty"`
	// Name of company performing the perf job                                                                                       
	ContractorID                                                                                *string                              `json:"ContractorID,omitempty"`
	// Name of contractor supervisor overseeing the job                                                                              
	ContractorSupervisor                                                                        *string                              `json:"ContractorSupervisor,omitempty"`
	// How guns are conveyed                                                                                                         
	ConveyedMethodID                                                                            *string                              `json:"ConveyedMethodID,omitempty"`
	// Pressure at Surface at end of Job                                                                                             
	FinalSurfacePressure                                                                        *float64                             `json:"FinalSurfacePressure,omitempty"`
	// Difference between Reservoir Pressure and Hydrostatic pressure. Negative number indicates                                     
	// underbalanced                                                                                                                 
	HydrostaticReservoirPressureDifference                                                      *float64                             `json:"HydrostaticReservoirPressureDifference,omitempty"`
	// Is a tractor used during the job to help convey guns                                                                          
	IsTractorUsed                                                                               *bool                                `json:"IsTractorUsed,omitempty"`
	// Job End Date/time                                                                                                             
	JobEndDateTime                                                                              *time.Time                           `json:"JobEndDateTime,omitempty"`
	// Job Start Date/time                                                                                                           
	JobStartDateTime                                                                            *time.Time                           `json:"JobStartDateTime,omitempty"`
	// Perforation job method, often the brand name of the service offered by the contractor                                         
	MethodID                                                                                    *string                              `json:"MethodID,omitempty"`
	// The name under which this perforation job is known.                                                                           
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Number of intervals (calculated from intervals)                                                                               
	NoIntervals                                                                                 *int64                               `json:"NoIntervals,omitempty"`
	// Gross perforated interval length (Job Top - Job Base)                                                                         
	PerfGrossIntervalLength                                                                     *float64                             `json:"PerfGrossIntervalLength,omitempty"`
	// Base Measured Depth of all perfed intervals                                                                                   
	PerfJobMDBase                                                                               *float64                             `json:"PerfJobMDBase,omitempty"`
	// Top Measured Depth of all perfed intervals                                                                                    
	PerfJobMDTop                                                                                *float64                             `json:"PerfJobMDTop,omitempty"`
	// Net perforated interval length (calculated from sum of individual intervals)                                                  
	PerfNetIntervalLength                                                                       *float64                             `json:"PerfNetIntervalLength,omitempty"`
	// Pill type                                                                                                                     
	PillTypeID                                                                                  *string                              `json:"PillTypeID,omitempty"`
	// Pill volume                                                                                                                   
	PillVolume                                                                                  *float64                             `json:"PillVolume,omitempty"`
	// Post job fluid loss rate                                                                                                      
	PostJobFluidLossRate                                                                        *float64                             `json:"PostJobFluidLossRate,omitempty"`
	// Date when Reference Log run                                                                                                   
	ReferenceLogDate                                                                            *time.Time                           `json:"ReferenceLogDate,omitempty"`
	// Reference Log description/name                                                                                                
	ReferenceLogDescription                                                                     *string                              `json:"ReferenceLogDescription,omitempty"`
	// SRN to Wireline log run                                                                                                       
	ReferenceLogID                                                                              *string                              `json:"ReferenceLogID,omitempty"`
	// Estimated Pressure at top of Reservoir/perforated intervals                                                                   
	ReservoirPressureEstimated                                                                  *float64                             `json:"ReservoirPressureEstimated,omitempty"`
	// TVD at top of Reservoir/perforated intervals used to calculate pressure using annular                                         
	// fluid density.                                                                                                                
	ReservoirTVD                                                                                *float64                             `json:"ReservoirTVD,omitempty"`
	// Average shot density (Average Shot Density = Total Shots / Net Perforation Interval)                                          
	ShotDensityAverage                                                                          *float64                             `json:"ShotDensityAverage,omitempty"`
	// Date/time when final surface pressure measured                                                                                
	SurfacePressureFinalDateTime                                                                *time.Time                           `json:"SurfacePressureFinalDateTime,omitempty"`
	// Pressure at Surface at start of Job                                                                                           
	SurfacePressureInitial                                                                      *float64                             `json:"SurfacePressureInitial,omitempty"`
	// Total number of shots fired (calculated from intervals) - Total Shots = {SP/ (shot/ft) x                                      
	// [Interval length]} + Additional Shot - Misfires                                                                               
	TotalShots                                                                                  *int64                               `json:"TotalShots,omitempty"`
	// Underbalance indicator                                                                                                        
	Underbalanced                                                                               *bool                                `json:"Underbalanced,omitempty"`
	// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,                                     
	// depth correction used to correlate MDs to original drilling rig MD. References an entry                                       
	// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.                                       
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Business natural key or code of the parent Wellbore to which this record belongs                                              
	WellboreID                                                                                  string                               `json:"WellboreID"`
	// Casing/Liner/Tubing assembly through which guns are fired.                                                                    
	WellboreTubularID                                                                           string                               `json:"WellboreTubularID"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// A single cement job description for the purpose of planning.
type PlannedCementJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PlannedCementJobData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type PlannedCementJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Set of stages for the job (usually 1 or 2).                                                                           
	CementStages                                                                                []CementStage                `json:"CementStages,omitempty"`
	// The identifier of the TubularComponent used for Cementing the wellbore                                                
	CementToolTubularComponentID                                                                string                       `json:"CementToolTubularComponentID"`
	// Identifier of cementing contractor.                                                                                   
	ContractorID                                                                                *string                      `json:"ContractorID,omitempty"`
	// The estimated Measured depth of the Top of Cement. Depth relative to Planned wellbore                                 
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                              
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedCementTopMeasuredDepth                                                             *float64                     `json:"EstimatedCementTopMeasuredDepth,omitempty"`
	// Estimated measured depth at bottom of hole. Depth relative to Planned wellbore ZDP.                                   
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                                   
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedHoleMeasuredDepth                                                                  *float64                     `json:"EstimatedHoleMeasuredDepth,omitempty"`
	// If Plug,  estimated measured depth of bottom of plug. Depth relative to Planned wellbore                              
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                              
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedPluggedBaseMeasuredDepth                                                           *float64                     `json:"EstimatedPluggedBaseMeasuredDepth,omitempty"`
	// If Plug, estimated measured depth of top of plug. Depth relative to Planned wellbore ZDP.                             
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                                   
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedPluggedTopMeasuredDepth                                                            *float64                     `json:"EstimatedPluggedTopMeasuredDepth,omitempty"`
	// Estimated measured depth of previous shoe. Depth relative to Planned wellbore ZDP.                                    
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                                   
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedPreviousShoeMeasuredDepth                                                          *float64                     `json:"EstimatedPreviousShoeMeasuredDepth,omitempty"`
	// Estimated True Vertical Depth of previous shoe. Depth relative to Planned wellbore ZDP.                               
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                                   
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedPreviousShoeTrueVerticalDepth                                                      *float64                     `json:"EstimatedPreviousShoeTrueVerticalDepth,omitempty"`
	// Estimated measured depth of cement string shoe. Depth relative to Planned wellbore ZDP.                               
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                                   
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedStringSetMeasuredDepth                                                             *float64                     `json:"EstimatedStringSetMeasuredDepth,omitempty"`
	// Estimated True vertical depth of cement string shoe. Depth relative to Planned wellbore                               
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                              
	// reference in data.VerticalMeasurement.                                                                                
	EstimatedStringSetTrueVerticalDepth                                                         *float64                     `json:"EstimatedStringSetTrueVerticalDepth,omitempty"`
	// Estimated duration for waiting on cement to set.                                                                      
	EstimatedWaitingOnCement                                                                    *string                      `json:"EstimatedWaitingOnCement,omitempty"`
	// Coiled Tubing Used (true=CTU used). Values are "true" (or "1") and "false" (or "0").                                  
	IsCoilTubing                                                                                *bool                        `json:"IsCoilTubing,omitempty"`
	// Offshore job? Values are "true" (or "1") and "false" (or "0").                                                        
	IsOffshoreJob                                                                               *bool                        `json:"IsOffshoreJob,omitempty"`
	// Pipe being reciprocated.  Values are "true" (or "1") and "false" (or "0").                                            
	IsReciprocating                                                                             *bool                        `json:"IsReciprocating,omitempty"`
	// Returns to seabed? Values are "true" (or "1") and "false" (or "0").                                                   
	IsReturnsToSeabed                                                                           *bool                        `json:"IsReturnsToSeabed,omitempty"`
	// Job configuration.                                                                                                    
	JobConfig                                                                                   *string                      `json:"JobConfig,omitempty"`
	// Type of cement job.                                                                                                   
	JobTypeID                                                                                   string                       `json:"JobTypeID"`
	// Human recognizable context for the cement job.                                                                        
	Name                                                                                        string                       `json:"Name"`
	// Name for the cemented string                                                                                          
	NameCementedString                                                                          string                       `json:"NameCementedString"`
	// Plug type.                                                                                                            
	PlugTypeID                                                                                  *string                      `json:"PlugTypeID,omitempty"`
	// Measured depth of squeeze. DDepth relative to Planned wellbore ZDP. Navigate via                                      
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                                   
	// data.VerticalMeasurement.                                                                                             
	SqueezeMeasuredDepth                                                                        *float64                     `json:"SqueezeMeasuredDepth,omitempty"`
	// Identifier of the tubular assembly actually installed or to be installed                                              
	TubularAssemblyID                                                                           string                       `json:"TubularAssemblyID"`
	// Type of squeeze.                                                                                                      
	TypeSqueeze                                                                                 *string                      `json:"TypeSqueeze,omitempty"`
	// Water depth if offshore. The distance from mean sea level to water bottom.                                            
	WaterDepth                                                                                  *float64                     `json:"WaterDepth,omitempty"`
	// Identifier of the Wellbore Architecture describing the geometry of the installed tubular.                             
	WellboreArchitectureID                                                                      string                       `json:"WellboreArchitectureID"`
	// Reference to the Wellbore                                                                                             
	WellboreID                                                                                  string                       `json:"WellboreID"`
	// Identifier of the TubularAssembly that describes the cement work string                                               
	WorkStringID                                                                                *string                      `json:"WorkStringID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A single cement job.
type CementStage struct {
	// Length of the cement column                                                                              
	AnnularLength                                                                               *float64        `json:"AnnularLength,omitempty"`
	// Measured depth of base of cement. Depth relative to Planned wellbore ZDP. Navigate via                   
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                      
	// data.VerticalMeasurement.                                                                                
	CementBaseMeasuredDepth                                                                     *float64        `json:"CementBaseMeasuredDepth,omitempty"`
	// Displaced Mud, washes and spacers, cements, displacement mud.                                            
	CementingFluid                                                                              *CementingFluid `json:"CementingFluid,omitempty"`
	// Measured depth of CoilTubing (multi-stage cement job. Depth relative to Planned wellbore                 
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                 
	// reference in data.VerticalMeasurement.                                                                   
	CoilTubingMeasuredDepth                                                                     *float64        `json:"CoilTubingMeasuredDepth,omitempty"`
	// Density of displacement fluid.                                                                           
	DensDisplaceFluid                                                                           *float64        `json:"DensDisplaceFluid,omitempty"`
	// Excess volume.                                                                                           
	ExcessVolume                                                                                *float64        `json:"Excess Volume,omitempty"`
	// Average displacement rate.                                                                               
	FlowrateDisplaceAV                                                                          *float64        `json:"FlowrateDisplaceAv,omitempty"`
	// Maximum displacement rate.                                                                               
	FlowrateDisplaceMX                                                                          *float64        `json:"FlowrateDisplaceMx,omitempty"`
	// Final displacement pump rate.                                                                            
	FlowrateEnd                                                                                 *float64        `json:"FlowrateEnd,omitempty"`
	// Rate mud circulated during stage.                                                                        
	FlowrateMudCirc                                                                             *float64        `json:"FlowrateMudCirc,omitempty"`
	// Displacement fluid name.                                                                                 
	FluidDisplace                                                                               *string         `json:"FluidDisplace,omitempty"`
	// Gels-10Min (in hole at start of job).                                                                    
	Gel10Min                                                                                    *float64        `json:"Gel10Min,omitempty"`
	// Gels-10Sec (in hole at start of job).                                                                    
	Gel10SEC                                                                                    *float64        `json:"Gel10Sec,omitempty"`
	// Estimated volume inside casing.                                                                          
	InsideCasingVolume                                                                          *float64        `json:"InsideCasingVolume,omitempty"`
	// Measured depth at top of interval. Depth relative to Planned wellbore ZDP. Navigate via                  
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                      
	// data.VerticalMeasurement.                                                                                
	IntervalTopMeasuredDepth                                                                    *float64        `json:"IntervalTopMeasuredDepth,omitempty"`
	// Estimated volume outside casing for this stage placement.                                                
	OutsideCasingVolume                                                                         *float64        `json:"OutsideCasingVolume,omitempty"`
	// Plastic viscosity (in hole at start of job).                                                             
	PlasticViscoMud                                                                             *float64        `json:"PlasticViscoMud,omitempty"`
	// Mud circulation pressure.                                                                                
	PresMudCirc                                                                                 *float64        `json:"PresMudCirc,omitempty"`
	// Planned displacement pressure.                                                                           
	PressureDisplace                                                                            *float64        `json:"PressureDisplace,omitempty"`
	// Squeeze objective.                                                                                       
	SqueezeObjective                                                                            *string         `json:"SqueezeObjective,omitempty"`
	// Stage number.                                                                                            
	StageNumber                                                                                 float64         `json:"StageNumber"`
	// Stage type.                                                                                              
	StageType                                                                                   string          `json:"StageType"`
	// Measured depth of string (multi-stage cement job). Depth relative to Planned wellbore                    
	// ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                 
	// reference in data.VerticalMeasurement.                                                                   
	StringMeasuredDepth                                                                         *float64        `json:"StringMeasuredDepth,omitempty"`
	// Measured depth of tool (multi-stage cement job. Depth relative to Planned wellbore ZDP.                  
	// Navigate via WellboreID to the side-car WellPlanningWellbore, which holds the depth                      
	// reference in data.VerticalMeasurement.                                                                   
	ToolMeasuredDepth                                                                           *float64        `json:"ToolMeasuredDepth,omitempty"`
	// Type of mud in hole.                                                                                     
	TypeOriginalMud                                                                             *string         `json:"TypeOriginalMud,omitempty"`
	// Marsh funnel viscosity measured in a conical-shaped funnel, fitted with a small-bore tube                
	// on the bottom end through which mud flows under a gravity head. It is a time measurement,                
	// i.e., the time it takes for a given volume of fluid to flow through the funnel.                          
	ViscoFunnelMud                                                                              *float64        `json:"ViscoFunnelMud,omitempty"`
	// Volume of displacement fluid.                                                                            
	VolDisplaceFluid                                                                            *float64        `json:"VolDisplaceFluid,omitempty"`
	// Mud density.                                                                                             
	WtMud                                                                                       *float64        `json:"WtMud,omitempty"`
	// Yield point (in hole at start of job).                                                                   
	YieldPointMud                                                                               *float64        `json:"YieldPointMud,omitempty"`
}

// Displaced Mud, washes and spacers, cements, displacement mud.
type CementingFluid struct {
	// Volume of given fluid that resides in the annulus.                                                      
	AnnularFluidVolume                                                                     *float64            `json:"AnnularFluidVolume,omitempty"`
	// Density of base fluid.                                                                                  
	BaseFluidDensity                                                                       *float64            `json:"BaseFluidDensity,omitempty"`
	// Type of base fluid: Fresh water, Sea water, Brine, Brackish water.                                      
	BaseFluidType                                                                          *string             `json:"BaseFluidType,omitempty"`
	// Additives can be added in slurry but also in spacers, washes, mud.                                      
	CementAdditives                                                                        []CementAdditive    `json:"CementAdditives,omitempty"`
	// Set of (Time / Rate / Back Pressure).                                                                   
	CementPumpSchedule                                                                     *CementPumpSchedule `json:"CementPumpSchedule,omitempty"`
	// Volume of cement.                                                                                       
	CementVolume                                                                           *float64            `json:"CementVolume,omitempty"`
	// Slurry class.                                                                                           
	ClassSlurryDryBlend                                                                    *string             `json:"ClassSlurryDryBlend,omitempty"`
	// Slurry density at pressure.                                                                             
	DensAtPres                                                                             *float64            `json:"DensAtPres,omitempty"`
	// Fluid density.                                                                                          
	Density                                                                                *float64            `json:"Density,omitempty"`
	// Density of Dry blend.                                                                                   
	DryBlendDensity                                                                        *float64            `json:"DryBlendDensity,omitempty"`
	// Description of dry blend.                                                                               
	DryBlendDescription                                                                    *string             `json:"DryBlendDescription,omitempty"`
	// Mass of dry blend: the blend is made of different solid additives: the volume is not                    
	// constant.                                                                                               
	DryBlendMass                                                                           *float64            `json:"DryBlendMass,omitempty"`
	// Weight of a sack of dry blend.                                                                          
	DryBlendMassSack                                                                       *float64            `json:"DryBlendMassSack,omitempty"`
	// Name of dry blend.                                                                                      
	DryBlendName                                                                           *string             `json:"DryBlendName,omitempty"`
	// Excess Percent.                                                                                         
	ExcessPercent                                                                          *float64            `json:"ExcessPercent,omitempty"`
	// Measured depth at bottom of slurry placement.                                                           
	FluidBaseMeasuredDepth                                                                 *float64            `json:"FluidBaseMeasuredDepth,omitempty"`
	// True Vertical Depth at bottom of fluid placement at the end of Stage.                                   
	FluidBaseTrueVerticalDepth                                                             *float64            `json:"FluidBaseTrueVerticalDepth,omitempty"`
	// Fluid description.                                                                                      
	FluidDescription                                                                       *string             `json:"FluidDescription,omitempty"`
	// Fluid Index: 1: first fluid pumped (=original mud),                                                     
	// (last-1)=Tail cement, last= displacement mud                                                            
	FluidIndex                                                                             *float64            `json:"FluidIndex,omitempty"`
	// Newtonian/Bingham/Power Law/Herschel Bulkley.                                                           
	FluidRheologicalModelID                                                                *string             `json:"FluidRheologicalModelID,omitempty"`
	// Estimated Measured depth at top of slurry placement.                                                    
	FluidTopMeasuredDepth                                                                  *float64            `json:"FluidTopMeasuredDepth,omitempty"`
	// True Vertical Depth at top of fluid placement at the end of Stage.                                      
	FluidTopTrueVerticalDepth                                                              *float64            `json:"FluidTopTrueVerticalDepth,omitempty"`
	// Fluid/Slurry Volume.                                                                                    
	FluidVolume                                                                            *float64            `json:"FluidVolume,omitempty"`
	// Gas type used for foam job.                                                                             
	GasFoamType                                                                            *string             `json:"GasFoamType,omitempty"`
	// Volume of gas used for foam job.                                                                        
	GasFoamVol                                                                             *float64            `json:"GasFoamVol,omitempty"`
	// Gel reading after 10 minutes.                                                                           
	Gel10MinReading                                                                        *float64            `json:"Gel10MinReading,omitempty"`
	// Gel strength after 10 minutes.                                                                          
	Gel10MinStrength                                                                       *float64            `json:"Gel10MinStrength,omitempty"`
	// Gel reading after 10 seconds.                                                                           
	Gel10SECReading                                                                        *float64            `json:"Gel10SecReading,omitempty"`
	// Gel strength after 10 seconds.                                                                          
	Gel10SECStrength                                                                       *float64            `json:"Gel10SecStrength,omitempty"`
	// Gel reading after 1 minute.                                                                             
	Gel1MinReading                                                                         *float64            `json:"Gel1MinReading,omitempty"`
	// Gel strength after 1 minute.                                                                            
	Gel1MinStrength                                                                        *float64            `json:"Gel1MinStrength,omitempty"`
	// Foam used indicator.  Values are "true" (or "1") and "false" (or "0").                                  
	IsFoamUsed                                                                             *bool               `json:"IsFoamUsed,omitempty"`
	// Consistency index (Power Law and HB).                                                                   
	K                                                                                      *float64            `json:"K,omitempty"`
	// Power Law index (Power Law and HB).                                                                     
	N                                                                                      *float64            `json:"N,omitempty"`
	// Other Volume.                                                                                           
	OtherVolume                                                                            *float64            `json:"OtherVolume,omitempty"`
	// Volume Pumped.                                                                                          
	PumpedVolume                                                                           *float64            `json:"PumpedVolume,omitempty"`
	// Purpose description.                                                                                    
	Purpose                                                                                *string             `json:"Purpose,omitempty"`
	// Mix Water Ratio.                                                                                        
	RatioMixWater                                                                          *float64            `json:"RatioMixWater,omitempty"`
	// Fluid type: Mud, Wash, Spacer, Slurry.                                                                  
	TypeFluid                                                                              *string             `json:"TypeFluid,omitempty"`
	// Viscosity (Newtonian) or Plastic Viscosity if Bingham.                                                  
	Viscosity                                                                              *float64            `json:"Viscosity,omitempty"`
	// Water volume.                                                                                           
	WaterVolume                                                                            *float64            `json:"WaterVolume,omitempty"`
	// Yield point (Bingham and Herschel Bulkley models).                                                      
	YieldPoint                                                                             *float64            `json:"YieldPoint,omitempty"`
	// Slurry Yield.                                                                                           
	YieldVolume                                                                            *float64            `json:"YieldVolume,omitempty"`
}

// Additives used during a cement job
type CementAdditive struct {
	// Additive Amount.                                                                                  
	AdditiveAmount                                                                              float64  `json:"AdditiveAmount"`
	// Additive density.                                                                                 
	AdditiveDensity                                                                             *float64 `json:"AdditiveDensity,omitempty"`
	// Wet or Dry.                                                                                       
	AdditiveFormulation                                                                         *string  `json:"AdditiveFormulation,omitempty"`
	// Additive name.                                                                                    
	AdditiveName                                                                                string   `json:"AdditiveName"`
	// The chief purpose or reason for adding a substance to a fluid used in a downhole                  
	// operation.                                                                                        
	AdditiveRoleID                                                                              *string  `json:"AdditiveRoleID,omitempty"`
	// The liquid, solid or gaseous substance used to manipulate the function or properties of a         
	// fluid.                                                                                            
	AdditiveTypeID                                                                              *string  `json:"AdditiveTypeID,omitempty"`
	// Vendor/Supplier of additive                                                                       
	AdditiveVendorID                                                                            *string  `json:"AdditiveVendorID,omitempty"`
	// Concentration Amount: unit type depends of typeConc.                                              
	Concentration                                                                               float64  `json:"Concentration"`
	// ConcentrationType: %BWOC (%By weight of Cement), %BWOB (%By weight of blend), %BWOW (%By          
	// weight of water), %BWOBF (%By weight of base fluid)                                               
	TypeConc                                                                                    string   `json:"TypeConc"`
	// Concentration in terms of volume per sack.                                                        
	VolSack                                                                                     float64  `json:"VolSack"`
	// Concentration in terms of weight per sack.                                                        
	WtSack                                                                                      float64  `json:"WtSack"`
}

// Set of (Time / Rate / Back Pressure).
type CementPumpSchedule struct {
	// Back pressure applied during pumping stage.          
	BackPressure                                   *float64 `json:"BackPressure,omitempty"`
	// Comments and Remarks.                                
	Comments                                       *string  `json:"Comments,omitempty"`
	// Rate fluid is pumped. 0 means it is a pause.         
	PumpRate                                       *float64 `json:"PumpRate,omitempty"`
	// Volume pumped = eTimPump * ratePump.                 
	PumpVolume                                     *float64 `json:"PumpVolume,omitempty"`
}

// A named area that likely contains a combination of certain geological factors making it
// prospective for mineral exploration. It is often considered to be a set of prospects with
// a common set of characteristics.
type Play struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *PlayData                      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type PlayData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Date when a Play goes into effect.                                                                                    
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// Textual description about a Play.                                                                                     
	PlayDescription                                                                             *string                      `json:"PlayDescription,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	PlayID                                                                                      *string                      `json:"PlayID,omitempty"`
	// Preferred name for a Play.                                                                                            
	PlayName                                                                                    *string                      `json:"PlayName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Set of alternative names for a Play.                                         
	PlayNameAliases                                                                             []AbstractAliasNames         `json:"PlayNameAliases,omitempty"`
	// The type of play as defined in PlayType.                                                                              
	PlayTypeID                                                                                  *string                      `json:"PlayTypeID,omitempty"`
	// Date when a Play is no longer in effect.                                                                              
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A named area or location, likely containing commercial deposits of a mineral, that is a
// candidate for extraction.  This normally means a candidate drilling location..
type Prospect struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ProspectData                  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type ProspectData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Date when a Prospect goes into effect.                                                                                
	EffectiveDate                                                                               *time.Time                   `json:"EffectiveDate,omitempty"`
	// Textual description about a Prospect.                                                                                 
	ProspectDescription                                                                         *string                      `json:"ProspectDescription,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProspectID                                                                                  *string                      `json:"ProspectID,omitempty"`
	// Preferred name for a Prospect, which may or may not coincide with a well or field.                                    
	ProspectName                                                                                *string                      `json:"ProspectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Set of alternative names for a Prospect.                                     
	ProspectNameAliases                                                                         []AbstractAliasNames         `json:"ProspectNameAliases,omitempty"`
	// The type of prospect as defined in ProspectType.                                                                      
	ProspectTypeID                                                                              *string                      `json:"ProspectTypeID,omitempty"`
	// Date when a Prospect is no longer in effect.                                                                          
	TerminationDate                                                                             *time.Time                   `json:"TerminationDate,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A reference level or horizontal reference surface, which can be re-used by many other
// entities. The area of use is indicated by data.SpatialLocation - as a polygon or as a
// point if used in context of a Well or Wellbore.
type ReferenceLevel struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ReferenceLevelData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A reference level or horizontal reference surface definition, which can be used embedded
// in other schemas.
type ReferenceLevelData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The date and time at which this reference level instance becomes effective.                                           
	EffectiveDateTime                                                                           *time.Time                   `json:"EffectiveDateTime,omitempty"`
	// The height above the reference surface defined by the VerticalCoordinateReferenceSystemID                             
	// positive upwards.                                                                                                     
	Height                                                                                      *float64                     `json:"Height,omitempty"`
	// The replacement velocity value used to produce vertical static shifts in seismic data.                                
	SeismicReplacementVelocity                                                                  *float64                     `json:"SeismicReplacementVelocity,omitempty"`
	// The date and time at which a reference level instance is no longer in effect.                                         
	TerminationDateTime                                                                         *time.Time                   `json:"TerminationDateTime,omitempty"`
	// The relationship to the vertical CRS defining the absolute reference surface.                                         
	VerticalCoordinateReferenceSystemID                                                         *string                      `json:"VerticalCoordinateReferenceSystemID,omitempty"`
	// When used in context of a Wellbore, this specifies Measured Depth, True Vertical Depth,                               
	// or Elevation.                                                                                                         
	VerticalMeasurementPathID                                                                   *string                      `json:"VerticalMeasurementPathID,omitempty"`
	// When used in context of a Wellbore this specifies Driller vs Logger measurements.                                     
	VerticalMeasurementSourceID                                                                 *string                      `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (SRD, ES, GR, MSL,and many more).                                          
	VerticalMeasurementTypeID                                                                   *string                      `json:"VerticalMeasurementTypeID,omitempty"`
	// The positional uncertainty in the vertical direction.                                                                 
	VerticalUncertainty                                                                         *float64                     `json:"VerticalUncertainty,omitempty"`
	// When used in context of a Wellbore this specifies what directional survey or wellpath was                             
	// used to calculate the TVD.                                                                                            
	WellboreTVDTrajectoryID                                                                     *string                      `json:"WellboreTVDTrajectoryID,omitempty"`
	// A description or remarks about this reference point.                                                                  
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// The name of the reference point or vertical reference plane.                                                          
	Name                                                                                        *string                      `json:"Name,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A reservoir is a subsurface rock formation which 1) is a volume of porous and permeable
// rock and 2) contains an individual and separate natural accumulation of moveable fluids
// that are confined by impermeable rock formations. Fluids may be produced from a reservoir
// and injected into a reservoir for increased recovery, storage or disposal.
type Reservoir struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ReservoirData                 `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// This abstract entity gathers all the properties universally required to describe any kind
// of reservoir - at multiple levels of granularity (e.g. Reservoir or Reservoir Segment).
type ReservoirData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Indicates the current life cycle status of the reservoir in a simple way for the ease of                              
	// searching. This same status may also be found in the LifeCycleStatuses array, providing                               
	// the actual status dates.                                                                                              
	CurrentLifeCycleStatusID                                                                    *string                      `json:"CurrentLifeCycleStatusID,omitempty"`
	// The date that CO2 storage injection first began in the Reservoir or Reservoir Segment.                                
	FirstCO2StorageInjectionDate                                                                *string                      `json:"FirstCO2StorageInjectionDate,omitempty"`
	// The date that commercial production first began in the Reservoir or Reservoir Segment.                                
	FirstProductionDate                                                                         *string                      `json:"FirstProductionDate,omitempty"`
	// Indicates whether the condition of a Reservoir or Reservoir Segment is Active, meaning                                
	// there is at least one well intentionally and currently interacting with the reservoir or                              
	// reservoir segment. The absence of a value should not be assumed to mean true (Active) or                              
	// false (Inactive).                                                                                                     
	IsActiveCondition                                                                           *bool                        `json:"IsActiveCondition,omitempty"`
	// This flag indicates that this reservoir is composed of reservoir segments, and that the                               
	// characteristics of the segments should be aggregated to best describe the characteristics                             
	// of the reservoir. When not segmented, the single reservoir segment describes the                                      
	// properties of the entire reservoir. If more than one reservoir segment is defined for                                 
	// this reservoir, this flag should be set and the characteristics for the reservoir should                              
	// be calculated as summary data over all its reservoir segments.                                                        
	IsSegmented                                                                                 *bool                        `json:"IsSegmented,omitempty"`
	// Set of attributes capturing the Life Cycle Statuses of the Reservoir, a concept which is                              
	// typically chronological.                                                                                              
	LifeCycleStatuses                                                                           []LifeCycleStatuses          `json:"LifeCycleStatuses,omitempty"`
	// Name of the reservoir or reservoir segment.                                                                           
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// This is the best estimate of the original hydrocarbon total pore volume of the reservoir                              
	// segment at initial conditions.                                                                                        
	OriginalHydrocarbonPoreVolume                                                               *float64                     `json:"OriginalHydrocarbonPoreVolume,omitempty"`
	// An array of remarks that provide more context for this data record.                                                   
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// The productive area is the measured or estimated total area of the reservoir unit                                     
	// considered, usually the area within the hydrocarbon-water contact.                                                    
	ReservoirUnitArea                                                                           *float64                     `json:"ReservoirUnitArea,omitempty"`
	// The true vertical depth from the Vertical CRS to the permanent reservoir unit datum used                              
	// for pressure. This is further qualified by the associated Vertical CRS property. If no                                
	// Vertical CRS is populated, assume Mean Sea Level, and therefore "TVD Subsea".                                         
	ReservoirUnitPressureDatumTVD                                                               *float64                     `json:"ReservoirUnitPressureDatumTVD,omitempty"`
	// The average true vertical depth from the Vertical CRS to the top of the reservoir unit.                               
	// This is further qualified by the associated Vertical CRS property. If no Vertical CRS is                              
	// populated, assume Mean Sea Level, and therefore "TVD Subsea".                                                         
	ReservoirUnitTopDepthTVD                                                                    *float64                     `json:"ReservoirUnitTopDepthTVD,omitempty"`
	// The Vertical Coordinate Reference System defining the origin (i.e., zero point) for the                               
	// vertical measurements on this data record (e.g. PressureDatum and TopDepth). The most                                 
	// common Vertical CRS in this context is Mean Sea Level. Populating this attribute is                                   
	// especially important when the Vertical CRS is not Mean Sea Level but rather a local                                   
	// alternative like Caspian height or a custom Vertical CRS.                                                             
	VerticalCRSID                                                                               *string                      `json:"VerticalCRSID,omitempty"`
	// If the the vertical measurements on this data record (e.g. PressureDatum and TopDepth)                                
	// were not referenced from Mean Sea Level, this attribute can capture the difference                                    
	// between the selected Vertical CRS and Mean Sea Level.                                                                 
	VerticalDatumOffsetToMeanSeaLevel                                                           *float64                     `json:"VerticalDatumOffsetToMeanSeaLevel,omitempty"`
	// Unique identifier for a business associate, such as a person, company, regulatory agency,                             
	// government or consortium.                                                                                             
	BusinessAssociate                                                                           *AbstractContact             `json:"BusinessAssociate,omitempty"`
	// The type of hydrocarbon reservoir described, such as conventional or oil sands deposit.                               
	// May also indicate a reservoir created for administrative reasons or for geologic                                      
	// (stratigraphic) definitions.                                                                                          
	ReservoirTypeID                                                                             *string                      `json:"ReservoirTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Set of attributes capturing the Life Cycle Statuses of the Reservoir, a concept which is
// typically chronological.
type LifeCycleStatuses struct {
	// The date and time at which the reservoir status type becomes effective.                    
	EffectiveDateTime                                                                     *string `json:"EffectiveDateTime,omitempty"`
	// The Life Cycle Status of the Reservoir, a concept which is typically chronological.        
	LifeCycleStatusID                                                                     *string `json:"LifeCycleStatusID,omitempty"`
	// Date of a status change                                                                    
	StatusDate                                                                            *string `json:"StatusDate,omitempty"`
	// The date and time at which the reservoir status type is no longer in effect.               
	TerminationDateTime                                                                   *string `json:"TerminationDateTime,omitempty"`
}

// A reservoir segment is an earth volume within a reservoir (e.g., reservoir zone,
// reservoir pattern, subsidence bowl, drainage region of one or more wells, etc.). Each
// reservoir segment is a unique and spatially non-overlapping part of a reservoir.
// A comprehensive set of Segments can be built with a PersistedCollection.
type ReservoirSegment struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *ReservoirSegmentData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// This abstract entity gathers all the properties universally required to describe any kind
// of reservoir - at multiple levels of granularity (e.g. Reservoir or Reservoir Segment).
type ReservoirSegmentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Indicates the current life cycle status of the reservoir in a simple way for the ease of                              
	// searching. This same status may also be found in the LifeCycleStatuses array, providing                               
	// the actual status dates.                                                                                              
	CurrentLifeCycleStatusID                                                                    *string                      `json:"CurrentLifeCycleStatusID,omitempty"`
	// The date that CO2 storage injection first began in the Reservoir or Reservoir Segment.                                
	FirstCO2StorageInjectionDate                                                                *string                      `json:"FirstCO2StorageInjectionDate,omitempty"`
	// The date that commercial production first began in the Reservoir or Reservoir Segment.                                
	FirstProductionDate                                                                         *string                      `json:"FirstProductionDate,omitempty"`
	// Indicates whether the condition of a Reservoir or Reservoir Segment is Active, meaning                                
	// there is at least one well intentionally and currently interacting with the reservoir or                              
	// reservoir segment. The absence of a value should not be assumed to mean true (Active) or                              
	// false (Inactive).                                                                                                     
	IsActiveCondition                                                                           *bool                        `json:"IsActiveCondition,omitempty"`
	// This flag indicates that this reservoir is composed of reservoir segments, and that the                               
	// characteristics of the segments should be aggregated to best describe the characteristics                             
	// of the reservoir. When not segmented, the single reservoir segment describes the                                      
	// properties of the entire reservoir. If more than one reservoir segment is defined for                                 
	// this reservoir, this flag should be set and the characteristics for the reservoir should                              
	// be calculated as summary data over all its reservoir segments.                                                        
	IsSegmented                                                                                 *bool                        `json:"IsSegmented,omitempty"`
	// Set of attributes capturing the Life Cycle Statuses of the Reservoir, a concept which is                              
	// typically chronological.                                                                                              
	LifeCycleStatuses                                                                           []LifeCycleStatuses          `json:"LifeCycleStatuses,omitempty"`
	// Name of the reservoir or reservoir segment.                                                                           
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// This is the best estimate of the original hydrocarbon total pore volume of the reservoir                              
	// segment at initial conditions.                                                                                        
	OriginalHydrocarbonPoreVolume                                                               *float64                     `json:"OriginalHydrocarbonPoreVolume,omitempty"`
	// An array of remarks that provide more context for this data record.                                                   
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// The productive area is the measured or estimated total area of the reservoir unit                                     
	// considered, usually the area within the hydrocarbon-water contact.                                                    
	ReservoirUnitArea                                                                           *float64                     `json:"ReservoirUnitArea,omitempty"`
	// The true vertical depth from the Vertical CRS to the permanent reservoir unit datum used                              
	// for pressure. This is further qualified by the associated Vertical CRS property. If no                                
	// Vertical CRS is populated, assume Mean Sea Level, and therefore "TVD Subsea".                                         
	ReservoirUnitPressureDatumTVD                                                               *float64                     `json:"ReservoirUnitPressureDatumTVD,omitempty"`
	// The average true vertical depth from the Vertical CRS to the top of the reservoir unit.                               
	// This is further qualified by the associated Vertical CRS property. If no Vertical CRS is                              
	// populated, assume Mean Sea Level, and therefore "TVD Subsea".                                                         
	ReservoirUnitTopDepthTVD                                                                    *float64                     `json:"ReservoirUnitTopDepthTVD,omitempty"`
	// The Vertical Coordinate Reference System defining the origin (i.e., zero point) for the                               
	// vertical measurements on this data record (e.g. PressureDatum and TopDepth). The most                                 
	// common Vertical CRS in this context is Mean Sea Level. Populating this attribute is                                   
	// especially important when the Vertical CRS is not Mean Sea Level but rather a local                                   
	// alternative like Caspian height or a custom Vertical CRS.                                                             
	VerticalCRSID                                                                               *string                      `json:"VerticalCRSID,omitempty"`
	// If the the vertical measurements on this data record (e.g. PressureDatum and TopDepth)                                
	// were not referenced from Mean Sea Level, this attribute can capture the difference                                    
	// between the selected Vertical CRS and Mean Sea Level.                                                                 
	VerticalDatumOffsetToMeanSeaLevel                                                           *float64                     `json:"VerticalDatumOffsetToMeanSeaLevel,omitempty"`
	// If a full-fledged earth model is built, this property takes the role of SectorID to refer                             
	// to a ReservoirCompartmentInterpretation.                                                                              
	CompartmentInterpretationID                                                                 *string                      `json:"CompartmentInterpretationID,omitempty"`
	// If CompartmentInterpretationID is populated, this identifies the member of the                                        
	// data.ReservoirCompartmentUnits[]. Such a member refers to the intersecting                                            
	// RockFluidUnitInterpretation and StratigraphicUnitInterpretation instances.                                            
	CompartmentMemberIdentifier                                                                 *string                      `json:"CompartmentMemberIdentifier,omitempty"`
	// This brief description is intended to inform the consumer of this data about the                                      
	// intent/purpose/use for which this reservoir segment exists.                                                           
	IntentPurposeUseDescription                                                                 *string                      `json:"IntentPurposeUseDescription,omitempty"`
	// This flag indicates that this reservoir segment (usually a fault block) is hydraulically                              
	// isolated (i.e., not in pressure communication) from other segments in the reservoir.                                  
	IsIsolated                                                                                  *bool                        `json:"IsIsolated,omitempty"`
	// Identifier linking to the parent reservoir entity (It could be either a segment or a                                  
	// reservoir)                                                                                                            
	ParentReservoirEntityID                                                                     *string                      `json:"ParentReservoirEntityID,omitempty"`
	// DEPRECATED: Use IntentPurposeUseDescription instead. The use of the reference value list                              
	// reference-data--ReservoirSegmentType is no longer encouraged. Previously: Identifier of                               
	// the reference-data object describing the type of the reservoir segment (note: not a                                   
	// validated field). This brief description is intended to afford the consumer of this data                              
	// the intent/purpose/use for which this reservoir segment exists.                                                       
	ReservoirSegmentTypeID                                                                      *string                      `json:"ReservoirSegmentTypeID,omitempty"`
	// Identifier of the Persisted Collection in which are referred the whole set of child                                   
	// segments constituting a comprehensive sector. A Persisted Collection is only used when no                             
	// full-fledged earth model is available. See also ReservoirCompartmentInterpretationID with                             
	// CompartmentMemberIdentifier for the earth model usage.                                                                
	SectorID                                                                                    *string                      `json:"SectorID,omitempty"`
	// The reference to an earth model structural organization, which contains the list of                                   
	// relevant fault and horizon interpretations for this ReservoirSegment.                                                 
	StructuralOrganizationInterpretationID                                                      *string                      `json:"StructuralOrganizationInterpretationID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Definition of a drilling rig.
type Rig struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RigData                       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type RigData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                           
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                       
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	CurrentOperatorID                                                                           *string                         `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                               
	DataSourceOrganisationID                                                                    *string                         `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                         
	FacilityDescription                                                                         *string                         `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                           
	FacilityEvents                                                                              []AbstractFacilityEvent         `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                  
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                 
	// If used, the "Source" property should identify that source system.                                                       
	FacilityID                                                                                  *string                         `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                    
	FacilityName                                                                                *string                         `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                     
	// which this facility is/has been known.                                                                                   
	FacilityNameAliases                                                                         []AbstractAliasNames            `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                   
	FacilityOperators                                                                           []AbstractFacilityOperator      `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                      
	// permit number, rig name etc.                                                                                             
	FacilitySpecifications                                                                      []AbstractFacilitySpecification `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                          
	FacilityStates                                                                              []AbstractFacilityState         `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                      
	FacilityTypeID                                                                              *string                         `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                         
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	InitialOperatorID                                                                           *string                         `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                
	OperatingEnvironmentID                                                                      *string                         `json:"OperatingEnvironmentID,omitempty"`
	// Classification of the rig.                                                                                               
	ClassRig                                                                                    *string                         `json:"ClassRig,omitempty"`
	// The identifier of the company that owns the rig.                                                                         
	OwnerID                                                                                     *string                         `json:"OwnerID,omitempty"`
	// The type of rig (e.g., semi-submersible, jack-up, etc.)                                                                  
	TypeRig                                                                                     *string                         `json:"TypeRig,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// The utilization of a rig during the drilling phase of a section
type RigUtilization struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RigUtilizationData            `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type RigUtilizationData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The end date and time for the activity that this rig was utilized for                                                 
	EndDateActivity                                                                             *time.Time                   `json:"EndDateActivity,omitempty"`
	// Measured depth of the wellbore when operations performed with this rig ended. Depth                                   
	// relative to Planned wellbore ZDP. Navigate via HoleSectionId and WellboreID to the                                    
	// side-car WellPlanningWellbore, which holds the depth reference in                                                     
	// data.VerticalMeasurement.                                                                                             
	EndHoleDepth                                                                                *float64                     `json:"EndHoleDepth,omitempty"`
	// Identifier of the Hole Section that is being drilled                                                                  
	HoleSectionID                                                                               *string                      `json:"HoleSectionId,omitempty"`
	// Required maximum workable water depth for the rig.                                                                    
	MaxWaterDepth                                                                               *float64                     `json:"MaxWaterDepth,omitempty"`
	// Mud pump equipment on the rig                                                                                         
	MudPumps                                                                                    []MudPump                    `json:"MudPumps,omitempty"`
	// Required mud flow rates delivered by the pump system.                                                                 
	RequiredFlowRate                                                                            *float64                     `json:"RequiredFlowRate,omitempty"`
	// Required hoisting capacity based on derrick / drawworks                                                               
	RequiredHoistingCapacity                                                                    *float64                     `json:"RequiredHoistingCapacity,omitempty"`
	// Required Standpipe pressure                                                                                           
	RequiredStandpipePressure                                                                   *float64                     `json:"RequiredStandpipePressure,omitempty"`
	// The rig that is being utilized to drill this depth range of this section.                                             
	RigID                                                                                       *string                      `json:"RigID,omitempty"`
	// Nominal inside diameter of the riser                                                                                  
	RiserInsideDiameter                                                                         *string                      `json:"RiserInsideDiameter,omitempty"`
	// Designed riser working pressure.                                                                                      
	RiserWorkingPressure                                                                        *float64                     `json:"RiserWorkingPressure,omitempty"`
	// The start date and time for the activity that this rig was utilized for                                               
	StartDateActivity                                                                           *time.Time                   `json:"StartDateActivity,omitempty"`
	// Measured depth of the wellbore when operations performed with this rig started. Depth                                 
	// relative to Planned wellbore ZDP. Navigate via HoleSectionId and WellboreID to the                                    
	// side-car WellPlanningWellbore, which holds the depth reference in                                                     
	// data.VerticalMeasurement.                                                                                             
	StartHoleDepth                                                                              *float64                     `json:"StartHoleDepth,omitempty"`
	// Required maximum torque for the top drive.                                                                            
	TopDriveTorqueRating                                                                        *float64                     `json:"TopDriveTorqueRating,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Pumps present on the rig
type MudPump struct {
	// Maximum power defined by the manufacturer.                   
	MaxPower                                               *float64 `json:"MaxPower,omitempty"`
	// Maximum required/delivered flowrate from/by the pump         
	MaxPumpFlowrate                                        *float64 `json:"MaxPumpFlowrate,omitempty"`
	// Maximum required/delivered pressure from/by the pump         
	MaxPumpPressure                                        *float64 `json:"MaxPumpPressure,omitempty"`
	// The name of the mud pump (model)                             
	Name                                                   *string  `json:"Name,omitempty"`
	// Number of pump of that type on the rig.                      
	Number                                                 *int64   `json:"Number,omitempty"`
	// Maximum power authorized by the drilling contractor          
	WorkingPower                                           *float64 `json:"WorkingPower,omitempty"`
}

// The exposure to the possibility of loss, injury, or other adverse or unwelcome
// circumstance; a chance or situation involving such a possibility. For example, the
// possible loss, injury, or other adverse or unwelcome circumstance encountered during the
// run of a drilling program or a single drilling string run.
type Risk struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RiskData                      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type RiskData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Describes the entity that may be affected by the risk                                                                 
	AffectedPersonnel                                                                           *string                      `json:"AffectedPersonnel,omitempty"`
	// A textual description of the cause of this risk                                                                       
	Cause                                                                                       *string                      `json:"Cause,omitempty"`
	// A textual description of the consequence of this risk occurring                                                       
	Consequence                                                                                 *string                      `json:"Consequence,omitempty"`
	// Reference to the name of the category of the loss - equivalent to the                                                 
	// "ConsequenceCategory" as defined in Bow Tie.                                                                          
	ConsequenceCategoryID                                                                       *string                      `json:"ConsequenceCategoryID,omitempty"`
	// References the consequence sub-category of the risk. Possible effects arising were a risk                             
	// event to occur.                                                                                                       
	ConsequenceSubCategoryID                                                                    *string                      `json:"ConsequenceSubCategoryID,omitempty"`
	// Description of the risk                                                                                               
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// Date and time that activities started.                                                                                
	EffectiveDateTime                                                                           *string                      `json:"EffectiveDateTime,omitempty"`
	// Custom string to further extend the risk categorization                                                               
	ExtendedRiskCategory                                                                        *string                      `json:"ExtendedRiskCategory,omitempty"`
	// Initial Probability Level of the Risk.                                                                                
	// Values of 1 through 5 with 1 being the lowest.                                                                        
	InitialProbability                                                                          *float64                     `json:"InitialProbability,omitempty"`
	// Score computed as of "Pre-Mitigation" which is the combination of :                                                   
	// Initial Severity * Initial Probability                                                                                
	// Values of 1 through 25 with 1 being the lowest.                                                                       
	InitialRiskScore                                                                            *float64                     `json:"InitialRiskScore,omitempty"`
	// Initial Severity Level of the Risk.                                                                                   
	// Values of 1 through 5 with 1 being the lowest.                                                                        
	InitialSeverity                                                                             *float64                     `json:"InitialSeverity,omitempty"`
	// Describes the measure or measures that may be applied to the risk to mitigate its                                     
	// consequences                                                                                                          
	Mitigations                                                                                 []MitigationElement          `json:"Mitigations,omitempty"`
	// The common or preferred name for a risk                                                                               
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Assumes PREVENTION AND MITIGATION barriers are in place to manage the risk event                                      
	NetProbability                                                                              *float64                     `json:"NetProbability,omitempty"`
	// Assumes PREVENTION AND MITIGATION barriers are in place to manage the risk event  which                               
	// is the combination of :                                                                                               
	// Net Severity * Net Probability                                                                                        
	NetRiskScore                                                                                *float64                     `json:"NetRiskScore,omitempty"`
	// Assumes PREVENTION AND MITIGATION barriers are in place to manage the risk event                                      
	NetSeverity                                                                                 *float64                     `json:"NetSeverity,omitempty"`
	// A textual description of the steps to prevent this risk                                                               
	Preventions                                                                                 []PreventionElement          `json:"Preventions,omitempty"`
	// Date a resource is formed outside of OSDU before loading                                                              
	PublicationDate                                                                             *time.Time                   `json:"PublicationDate,omitempty"`
	// Identifier of the Related Risks collection                                                                            
	RelatedRiskSetID                                                                            *string                      `json:"RelatedRiskSetID,omitempty"`
	// Probability Level of the Risk.                                                                                        
	// Values of 1 through 5 with 1 being the lowest.                                                                        
	ResidualProbability                                                                         *float64                     `json:"ResidualProbability,omitempty"`
	// Score computed as of "Post-Mitigation" which is the combination of :                                                  
	// Combination of Residual Severity * Residual Probability                                                               
	// Values of 1 through 25 with 1 being the lowest.                                                                       
	ResidualRiskScore                                                                           *float64                     `json:"ResidualRiskScore,omitempty"`
	// Severity Level of the Risk.                                                                                           
	// Values of 1 through 5 with 1 being the lowest.                                                                        
	ResidualSeverity                                                                            *float64                     `json:"ResidualSeverity,omitempty"`
	// Array of identifiers from the risk to related objects or documents (such as BHA, Mud                                  
	// design, Activity plans...)                                                                                            
	RiskAssociatedObjectIDs                                                                     []string                     `json:"RiskAssociatedObjectIDs,omitempty"`
	// General category of the described risk such as "Reservoir", "Overburden", "Life of Well",                             
	// "Drilling", "Completion" or "Opportunity"                                                                             
	RiskCategoryID                                                                              *string                      `json:"RiskCategoryID,omitempty"`
	// Describes the "discipline" that may be affected by the risk                                                           
	RiskDisciplineID                                                                            *string                      `json:"RiskDisciplineID,omitempty"`
	// end depth of the risk interval. Depth relative to Planned wellbore ZDP. Navigate via                                  
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                                   
	// data.VerticalMeasurement.                                                                                             
	RiskEndDepth                                                                                *float64                     `json:"RiskEndDepth,omitempty"`
	// Describes the Hierarchy Level the risk is applying to (such as Well, Field, Global…)                                  
	RiskHierarchyLevelID                                                                        *string                      `json:"RiskHierarchyLevelID,omitempty"`
	// Describes the responsibles (person/role/entity) for managing the risk 'by value'. This is                             
	// an alternative to the 'by reference' property data.RiskResponsiblesByReferenceIDs[].                                  
	RiskResponsibles                                                                            []AbstractContact            `json:"RiskResponsibles,omitempty"`
	// Describes the references to responsibles (person/role/entity) for managing the risk 'by                               
	// reference' to UserProfile, an alternative to the 'by value' property                                                  
	// data.RiskResponsibles[].                                                                                              
	RiskResponsiblesByReferenceIDs                                                              []string                     `json:"RiskResponsiblesByReferenceIDs,omitempty"`
	// start depth of the risk interval. Depth relative to Planned wellbore ZDP. Navigate via                                
	// WellboreID to the side-car WellPlanningWellbore, which holds the depth reference in                                   
	// data.VerticalMeasurement.                                                                                             
	RiskStartDepth                                                                              *float64                     `json:"RiskStartDepth,omitempty"`
	// Detailed category of the described risk such as "BOP", "Casing", "Cementing", "Riserless"                             
	RiskSubCategoryID                                                                           *string                      `json:"RiskSubCategoryID,omitempty"`
	// Short description of the risk                                                                                         
	Summary                                                                                     *string                      `json:"Summary,omitempty"`
	// Date and time that activities were completed.                                                                         
	TerminationDateTime                                                                         *string                      `json:"TerminationDateTime,omitempty"`
	// The type of risk.                                                                                                     
	TypeID                                                                                      *string                      `json:"TypeID,omitempty"`
	// Identifier of the planned Wellbore                                                                                    
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Describe a set of action to prevent for a risk or to mitigate its consequences
type MitigationElement struct {
	// Date the response must be completed                                                                      
	Deadline                                                                                  *float64          `json:"Deadline,omitempty"`
	// General description of the response                                                                      
	Description                                                                               string            `json:"Description"`
	// Name of the response                                                                                     
	Name                                                                                      string            `json:"Name"`
	// List of the staff responsible to proceed with the response. This is the 'by value'                       
	// alternative to the 'by reference' data.Mitigations[].ResponsiblesByReferenceIDs[].                       
	Responsibles                                                                              []AbstractContact `json:"Responsibles"`
	// List of the staff responsible to proceed with the response as references to UserProfile                  
	// records. This is the 'by reference' alternative to 'by value' in                                         
	// data.Mitigations[].Responsibles[].                                                                       
	ResponsiblesByReferenceIDs                                                                []string          `json:"ResponsiblesByReferenceIDs,omitempty"`
	// Describes the status of the action such as (progress, done, canceled)                                    
	Status                                                                                    string            `json:"Status"`
	// Date the description of the response has been updated.                                                   
	UpdateDate                                                                                *float64          `json:"UpdateDate,omitempty"`
}

// Describe a set of action to prevent for a risk or to mitigate its consequences
type PreventionElement struct {
	// Date the response must be completed                                                                      
	Deadline                                                                                  *float64          `json:"Deadline,omitempty"`
	// General description of the response                                                                      
	Description                                                                               string            `json:"Description"`
	// Name of the response                                                                                     
	Name                                                                                      string            `json:"Name"`
	// List of the staff responsible to proceed with the response. This is the 'by value'                       
	// alternative to the 'by reference' data.Preventions[].ResponsiblesByReferenceIDs[].                       
	Responsibles                                                                              []AbstractContact `json:"Responsibles"`
	// List of the staff responsible to proceed with the response as references to UserProfile                  
	// records. This is the 'by reference' alternative to 'by value' in                                         
	// data.Preventions[].Responsibles[].                                                                       
	ResponsiblesByReferenceIDs                                                                []string          `json:"ResponsiblesByReferenceIDs,omitempty"`
	// Describes the status of the action such as (progress, done, canceled)                                    
	Status                                                                                    string            `json:"Status"`
	// Date the description of the response has been updated.                                                   
	UpdateDate                                                                                *float64          `json:"UpdateDate,omitempty"`
}

// A rock sample retrieved from an outcrop or Well.  It can be core, sample cut from core,
// cutting, outcrop, slide etc.
type RockSample struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RockSampleData                `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type RockSampleData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// For cuttings: a flag indication whether the cuttings were washed and dried. More details                                      
	// in the associated RockSampleAnalysis.                                                                                         
	AreCuttingsWashedAndDried                                                                   *bool                                `json:"AreCuttingsWashedAndDried,omitempty"`
	// The depth of the base of the rock sample. For point measurements (slides, sidewall                                            
	// cores), the same value is assigned to TopDepth and BottomDepth.                                                               
	BottomDepth                                                                                 *float64                             `json:"BottomDepth,omitempty"`
	// Identifies the Coring from which this sample is created from it directly. Not populated                                       
	// for outcrops and cuttings.                                                                                                    
	CoringID                                                                                    *string                              `json:"CoringID,omitempty"`
	// The person, vendor or other provider of this information.                                                                     
	DataSource                                                                                  *string                              `json:"DataSource,omitempty"`
	// A flag to denote whether a particular core has been slabbed or not.                                                           
	IsCoreSlabbed                                                                               *bool                                `json:"IsCoreSlabbed,omitempty"`
	// For sample plugs: a flag indicating whether the plug has been cleaned. More details in                                        
	// the associated RockSampleAnalysis.                                                                                            
	IsPlugCleaned                                                                               *bool                                `json:"IsPlugCleaned,omitempty"`
	// The data vendor assigned sample ID or number.                                                                                 
	LabSampleIdentifier                                                                         *string                              `json:"LabSampleIdentifier,omitempty"`
	// The name of this RockSample.                                                                                                  
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Identifies the RockSample from which this sample is created from it directly.                                                 
	ParentSampleID                                                                              *string                              `json:"ParentSampleID,omitempty"`
	// The kind of preservation applied to this sample.                                                                              
	PreservationTypeID                                                                          *string                              `json:"PreservationTypeID,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system. i.e. this item is                                          
	// optional.                                                                                                                     
	RockSampleIdentifier                                                                        *string                              `json:"RockSampleIdentifier,omitempty"`
	// The date that the sample was acquired.                                                                                        
	SampleAcquiredDate                                                                          *time.Time                           `json:"SampleAcquiredDate,omitempty"`
	// The diameter of rock sample. Not applicable to cuttings                                                                       
	SampleDiameter                                                                              *float64                             `json:"SampleDiameter,omitempty"`
	// The interval between the top depth and bottom depth.                                                                          
	SampleInterval                                                                              *float64                             `json:"SampleInterval,omitempty"`
	// The length of rock sample. Not applicable to cuttings                                                                         
	SampleLength                                                                                *float64                             `json:"SampleLength,omitempty"`
	// The kind of orientation of this sample with respect to the bedding or drilling direction.                                     
	// Typical values are Horizontal, Vertical, Axial.                                                                               
	SampleOrientationID                                                                         *string                              `json:"SampleOrientationID,omitempty"`
	// Company and/or organization that owns the sample.                                                                             
	SampleOwnerID                                                                               *string                              `json:"SampleOwnerID,omitempty"`
	// An array containing operational or quality comments pertaining to a rock sample.                                              
	SampleRemarks                                                                               []SampleRemarks                      `json:"SampleRemarks,omitempty"`
	// An array containing the name of the locations where the material sample is stored. It can                                     
	// be stored in more than one location over time.                                                                                
	SampleStorageLocations                                                                      []AbstractStorageLocation            `json:"SampleStorageLocations,omitempty"`
	// Identifies a rock sample type.  E.g. Core, Cuttings, Core Slab, Core Plug, Core Chip,                                         
	// Slides. Considered mandatory.                                                                                                 
	SampleTypeID                                                                                *string                              `json:"SampleTypeID,omitempty"`
	// Weight of sample                                                                                                              
	SampleWeight                                                                                *float64                             `json:"SampleWeight,omitempty"`
	// The depth of the top of the rock sample. For point measurements (slides, sidewall cores),                                     
	// the same value is assigned to TopDepth and BottomDepth.                                                                       
	TopDepth                                                                                    *float64                             `json:"TopDepth,omitempty"`
	// References an entry in the VerticalMeasurements array for the Wellbore identified by                                          
	// WellboreID, or a standalone vertical reference which defines the vertical reference datum                                     
	// for all measured depths of the RockSample record. If this is not populated, the                                               
	// VerticalMeasurement is derived from the Coring.                                                                               
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Unique wellbore identifier. Not required for outcrops.                                                                        
	WellboreID                                                                                  *string                              `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// An array containing narrative remarks pertaining to a rock sample.
type SampleRemarks struct {
	// A descriptive comment for this remark.                                   
	Remark                                                              *string `json:"Remark,omitempty"`
	// A unique identifier for each remark record.                              
	RemarkID                                                            *string `json:"RemarkID,omitempty"`
	// The person, vendor, interpreter or other provider of information.        
	RemarkSource                                                        *string `json:"RemarkSource,omitempty"`
}

// A record about the storage location of an item, e.g. a rock or fluid sample, seismic
// tape, where (facility), by whom (organisation), when (dates) and how (description).
//
// The location where the sample was stored at the end of the chain of custody event
//
// The initial physical location where this sample was stored at the start of the chain of
// custody event.
type AbstractStorageLocation struct {
	// The date the item arrived at the storage location.                                              
	EffectiveDateTime                                                                          *string `json:"EffectiveDateTime,omitempty"`
	// The item (sample, tape)  identifier, for example a barcode, which identifies the item in        
	// the StorageFacility.                                                                            
	SampleIdentifier                                                                           *string `json:"SampleIdentifier,omitempty"`
	// Identifies the warehouse in which the item is stored.                                           
	StorageFacilityID                                                                          *string `json:"StorageFacilityID,omitempty"`
	// The name of the location where the item is stored. It can be stored in more than one            
	// location over time.                                                                             
	StorageLocationDescription                                                                 *string `json:"StorageLocationDescription,omitempty"`
	// Identifies the organisation with which the item is stored.                                      
	StorageOrganisationID                                                                      *string `json:"StorageOrganisationID,omitempty"`
	// The date and time at which the item is  no longer stored in the given location.  If the         
	// item is still in this storage, the 'TerminationDateTime' is left absent.                        
	TerminationDateTime                                                                        *string `json:"TerminationDateTime,omitempty"`
}

// A volume of rock that is identified based on some specific attribute, like its mineral
// content or other physical characteristic. It exists typically in the scope of a model.
type RockVolumeFeature struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *RockVolumeFeatureData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type RockVolumeFeatureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The name of the rock volume feature.                                                                                  
	Name                                                                                        *string                      `json:"Name,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// This object captures attributes of a sample/ specimen (rock or fluid) acquired either
// through an original acquisition event, sub-sampling event, generated from recombination
// of other samples /specimens or derived through the application of some laboratory process
// on the parent sample.
type Sample struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SampleData                    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type SampleData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// This attribute stores the array of OSDU record IDs for the parent samples used in                                     
	// creating this sample. Creation of this sample could be achieved through through                                       
	// extractions, sub sampling, derived sampling or recombination.                                                         
	ParentSampleIDs                                                                             []string                     `json:"ParentSampleIDs,omitempty"`
	// For a sample that has been recombined from separate samples, e.g. liquid sample and vapor                             
	// sample, this object records the specified: recombination conditions (pressure and                                     
	// temperature), recombination ratio, the saturation pressure and  target recombined sample                              
	// composition, whichever of these are appropriate for this recombination effort.                                        
	RecombinationSpecification                                                                  *RecombinationSpecification  `json:"RecombinationSpecification,omitempty"`
	// An array containing operational or quality comments about the sample.                                                 
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// This captures the acquisition parameters obtained during  the sample acquisition event                                
	// associated with this sample. Note that this attribute should only be used when                                        
	// associating the sample with an acquisition event from its original source and not for                                 
	// sub-sampling or derivative sources.                                                                                   
	SampleAcquisition                                                                           *SampleAcquisition           `json:"SampleAcquisition,omitempty"`
	// This is an OSDU Record ID referencing a document that contains instructions on how the                                
	// sample should be disposed.                                                                                            
	SampleDisposalInstructionID                                                                 *string                      `json:"SampleDisposalInstructionID,omitempty"`
	// Identifier from a Master Data Management System or other trusted source external to OSDU                              
	// - stored here in order to allow for multi-system connection and synchronization. If used,                             
	// the "Source" property in AbstractCommonResources schema should identify that source                                   
	// system. i.e. this item is optional.                                                                                   
	SampleIdentifier                                                                            *string                      `json:"SampleIdentifier,omitempty"`
	// This provides the name of the sample. If there are other names that need to be stored ,                               
	// leverage the Aliases available in the Abstract objects.                                                               
	SampleName                                                                                  *string                      `json:"SampleName,omitempty"`
	// This provides information about the type of the origin of the sample. It can be used to                               
	// determine if the sample was acquired from an original source location, result of                                      
	// recombination, subsampling or derived from some laboratory process.                                                   
	SampleOriginTypeID                                                                          *string                      `json:"SampleOriginTypeID,omitempty"`
	// This captures information about the preparation process executed after the sample                                     
	// acquisition event.                                                                                                    
	SamplePreparation                                                                           []SamplePreparation          `json:"SamplePreparation,omitempty"`
	// This captures information pertaining to the observed physical properties of the sample.                               
	SampleProperties                                                                            *AbstractSampleProperties    `json:"SampleProperties,omitempty"`
	// This is the OSDU record ID from the reference list of the type of rock or fluid sample                                
	// e.g. Fluid, Core, Cuttings, Core Slab, Core Plug, Core Chip, Slides.                                                  
	SampleTypeID                                                                                *string                      `json:"SampleTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// For a sample that has been recombined from separate samples, e.g. liquid sample and vapor
// sample, this object records the specified: recombination conditions (pressure and
// temperature), recombination ratio, the saturation pressure and  target recombined sample
// composition, whichever of these are appropriate for this recombination effort.
type RecombinationSpecification struct {
	// The prevailing operating conditions (Pressure and Temperature)  for the recombination                                      
	// operation.                                                                                                                 
	RecombinationCondition                                                                      AbstractPTCondition               `json:"RecombinationCondition"`
	// The gas-oil ratio recorded for this sample recombination process as well as the                                            
	// volumetric reference conditions for both the oil and gas phases. This is typically                                         
	// required for fluid sample types.                                                                                           
	RecombinationGasOilRatio                                                                    *RecombinationGasOilRatio         `json:"RecombinationGasOilRatio,omitempty"`
	// The observed saturation pressure for this sample recombination process. Mostly applies to                                  
	// fluid samples.                                                                                                             
	RecombinationSaturationPressure                                                             *float64                          `json:"RecombinationSaturationPressure,omitempty"`
	// Object capturing the mixture and contributions from multiple samples.                                                      
	RecombinedSampleFraction                                                                    []RecombinedSampleFractionElement `json:"RecombinedSampleFraction"`
	// Pertinent information about the sample recombination specification stored alongside the                                    
	// other attributes.                                                                                                          
	Remarks                                                                                     []AbstractRemark                  `json:"Remarks,omitempty"`
	// This provides an array of components and their fraction contribution to the overall                                        
	// expected composition of the  sample generated by the recombination process. This is                                        
	// typically required for fluid sample types.                                                                                 
	TargetSampleComposition                                                                     []TargetSampleCompositionElement  `json:"TargetSampleComposition,omitempty"`
}

// The prevailing operating conditions (Pressure and Temperature)  for the recombination
// operation.
//
// The pair of absolute pressure and temperature values describing the condition for a
// particular volume measurement or estimation. The unit of measure context is defined via
// the meta[] block in the record. Search responses will return pressure in Pa (Pascal) and
// temperature in K (Kelvin).
//
// The pressure and temperature reference values for the gas stream.
//
// The pressure and temperature reference values for the oil stream.
//
// This captures the prevailing pressure and temperature recorded at the sampling point
// during the sample acquisition event. The property applies to ALL sampling acquisition
// events.
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
//
// AcquisitionCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition|DownholeSampleAcquisition
// | FormationSampleAcquisition | SeparatorSampleAcquisition | WellheadSampleAcquisition
// >[].Item.AcquisitionPressure
//
// AcquisitionCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition|DownholeSampleAcquisition
// | FormationSampleAcquisition | SeparatorSampleAcquisition | WellheadSampleAcquisition
// >[].Item.AcquisitionTemperature
//
// This captures the operating conditions (prevailing pressure and temperatures) on the
// target equipment used on Topside Facilities (exclusive of wells or separators) during the
// sample acquisition event.  This attribute is provided in the event that the acquisition
// pressure and temperature recorded at the flow port or sampling point from which the
// sample is acquired is different from the operating P&T for the target facility or
// equipment. The property is only used in conjunction with FacilitySampleAcquisition
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
//
// FacilityOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition>[].Item.FacilityPressure
//
// FacilityOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition>[].Item.FacilityTemperature
//
// This captures the operating conditions (prevailing pressure and temperatures) on the
// target formation during the sample acquisition event.  This attribute is provided in the
// event that the acquisition pressure and temperature recorded at the downhole sampling
// location is different from the Formation's P&T. The property is used in conjunction with
// all the acquisition event types except FacilitySampleAcquisition, Cuttings and
// WellheadSampleAcquisition.
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
//
// FormationCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.FormationPressure
//
// FormationCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.FormationTemperature
//
// This captures the operating conditions (prevailing pressure and temperatures) on the
// target facility or equipment (in this case separator) during the sample acquisition
// event.  This attribute is provided in the event that the acquisition pressure and
// temperature recorded at the flow port or sampling point from which the sample is acquired
// is different from the operating P&T for the separator. The property is only used in
// conjunction with SeparatorSampleAcquisition
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
//
// SeparatorOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.SeparatorPressure
//
// SeparatorOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.SeparatorTemperature
//
// This captures the operating conditions (prevailing pressure and temperatures) on the
// target facility or equipment (in this case wellhead) during the sample acquisition
// event.  This attribute is provided in the event that the acquisition pressure and
// temperature recorded at the flow port or sampling point from which the sample is acquired
// is different from the operating P&T at the wellhead. The property is only used in
// conjunction with WellheadSampleAcquisition.
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
//
// wellheadOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.wellheadPressure
//
// wellheadOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.wellheadTemperature
//
// Used to describe the pressure and temperature conditions at which the sample preparation
// took place
//
// The pressure and temperature conditions recorded when the current sample container is
// closed for the current chain of custody event.
//
// The pressure and temperature conditions recorded when the previous sample container is
// opened for the current chain of custody event.
//
// The pressure and temperature conditions recorded during the sample transfer operation
// between containers for the current chain of custody event.
// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:
// TransferCondition.Pressure =
// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].TransferPressure
// TransferCondition.Temperature =
// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].TransferTemperature
//
// This provides the recommended operating conditions (Pressure and Temperature) rating for
// the sample container.
type AbstractPTCondition struct {
	// The recorded absolute pressure condition. The unit of measure context is defined via              
	// meta[] in the Storage record while the Search responses return the value in base SI unit          
	// Pa (Pascal).                                                                                      
	Pressure                                                                                     float64 `json:"Pressure"`
	// The recorded temperature condition. The unit of measure context is defined via meta[] in          
	// the Storage record while the Search responses return the value in base SI unit K (Kelvin).        
	Temperature                                                                                  float64 `json:"Temperature"`
}

// The gas-oil ratio recorded for this sample recombination process as well as the
// volumetric reference conditions for both the oil and gas phases. This is typically
// required for fluid sample types.
type RecombinationGasOilRatio struct {
	// The Gas Oil Ratio calculated at the reference conditions specified for each stream (Oil                    
	// or Gas)                                                                                                    
	GasOilRatio                                                                               float64             `json:"GasOilRatio"`
	// The pressure and temperature reference values for the gas stream.                                          
	VolumeReferenceConditionGas                                                               AbstractPTCondition `json:"VolumeReferenceConditionGas"`
	// The pressure and temperature reference values for the oil stream.                                          
	VolumeReferenceConditionOil                                                               AbstractPTCondition `json:"VolumeReferenceConditionOil"`
}

// This object holds information about a sample or component of a sample and its
// contribution to a target sample created through the recombination process.
type RecombinedSampleFractionElement struct {
	// The mass fraction contribution of this component to the sample composition.                     
	MassFraction                                                                              *float64 `json:"MassFraction,omitempty"`
	// The mole fraction contribution of this component to the sample composition.                     
	MoleFraction                                                                              *float64 `json:"MoleFraction,omitempty"`
	// This is the OSDU Record ID of an item in the list of  sample components. This attribute         
	// references the components that make up a sample.                                                
	SampleCompositionComponentID                                                              string   `json:"SampleCompositionComponentID"`
	// The volume fraction contribution of this component to the sample composition.                   
	VolumeFraction                                                                            *float64 `json:"VolumeFraction,omitempty"`
}

// This object holds information about a sample or component of a sample and its
// contribution to a target sample created through the recombination process.
type TargetSampleCompositionElement struct {
	// The mass fraction contribution of this component to the sample composition.                     
	MassFraction                                                                              *float64 `json:"MassFraction,omitempty"`
	// The mole fraction contribution of this component to the sample composition.                     
	MoleFraction                                                                              *float64 `json:"MoleFraction,omitempty"`
	// This is the OSDU Record ID of an item in the list of  sample components. This attribute         
	// references the components that make up a sample.                                                
	SampleCompositionComponentID                                                              string   `json:"SampleCompositionComponentID"`
	// The volume fraction contribution of this component to the sample composition.                   
	VolumeFraction                                                                            *float64 `json:"VolumeFraction,omitempty"`
}

// This captures the acquisition parameters obtained during  the sample acquisition event
// associated with this sample. Note that this attribute should only be used when
// associating the sample with an acquisition event from its original source and not for
// sub-sampling or derivative sources.
type SampleAcquisition struct {
	// The end date and time of the acquisition event.                                                                   
	AcquisitionEndDate                                                                          *time.Time               `json:"AcquisitionEndDate,omitempty"`
	// The start date and time of the acquisition event.                                                                 
	AcquisitionStartDate                                                                        *time.Time               `json:"AcquisitionStartDate,omitempty"`
	// The company that managed the collection of the sample from its original / source                                  
	// environment.                                                                                                      
	CollectionServiceCompanyID                                                                  *string                  `json:"CollectionServiceCompanyID,omitempty"`
	// The company that handled the sample on site after the it was collected/extracted. For                             
	// example, the company that applied field preservation methods, and prepared the sample for                         
	// shipping.                                                                                                         
	HandlingServiceCompanyID                                                                    *string                  `json:"HandlingServiceCompanyID,omitempty"`
	// A remark object, pairing a remark text with a source, e.g. an author, and a date, which                           
	// is typically included in an array.                                                                                
	Remarks                                                                                     []AbstractRemark         `json:"Remarks,omitempty"`
	// This is the OSDU Record ID for the original sample container used in the acquired sample.                         
	// This is only for the initial sample acquisition. Only populate this for the original                              
	// sample.                                                                                                           
	SampleAcquisitionContainerID                                                                *string                  `json:"SampleAcquisitionContainerID,omitempty"`
	// This attribute provides information about the acquisition parameters and process used in                          
	// acquiring the target sample. Other information about the sample itself can be found in                            
	// the Sample object.                                                                                                
	SampleAcquisitionDetail                                                                     *SampleAcquisitionDetail `json:"SampleAcquisitionDetail,omitempty"`
	// A reference to the parent record, which can group this sample acquisition event record                            
	// with other sample acquisition event records, collected as part of the same job.                                   
	SampleAcquisitionJobID                                                                      *string                  `json:"SampleAcquisitionJobID,omitempty"`
	// This is a reference list of the different types of sample acquisition events used in                              
	// acquiring samples. i.e. downhole sample acquisition type, outcrop, coring, non-facility                           
	// site, etc                                                                                                         
	SampleAcquisitionTypeID                                                                     *string                  `json:"SampleAcquisitionTypeID,omitempty"`
}

// This attribute provides information about the acquisition parameters and process used in
// acquiring the target sample. Other information about the sample itself can be found in
// the Sample object.
type SampleAcquisitionDetail struct {
	// This captures the prevailing pressure and temperature recorded at the sampling point                                                                                                            
	// during the sample acquisition event. The property applies to ALL sampling acquisition                                                                                                           
	// events.                                                                                                                                                                                         
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// AcquisitionCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition|DownholeSampleAcquisition                                                   
	// | FormationSampleAcquisition | SeparatorSampleAcquisition | WellheadSampleAcquisition                                                                                                           
	// >[].Item.AcquisitionPressure                                                                                                                                                                    
	//                                                                                                                                                                                                 
	// AcquisitionCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition|DownholeSampleAcquisition                                                
	// | FormationSampleAcquisition | SeparatorSampleAcquisition | WellheadSampleAcquisition                                                                                                           
	// >[].Item.AcquisitionTemperature                                                                                                                                                                 
	AcquisitionCondition                                                                                                                                          *AbstractPTCondition                 `json:"AcquisitionCondition,omitempty"`
	// This captures the gas oil ratio (GOR) for the sample acquired during the sample                                                                                                                 
	// acquisition event. The property applies to ALL FLUID sampling acquisition events.                                                                                                               
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// AcquisitionGOR=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition|DownholeSampleAcquisition                                                                  
	// | FormationSampleAcquisition | SeparatorSampleAcquisition | WellheadSampleAcquisition                                                                                                           
	// >[].Item.AcquisitionGOR                                                                                                                                                                         
	AcquisitionGOR                                                                                                                                                *float64                             `json:"AcquisitionGOR,omitempty"`
	// The depth of the base of the target interval from which the sample was acquired. The                                                                                                            
	// reference and kind of depth (e.g. driller's depth versus logger's depth) is described in                                                                                                        
	// data.VerticalMeasurement.  The property is always used except with                                                                                                                              
	// WellheadSampleAcquisition, SeparatorSampleAcquisition, FacilitySampleAcquisition.                                                                                                               
	// Note: As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                        
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// TopDepth=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<DownholeSampleAcquisition                                                                                                  
	// | FormationTestSampleAcquisition>[].Item.BaseMD                                                                                                                                                 
	BaseDepth                                                                                                                                                     *float64                             `json:"BaseDepth,omitempty"`
	// This refers to an array of OSDU record IDs for the wellbore completion objects                                                                                                                  
	// (perforated or open hole interval) that contributed to the stream used in acquiring the                                                                                                         
	// sample. It can be used for one wellbore opening or multiple opening in the case of                                                                                                              
	// commingled flow. This is typically related to acquisition events from downhole where                                                                                                            
	// samples are comingled from multiple completions. The property is only used in conjunction                                                                                                       
	// with WellheadSampleAcquisition, SeparatorSampleAcquisition, DownholeSampleAcquisition.                                                                                                          
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// WellboreOpeningIDs[0]=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition                                                                                     
	// | SeparatorSampleAcquisition>[].Item.WellboreCompletion                                                                                                                                         
	ContributingWellboreOpeningIDs                                                                                                                                []string                             `json:"ContributingWellboreOpeningIDs,omitempty"`
	// The value accounts for the application of correction procedures to the gas flow rate                                                                                                            
	// observed / measured during the sample acquisition event. The property is typically only                                                                                                         
	// used in conjunction with SeparatorSampleAcquisition.                                                                                                                                            
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// CorrectedGasRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.CorrectedGasRate                                                                
	CorrectedGasRate                                                                                                                                              *float64                             `json:"CorrectedGasRate,omitempty"`
	// The value accounts for the application of correction procedures to the oil flow rate                                                                                                            
	// observed / measured during the sample acquisition event. The property is typically only                                                                                                         
	// used in conjunction with SeparatorSampleAcquisition                                                                                                                                             
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// CorrectedOilRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.CorrectedOilRate                                                                
	CorrectedOilRate                                                                                                                                              *float64                             `json:"CorrectedOilRate,omitempty"`
	// The value accounts for the application of correction procedures to the water flow rate                                                                                                          
	// observed / measured during the sample acquisition event. The property is typically only                                                                                                         
	// used in conjunction with SeparatorSampleAcquisition.                                                                                                                                            
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// CorrectedWaterRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.CorrectedWaterRate                                                            
	CorrectedWaterRate                                                                                                                                            *float64                             `json:"CorrectedWaterRate,omitempty"`
	// This is used to capture information regarding the methodology used in correcting rates                                                                                                          
	// acquired during the sample acquisition event. The property is only used in conjunction                                                                                                          
	// with SeparatorSampleAcquisition                                                                                                                                                                 
	CorrectionRemarks                                                                                                                                             *AbstractRemark                      `json:"CorrectionRemarks,omitempty"`
	// This captures the operating conditions (prevailing pressure and temperatures) on the                                                                                                            
	// target equipment used on Topside Facilities (exclusive of wells or separators) during the                                                                                                       
	// sample acquisition event.  This attribute is provided in the event that the acquisition                                                                                                         
	// pressure and temperature recorded at the flow port or sampling point from which the                                                                                                             
	// sample is acquired is different from the operating P&T for the target facility or                                                                                                               
	// equipment. The property is only used in conjunction with FacilitySampleAcquisition                                                                                                              
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// FacilityOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition>[].Item.FacilityPressure                                              
	//                                                                                                                                                                                                 
	// FacilityOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FacilitySampleAcquisition>[].Item.FacilityTemperature                                        
	FacilityEquipmentOperatingCondition                                                                                                                           *AbstractPTCondition                 `json:"FacilityEquipmentOperatingCondition,omitempty"`
	// This captures the operating conditions (prevailing pressure and temperatures) on the                                                                                                            
	// target formation during the sample acquisition event.  This attribute is provided in the                                                                                                        
	// event that the acquisition pressure and temperature recorded at the downhole sampling                                                                                                           
	// location is different from the Formation's P&T. The property is used in conjunction with                                                                                                        
	// all the acquisition event types except FacilitySampleAcquisition, Cuttings and                                                                                                                  
	// WellheadSampleAcquisition.                                                                                                                                                                      
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// FormationCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.FormationPressure                                                     
	//                                                                                                                                                                                                 
	// FormationCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.FormationTemperature                                               
	FormationCondition                                                                                                                                            *AbstractPTCondition                 `json:"FormationCondition,omitempty"`
	// This is the OSDU record ID for the predominant fluid kind obtained from the formation                                                                                                           
	// during the acquisition event. The property is only used in conjunction with                                                                                                                     
	// FormationTestSampleAcquisition                                                                                                                                                                  
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// GrossFluidKind=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FormationTestSampleAcquisition>[].Item.GrossFluidKind                                                                
	GrossFluidKindID                                                                                                                                              *string                              `json:"GrossFluidKindID,omitempty"`
	// This is the observed/ measured gas rate for this sample acquisition event. The property                                                                                                         
	// is only used in conjunction with SeparatorSampleAcquisition                                                                                                                                     
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// MeasuredGasRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.MeasuredGasRate                                                                  
	MeasuredGasRate                                                                                                                                               *float64                             `json:"MeasuredGasRate,omitempty"`
	// This is the  observed/ measured oil rate for this sample acquisition event. The property                                                                                                        
	// is only used in conjunction with SeparatorSampleAcquisition                                                                                                                                     
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// MeasuredOilRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.MeasuredOilRate                                                                  
	MeasuredOilRate                                                                                                                                               *float64                             `json:"MeasuredOilRate,omitempty"`
	// This is the observed/ measured water rate for this sample acquisition event. The property                                                                                                       
	// is only used in conjunction with SeparatorSampleAcquisition                                                                                                                                     
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// MeasuredWaterRate=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.MeasuredWaterRate                                                              
	MeasuredWaterRate                                                                                                                                             *float64                             `json:"MeasuredWaterRate,omitempty"`
	// This is the OSDU record ID for the type of mud base used  during the acquisition event or                                                                                                       
	// present in the sample required. The property is always used except with Outcrop                                                                                                                 
	MudBaseTypeID                                                                                                                                                 *string                              `json:"MudBaseTypeID,omitempty"`
	// This property is used in capturing the type of tracer used during the sample acquisition                                                                                                        
	// event.The property is always used except with Outcrop                                                                                                                                           
	MudTracerTypeID                                                                                                                                               *string                              `json:"MudTracerTypeID,omitempty"`
	// The kind of preservation applied to this sample if applied at the time of acquisition.                                                                                                          
	// The property is only used in conjunction with ConventionalCore, Sidewall Core, Cuttings,                                                                                                        
	// Outcrop, Core Plugs                                                                                                                                                                             
	PreservationTypeID                                                                                                                                            *string                              `json:"PreservationTypeID,omitempty"`
	// This refers to the different runs performed during the sample acquisition event and is                                                                                                          
	// typically identified using integers. It mostly applies to acquisition events acquired                                                                                                           
	// from the subsurface like downhole, coring, etc. The property is always used except with                                                                                                         
	// WellheadSampleAcquisition, SeparatorSampleAcquisition, FormationTestSampleAcquisition,                                                                                                          
	// FacilitySampleAcquisition                                                                                                                                                                       
	RunNumber                                                                                                                                                     *string                              `json:"RunNumber,omitempty"`
	// The name or identifier for the slot in the sample carrier where the sample was acquired.                                                                                                        
	// The property is only used in conjunction with FormationTestSampleAcquisition                                                                                                                    
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// SampleCarrierSlotName=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FormationTestSampleAcquisition>[].Item.SampleCarrierSlotName                                                  
	SampleCarrierSlotName                                                                                                                                         *string                              `json:"SampleCarrierSlotName,omitempty"`
	// The pressure used in charging the sample container. The property is only used in                                                                                                                
	// conjunction with FormationTestSampleAcquisition                                                                                                                                                 
	// Note: As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                        
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// SampleContainerCushionPressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FormationTestSampleAcquisition>[].Item.CushionPressure                                               
	SampleContainerCushionPressure                                                                                                                                *float64                             `json:"SampleContainerCushionPressure,omitempty"`
	// Actual length of recovered sample, usually a core The property is only used in                                                                                                                  
	// conjunction with ConventionalCore, Sidewall Core, Outcrop                                                                                                                                       
	SampleRecoveredLengthActual                                                                                                                                   *float64                             `json:"SampleRecoveredLengthActual,omitempty"`
	// Planned length of sample to be recovered, usually a core The property is only used in                                                                                                           
	// conjunction with ConventionalCore, Sidewall Core, Cuttings, Outcrop                                                                                                                             
	SampleRecoveredLengthPlanned                                                                                                                                  *float64                             `json:"SampleRecoveredLengthPlanned,omitempty"`
	// A free-form reference to the flow port on the Facility where this sample was acquired.                                                                                                          
	// The property is only used in conjunction with WellheadSampleAcquisition,                                                                                                                        
	// SeparatorSampleAcquisition, FacilitySampleAcquisition.                                                                                                                                          
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	// SamplingPoint= [                                                                                                                                                                                
	// PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition |                                                                                                        
	// FacilitySampleAcquisition | SeparatorSampleAcquisition>[].Item.SamplingPoint                                                                                                                    
	SamplingPoint                                                                                                                                                 *SamplingPoint                       `json:"SamplingPoint,omitempty"`
	// This captures the operating conditions (prevailing pressure and temperatures) on the                                                                                                            
	// target facility or equipment (in this case separator) during the sample acquisition                                                                                                             
	// event.  This attribute is provided in the event that the acquisition pressure and                                                                                                               
	// temperature recorded at the flow port or sampling point from which the sample is acquired                                                                                                       
	// is different from the operating P&T for the separator. The property is only used in                                                                                                             
	// conjunction with SeparatorSampleAcquisition                                                                                                                                                     
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// SeparatorOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.SeparatorPressure                                           
	//                                                                                                                                                                                                 
	// SeparatorOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition>[].Item.SeparatorTemperature                                     
	SeparatorOperatingCondition                                                                                                                                   *AbstractPTCondition                 `json:"SeparatorOperatingCondition,omitempty"`
	// This is the OSDU ID for the Site where the the sample acquisition event occurred.                                                                                                               
	SiteID                                                                                                                                                        *string                              `json:"SiteID,omitempty"`
	// This references the kind of tool used in acquiring the sample. The property is always                                                                                                           
	// used except with WellheadSampleAcquisition, SeparatorSampleAcquisition,                                                                                                                         
	// FormationTestSampleAcquisition, FacilitySampleAcquisition.                                                                                                                                      
	// Note: As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                        
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// ToolKind=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<DownholeSampleAcquisition>[].Item.ToolKind.                                                                                
	ToolKind                                                                                                                                                      *string                              `json:"ToolKind,omitempty"`
	// The name of the formation tester tool section that was used in acquiring the sample. The                                                                                                        
	// property is only used in conjunction with FormationTestSampleAcquisition,                                                                                                                       
	// ConventionalCore, Sidewall Core, Cuttings                                                                                                                                                       
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// ToolSectionName=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<FormationTestSampleAcquisition>[].Item.ToolSectionName                                                              
	ToolSectionName                                                                                                                                               *string                              `json:"ToolSectionName,omitempty"`
	// The depth of the top of the target interval from which the sample was acquired. The                                                                                                             
	// reference and kind of depth (e.g. driller's depth versus logger's depth) is described in                                                                                                        
	// data.VerticalMeasurement. The property is always used except with                                                                                                                               
	// WellheadSampleAcquisition, SeparatorSampleAcquisition, FacilitySampleAcquisition.                                                                                                               
	// Note: As an example, if ingesting data formatted using PRODML, this is typically  mapped                                                                                                        
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// TopDepth=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<DownholeSampleAcquisition                                                                                                  
	// | FormationTestSampleAcquisition>[].Item.TopMD                                                                                                                                                  
	TopDepth                                                                                                                                                      *float64                             `json:"TopDepth,omitempty"`
	// Information on the list of all depths and elevations pertaining to the target wellbore                                                                                                          
	// involved in the Sample Acquisition event, like, plug back measured depth, total measured                                                                                                        
	// depth, KB elevation. The property is always used except with WellheadSampleAcquisition,                                                                                                         
	// SeparatorSampleAcquisition, FacilitySampleAcquisition                                                                                                                                           
	VerticalMeasurement                                                                                                                                           *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// This refers to the OSDU record ID of the wellbore object from which the sample was                                                                                                              
	// acquired. It typically applies in scenarios where the acquisition event only pertains to                                                                                                        
	// a single wellbore object. The property is always used except with                                                                                                                               
	// FacilitySampleAcquisition, Outcrop, SeparatorSampleAcquisition                                                                                                                                  
	// Note: If ingesting data formatted using PRODML, this is typically  mapped as seen below:                                                                                                        
	// WellboreID=                                                                                                                                                                                     
	// PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<DownholeSampleAcquisition |                                                                                                         
	// WellheadSampleAcquisition>[].Item.Wellbore                                                                                                                                                      
	WellboreID                                                                                                                                                    *string                              `json:"WellboreID,omitempty"`
	// This captures the operating conditions (prevailing pressure and temperatures) on the                                                                                                            
	// target facility or equipment (in this case wellhead) during the sample acquisition                                                                                                              
	// event.  This attribute is provided in the event that the acquisition pressure and                                                                                                               
	// temperature recorded at the flow port or sampling point from which the sample is acquired                                                                                                       
	// is different from the operating P&T at the wellhead. The property is only used in                                                                                                               
	// conjunction with WellheadSampleAcquisition.                                                                                                                                                     
	// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped                                                                                                         
	// as seen below:                                                                                                                                                                                  
	//                                                                                                                                                                                                 
	// wellheadOperatingCondition.Pressure=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.wellheadPressure                                              
	//                                                                                                                                                                                                 
	// wellheadOperatingCondition.Temperature=PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<WellheadSampleAcquisition>[].Item.wellheadTemperature                                        
	WellheadOperatingCondition                                                                                                                                    *AbstractPTCondition                 `json:"WellheadOperatingCondition,omitempty"`
}

// A free-form reference to the flow port on the Facility where this sample was acquired.
// The property is only used in conjunction with WellheadSampleAcquisition,
// SeparatorSampleAcquisition, FacilitySampleAcquisition.
// Note:As an example, If ingesting data formatted using PRODML, this is typically  mapped
// as seen below:
// SamplingPoint= [
// PRODML:2.1:FluidSampleAcquisitionJob.FluidSampleAcquisition<SeparatorSampleAcquisition |
// FacilitySampleAcquisition | SeparatorSampleAcquisition>[].Item.SamplingPoint
type SamplingPoint struct {
	// This is a description of the name of the  component or equipment used in capturing the           
	// sample. It can be used in storing the P & ID of the equipment or its component as defined        
	// within the Organisations Facility SOR / Repository.                                              
	SamplingPointName                                                                           *string `json:"SamplingPointName,omitempty"`
	// This is the OSDU record ID from a reference list containing the different types of               
	// sampling points.                                                                                 
	SamplingPointTypeID                                                                         *string `json:"SamplingPointTypeID,omitempty"`
}

// This captures information about the preparation process executed after the sample
// acquisition event.
type SamplePreparation struct {
	// This captures other pertinent information regarding the sample preparation process.                          
	Remarks                                                                                    []AbstractRemark     `json:"Remarks,omitempty"`
	// Used to describe the pressure and temperature conditions at which the sample preparation                     
	// took place                                                                                                   
	SamplePreparationCondition                                                                 *AbstractPTCondition `json:"SamplePreparationCondition,omitempty"`
	// This represents the end date for the sample preparation process.                                             
	SamplePreparationEndDate                                                                   *time.Time           `json:"SamplePreparationEndDate,omitempty"`
	// Provide additional details on which industrial/lab method used to conduct the sample                         
	// preparation                                                                                                  
	SamplePreparationMethodID                                                                  *string              `json:"SamplePreparationMethodID,omitempty"`
	// This represents the start date for the sample preparation process.                                           
	SamplePreparationStartDate                                                                 *time.Time           `json:"SamplePreparationStartDate,omitempty"`
	// Provides extra details on any processes applied after the sample has been acquired                           
	SamplePreparationTypeID                                                                    *string              `json:"SamplePreparationTypeID,omitempty"`
}

// This captures information pertaining to the observed physical properties of the sample.
//
// A nested object definition for ordinary sample properties.
type AbstractSampleProperties struct {
	// This captures the diameter of the sample. This is mostly applicable in core samples.              
	SampleDiameter                                                                              *float64 `json:"SampleDiameter,omitempty"`
	// This refers to the length of the sample. Applicable to rock / core samples.                       
	SampleLength                                                                                *float64 `json:"SampleLength,omitempty"`
	// The kind of orientation of the rock sample with respect to the bedding or drilling                
	// direction. Typical values are Horizontal, Vertical, Axial.                                        
	SampleOrientationTypeID                                                                     *string  `json:"SampleOrientationTypeID,omitempty"`
	// This refers to the volume of the sample acquired. It is applicable to both rock and fluid         
	// samples.                                                                                          
	SampleVolume                                                                                *float64 `json:"SampleVolume,omitempty"`
	// This captures the weight or mass of the sample.                                                   
	SampleWeight                                                                                *float64 `json:"SampleWeight,omitempty"`
}

// This provides information about the project / job responsible for managing one or more
// sample acquisition events undertaken within a given period.
type SampleAcquisitionJob struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SampleAcquisitionJobData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type SampleAcquisitionJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// Free form text to specify the type of the sample acquisition job                                                      
	JobTypeID                                                                                   *string                      `json:"JobTypeID,omitempty"`
	// Unique identifier for an acquisition job provided by the service company or reporting                                 
	// organisation                                                                                                          
	ReferenceJobNumber                                                                          *string                      `json:"ReferenceJobNumber,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// This provides historical information on the events that affect the physical sample, such
// as sub-sampling, or changing storage container or storage location.
type SampleChainOfCustodyEvent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SampleChainOfCustodyEventData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type SampleChainOfCustodyEventData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// The pressure and temperature conditions recorded when the current sample container is                                 
	// closed for the current chain of custody event.                                                                        
	ClosingCondition                                                                            *AbstractPTCondition         `json:"ClosingCondition,omitempty"`
	// The OSDU ID of the current container used to hold the sample at the end of the chain of                               
	// custody event.                                                                                                        
	// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:                                       
	// CurrentContainerID =                                                                                                  
	// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].CurrentContainer                                              
	CurrentContainerID                                                                          *string                      `json:"CurrentContainerID,omitempty"`
	// The location where the sample was stored at the end of the chain of custody event                                     
	CurrentStorageLocation                                                                      *AbstractStorageLocation     `json:"CurrentStorageLocation,omitempty"`
	// The custodian responsible for this change of custody event                                                            
	// Reference:                                                                                                            
	// Custodian = PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].Custodian                                         
	Custodian                                                                                   *string                      `json:"Custodian,omitempty"`
	// Date for this chain of custody event                                                                                  
	// Reference:                                                                                                            
	// CustodyDate = PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].CustodyDate                                     
	CustodyDate                                                                                 *time.Time                   `json:"CustodyDate,omitempty"`
	// The physical location or organisation where this chain of custody event occurred.                                     
	// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:                                       
	// CustodyEventLocation =                                                                                                
	// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].ContainerLocation                                             
	CustodyEventLocationID                                                                      *string                      `json:"CustodyEventLocationID,omitempty"`
	// The action for this chain of custody event. Enum. See sample action.                                                  
	// Reference:                                                                                                            
	// CustodyActionID = PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].CustodyAction                               
	CustodyEventTypeID                                                                          *string                      `json:"CustodyEventTypeID,omitempty"`
	// The initial sample properties observed in the source container at the start of this chain                             
	// of custody event.                                                                                                     
	InitialSampleProperties                                                                     map[string]interface{}       `json:"InitialSampleProperties,omitempty"`
	// The difference in sample properties observed due to losses incurred while transferring                                
	// between containers during this chain of custody event.                                                                
	LostSampleProperties                                                                        map[string]interface{}       `json:"LostSampleProperties,omitempty"`
	// The name of this 'chain of custody' event.                                                                            
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// The pressure and temperature conditions recorded when the previous sample container is                                
	// opened for the current chain of custody event.                                                                        
	OpeningCondition                                                                            *AbstractPTCondition         `json:"OpeningCondition,omitempty"`
	// The OSDU record ID of the previous container used to hold the sample at the start of the                              
	// chain of custody event.                                                                                               
	// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:                                       
	// PreviousContainerID =                                                                                                 
	// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].PreviousContainer                                             
	PreviousContainerID                                                                         *string                      `json:"PreviousContainerID,omitempty"`
	// The initial physical location where this sample was stored at the start of the chain of                               
	// custody event.                                                                                                        
	PreviousStorageLocation                                                                     *AbstractStorageLocation     `json:"PreviousStorageLocation,omitempty"`
	// The remaining sample properties observed in the target container at the end of this chain                             
	// of custody event.                                                                                                     
	RemainingSampleProperties                                                                   map[string]interface{}       `json:"RemainingSampleProperties,omitempty"`
	// Pertinent information about this object stored alongside other attributes of this object.                             
	// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:                                       
	// Remarks = PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].Remark                                              
	Remarks                                                                                     []AbstractRemark             `json:"Remarks,omitempty"`
	// The OSDU Record ID for the Sample.                                                                                    
	SampleID                                                                                    *string                      `json:"SampleID,omitempty"`
	// The pressure and temperature conditions recorded during the sample transfer operation                                 
	// between containers for the current chain of custody event.                                                            
	// Eg. if ingesting from PRODML Sample object, then the mapping can be seen below:                                       
	// TransferCondition.Pressure =                                                                                          
	// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].TransferPressure                                              
	// TransferCondition.Temperature =                                                                                       
	// PRODML:2.1:FluidSample.FluidSampleChainOfCustodyEvent[].TransferTemperature                                           
	TransferCondition                                                                           *AbstractPTCondition         `json:"TransferCondition,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Information on the sample container used in storing the sample.
type SampleContainer struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SampleContainerData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type SampleContainerData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                        
	ExistenceKind                                                                                *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                 
	ResourceCurationStatus                                                                       *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                         
	ResourceHomeRegionID                                                                         *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                      
	ResourceHostRegionIDs                                                                        []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                       
	ResourceLifecycleStatus                                                                      *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                         
	ResourceSecurityClassification                                                               *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                         
	// organization, agency, system, internal team, or individual. For informational purposes                                 
	// only, the list of sources is not governed.                                                                             
	Source                                                                                       *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                  
	// based on data quality. Clarifications: Since Certified is the highest classification of                                
	// suitable quality, any further change or versioning of a Certified record should be                                     
	// carefully considered and justified. If a Technical Assurance value is not populated then                               
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                               
	// Technical Assurance values are not intended to be used for the identification of a single                              
	// "preferred" or "definitive" record by comparison with other records.                                                   
	TechnicalAssuranceID                                                                         *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                 
	// multiple types or multiple values of the same type.                                                                    
	GeoContexts                                                                                  []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                               
	// should include all the identifiers).                                                                                   
	NameAliases                                                                                  []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                 
	// not appropriate).                                                                                                      
	SpatialLocation                                                                              *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                
	// one or more workflows/personas based on data quality and reviewer's decisions.                                         
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                 
	// further change or versioning of a Certified record should be carefully considered and                                  
	// justified. If a Technical Assurance value is not populated then one can assume the data                                
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                   
	// values are not intended to be used for the identification of a single "preferred" or                                   
	// "definitive" record by comparison with other records.                                                                  
	TechnicalAssurances                                                                          []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                         
	// master-data record's overall suitability for general business consumption based on data                                
	// quality. Clarifications: Since Certified is the highest classification of suitable                                     
	// quality, any further change or versioning of a Certified record should be carefully                                    
	// considered and justified. If a Technical Assurance value is not populated then one can                                 
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                       
	// Technical Assurance values are not intended to be used for the identification of a single                              
	// "preferred" or "definitive" record by comparison with other records.                                                   
	TechnicalAssuranceTypeID                                                                     *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                               
	VersionCreationReason                                                                        *string                      `json:"VersionCreationReason,omitempty"`
	// Volume of the sample container.                                                                                        
	Capacity                                                                                     float64                      `json:"Capacity"`
	// List of certifications performed on the sample container over time.                                                    
	ContainerCertifications                                                                      []ContainerCertification     `json:"ContainerCertifications,omitempty"`
	// This refers to an alternate identifier for the sample container available in a system of                               
	// record external to the OSDU platform and managed by the organization.                                                  
	ContainerIdentifier                                                                          string                       `json:"ContainerIdentifier"`
	// The date the sample container reached end of life and should be taken out of commission.                               
	ExpirationDate                                                                               *time.Time                   `json:"ExpirationDate,omitempty"`
	// The make or manufacturer of the sample container.                                                                      
	ManufacturerID                                                                               *string                      `json:"ManufacturerID,omitempty"`
	// Material used in constructing the sample container.                                                                    
	MaterialConstruction                                                                         *string                      `json:"MaterialConstruction,omitempty"`
	// The model of the sample container as defined by the manufacturer.                                                      
	Model                                                                                        *string                      `json:"Model,omitempty"`
	// The name of the container.                                                                                             
	Name                                                                                         *string                      `json:"Name,omitempty"`
	// This provides the recommended operating conditions (Pressure and Temperature) rating for                               
	// the sample container.                                                                                                  
	OperatingConditionRating                                                                     AbstractPTCondition          `json:"OperatingConditionRating"`
	// The OSDU Record ID for the organization obtained from a reference list.                                                
	OwnerID                                                                                      *string                      `json:"OwnerID,omitempty"`
	// Remarks or comments about this sample container.                                                                       
	Remarks                                                                                      *AbstractRemark              `json:"Remarks,omitempty"`
	// The list of substances, certified by the manufacturer, that the sample container can hold.                             
	SampleContainerServiceTypeIDs                                                                []string                     `json:"SampleContainerServiceTypeIDs"`
	// The type or kind of the sample container used.                                                                         
	SampleContainerTypeID                                                                        *string                      `json:"SampleContainerTypeID,omitempty"`
	// Unique identifier given by manufacturer for the sample container.                                                      
	SerialNumber                                                                                 *string                      `json:"SerialNumber,omitempty"`
	// The date the sample container was commisioned and put in service.                                                      
	StartDate                                                                                    *time.Time                   `json:"StartDate,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// This provides information pertaining to the certification process conducted on a fluid
// sample container object.
type ContainerCertification struct {
	// This is the date of the last inspection performed on the sample container.                           
	// Reference:                                                                                           
	// InspectionDate=PRODML:2.1:FluidSampleContainer.Model.LastInspectionDate                              
	InspectionDate                                                                               *time.Time `json:"InspectionDate,omitempty"`
	// Indicator to determine if the sample container can be transported.                                   
	IsTransportable                                                                              *bool      `json:"IsTransportable,omitempty"`
	// This is the proposed date for the next inspection to be performed on the sample container.           
	NextInspectionDate                                                                           *time.Time `json:"NextInspectionDate,omitempty"`
	// This is the OSDU object identifier for the file or document containing detailed                      
	// information on the certification process performed ascertaining its viability for safe               
	// transportation of the sample.                                                                        
	TransportCertificateDocumentID                                                               *string    `json:"TransportCertificateDocumentID,omitempty"`
	// This is the period or amount of time for which the last inspection or certification                  
	// process is valid.                                                                                    
	ValidityPeriod                                                                               *float64   `json:"ValidityPeriod,omitempty"`
}

// A seismic 2D interpretation set is a collection of logical processed lines and associated
// trace datasets that represent an important and uniform set for interpretation.  It does
// not comprise all of the datasets with a common processing geometry, nor all of the
// lines/datasets from a processing project, nor all of the lines/datasets from an
// acquisition project, because some are not suitable for interpretation.  An interpretation
// survey may include 2D lines and datasets from more than one acquisition or processing
// project.  Consequently, it is not an acquisition survey nor a processing survey.  It is
// not an application project, which is a collection of all the various objects an
// application and user care about for some analysis (seismic, wells, etc.).  It inherits
// properties shared by project entities because it can serve to capture the archiving of a
// master or authorized project activity.  Interpretation objects (horizons) are hung from
// an interpretation project to give context and to derive spatial location based on the
// processing geometry of the associated 2D lines. Trace datasets and seismic horizons are
// associated through LineageAssertion, although a master collection of trace datasets and
// horizons are explicitly related through a child relationship property.
type Seismic2DInterpretationSet struct {
	// The access control tags associated with this entity.                                                                      
	ACL                                                                                          AccessControlList               `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                        
	// derived.                                                                                                                  
	Ancestry                                                                                     *ParentList                     `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                  
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                     
	CreateTime                                                                                   *time.Time                      `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                   
	// System.                                                                                                                   
	CreateUser                                                                                   *string                         `json:"createUser,omitempty"`
	Data                                                                                         *Seismic2DInterpretationSetData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                    
	// version.                                                                                                                  
	ID                                                                                           *string                         `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                              
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                  
	// scheme follows the semantic versioning, https://semver.org/.                                                              
	Kind                                                                                         string                          `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                    
	// legal tags is managed by the Compliance Service.                                                                          
	Legal                                                                                        LegalMetaData                   `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                   
	// definitions.                                                                                                              
	Meta                                                                                         []FrameOfReferenceMetaDataItem  `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                  
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	ModifyTime                                                                                   *time.Time                      `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                
	ModifyUser                                                                                   *string                         `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                   
	// as keys and values.                                                                                                       
	Tags                                                                                         map[string]string               `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                           
	Version                                                                                      *int64                          `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type Seismic2DInterpretationSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// The set of processing geometries comprising the 2D Interpretation Survey (often referred                              
	// to as survey in the context of an interpretation application but not a survey in the                                  
	// context of acquisition).                                                                                              
	SeismicLineGeometries                                                                       []SeismicLineGeometries      `json:"SeismicLineGeometries,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A processing geometry comprising the 2D Interpretation Survey (often referred to as
// survey in the context of an interpretation application but not a survey in the context of
// acquisition).
type SeismicLineGeometries struct {
	// Reference to a 2D processing geometry associated with a particular seismic line used in         
	// interpretation.  Multiple datasets may refer to this geometry and support the                   
	// interpretation.                                                                                 
	SeismicLineGeometryID                                                                      *string `json:"SeismicLineGeometryID,omitempty"`
	// The distinct line name used by interpretation objects (horizons) in the Interpretation          
	// Project, which may differ from the name used in seismic line geometry.  This allows the         
	// line names in the project to be unique within the project even though the names may not         
	// be unique across all the projects that use the same line geometries.  The name used in a        
	// horizon pick is related to the appropriate geometry through this name.                          
	SeismicLineName                                                                            *string `json:"SeismicLineName,omitempty"`
}

// A seismic 3D interpretation survey is a collection of trace datasets with a common bin
// grid that are important for interpretation.  It does not comprise all of the datasets
// with a common bin grid, nor all of the datasets from a processing project, nor all of the
// datasets from an acquisition project, because some are not suitable for interpretation.
// An interpretation survey may include datasets from more than one acquisition or
// processing project.  Consequently, it is not an acquisition survey nor a processing
// survey.  It is not an application project, which is a collection of all the various
// objects an application and user care about for some analysis (seismic, wells, etc.).  It
// inherits properties shared by project entities because it can serve to capture the
// archiving of a master or authorized project activity. Interpretation objects (horizons)
// are hung from an interpretation survey to give context and to derive spatial location
// based on the common bin grid.  Trace datasets and seismic horizons are associated through
// LineageAssertion, although a master collection of trace datasets and horizons are
// explicitly related through a child relationship property.
type Seismic3DInterpretationSet struct {
	// The access control tags associated with this entity.                                                                      
	ACL                                                                                          AccessControlList               `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                        
	// derived.                                                                                                                  
	Ancestry                                                                                     *ParentList                     `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                  
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                     
	CreateTime                                                                                   *time.Time                      `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                   
	// System.                                                                                                                   
	CreateUser                                                                                   *string                         `json:"createUser,omitempty"`
	Data                                                                                         *Seismic3DInterpretationSetData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                    
	// version.                                                                                                                  
	ID                                                                                           *string                         `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                              
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                  
	// scheme follows the semantic versioning, https://semver.org/.                                                              
	Kind                                                                                         string                          `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                    
	// legal tags is managed by the Compliance Service.                                                                          
	Legal                                                                                        LegalMetaData                   `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                   
	// definitions.                                                                                                              
	Meta                                                                                         []FrameOfReferenceMetaDataItem  `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                  
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	ModifyTime                                                                                   *time.Time                      `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                
	ModifyUser                                                                                   *string                         `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                   
	// as keys and values.                                                                                                       
	Tags                                                                                         map[string]string               `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                           
	Version                                                                                      *int64                          `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type Seismic3DInterpretationSetData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// A reference to the Bin Grid that all the associated traces and horizons are based on.                                 
	SeismicBinGridID                                                                            *string                      `json:"SeismicBinGridID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A seismic acquisition project is a type of business project that deploys resources to the
// field to record seismic data.  It may be referred to as a field survey, acquisition
// survey, or field program.  It is not the same as the geometry of the deployed equipment
// (nav), which is a work product component.
type SeismicAcquisitionSurvey struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicAcquisitionSurveyData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type SeismicAcquisitionSurveyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                           
	ContractIDs                                                                                 []string                             `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                           
	Contractors                                                                                 []Contractors                        `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                         
	FundsAuthorizations                                                                         []FundsAuthorizations                `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                 
	Operator                                                                                    *string                              `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                     
	// could reference a separate Persons master data object.                                                                        
	Personnel                                                                                   []PurplePersonnel                    `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                             
	ProjectBeginDate                                                                            *time.Time                           `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                             
	ProjectEndDate                                                                              *time.Time                           `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system.                                                            
	ProjectID                                                                                   *string                              `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                    
	ProjectName                                                                                 *string                              `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                       
	// business identifiers.                                                                                                         
	ProjectNames                                                                                []AbstractAliasNames                 `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                       
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                     
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                      
	// level.                                                                                                                        
	ProjectSpecifications                                                                       []ProjectSpecifications              `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                          
	ProjectStates                                                                               []ProjectStates                      `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                   
	Purpose                                                                                     *string                              `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                          
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                      
	ActivityStates                                                                              []AbstractActivityState              `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                      
	// values.                                                                                                                       
	ActivityTemplateID                                                                          *string                              `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                     
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                       
	// empty.                                                                                                                        
	LastActivityState                                                                           *AbstractActivityState               `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                         
	// objects which are inputs and outputs of the activity.                                                                         
	Parameters                                                                                  []DefaultValueElement                `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                             
	ParentProjectID                                                                             *string                              `json:"ParentProjectID,omitempty"`
	// Acquisition approach used Conventional, Wide Azimuth, Multi Azimuth etc.                                                      
	AcquisitionTypeID                                                                           *string                              `json:"AcquisitionTypeID,omitempty"`
	// The calculated are covered by the survey. This value is calculated during the loading of                                      
	// the survey.                                                                                                                   
	AreaCalculated                                                                              *float64                             `json:"AreaCalculated,omitempty"`
	// The nominal area covered by the survey. This value is usually entered by the end user.                                        
	AreaNominal                                                                                 *float64                             `json:"AreaNominal,omitempty"`
	// DEPRECATED: Use ReceiverConfigurations[].CableCount. Number of receiver arrays (lines).                                       
	CableCount                                                                                  *int64                               `json:"CableCount,omitempty"`
	// DEPRECATED: Use ReceiverConfigurations[].CableLength. Total length of receiver array.                                         
	CableLength                                                                                 *float64                             `json:"CableLength,omitempty"`
	// DEPRECATED: Use ReceiverConfigurations[].CableSpacing. Horizontal distance between                                            
	// receiver arrays.                                                                                                              
	CableSpacingDistance                                                                        *float64                             `json:"CableSpacingDistance,omitempty"`
	// DEPRECATED: Use SourceConfigurations[].EnergySourceTypeID.Seismic Source type. E.g.:                                          
	// Airgun, Vibroseis, Dynamite, Watergun.                                                                                        
	EnergySourceTypeID                                                                          *string                              `json:"EnergySourceTypeID,omitempty"`
	// The number of times a point in the subsurface is sampled.  It measures of the redundancy                                      
	// of common midpoint seismic data.                                                                                              
	FoldCount                                                                                   *int64                               `json:"FoldCount,omitempty"`
	// Horizontal distance between source and last receiver.                                                                         
	MaxOffsetDistance                                                                           *float64                             `json:"MaxOffsetDistance,omitempty"`
	// Horizontal distance between source and first receiver.                                                                        
	MinOffsetDistance                                                                           *float64                             `json:"MinOffsetDistance,omitempty"`
	// Identifies the setting of acquisition (land, marine, transition zone).                                                        
	OperatingEnvironmentID                                                                      *string                              `json:"OperatingEnvironmentID,omitempty"`
	// If populated, this survey is part of a time-lapse survey sequence. It identifies the                                          
	// preceding SeismicAcquisitionSurvey. The first survey in the sequence has an empty or                                          
	// absent PrecedingTimeLapseSurveyID.                                                                                            
	PrecedingTimeLapseSurveyID                                                                  *string                              `json:"PrecedingTimeLapseSurveyID,omitempty"`
	// The seismic receiver configurations used for this acquisition project.                                                        
	ReceiverConfigurations                                                                      []SeismicReceiverConfiguration       `json:"ReceiverConfigurations,omitempty"`
	// Length of record at time of acquisition.                                                                                      
	RecordLength                                                                                *float64                             `json:"RecordLength,omitempty"`
	// Vertical sampling interval of data at time of acquisition.                                                                    
	SampleInterval                                                                              *float64                             `json:"SampleInterval,omitempty"`
	// Reference to the standard values for the general layout of the acquisition.  This is an                                       
	// hierarchical value.  The top value is like 2D, 3D, 4D, Borehole, Passive.  The second                                         
	// value is like NATS, WATS, Brick, Crosswell.  Nodes are separated by forward slash.                                            
	SeismicGeometryTypeID                                                                       *string                              `json:"SeismicGeometryTypeID,omitempty"`
	// Orientation of plane between source and receivers.                                                                            
	ShootingAzimuthAngle                                                                        *float64                             `json:"ShootingAzimuthAngle,omitempty"`
	// DEPRECATED: Use SourceConfigurations[].ShotpointSpacing.  Horizontal distance between                                         
	// shotpoint locations.                                                                                                          
	ShotpointIncrementDistance                                                                  *float64                             `json:"ShotpointIncrementDistance,omitempty"`
	// DEPRECATED: Use SourceConfigurations[].SourceArrayCount. Number of energy sources.                                            
	SourceArrayCount                                                                            *int64                               `json:"SourceArrayCount,omitempty"`
	// DEPRECATED: Use SourceConfigurations[].SourceArraySpacing. Distance between energy                                            
	// Sources.                                                                                                                      
	SourceArraySeparationDistance                                                               *float64                             `json:"SourceArraySeparationDistance,omitempty"`
	// The seismic source configurations used for this acquisition project.                                                          
	SourceConfigurations                                                                        []SeismicSourceConfiguration         `json:"SourceConfigurations,omitempty"`
	// The vertical measurement reference for VSP surveys, which defines the vertical reference                                      
	// datum for the measured depths.                                                                                                
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// DEPRECATED: use VesselNames in SourceConfigurations and ReceiverConfigurations. List of                                       
	// names of the seismic acquisition (source and streamer) vessels used (marine environment                                       
	// only).                                                                                                                        
	VesselNames                                                                                 []string                             `json:"VesselNames,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Parameters characterizing the seismic receiver configuration.
type SeismicReceiverConfiguration struct {
	// Number of receiver arrays (lines).                                                                
	CableCount                                                                                  *int64   `json:"CableCount,omitempty"`
	// Marine seismic cable towing depth below sea surface  (Positive Down).                             
	CableDepth                                                                                  *float64 `json:"CableDepth,omitempty"`
	// Total length of receiver array.                                                                   
	CableLength                                                                                 *float64 `json:"CableLength,omitempty"`
	// Horizontal distance between receiver arrays.                                                      
	CableSpacing                                                                                *float64 `json:"CableSpacing,omitempty"`
	// Number of receivers on a cable.                                                                   
	ReceiverCount                                                                               *int64   `json:"ReceiverCount,omitempty"`
	// Distance between receiver groups on the same cable.                                               
	ReceiverGroupSpacing                                                                        *float64 `json:"ReceiverGroupSpacing,omitempty"`
	// Distance between receivers on same cable.                                                         
	ReceiverSpacingInterval                                                                     *float64 `json:"ReceiverSpacingInterval,omitempty"`
	// The type of receivers, e.g. geophones, hydrophones, ocean bottom seismometers.                    
	ReceiverTypeID                                                                              *string  `json:"ReceiverTypeID,omitempty"`
	// Text remarks regarding the Seismic Receiver configuration.                                        
	Remarks                                                                                     *string  `json:"Remarks,omitempty"`
	// Name of the receiver vessel (may be the same as the source).  In the case of a VSP, this          
	// may be a platform or rig.                                                                         
	VesselName                                                                                  *string  `json:"VesselName,omitempty"`
	// The relationship to the wellbore, in which the receivers are located. Used in conjunction         
	// with VSP acquisition.                                                                             
	WellboreID                                                                                  *string  `json:"WellboreID,omitempty"`
	// Maximum depth of receivers in a wellbore. Used in conjunction with VSP acquisition.               
	WellboreReceiverMaxDepth                                                                    *float64 `json:"WellboreReceiverMaxDepth,omitempty"`
	// Minimum depth of receivers in a wellbore. Used in conjunction with VSP acquisition.               
	WellboreReceiverMinDepth                                                                    *float64 `json:"WellboreReceiverMinDepth,omitempty"`
}

// Parameters characterizing the seismic source configuration.
type SeismicSourceConfiguration struct {
	// Seismic Source type. E.g.: Airgun, Vibroseis, Dynamite,Watergun.                                 
	EnergySourceTypeID                                                                         *string  `json:"EnergySourceTypeID,omitempty"`
	// Text remarks regarding the Seismic source configuration.                                         
	Remarks                                                                                    *string  `json:"Remarks,omitempty"`
	// Horizontal distance between shotpoint locations.                                                 
	ShotpointSpacing                                                                           *float64 `json:"ShotpointSpacing,omitempty"`
	// Number of energy sources.                                                                        
	SourceArrayCount                                                                           *int64   `json:"SourceArrayCount,omitempty"`
	// Depth of the energy source.                                                                      
	SourceArrayDepth                                                                           *float64 `json:"SourceArrayDepth,omitempty"`
	// Maximum depth of receivers in a wellbore. Used in conjunction with VSP acquisition.              
	SourceArrayMaxDepth                                                                        *float64 `json:"SourceArrayMaxDepth,omitempty"`
	// Minimum depth of Sources in a wellbore. Used in conjunction with VSP acquisition.                
	SourceArrayMinDepth                                                                        *float64 `json:"SourceArrayMinDepth,omitempty"`
	// Distance between energy sources.                                                                 
	SourceArraySpacing                                                                         *float64 `json:"SourceArraySpacing,omitempty"`
	// Maximum frequency of the vibroseis source.                                                       
	SourceArraySweepFreqMax                                                                    *float64 `json:"SourceArraySweepFreqMax,omitempty"`
	// Minimum frequency of the vibroseis source.                                                       
	SourceArraySweepFreqMin                                                                    *float64 `json:"SourceArraySweepFreqMin,omitempty"`
	// Length of the vibroseis source sweep.                                                            
	SourceArraySweepLength                                                                     *float64 `json:"SourceArraySweepLength,omitempty"`
	// Volume of the energy source.                                                                     
	SourceArrayVolume                                                                          *float64 `json:"SourceArrayVolume,omitempty"`
	// The relationship to the wellbore, in which the source or sources are located.                    
	SourceWellboreID                                                                           *string  `json:"SourceWellboreID,omitempty"`
	// Name of the source vessel (may be the same as the receiver).  In the case of a VSP, this         
	// may be a platform or rig.                                                                        
	VesselName                                                                                 *string  `json:"VesselName,omitempty"`
}

// A seismic processing project is a type of business project which manages the creation of
// processed seismic work products. It is not the same as the geometry of the processed
// traces (binning or bin grid), which is a work product component, although it typically
// defines a single binning.  A processing project may merge data from multiple field
// surveys, so it is not required to be equated to a single field survey.  Original
// processing and re-processing activities generate separate and independent processing
// projects.
type SeismicProcessingProject struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SeismicProcessingProjectData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type SeismicProcessingProjectData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                           
	// classification associated to the legal.legaltags[] is evaluated by platform services                                  
	// instead. Previously:  Classifies the security level of the resource.                                                  
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// For 3D projects, BinGridID relates to the primary bin grid geometry for the processing;                               
	// for 3D merge projects, it relates to the final (re-)projection and re-binning geometry.                               
	BinGridID                                                                                   *string                      `json:"BinGridID,omitempty"`
	// List of seismic acquisition projects (surveys) that originated the underlying data used                               
	// in Processing Project.  Trace data work product components have an explicit child                                     
	// relationship.  Other affiliated objects may use Lineage.                                                              
	SeismicAcquisitionSurveys                                                                   []string                     `json:"SeismicAcquisitionSurveys,omitempty"`
	// For 2D seismic processing projects, this property references the definitive                                           
	// SeismicLineGeometry entities associated with the project. One or more 2D seismic lines                                
	// may be included.                                                                                                      
	SeismicLineGeometryIDs                                                                      []string                     `json:"SeismicLineGeometryIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A generic storage facility for e.g., core and rock or fluid samples, seismic tapes, etc.
type StorageFacility struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *StorageFacilityData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type StorageFacilityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                           
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                       
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	CurrentOperatorID                                                                           *string                         `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                               
	DataSourceOrganisationID                                                                    *string                         `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                         
	FacilityDescription                                                                         *string                         `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                           
	FacilityEvents                                                                              []AbstractFacilityEvent         `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                  
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                 
	// If used, the "Source" property should identify that source system.                                                       
	FacilityID                                                                                  *string                         `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                    
	FacilityName                                                                                *string                         `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                     
	// which this facility is/has been known.                                                                                   
	FacilityNameAliases                                                                         []AbstractAliasNames            `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                   
	FacilityOperators                                                                           []AbstractFacilityOperator      `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                      
	// permit number, rig name etc.                                                                                             
	FacilitySpecifications                                                                      []AbstractFacilitySpecification `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                          
	FacilityStates                                                                              []AbstractFacilityState         `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                      
	FacilityTypeID                                                                              *string                         `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                         
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	InitialOperatorID                                                                           *string                         `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                
	OperatingEnvironmentID                                                                      *string                         `json:"OperatingEnvironmentID,omitempty"`
	// A string holding the complete address.                                                                                   
	Address                                                                                     *string                         `json:"Address,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// The plan for obtaining directional survey data by survey sections, acquired during a
// drilling campaign or later post-drilling work.
type SurveyProgram struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *SurveyProgramData             `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type SurveyProgramData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                           
	ContractIDs                                                                                 []string                             `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                           
	Contractors                                                                                 []Contractors                        `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                         
	FundsAuthorizations                                                                         []FundsAuthorizations                `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                 
	Operator                                                                                    *string                              `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                     
	// could reference a separate Persons master data object.                                                                        
	Personnel                                                                                   []PurplePersonnel                    `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                             
	ProjectBeginDate                                                                            *time.Time                           `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                             
	ProjectEndDate                                                                              *time.Time                           `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system.                                                            
	ProjectID                                                                                   *string                              `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                    
	ProjectName                                                                                 *string                              `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                       
	// business identifiers.                                                                                                         
	ProjectNames                                                                                []AbstractAliasNames                 `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                       
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                     
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                      
	// level.                                                                                                                        
	ProjectSpecifications                                                                       []ProjectSpecifications              `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                          
	ProjectStates                                                                               []ProjectStates                      `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                   
	Purpose                                                                                     *string                              `json:"Purpose,omitempty"`
	// Name of engineer.                                                                                                             
	Engineer                                                                                    *string                              `json:"Engineer,omitempty"`
	// Survey section object.                                                                                                        
	SurveySections                                                                              []SurveySection                      `json:"SurveySections"`
	// References an entry in the VerticalMeasurements array of the Rig, Well or Wellbore                                            
	// identified by VerticalReferenceEntityID or a standalone vertical reference which defines                                      
	// the vertical reference datum for all measured depths of the SurveyProgram record. For                                         
	// planned SurveyPrograms, this property may be absent; then depths are relative to Planned                                      
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds                                       
	// the depth reference in data.VerticalMeasurement.                                                                              
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Reference to the Wellbore                                                                                                     
	WellboreID                                                                                  string                               `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Description of the Survey Section Component
type SurveySection struct {
	// Comments and remarks.                                                                            
	Comments                                                                                   *string  `json:"Comments,omitempty"`
	// Hole measured depth at which the survey run will end/ended. Depth relative to Planned            
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds          
	// the depth reference in data.VerticalMeasurement.                                                 
	EndMeasuredDepth                                                                           *float64 `json:"EndMeasuredDepth,omitempty"`
	// Error model used to calculate ellipses of uncertainty.                                           
	ErrorModel                                                                                 *string  `json:"ErrorModel,omitempty"`
	// Maximum allowable depth frequency for survey stations for this survey run.                       
	FrequencyMX                                                                                *float64 `json:"FrequencyMx,omitempty"`
	// Normally true, higher index trajectory takes precedence over overlapping section of              
	// previous trajectory.  Values are "true" (or "1") and "false" (or "0").                           
	IsOverwrite                                                                                *bool    `json:"IsOverwrite,omitempty"`
	// Name of survey program section.                                                                  
	Name                                                                                       *string  `json:"Name,omitempty"`
	// Order in which program sections will be executed / were executed.                                
	Sequence                                                                                   float64  `json:"Sequence"`
	// Hole measured depth at which the survey run will begin/began. Depth relative to Planned          
	// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds          
	// the depth reference in data.VerticalMeasurement.                                                 
	StartMeasuredDepth                                                                         *float64 `json:"StartMeasuredDepth,omitempty"`
	// Company who will run / has run survey tool.                                                      
	SurveyCompanyID                                                                            *string  `json:"SurveyCompanyID,omitempty"`
	// The item state for the data object.                                                              
	SurveySectionExistenceKind                                                                 string   `json:"SurveySectionExistenceKind"`
	// Name of survey tool, as defined by the manufacturer, to be used / used for this section.         
	SurveyToolName                                                                             *string  `json:"SurveyToolName,omitempty"`
	// Standardized Type of tool used.                                                                  
	SurveyToolTypeID                                                                           *string  `json:"SurveyToolTypeID,omitempty"`
	// Parent Wellbore Identifier.                                                                      
	WellboreID                                                                                 *string  `json:"WellboreID,omitempty"`
	// ID of the WellboreTrajectory that the Survey Program is associated to, e.g., for                 
	// compiling a Definitive Survey from Parts.                                                        
	WellboreTrajectoryID                                                                       *string  `json:"WellboreTrajectoryID,omitempty"`
}

// Well Tubular data contains information on the tubular assemblies and their components for
// the well, wellbore, or wellbore completion (as appropriate). Tubulars can be tubing,
// casing or liners or other related equipment which is installed into the well. Tubulars
// can also be equipment which is lowered into the well in the context of drilling, which is
// then pulled back out e.g. a drillstring or workstring.
type TubularAssembly struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularAssemblyData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type TubularAssemblyData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// Used to describe if it belongs to a RunActivity or to a PullActivity                                                          
	ActivityTypeID                                                                              *string                              `json:"ActivityTypeID,omitempty"`
	// Used to describe the reason of Activity - such as cut/pull, pulling,…                                                         
	ActivityTypeReasonDescription                                                               *string                              `json:"ActivityTypeReasonDescription,omitempty"`
	// Type of Artificial Lift supported by the TubularAssembly where applicable E.g. could be                                       
	// "Surface Pump" / "Submersible Pump" / "Gas Lift", etc                                                                         
	ArtificialLiftTypeID                                                                        *string                              `json:"ArtificialLiftTypeID,omitempty"`
	// The measured depth at the base (bottom) of the Tubular Assembly                                                               
	AssemblyBaseMD                                                                              *float64                             `json:"AssemblyBaseMD,omitempty"`
	// True Vertical Depth of the base of the Assembly                                                                               
	AssemblyBaseReportedTVD                                                                     *float64                             `json:"AssemblyBaseReportedTVD,omitempty"`
	// The measured depth at the top of the Tubular Assembly                                                                         
	AssemblyTopMD                                                                               *float64                             `json:"AssemblyTopMD,omitempty"`
	// True Vertical Depth of the top of the Assembly                                                                                
	AssemblyTopReportedTVD                                                                      *float64                             `json:"AssemblyTopReportedTVD,omitempty"`
	// Hours Circulated before running Assembly                                                                                      
	CirculatedHours                                                                             *float64                             `json:"CirculatedHours,omitempty"`
	// Tubular Running Contractor                                                                                                    
	ContractorID                                                                                *string                              `json:"ContractorID,omitempty"`
	// The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per                                      
	// specifications. The drift diameter is used by the well planner to determine what size                                         
	// tools or casing strings can later be run through the casing, whereas the nominal inside                                       
	// diameter is used for fluid volume calculations such as mud circulating times and cement                                       
	// slurry placement calculations. Note that the nominal inside diameter is not the same as                                       
	// the drift diameter but is always slightly larger.                                                                             
	DriftDiameter                                                                               *float64                             `json:"DriftDiameter,omitempty"`
	// Estimated Weight Below Jar                                                                                                    
	EstimatedWeightBelowJar                                                                     *float64                             `json:"EstimatedWeightBelowJar,omitempty"`
	// Density of Fluid Behind Assembly                                                                                              
	FluidBehindDensity                                                                          *float64                             `json:"FluidBehindDensity,omitempty"`
	// Type of fluid behind (outside) assembly                                                                                       
	FluidBehindTypeID                                                                           *string                              `json:"FluidBehindTypeID,omitempty"`
	// Fluid Lost Volume when running assembly in hole                                                                               
	FluidLostVolume                                                                             *float64                             `json:"FluidLostVolume,omitempty"`
	// Maximum Hole Angle                                                                                                            
	HoleAngleMax                                                                                *float64                             `json:"HoleAngleMax,omitempty"`
	// Date/time Assembly started to be run in hole                                                                                  
	InHoleDate                                                                                  *time.Time                           `json:"InHoleDate,omitempty"`
	// Weight of Assembly in Slips                                                                                                   
	InSlipsWeight                                                                               *float64                             `json:"InSlipsWeight,omitempty"`
	// Is Fluid Lost                                                                                                                 
	IsFluidLost                                                                                 *bool                                `json:"IsFluidLost,omitempty"`
	// Indicates if the Tubular Assembly is currently downhole.                                                                      
	IsInstalled                                                                                 *bool                                `json:"IsInstalled,omitempty"`
	// True if the assembly is a mixed string, else false. True where the Tubular Assembly is                                        
	// made up of joints with different Diameters, Weights, Grades, Connection, Tensile                                              
	// Strengths, Collapse Resistance or  Yield Strengths.                                                                           
	IsMixedString                                                                               *bool                                `json:"IsMixedString,omitempty"`
	// Is Parallel/Dual Assembly                                                                                                     
	IsParallel                                                                                  *bool                                `json:"IsParallel,omitempty"`
	// Date/time assembly was set/landed                                                                                             
	LandedDate                                                                                  *time.Time                           `json:"LandedDate,omitempty"`
	// Depth Adjustment for use in Landed Depth calculation. Set MD = Top MD + Assembly Length +                                     
	// Depth Adjustment. Note that Depth Adjustment can be positive or negative length.                                              
	LandedDepthAdjustment                                                                       *float64                             `json:"LandedDepthAdjustment,omitempty"`
	// Weight of Assembly when Landed                                                                                                
	LandedWeight                                                                                *float64                             `json:"LandedWeight,omitempty"`
	// This reference table describes the type of liner used in the borehole where applicable.                                       
	// For example, slotted, gravel packed or pre-perforated etc.                                                                    
	LinerTypeID                                                                                 *string                              `json:"LinerTypeID,omitempty"`
	// Maximum Outer Diameter                                                                                                        
	MaximumOuterDiameter                                                                        *float64                             `json:"MaximumOuterDiameter,omitempty"`
	// Maximum Outer Diameter Measured Depth                                                                                         
	MaximumOuterDiameterMD                                                                      *float64                             `json:"MaximumOuterDiameterMD,omitempty"`
	// This is the minimum inner diameter of the whole Tubular Assembly.                                                             
	MinimumInnerDiameter                                                                        *float64                             `json:"MinimumInnerDiameter,omitempty"`
	// The name of the Tubular Assembly.                                                                                             
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Open Hole Size/Diameter behind Assembly                                                                                       
	OpenHoleDiameter                                                                            *float64                             `json:"OpenHoleDiameter,omitempty"`
	// Optional - Identifier of the parent assembly (in case of side-track, multi-nesting,…) -                                       
	// The Concentric Tubular model is used to identify the Assembly that an Assembly sits                                           
	// inside e.g. Surface Casing set inside Conductor, Tubing set inside Production Casing, a                                       
	// Bumper Spring set inside a Production Tubing Profile Nipple, Liner set inside Casing,                                         
	// etc. This is needed to enable a Digital Well Sketch application to understand                                                 
	// relationships between Assemblies including those in parent Wellbores.                                                         
	ParentAssemblyID                                                                            *string                              `json:"ParentAssemblyID,omitempty"`
	// Identifier of the Wellbore the Assembly is installed into or run in. Note: it may not be                                      
	// same wellbore that current assembly is installed into.                                                                        
	ParentWellboreID                                                                            *string                              `json:"ParentWellboreID,omitempty"`
	// Diameter of the Pilot Hole (drillstrings)                                                                                     
	PilotHoleSize                                                                               *float64                             `json:"PilotHoleSize,omitempty"`
	// The distance that the Tubular Assembly has penetrated below the surface of the sea floor.                                     
	SeaFloorPenetrationLength                                                                   *float64                             `json:"SeaFloorPenetrationLength,omitempty"`
	// Descriptor for Assembly, e.g. Production, Surface, Conductor, Intermediate, Drilling                                          
	StringClassID                                                                               *string                              `json:"StringClassID,omitempty"`
	// The Measured Depth that the assembly is suspended from. This  'point' is typically the                                        
	// Measured Depth of the top of the assembly e.g. Hanger though with PBRs the Suspension                                         
	// Point may not be the top.                                                                                                     
	SuspensionPointMD                                                                           *float64                             `json:"SuspensionPointMD,omitempty"`
	// Tagged Measured Depth comparison to estimated Landed Depth                                                                    
	TaggedMD                                                                                    *float64                             `json:"TaggedMD,omitempty"`
	// Nominal size (diameter) describing the whole assembly, e.g. 9.625", 12.25                                                     
	TubularAssemblyNominalSize                                                                  *float64                             `json:"TubularAssemblyNominalSize,omitempty"`
	// Sequence of the TubularAssembly (Typically BHA sequence or simply BHA #)                                                      
	TubularAssemblyNumber                                                                       *int64                               `json:"TubularAssemblyNumber,omitempty"`
	// The full record of historical and current states of the Assembly. The current active                                          
	// state is recorded in TubularAssemblyStatus.                                                                                   
	TubularAssemblyStates                                                                       []TubularAssemblyStateElement        `json:"TubularAssemblyStates,omitempty"`
	// Reflects the current status of the Assembly - as 'installed', 'pulled', 'planned',... -                                       
	// Applicable to tubing/completions as opposed to drillstrings. Historical states are                                            
	// recorded in TubularAssemblyStates.                                                                                            
	TubularAssemblyStatus                                                                       *TubularAssemblyStatusClass          `json:"TubularAssemblyStatus,omitempty"`
	// Total Length of the whole assembly.                                                                                           
	TubularAssemblyTotalLength                                                                  *float64                             `json:"TubularAssemblyTotalLength,omitempty"`
	// Type of tubular assembly.                                                                                                     
	TubularAssemblyTypeID                                                                       *string                              `json:"TubularAssemblyTypeID,omitempty"`
	// Defines whether the sequence of child tubular components runs either top to bottom, or                                        
	// bottom to top.                                                                                                                
	TubularDirectionID                                                                          *string                              `json:"TubularDirectionID,omitempty"`
	// Either a self-contained vertical reference for the depths in this TubularAssembly or a                                        
	// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the                                           
	// entity defined by VerticalReferenceEntityID e.g. the parent Well.                                                             
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Reflects the current status of the Assembly - as 'installed', 'pulled', 'planned',... -
// Applicable to tubing/completions as opposed to drillstrings. Historical states are
// recorded in TubularAssemblyStates.
type TubularAssemblyStateElement struct {
	// Date the status has been established.                                                     
	Date                                                                              *time.Time `json:"Date,omitempty"`
	// Used to describe the reason of Activity - such as installed, cut/pull, pulling.           
	Description                                                                       *string    `json:"Description,omitempty"`
	// The relationship to the  reference value status type.                                     
	StatusTypeID                                                                      *string    `json:"StatusTypeID,omitempty"`
}

// Reflects the current status of the Assembly - as 'installed', 'pulled', 'planned',... -
// Applicable to tubing/completions as opposed to drillstrings. Historical states are
// recorded in TubularAssemblyStates.
type TubularAssemblyStatusClass struct {
	// Date the status has been established.                                                     
	Date                                                                              *time.Time `json:"Date,omitempty"`
	// Used to describe the reason of Activity - such as installed, cut/pull, pulling.           
	Description                                                                       *string    `json:"Description,omitempty"`
	// The relationship to the  reference value status type.                                     
	StatusTypeID                                                                      *string    `json:"StatusTypeID,omitempty"`
}

// Well Tubular data contains information on the tubular assemblies and their components for
// the well, wellbore, or wellbore completion (as appropriate). The tubulars can be tubing,
// casing or liners or other related equipment which is installed into the well. Tubulars
// can also be equipment which is lowered into the well in the context of drilling, which is
// then pulled back out.
type TubularComponent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularComponentData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type TubularComponentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                                   
	// classification associated to the legal.legaltags[] is evaluated by platform services                                          
	// instead. Previously:  Classifies the security level of the resource.                                                          
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// Axial Load Capacity of component                                                                                              
	AxialLoadCapacity                                                                           *float64                             `json:"AxialLoadCapacity,omitempty"`
	// Bottom Connection Outer Length                                                                                                
	BotConnLength                                                                               *float64                             `json:"BotConnLength,omitempty"`
	// Bottom Connection Outer Diameter                                                                                              
	BotConnOD                                                                                   *float64                             `json:"BotConnOD,omitempty"`
	// Burst Pressure                                                                                                                
	BurstPressure                                                                               *float64                             `json:"BurstPressure,omitempty"`
	// Closed End Displacement volume/length                                                                                         
	ClosedEndDisplacement                                                                       *float64                             `json:"ClosedEndDisplacement,omitempty"`
	// Collapse Pressure                                                                                                             
	CollapsePressure                                                                            *float64                             `json:"CollapsePressure,omitempty"`
	// Top and/or Bottom Connection information                                                                                      
	Connections                                                                                 []AbstractTubularComponentConnection `json:"Connections,omitempty"`
	// Density                                                                                                                       
	Density                                                                                     *float64                             `json:"Density,omitempty"`
	// The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per                                      
	// specifications. Note that the nominal inside diameter is not the same as the drift                                            
	// diameter but is always slightly larger. The drift diameter is used by the well planner to                                     
	// determine what size tools or casing strings can later be run through the casing, whereas                                      
	// the nominal inside diameter is used for fluid volume calculations such as mud circulating                                     
	// times and cement slurry placement calculations.                                                                               
	DriftDiameter                                                                               *float64                             `json:"DriftDiameter,omitempty"`
	// Nominal inner diameter 'ID' of the component.                                                                                 
	InnerDiameter                                                                               *float64                             `json:"InnerDiameter,omitempty"`
	// Internal Reference name/description                                                                                           
	InternalReference                                                                           *string                              `json:"InternalReference,omitempty"`
	// Is Radioactive                                                                                                                
	IsRadioActive                                                                               *bool                                `json:"IsRadioActive,omitempty"`
	// Is thread lock used when making up the pipe?                                                                                  
	IsThreadLockUsed                                                                            *bool                                `json:"IsThreadLockUsed,omitempty"`
	// Average Joint Length                                                                                                          
	JointLengthAverage                                                                          *float64                             `json:"JointLengthAverage,omitempty"`
	// Linear Capacity volume/length inside component                                                                                
	LinearCapacity                                                                              *float64                             `json:"LinearCapacity,omitempty"`
	// Actual Make Up Torque                                                                                                         
	MakeUpTorqueAct                                                                             *float64                             `json:"MakeUpTorqueAct,omitempty"`
	// Maximum Make Up Torque                                                                                                        
	MakeUpTorqueMax                                                                             *float64                             `json:"MakeUpTorqueMax,omitempty"`
	// Minimum Make Up Torque                                                                                                        
	MakeUpTorqueMin                                                                             *float64                             `json:"MakeUpTorqueMin,omitempty"`
	// Optimum Make Up Torque                                                                                                        
	MakeUpTorqueOpt                                                                             *float64                             `json:"MakeUpTorqueOpt,omitempty"`
	// Unique identifier for the manufacturer of this equipment.                                                                     
	ManufacturerID                                                                              *string                              `json:"ManufacturerID,omitempty"`
	// This is the maximum hard outer diameter of the component.                                                                     
	MaximumOuterDiameter                                                                        *float64                             `json:"MaximumOuterDiameter,omitempty"`
	// Name of the component Model as defined per the operating company                                                              
	Model                                                                                       *string                              `json:"Model,omitempty"`
	// The name of this tubular component.                                                                                           
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Description of the Size (ID) of the Nozzle used in the Tubular Component                                                      
	Nozzles                                                                                     []Nozzle                             `json:"Nozzles,omitempty"`
	// Number of Joints per pipe section                                                                                             
	NumJoints                                                                                   *int64                               `json:"NumJoints,omitempty"`
	// Outside Coupling Length                                                                                                       
	OutsideCouplingLength                                                                       *float64                             `json:"OutsideCouplingLength,omitempty"`
	// The depth the packer equipment was set to seal the casing or tubing.                                                          
	PackerSetDepthTVD                                                                           *float64                             `json:"PackerSetDepthTVD,omitempty"`
	// Identifier of the Assembly the component is part of.                                                                          
	ParentAssemblyID                                                                            *string                              `json:"ParentAssemblyID,omitempty"`
	// Identifier of the wellbore the Component is installed/run into.                                                               
	ParentWellboreID                                                                            *string                              `json:"ParentWellboreID,omitempty"`
	// Vendor part number                                                                                                            
	PartNumber                                                                                  *string                              `json:"PartNumber,omitempty"`
	// Size/diameter of the Pilot Hole when assembly is a drillstring                                                                
	PilotHoleSize                                                                               *float64                             `json:"PilotHoleSize,omitempty"`
	// Poissons Ratio                                                                                                                
	PoissonsRatio                                                                               *float64                             `json:"PoissonsRatio,omitempty"`
	// Identifier of the Section Type.                                                                                               
	SectionTypeID                                                                               *string                              `json:"SectionTypeID,omitempty"`
	// Description of the type of Sensor(s) for the Tubular Components e.g. for MWD/LWD tools                                        
	Sensors                                                                                     []Sensor                             `json:"Sensors,omitempty"`
	// Serial Number of the component as provided by the manufacturer and/or the supplier                                            
	SerialNumber                                                                                *string                              `json:"SerialNumber,omitempty"`
	// True vertical depth of the casing/tubing shoe measured from the surface.                                                      
	ShoeDepthTVD                                                                                *float64                             `json:"ShoeDepthTVD,omitempty"`
	// Unique identifier for the supplier of this equipment.                                                                         
	SupplierID                                                                                  *string                              `json:"SupplierID,omitempty"`
	// Top Connection Outer Length                                                                                                   
	TopConnLength                                                                               *float64                             `json:"TopConnLength,omitempty"`
	// Top Connection Outer Diameter                                                                                                 
	TopConnOD                                                                                   *float64                             `json:"TopConnOD,omitempty"`
	// TFA of all Nozzles                                                                                                            
	TotalFlowArea                                                                               *float64                             `json:"TotalFlowArea,omitempty"`
	// The installed measured depth of the base of the specific component                                                            
	TubularComponentBaseMD                                                                      *float64                             `json:"TubularComponentBaseMD,omitempty"`
	// True Vertical Depth of the base of the component measured from the Wellhead                                                   
	TubularComponentBaseReportedTVD                                                             *float64                             `json:"TubularComponentBaseReportedTVD,omitempty"`
	// Identifier of the Bottom Connection Type                                                                                      
	TubularComponentBottomConnectionTypeID                                                      *string                              `json:"TubularComponentBottomConnectionTypeID,omitempty"`
	// Box / Pin configuration Identifier                                                                                            
	TubularComponentBoxPinConfigID                                                              *string                              `json:"TubularComponentBoxPinConfigID,omitempty"`
	// Total Length of the component(s)                                                                                              
	TubularComponentLength                                                                      *float64                             `json:"TubularComponentLength,omitempty"`
	// Specifies the material type constituting the component.                                                                       
	TubularComponentMaterialTypeID                                                              *string                              `json:"TubularComponentMaterialTypeID,omitempty"`
	// Nominal size (outer diameter 'OD') of the component, e.g. 9.625", 12.25"                                                      
	TubularComponentNominalSize                                                                 *float64                             `json:"TubularComponentNominalSize,omitempty"`
	// Nominal size description e.g. 8-1/2" x 9-5/8"                                                                                 
	TubularComponentNominalSizeDescription                                                      *string                              `json:"TubularComponentNominalSizeDescription,omitempty"`
	// Nominal weight of the component.                                                                                              
	TubularComponentNominalWeight                                                               *float64                             `json:"TubularComponentNominalWeight,omitempty"`
	// The sequence within which the components entered the hole. That is, a sequence number of                                      
	// 1 entered first, 2 entered 2nd, etc.                                                                                          
	TubularComponentSequence                                                                    *int64                               `json:"TubularComponentSequence,omitempty"`
	// Identifier of the Top Connection Type                                                                                         
	TubularComponentTopConnectionTypeID                                                         *string                              `json:"TubularComponentTopConnectionTypeID,omitempty"`
	// The installed measured depth of the top of the specific component                                                             
	TubularComponentTopMD                                                                       *float64                             `json:"TubularComponentTopMD,omitempty"`
	// True Vertical Depth of the top of the component measured from the Wellhead                                                    
	TubularComponentTopReportedTVD                                                              *float64                             `json:"TubularComponentTopReportedTVD,omitempty"`
	// Id of tubing grade - eg. the tensile strength of the tubing material. A system of                                             
	// classifying the material specifications for steel alloys used in the manufacture of                                           
	// tubing.                                                                                                                       
	TubularComponentTubingGradeID                                                               *string                              `json:"TubularComponentTubingGradeID,omitempty"`
	// The tensile strength of the tubing material. A system of classifying the material                                             
	// specifications for steel alloys used in the manufacture of tubing.                                                            
	TubularComponentTubingGradeStrength                                                         *float64                             `json:"TubularComponentTubingGradeStrength,omitempty"`
	// The axial load required to yield the pipe.                                                                                    
	TubularComponentTubingStrength                                                              *float64                             `json:"TubularComponentTubingStrength,omitempty"`
	// Specifies the types of components that can be used in a tubular string. These are used to                                     
	// specify the type of component and multiple components are used to define a tubular string                                     
	// (Tubular).                                                                                                                    
	TubularComponentTypeID                                                                      *string                              `json:"TubularComponentTypeID,omitempty"`
	// Vendor number or other reference identifier                                                                                   
	VendorNumber                                                                                *string                              `json:"VendorNumber,omitempty"`
	// Youngs Modulus of Elasticity                                                                                                  
	YoungsModulus                                                                               *float64                             `json:"YoungsModulus,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// Tubular Connection specific properties. Based on WITSML Tubular  Component 'Connection'
// ComplexType.
type AbstractTubularComponentConnection struct {
	// Critical Cross Section Area (for bending stiffness ratio).         
	CriticalCrossSectionArea                                     *float64 `json:"CriticalCrossSectionArea,omitempty"`
	// Inside diameter (ID) of the connection.                            
	CXNInnerDiameter                                             *float64 `json:"CXNInnerDiameter,omitempty"`
	// Outside diameter (OD) of the body of the connection.               
	CXNOuterDiameter                                             *float64 `json:"CXNOuterDiameter,omitempty"`
	// Internal length of the connection.                                 
	InsideConnectionLength                                       *float64 `json:"InsideConnectionLength,omitempty"`
	// Leak Pressure                                                      
	LeakPressure                                                 *float64 `json:"LeakPressure,omitempty"`
	// Make Up Torque                                                     
	MakeUpTorque                                                 *float64 `json:"MakeUpTorque,omitempty"`
	// External length of the connection.                                 
	OutsideConnectionLength                                      *float64 `json:"OutsideConnectionLength,omitempty"`
	// Position of connection                                             
	PositionID                                                   *string  `json:"PositionID,omitempty"`
	// Thread size/diameter.                                              
	ThreadSize                                                   *float64 `json:"ThreadSize,omitempty"`
	// Thread/Connection Type                                             
	ThreadTypeID                                                 *string  `json:"ThreadTypeID,omitempty"`
	// Tensile yield stress of the connection                             
	YieldStress                                                  *float64 `json:"YieldStress,omitempty"`
	// Torque limit for the connection                                    
	YieldTorque                                                  *float64 `json:"YieldTorque,omitempty"`
}

// number and size of nozzles / jets in a Tubular Component
type Nozzle struct {
	// Inside Diameter of the nozzle                                      
	DiameterInside                                                float64 `json:"DiameterInside"`
	// Total length of the nozzle                                         
	Length                                                        float64 `json:"Length"`
	// Number of Nozzles installed in component                           
	NozzleCount                                                   int64   `json:"NozzleCount"`
	// Unique identifier for this instance of Nozzle                      
	NozzleID                                                      string  `json:"NozzleID"`
	// Describes the Nozzle Type (such as extended; normal; blank)        
	NozzleTypeID                                                  string  `json:"NozzleTypeID"`
	// Nozzle Orientation                                                 
	Orientation                                                   float64 `json:"Orientation"`
}

// Tubular Sensor Component Schema
type Sensor struct {
	// Additional comments and remarks                                       
	Comments                                                        *string  `json:"Comments,omitempty"`
	// Effective offset of measurement of sensor                             
	MeasurementOffset                                               *string  `json:"MeasurementOffset,omitempty"`
	// Sensor offset from the bottom of the component                        
	OffsetBottom                                                    *float64 `json:"OffsetBottom,omitempty"`
	// Specifies the type of sensor in a tubular string.                     
	SensorMeasurementType                                           *string  `json:"SensorMeasurementType,omitempty"`
	// Unique identifier for this Instance of Sensor log                     
	SensorTypeID                                                    string   `json:"SensorTypeID"`
	// An array of well log generic tool types used in this Log Run.         
	ToolClassIDs                                                    []string `json:"ToolClassIDs,omitempty"`
	// An array of PWLS tool mnemonics used in this Log Run.                 
	ToolCodeIDs                                                     []string `json:"ToolCodeIDs,omitempty"`
}

// An External Component aka Jewellery is any equipment attached to the outside of a tubular
// assembly. Examples include Casing Centralizers or Scratchers, Friction Reduction Devices
// for a Drillstring, Clamps for Umbilical Lines.
type TubularExternalComponent struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularExternalComponentData  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type TubularExternalComponentData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Attach Mechanism                                                                                                      
	AttachMechanismID                                                                           *string                      `json:"AttachMechanismID,omitempty"`
	// Attach pattern describing placement frequency                                                                         
	AttachPatternID                                                                             *string                      `json:"AttachPatternID,omitempty"`
	// Base of the Measured Depth interval where the External Components are installed                                       
	BaseMeasuredDepth                                                                           *float64                     `json:"BaseMeasuredDepth,omitempty"`
	// External Component Description                                                                                        
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// Identifier of the External Component Type                                                                             
	ExternalComponentTypeID                                                                     *string                      `json:"ExternalComponentTypeID,omitempty"`
	// External component length of each item                                                                                
	Length                                                                                      *float64                     `json:"Length,omitempty"`
	// The name of this external tubular component.                                                                          
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Number of Items                                                                                                       
	NumberOfItems                                                                               *int64                       `json:"NumberOfItems,omitempty"`
	// The outer diameter of the external component.                                                                         
	OuterDiameter                                                                               *float64                     `json:"OuterDiameter,omitempty"`
	// Identifier of the Parent Tubular Assembly                                                                             
	ParentAssemblyID                                                                            string                       `json:"ParentAssemblyID"`
	// Identifier of the Parent Wellbore                                                                                     
	ParentWellboreID                                                                            string                       `json:"ParentWellboreID"`
	// Any additional comments/remarks                                                                                       
	Remark                                                                                      *string                      `json:"Remark,omitempty"`
	// External Components spacing (length)                                                                                  
	Spacing                                                                                     *float64                     `json:"Spacing,omitempty"`
	// Top of the Measured Depth interval where the External Components are installed                                        
	TopMeasuredDepth                                                                            *float64                     `json:"TopMeasuredDepth,omitempty"`
	// External Component weight per item                                                                                    
	Weight                                                                                      *float64                     `json:"Weight,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// An umbilical is any control, power or sensor cable or tube run through an outlet on the
// wellhead down to a particular receptacle on a downhole component (power or hydraulic
// line) or simply to a specific depth (sensors). Examples include Gas lift injection tube,
// Subsea valve control line, ESP power cable, iWire for external gauges, external Fiber
// Optic Sensor cable. Umbilicals are run outside of the casing or completion assembly and
// are typically attached by clamps. Umbilicals are run in hole same time as the host
// assembly. Casing Umbilicals may be cemented in place e.g. Fiber Optic.
type TubularUmbilical struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *TubularUmbilicalData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type TubularUmbilicalData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Identifier of the Tubular Component that the Umbilical is connected to.                                               
	ConnectedTubularComponentID                                                                 string                       `json:"ConnectedTubularComponentID"`
	// Flag describing the existence of a cut (accidentally or intentionally) in the line                                    
	Cut                                                                                         *bool                        `json:"Cut,omitempty"`
	// The date the cut has happened                                                                                         
	CutDate                                                                                     *time.Time                   `json:"CutDate,omitempty"`
	// Measured Depth at which the cut has happened                                                                          
	CutMD                                                                                       *float64                     `json:"CutMD,omitempty"`
	// Description                                                                                                           
	Description                                                                                 *string                      `json:"Description,omitempty"`
	// Length of the umbilical line                                                                                          
	Length                                                                                      *float64                     `json:"Length,omitempty"`
	// Unique identifier for the manufacturer of this umbilical.                                                             
	ManufacturerID                                                                              *string                      `json:"ManufacturerID,omitempty"`
	// Model Name/Number                                                                                                     
	Model                                                                                       *string                      `json:"Model,omitempty"`
	// The name of the tubular umbilical.                                                                                    
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Identifier of the Parent Tubular Assembly                                                                             
	ParentAssemblyID                                                                            string                       `json:"ParentAssemblyID"`
	// Identifier of the Parent Wellbore                                                                                     
	ParentWellboreID                                                                            string                       `json:"ParentWellboreID"`
	// Identifier of the Type of Service the umbilical is facilitating                                                       
	ServiceTypeID                                                                               *string                      `json:"ServiceTypeID,omitempty"`
	// Size (diameter) of the umbilical line                                                                                 
	Size                                                                                        *float64                     `json:"Size,omitempty"`
	// Identifier of the Umbilical Type                                                                                      
	UmbilicalTypeID                                                                             *string                      `json:"UmbilicalTypeID,omitempty"`
	// Identifier of the Wellhead Outlet the Umbilical is connected to                                                       
	WellheadOutletKeyID                                                                         *string                      `json:"WellheadOutletKeyID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A user profile for an individual using the OSDU data platform. This profile represents
// one given instance of the user activation.
type UserProfile struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *UserProfileData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type UserProfileData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// An indicator of whether this User Profile is currently considered active.                                             
	IsUserCurrentlyActive                                                                       *bool                        `json:"IsUserCurrentlyActive,omitempty"`
	// The individual's name. Usually this includes first and last name.                                                     
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Additional information about the individual user.                                                                     
	Remark                                                                                      *string                      `json:"Remark,omitempty"`
	// The date and time that this User Profile begins to be considered active.                                              
	UserActivatedDateTime                                                                       *time.Time                   `json:"UserActivatedDateTime,omitempty"`
	// Reference to the company the individual is associated with.                                                           
	UserCompanyID                                                                               *string                      `json:"UserCompanyID,omitempty"`
	// The identifier of a reference value for the role of the contact within the associated                                 
	// organisation, such as Account owner, Sales Representative, Technical Support, Project                                 
	// Manager, Party Chief, Client Representative, Senior Observer.                                                         
	UserContactRoleTypeID                                                                       *string                      `json:"UserContactRoleTypeID,omitempty"`
	// A list of Data Governance roles held by this individual, with the ability to qualify and                              
	// timebox those roles.                                                                                                  
	UserDataGovernanceRoles                                                                     []DataGovernanceRole         `json:"UserDataGovernanceRoles,omitempty"`
	// The date and time that this User Profile is considered no longer active.                                              
	UserDeactivatedDateTime                                                                     *time.Time                   `json:"UserDeactivatedDateTime,omitempty"`
	// The individual's full email address.                                                                                  
	UserEmailAddress                                                                            *string                      `json:"UserEmailAddress,omitempty"`
	// A unique identifier for this individual within the OSDU platform.                                                     
	UserOSDUIdentifier                                                                          *string                      `json:"UserOSDUIdentifier,omitempty"`
	// The individual's telephone number.                                                                                    
	UserPhoneNumber                                                                             *string                      `json:"UserPhoneNumber,omitempty"`
	// A reference to the OSDU User Profile representing a previous time of user activation for                              
	// the same individual.                                                                                                  
	UserProfilePredecessorID                                                                    *string                      `json:"UserProfilePredecessorID,omitempty"`
	// The business workflow roles in which an individual functions.                                                         
	UserWorkflowPersonaTypeIDs                                                                  []string                     `json:"UserWorkflowPersonaTypeIDs,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

type DataGovernanceRole struct {
	// The date and time that this data governance role in this Organisation begins to be            
	// considered active.                                                                            
	DataGovernanceRoleEffectiveDateTime                                                   *time.Time `json:"DataGovernanceRoleEffectiveDateTime,omitempty"`
	// Internal, unique identifier for the set of attributes describing and qualifying a             
	// specific data governance role.                                                                
	DataGovernanceRoleIdentifier                                                          *string    `json:"DataGovernanceRoleIdentifier,omitempty"`
	// The date and time that this data governance role in this Organisation begins to be            
	// considered inactive.                                                                          
	DataGovernanceRoleTerminationDateTime                                                 *time.Time `json:"DataGovernanceRoleTerminationDateTime,omitempty"`
	// Reference to a data governance role assigned to this individual in the associated             
	// Organisation.                                                                                 
	DataGovernanceRoleTypeID                                                              *string    `json:"DataGovernanceRoleTypeID,omitempty"`
	// Reference to the organisation to which this data governance role is associated. For           
	// example, a specific business unit.                                                            
	OrganisationID                                                                        *string    `json:"OrganisationID,omitempty"`
}

// The origin of a set of wellbores.
type Well struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellData                      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type WellData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                           
	ExistenceKind                                                                                *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                    
	ResourceCurationStatus                                                                       *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                            
	ResourceHomeRegionID                                                                         *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                         
	ResourceHostRegionIDs                                                                        []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                          
	ResourceLifecycleStatus                                                                      *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                            
	ResourceSecurityClassification                                                               *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                            
	// organization, agency, system, internal team, or individual. For informational purposes                                    
	// only, the list of sources is not governed.                                                                                
	Source                                                                                       *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                     
	// based on data quality. Clarifications: Since Certified is the highest classification of                                   
	// suitable quality, any further change or versioning of a Certified record should be                                        
	// carefully considered and justified. If a Technical Assurance value is not populated then                                  
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                  
	// Technical Assurance values are not intended to be used for the identification of a single                                 
	// "preferred" or "definitive" record by comparison with other records.                                                      
	TechnicalAssuranceID                                                                         *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                    
	// multiple types or multiple values of the same type.                                                                       
	GeoContexts                                                                                  []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                  
	// should include all the identifiers).                                                                                      
	NameAliases                                                                                  []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                    
	// not appropriate).                                                                                                         
	SpatialLocation                                                                              *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                   
	// one or more workflows/personas based on data quality and reviewer's decisions.                                            
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                    
	// further change or versioning of a Certified record should be carefully considered and                                     
	// justified. If a Technical Assurance value is not populated then one can assume the data                                   
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                      
	// values are not intended to be used for the identification of a single "preferred" or                                      
	// "definitive" record by comparison with other records.                                                                     
	TechnicalAssurances                                                                          []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                            
	// master-data record's overall suitability for general business consumption based on data                                   
	// quality. Clarifications: Since Certified is the highest classification of suitable                                        
	// quality, any further change or versioning of a Certified record should be carefully                                       
	// considered and justified. If a Technical Assurance value is not populated then one can                                    
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                          
	// Technical Assurance values are not intended to be used for the identification of a single                                 
	// "preferred" or "definitive" record by comparison with other records.                                                      
	TechnicalAssuranceTypeID                                                                     *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                  
	VersionCreationReason                                                                        *string                         `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                        
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                  
	CurrentOperatorID                                                                            *string                         `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                                
	DataSourceOrganisationID                                                                     *string                         `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                          
	FacilityDescription                                                                          *string                         `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                            
	FacilityEvents                                                                               []AbstractFacilityEvent         `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                   
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                  
	// If used, the "Source" property should identify that source system.                                                        
	FacilityID                                                                                   *string                         `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                     
	FacilityName                                                                                 *string                         `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                      
	// which this facility is/has been known.                                                                                    
	FacilityNameAliases                                                                          []AbstractAliasNames            `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                    
	FacilityOperators                                                                            []AbstractFacilityOperator      `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                       
	// permit number, rig name etc.                                                                                              
	FacilitySpecifications                                                                       []AbstractFacilitySpecification `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                           
	FacilityStates                                                                               []AbstractFacilityState         `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                       
	FacilityTypeID                                                                               *string                         `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                          
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                  
	InitialOperatorID                                                                            *string                         `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                 
	OperatingEnvironmentID                                                                       *string                         `json:"OperatingEnvironmentID,omitempty"`
	// Business Intention [Well Business Intention] is the general purpose for which resources                                   
	// are approved for drilling a new well or subsequent wellbore(s).                                                           
	BusinessIntentionID                                                                          *string                         `json:"BusinessIntentionID,omitempty"`
	// Condition [Well Condition] is the operational state of a well component relative to the                                   
	// Role [Well Role].                                                                                                         
	ConditionID                                                                                  *string                         `json:"ConditionID,omitempty"`
	// The default vertical coordinate reference system used in the vertical measurements for a                                  
	// well or wellbore if absent from input vertical measurements and there is no other                                         
	// recourse for obtaining a valid CRS.                                                                                       
	DefaultVerticalCRSID                                                                         *string                         `json:"DefaultVerticalCRSID,omitempty"`
	// The default datum reference point, or zero depth point, used to determine other points                                    
	// vertically in a well.  References an entry in the VerticalMeasurements array.                                             
	DefaultVerticalMeasurementID                                                                 *string                         `json:"DefaultVerticalMeasurementID,omitempty"`
	// The list of past and present interests associated with the time period they were/are valid                                
	HistoricalInterests                                                                          []PurpleHistoricalInterest      `json:"HistoricalInterests,omitempty"`
	// Business Interest [Well Interest Type] describes whether a company currently considers a                                  
	// well or its data to be a real or planned asset, and if so, the nature of and motivation                                   
	// for that company's interest.                                                                                              
	InterestTypeID                                                                               *string                         `json:"InterestTypeID,omitempty"`
	// Uncertainty for well location                                                                                             
	LocationUncertainty                                                                          *AbstractLocationUncertainty    `json:"LocationUncertainty,omitempty"`
	// Outcome [Well Drilling Outcome] is the result of attempting to accomplish the Business                                    
	// Intention [Well Business Intention].                                                                                      
	OutcomeID                                                                                    *string                         `json:"OutcomeID,omitempty"`
	// Role [Well Role] is the current purpose, whether planned or actual. If there are multiple                                 
	// Roles among a well's components, the well may be assigned the facet value with the                                        
	// highest significance. The value of Role may change over the Life Cycle.                                                   
	RoleID                                                                                       *string                         `json:"RoleID,omitempty"`
	// Optional identifier of a slot. It requires that the relationship WellSiteStructureID is                                   
	// populated. SlotID must match a member in the related WellSiteStructure                                                    
	// data.WellSlots[].SlotID.                                                                                                  
	SlotID                                                                                       *string                         `json:"SlotID,omitempty"`
	// Identifies the status of a well component in a way that may combine and-or summarize                                      
	// concepts found in other status facets. For example, a Well Status Summary of Gas Injector                                 
	// Shut-in, which contains commonly desired business information, combines concepts from                                     
	// Product Type, Fluid Direction, and Condition.                                                                             
	StatusSummaryID                                                                              *string                         `json:"StatusSummaryID,omitempty"`
	// List of all depths and elevations pertaining to the well, like, water depth, mud line                                     
	// elevation, etc.                                                                                                           
	VerticalMeasurements                                                                         []PurpleVerticalMeasurementID   `json:"VerticalMeasurements,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                 
	// for this well has ever been FinancialNonOperated in the past.                                                             
	WasBusinessInterestFinancialNonOperated                                                      *bool                           `json:"WasBusinessInterestFinancialNonOperated,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                 
	// for this well has ever been FinancialOperated in the past.                                                                
	WasBusinessInterestFinancialOperated                                                         *bool                           `json:"WasBusinessInterestFinancialOperated,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                 
	// for this well has ever been Obligatory in the past.                                                                       
	WasBusinessInterestObligatory                                                                *bool                           `json:"WasBusinessInterestObligatory,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                 
	// for this well has ever been Technical in the past.                                                                        
	WasBusinessInterestTechnical                                                                 *bool                           `json:"WasBusinessInterestTechnical,omitempty"`
	// An optional relationship to a WellSiteStructure, e.g., Pad, Platform, Subsea Template.                                    
	WellSiteStructureID                                                                          *string                         `json:"WellSiteStructureID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// A 'well interest' at some time period as defined by effective and termination date.
type PurpleHistoricalInterest struct {
	// The date and time at which the well interest type becomes effective.                            
	EffectiveDateTime                                                                          *string `json:"EffectiveDateTime,omitempty"`
	// Business Interest [Well Interest Type] describes whether a company currently considers a        
	// well or its data to be a real or planned asset, and if so, the nature of and motivation         
	// for that company's interest.                                                                    
	InterestTypeID                                                                             *string `json:"InterestTypeID,omitempty"`
	// The date and time at which the well interest type is no longer in effect.                       
	TerminationDateTime                                                                        *string `json:"TerminationDateTime,omitempty"`
}

// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference elevation for all measured depths within
// the BHA Run record. If this is not populated, the VerticalMeasurement is derived from the
// Wellbore default Vertical Measure Elevation.
//
// A location along a wellbore, _usually_ associated with some aspect of the drilling of the
// wellbore, but not with any intersecting _subsurface_ natural surfaces.
//
// Either a self-contained vertical reference for the depths in this blowout preventer or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the Coring record.
//
// The vertical measurement reference for a wellbore or borehole acquisition platform,
// defining the vertical reference datum, elevation and relevant depths.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the HoleSection record. If this is not populated, the
// VerticalMeasurement is derived from the Wellbore.
//
// The vertical measurement reference for the interval tops and bases. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
//
// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,
// depth correction used to correlate MDs to original drilling rig MD. References an entry
// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the RockSample record. If this is not populated, the
// VerticalMeasurement is derived from the Coring.
//
// Information on the list of all depths and elevations pertaining to the target wellbore
// involved in the Sample Acquisition event, like, plug back measured depth, total measured
// depth, KB elevation. The property is always used except with WellheadSampleAcquisition,
// SeparatorSampleAcquisition, FacilitySampleAcquisition
//
// The vertical measurement reference for VSP surveys, which defines the vertical reference
// datum for the measured depths.
//
// References an entry in the VerticalMeasurements array of the Rig, Well or Wellbore
// identified by VerticalReferenceEntityID or a standalone vertical reference which defines
// the vertical reference datum for all measured depths of the SurveyProgram record. For
// planned SurveyPrograms, this property may be absent; then depths are relative to Planned
// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds
// the depth reference in data.VerticalMeasurement.
//
// Either a self-contained vertical reference for the depths in this TubularAssembly or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// The measured elevation from a known reference datum to a permanent geodetic datum.  This
// measurement is the foundation for calculating and correlating depths from geodetic
// datums, which in turn allow depth correlation between wellbores.
//
// The vertical measurement reference for this well logging acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The zero depth point (ZDP) definition for the all measured depths related to this
// WellPlanningWellbore.
//
// The vertical measurement reference for this well testing acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The vertical measurement reference for the interval top and base. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
type PurpleVerticalMeasurementID struct {
	// The relationship to the rig, which was used while this vertical measurement was in active            
	// use.                                                                                                 
	RigID                                                                                        *string    `json:"RigID,omitempty"`
	// The ID for a distinct vertical measurement within the Wellbore VerticalMeasurements array            
	// so that it may be referenced by other vertical measurements if necessary.                            
	VerticalMeasurementID                                                                        *string    `json:"VerticalMeasurementID,omitempty"`
	// The date and time at which a vertical measurement instance becomes effective.                        
	EffectiveDateTime                                                                            *time.Time `json:"EffectiveDateTime,omitempty"`
	// The date and time at which a vertical measurement instance is no longer in effect.                   
	TerminationDateTime                                                                          *time.Time `json:"TerminationDateTime,omitempty"`
	// A vertical coordinate reference system defines the origin for height or depth values. It             
	// is expected that either VerticalCRSID or VerticalReferenceID reference is provided in a              
	// given vertical measurement array object, but not both.                                               
	VerticalCRSID                                                                                *string    `json:"VerticalCRSID,omitempty"`
	// The value of the elevation or depth. Depth is positive downwards from a vertical                     
	// reference or geodetic datum along a path, which can be vertical; elevation is positive               
	// upwards from a geodetic datum along a vertical path. Either can be negative.                         
	VerticalMeasurement                                                                          *float64   `json:"VerticalMeasurement,omitempty"`
	// Text which describes a vertical measurement in detail.                                               
	VerticalMeasurementDescription                                                               *string    `json:"VerticalMeasurementDescription,omitempty"`
	// Specifies Measured Depth, True Vertical Depth, or Elevation.                                         
	VerticalMeasurementPathID                                                                    *string    `json:"VerticalMeasurementPathID,omitempty"`
	// Specifies Driller vs Logger.                                                                         
	VerticalMeasurementSourceID                                                                  *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (TD, Plugback, Kickoff, Drill Floor, Rotary               
	// Table...).                                                                                           
	VerticalMeasurementTypeID                                                                    *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The unit of measure for the vertical measurement. If a unit of measure and a vertical CRS            
	// are provided, the unit of measure provided is taken over the unit of measure from the CRS.           
	VerticalMeasurementUnitOfMeasureID                                                           *string    `json:"VerticalMeasurementUnitOfMeasureID,omitempty"`
	// This relationship identifies the entity (aka record) in which the VerticalReferenceID is             
	// found; It could be a different OSDU entity or a self-reference. For example, a Wellbore              
	// VerticalMeasurement may reference a member of a VerticalMeasurements[] array in its                  
	// parent Well record. Alternatively, VerticalReferenceEntityID may be populated with the ID            
	// of its own Wellbore record to make explicit that VerticalReferenceID is intended to be               
	// found in this record, not another.                                                                   
	VerticalReferenceEntityID                                                                    *string    `json:"VerticalReferenceEntityID,omitempty"`
	// The reference point from which the relative vertical measurement is made. This is only               
	// populated if the measurement has no VerticalCRSID specified. The value entered must match            
	// the VerticalMeasurementID for another vertical measurement array element in Wellbore or              
	// Well or in a related parent facility. The relationship should be  declared explicitly in             
	// VerticalReferenceEntityID. Any chain of measurements must ultimately resolve to a                    
	// Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID is provided in            
	// a given vertical measurement array object, but not both.                                             
	VerticalReferenceID                                                                          *string    `json:"VerticalReferenceID,omitempty"`
	// Specifies what directional survey or wellpath was used to calculate the TVD.                         
	WellboreTVDTrajectoryID                                                                      *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// A Well Activity is a operation performed on a well to accomplish a predetermined
// objective. This may be as short as a few hours in duration, or may last several days,
// weeks or even months. It will have one or more associated daily Operations Reports, and
// may have other associated data as well.
type WellActivity struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellActivityData              `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type WellActivityData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// Freeform comments describing the overall well activity                                                                
	Comments                                                                                    *string                      `json:"Comments,omitempty"`
	// Individual, company, or corporate division that work is being executed on behalf of.                                  
	Customer                                                                                    *string                      `json:"Customer,omitempty"`
	// Date of data quality check approval                                                                                   
	DataQCDate                                                                                  *time.Time                   `json:"DataQCDate,omitempty"`
	// DEPRECATED: Superseded by DataQCReviewerName (format and x-osdu-frame-of-reference                                    
	// changed). Name of the individual that approved the quality check for the data                                         
	DataQCName                                                                                  *time.Time                   `json:"DataQCName,omitempty"`
	// Name of the individual that approved the quality check for the data                                                   
	DataQCReviewerName                                                                          *string                      `json:"DataQCReviewerName,omitempty"`
	// Timestamp for the end of the Well Activity                                                                            
	EndDateTime                                                                                 *time.Time                   `json:"EndDateTime,omitempty"`
	// Expected duration in days for the well activity                                                                       
	EstimatedDuration                                                                           *float64                     `json:"EstimatedDuration,omitempty"`
	// Flag to identify whether data has been submitted for performance benchmarking                                         
	IsPerformanceBenchmarkSubmitted                                                             *bool                        `json:"IsPerformanceBenchmarkSubmitted,omitempty"`
	// The name of this Well Activity                                                                                        
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Timestamp for when well was taken off production for well activity                                                    
	OffProductionDateTime                                                                       *time.Time                   `json:"OffProductionDateTime,omitempty"`
	// Timestamp for when the well is returned to production following well activity                                         
	OnProductionDateTime                                                                        *time.Time                   `json:"OnProductionDateTime,omitempty"`
	// Date Performance Benchmark was submitted                                                                              
	PerformanceBenchmarkSubmittedDate                                                           *time.Time                   `json:"PerformanceBenchmarkSubmittedDate,omitempty"`
	// Name of the individual that submitted data for benchmarking                                                           
	PerformanceBenchmarkSubmitter                                                               *string                      `json:"PerformanceBenchmarkSubmitter,omitempty"`
	// List of Rigs or Work Units performing the Well Activity                                                               
	RigAssignments                                                                              []RigAssignment              `json:"RigAssignments,omitempty"`
	// Timestamp for the beginning of the Well Activity                                                                      
	StartDateTime                                                                               *time.Time                   `json:"StartDateTime,omitempty"`
	// Company or corporate division that is responsible for executing the work.                                             
	StewardingCompany                                                                           *string                      `json:"StewardingCompany,omitempty"`
	// Team within a company, or corporate division that is responsible for executing the work.                              
	StewardingCompanyTeam                                                                       *string                      `json:"StewardingCompanyTeam,omitempty"`
	// Benchmarking categories (from picklist - open)                                                                        
	TechnologyApplied                                                                           []string                     `json:"TechnologyApplied,omitempty"`
	// A narrative summary of the work being conducted in this well activity                                                 
	WellActivityDescription                                                                     *string                      `json:"WellActivityDescription,omitempty"`
	// The objective for the Well Activity.  A Well Activity may have one or more objectives.                                
	// The first is the primary objective to need to retain order.                                                           
	WellActivityObjective                                                                       []string                     `json:"WellActivityObjective,omitempty"`
	// The type of well activity being conducted.                                                                            
	WellActivityType                                                                            string                       `json:"WellActivityType"`
	// Current wellhead connection (from picklist - local)                                                                   
	WellheadConnection                                                                          *string                      `json:"WellheadConnection,omitempty"`
	// Link to the Well                                                                                                      
	WellID                                                                                      string                       `json:"WellID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Association of a rig to a particular well and well activity.
type RigAssignment struct {
	// The end time for this rig assignment to the well activity             
	EndDateTime                                                   *time.Time `json:"EndDateTime,omitempty"`
	// Remarks related to this rig assignment                                
	Remark                                                        *string    `json:"Remark,omitempty"`
	// A link to the Rig                                                     
	RigID                                                         *string    `json:"RigID,omitempty"`
	// The start time for this rig assignment to the well activity           
	StartDateTime                                                 *time.Time `json:"StartDateTime,omitempty"`
}

// A complete description of an Activity Program for a unique or a set of Well(s) and/or
// Wellbore(s)
type WellActivityProgram struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellActivityProgramData       `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type WellActivityProgramData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The set of multiple phases that compose the whole program                                                             
	Phases                                                                                      []Phase                      `json:"Phases"`
	// A reference to the object that holds the information about the rig used in this drilling                              
	// program                                                                                                               
	RigID                                                                                       *string                      `json:"RigID,omitempty"`
	// A reference to the object that holds the information about the risks that apply to this                               
	// drilling program (may be too high level for this)                                                                     
	RiskIDs                                                                                     []string                     `json:"RiskIDs,omitempty"`
	// The type of well activity program. The default value for this is "Primary" (For example,                              
	// they may have  "primary" program and "backup" programs)                                                               
	TypeID                                                                                      string                       `json:"TypeID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Description of an individual phase that compose the WellActivityProgram. A phase
// describes the key milestones and is usually based on the major sections of the well or
// non-well-related work.
// (Such as "Acces Well", "Suspend ", "Wellhead Removal "...)
type Phase struct {
	// Reference to the different BHA runs                                                                
	BHARunIDs                                                                                    []string `json:"BHARunIDs"`
	// A reference to the object that holds the evaluation information about the drilling                 
	// program for this phase.                                                                            
	EvaluationPlanID                                                                             *string  `json:"EvaluationPlanID,omitempty"`
	// Volume of a kick that will not cause a pressure exceeding the formation fracture pressure.         
	KickTolerance                                                                                *float64 `json:"KickTolerance,omitempty"`
	// An absolute upper limit for the pressure in the annulus of an oil and gas well as                  
	// measured at the wellhead. It's a number with pressure units                                        
	Maasp                                                                                        *float64 `json:"MAASP,omitempty"`
	// Free text box to describe the objectives from the phase.                                           
	Objective                                                                                    *string  `json:"Objective,omitempty"`
	// Reference to the objects that hold the cementing design information about the drilling             
	// program for this phase                                                                             
	PlannedCementJobIDs                                                                          []string `json:"PlannedCementJobIDs,omitempty"`
	// Reference to the objects that hold the expected lithology designs information about the            
	// drilling program for this phase                                                                    
	PlannedLithologyIDs                                                                          []string `json:"PlannedLithologyIDs,omitempty"`
	// Reference to the objects that holds the information about the risks that apply to this             
	// drilling program (may be too high level for this)                                                  
	RiskIDs                                                                                      []string `json:"RiskIDs,omitempty"`
	// The order that these phases will be executed (is this needed?)                                     
	SequenceNo                                                                                   *float64 `json:"SequenceNo,omitempty"`
	// A reference to the object that holds the information about the type of phase that is               
	// described (such as Workover, Completion…)                                                          
	TypeID                                                                                       string   `json:"TypeID"`
	// A reference to the object that holds the information about the activity plan for this              
	// Well Activity program                                                                              
	WellActivityPlanID                                                                           string   `json:"WellActivityPlanID"`
	// Identifier of the description from the Well Barrier Element Test to be run                         
	WellBarrierElementTestID                                                                     *string  `json:"WellBarrierElementTestID,omitempty"`
	// A reference to the object that describes the physical structure of a borehole                      
	WellboreArchitectureID                                                                       *string  `json:"WellboreArchitectureID,omitempty"`
	// The wellbore to which this drilling program phase refers                                           
	WellboreID                                                                                   *string  `json:"WellboreID,omitempty"`
}

// Describes a complete sequence tested or planned to be tested for Well Integrity.
type WellBarrierElementTest struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellBarrierElementTestData    `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
type WellBarrierElementTestData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The ID of the Blowout Preventer associated with the test.                                                             
	BlowOutPreventerID                                                                          *string                      `json:"BlowOutPreventerID,omitempty"`
	// The ID of the Hole Section in which the test was performed.                                                           
	HoleSectionID                                                                               *string                      `json:"HoleSectionID,omitempty"`
	// Textual description of the operational procedure and decision points.                                                 
	OperationalProcedureDescription                                                             *string                      `json:"OperationalProcedureDescription,omitempty"`
	// The ID of the Rig associated with the test.                                                                           
	RigUtilizationID                                                                            *string                      `json:"RigUtilizationID,omitempty"`
	// Date/time well integrity test was performed.                                                                          
	TestDateTime                                                                                *time.Time                   `json:"TestDateTime,omitempty"`
	// Description or summary text.                                                                                          
	TestDescription                                                                             *string                      `json:"TestDescription,omitempty"`
	// The guidance associated with the test.                                                                                
	TestGuidance                                                                                *string                      `json:"TestGuidance,omitempty"`
	// The load case associated with the test.                                                                               
	TestLoadCase                                                                                *string                      `json:"TestLoadCase,omitempty"`
	// One or more test steps, their parameters and their criteria.                                                          
	TestSteps                                                                                   []WBETestStep                `json:"TestSteps"`
	// The Well Barrier Element Test Sub-Type - typically the barrier component being tested.                                
	// For example, a test of a PackerHanger. Free text or Open list (perhaps local).                                        
	TestSubTypeID                                                                               *string                      `json:"TestSubTypeID,omitempty"`
	// References an Open reference list for the Well Barrier Element Test Type.                                             
	// Different test types will have different templated pass/fail or acceptance criteria. The                              
	// list is Reference data has governance open to allow for addition of different test types                              
	// (e.g. BSEE BOP test and A. N. Other BOP Test).                                                                        
	TestTypeID                                                                                  string                       `json:"TestTypeID"`
	// The ID of the Tubular Assembly associated with the test.                                                              
	TubularAssemblyID                                                                           *string                      `json:"TubularAssemblyID,omitempty"`
	// The name of the Well Barrier Element Test Plan.                                                                       
	WBETestPlanName                                                                             *string                      `json:"WBETestPlanName,omitempty"`
	// The ID of the Well Activity associated with the test.                                                                 
	WellActivityID                                                                              *string                      `json:"WellActivityID,omitempty"`
	// The ID of the Well Activity Program that holds the Phase description.                                                 
	WellActivityProgramID                                                                       *string                      `json:"WellActivityProgramID,omitempty"`
	// Number that identifies the Phase within its WellActivityProgram.                                                      
	WellActivityProgramPhaseSequenceNumber                                                      *float64                     `json:"WellActivityProgramPhaseSequenceNumber,omitempty"`
	// The ID of the Wellbore Architecture applicable at the time of the test.                                               
	WellboreArchitectureID                                                                      *string                      `json:"WellboreArchitectureID,omitempty"`
	// The ID of the Wellbore on which the test was or will be performed. This ID can be used to                             
	// relate to either the Wellbore or WellPlanningWellbore object, depending on the scenario.                              
	WellboreID                                                                                  string                       `json:"WellboreID"`
	// The ID of the Well Operations Report where the barrier element test operation is                                      
	// described.                                                                                                            
	WellOperationsReportID                                                                      *string                      `json:"WellOperationsReportID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Description of an individual step of the overall Well Barrier Element Test
type WBETestStep struct {
	// A list of pressures and the actual volume bled back at the given pressure.                                              
	ActualVolumesBledBack                                                                     []ActualVolumesBledBackElement   `json:"ActualVolumesBledBack,omitempty"`
	// A list of pressures and the actual volume pumped at the given pressure.                                                 
	ActualVolumesPumped                                                                       []ActualVolumesPumpedElement     `json:"ActualVolumesPumped,omitempty"`
	// Text string for noting the components tested                                                                            
	ComponentsTested                                                                          *string                          `json:"ComponentsTested,omitempty"`
	// A list of systems and their volumes.                                                                                    
	ComponentVolumesTestSystem                                                                []ComponentVolumesTestSystem     `json:"ComponentVolumesTestSystem,omitempty"`
	// The name of a pass/fail or acceptance criteria template that applies for the step                                       
	CriteriaTemplateName                                                                      *string                          `json:"CriteriaTemplateName,omitempty"`
	// The expected pressure change due to thermal effects                                                                     
	ExpectedPressureChangeDueToThermalEffects                                                 float64                          `json:"ExpectedPressureChangeDueToThermalEffects"`
	// Comments on the expected pressure change due to thermal effects. Can be used to provide                                 
	// an explanation as to why a value was not entered (e.g. expansion not expected to impact                                 
	// test results)                                                                                                           
	ExpectedPressureChangeDueToThermalEffectsComments                                         *string                          `json:"ExpectedPressureChangeDueToThermalEffectsComments,omitempty"`
	// A list of pressures and the expected volume bled back at the given pressure.                                            
	ExpectedVolumesBledBack                                                                   []ExpectedVolumesBledBackElement `json:"ExpectedVolumesBledBack,omitempty"`
	// A list of pressures and the expected volume pumped at the given pressure.                                               
	ExpectedVolumesPumped                                                                     []ExpectedVolumesPumpedElement   `json:"ExpectedVolumesPumped,omitempty"`
	// Link to the object containing the high pressure criteria.                                                               
	HighPressureCriteria                                                                      []HighPressureCriterionElement   `json:"HighPressureCriteria"`
	// Link to the object containing the low pressure criteria .                                                               
	LowPressureCriteria                                                                       []LowPressureCriterionElement    `json:"LowPressureCriteria,omitempty"`
	// For use when executing simultaneous tests using two or more different sets of criteria                                  
	ParallelWBETestStepIDs                                                                    []string                         `json:"ParallelWBETestStepIDs,omitempty"`
	// The ID of a schematic document that describes the pressure path / line-up                                               
	SchematicID                                                                               *string                          `json:"SchematicID,omitempty"`
	// A description of the individual test step.                                                                              
	StepDescription                                                                           *string                          `json:"StepDescription,omitempty"`
	// Additional notes on the test step                                                                                       
	StepNotes                                                                                 *string                          `json:"StepNotes,omitempty"`
	// An integer that describes the order in which the pressure test steps will be performed                                  
	StepNumber                                                                                int64                            `json:"StepNumber"`
	// A list of test fluids and their properties.                                                                             
	TestFluids                                                                                []TestFluid                      `json:"TestFluids,omitempty"`
	// The cumulative total volume of the systems lined up for the test                                                        
	TotalVolumeTestSystem                                                                     float64                          `json:"TotalVolumeTestSystem"`
}

// Individual description, for a given pressure, of the actual bled back volume for a single
// step of the test.
type ActualVolumesBledBackElement struct {
	// Maximum actual  volume pumped at specified pressure.                           
	MaximumVolume                                                            *float64 `json:"MaximumVolume,omitempty"`
	// Minimum actual  volume pumped at specified pressure.                           
	MinimumVolume                                                            *float64 `json:"MinimumVolume,omitempty"`
	// Value for actual pressure                                                      
	Pressure                                                                 *float64 `json:"Pressure,omitempty"`
	// The pumping rate for the actual volume pumped at a specified pressure.         
	PumpingRate                                                              *float64 `json:"PumpingRate,omitempty"`
	// Actual volume pumped at specified pressure.                                    
	Volume                                                                   *float64 `json:"Volume,omitempty"`
}

// Individual description, for a given pressure, of the actual volume pumped for a single
// step of the test.
type ActualVolumesPumpedElement struct {
	// Maximum actual volume pumped at specified pressure.                            
	MaximumVolume                                                            *float64 `json:"MaximumVolume,omitempty"`
	// Minimum actual volume pumped at specified pressure.                            
	MinimumVolume                                                            *float64 `json:"MinimumVolume,omitempty"`
	// Value for actual pressure.                                                     
	Pressure                                                                 *float64 `json:"Pressure,omitempty"`
	// The pumping rate for the actual volume pumped at a specified pressure.         
	PumpingRate                                                              *float64 `json:"PumpingRate,omitempty"`
	// Actual volume pumped at specified pressure                                     
	Volume                                                                   *float64 `json:"Volume,omitempty"`
}

// Description of the tested component during a singe step.
type ComponentVolumesTestSystem struct {
	// e.g. surface lines, choke/kill Lines, BOP, Casing        
	SystemComponentName                                 *string `json:"SystemComponentName,omitempty"`
	// The volume of the named system                           
	SystemComponentVolume                               float64 `json:"SystemComponentVolume"`
}

// Individual description, for a given pressure, of the expected bled back volume for a
// single step of the test.
type ExpectedVolumesBledBackElement struct {
	// Maximum expected volume pumped at specified pressure.                            
	MaximumVolume                                                              *float64 `json:"MaximumVolume,omitempty"`
	// Minimum expected  volume pumped at specified pressure.                           
	MinimumVolume                                                              *float64 `json:"MinimumVolume,omitempty"`
	// Value for planned pressure.                                                      
	Pressure                                                                   float64  `json:"Pressure"`
	// The pumping rate for the expected volume pumped at a specified pressure.         
	PumpingRate                                                                *float64 `json:"PumpingRate,omitempty"`
	// Expected volume pumped at specified pressure.                                    
	Volume                                                                     *float64 `json:"Volume,omitempty"`
}

// Individual description, for a given pressure, of the expected volume pumped for a single
// step of the test.
type ExpectedVolumesPumpedElement struct {
	// Maximum expected volume pumped at specified pressure.                            
	MaximumVolume                                                              *float64 `json:"MaximumVolume,omitempty"`
	// Minimum expected  volume pumped at specified pressure.                           
	MinimumVolume                                                              *float64 `json:"MinimumVolume,omitempty"`
	// Value for planned pressure.                                                      
	Pressure                                                                   float64  `json:"Pressure"`
	// The pumping rate for the expected volume pumped at a specified pressure.         
	PumpingRate                                                                *float64 `json:"PumpingRate,omitempty"`
	// Expected volume pumped at specified pressure                                     
	Volume                                                                     *float64 `json:"Volume,omitempty"`
}

// Generic description of an individual pressure criterion for a single step of the test
type HighPressureCriterionElement struct {
	// Boolean that states if the criteria are for the high pressure stage (low pressure stage           
	// otherwise)                                                                                        
	IsHigh                                                                                      *bool    `json:"IsHigh,omitempty"`
	// the maximum allowable pressure loss for a pressure decline test (expressed as an absolute         
	// value)                                                                                            
	MaxAllowedAbsoluteDecline                                                                   *float64 `json:"MaxAllowedAbsoluteDecline,omitempty"`
	// the maximum allowable pressure loss for a pressure decline test (expressed as a                   
	// percentage of test pressure)                                                                      
	MaxAllowedPercentageDecline                                                                 *float64 `json:"MaxAllowedPercentageDecline,omitempty"`
	// Criteria pressure rate of change for a flat-line test. Averaged over the duration of  the         
	// Validation Duration                                                                               
	MaxAllowedRateOfChange                                                                      *float64 `json:"MaxAllowedRateOfChange,omitempty"`
	// A successful negative pressure test or inflow test using the shut-in pressure method              
	// requires the pressure to remain below the maximum allowable target test pressure.                 
	TargetPressureMax                                                                           *float64 `json:"TargetPressureMax,omitempty"`
	// A successful positive pressure test requires the pressure to remain above the minimum             
	// allowable target test pressure.                                                                   
	TargetPressureMin                                                                           *float64 `json:"TargetPressureMin,omitempty"`
	// The time duration for which a pressure test must “hold” (to a prescribed testing                  
	// criteria) in order for the test to be validated (typically minutes e.g. 5mins (BOP,               
	// 30mins Casing)                                                                                    
	ValidationDuration                                                                          *float64 `json:"ValidationDuration,omitempty"`
}

// Generic description of an individual pressure criterion for a single step of the test
type LowPressureCriterionElement struct {
	// Boolean that states if the criteria are for the high pressure stage (low pressure stage           
	// otherwise)                                                                                        
	IsHigh                                                                                      *bool    `json:"IsHigh,omitempty"`
	// the maximum allowable pressure loss for a pressure decline test (expressed as an absolute         
	// value)                                                                                            
	MaxAllowedAbsoluteDecline                                                                   *float64 `json:"MaxAllowedAbsoluteDecline,omitempty"`
	// the maximum allowable pressure loss for a pressure decline test (expressed as a                   
	// percentage of test pressure)                                                                      
	MaxAllowedPercentageDecline                                                                 *float64 `json:"MaxAllowedPercentageDecline,omitempty"`
	// Criteria pressure rate of change for a flat-line test. Averaged over the duration of  the         
	// Validation Duration                                                                               
	MaxAllowedRateOfChange                                                                      *float64 `json:"MaxAllowedRateOfChange,omitempty"`
	// A successful negative pressure test or inflow test using the shut-in pressure method              
	// requires the pressure to remain below the maximum allowable target test pressure.                 
	TargetPressureMax                                                                           *float64 `json:"TargetPressureMax,omitempty"`
	// A successful positive pressure test requires the pressure to remain above the minimum             
	// allowable target test pressure.                                                                   
	TargetPressureMin                                                                           *float64 `json:"TargetPressureMin,omitempty"`
	// The time duration for which a pressure test must “hold” (to a prescribed testing                  
	// criteria) in order for the test to be validated (typically minutes e.g. 5mins (BOP,               
	// 30mins Casing)                                                                                    
	ValidationDuration                                                                          *float64 `json:"ValidationDuration,omitempty"`
}

// Description, for a given step of the test, of the Fluid System used for this step.
type TestFluid struct {
	// Ambient temperate value                                    
	AmbientTemperature                                   *float64 `json:"AmbientTemperature,omitempty"`
	// Downhole temperature value                                 
	DownholeTemperature                                  *float64 `json:"DownholeTemperature,omitempty"`
	// Density value for the system fluid                         
	FluidDensitySystem                                   *float64 `json:"FluidDensitySystem,omitempty"`
	// Density value for the test fluid                           
	FluidDensityTest                                     *float64 `json:"FluidDensityTest,omitempty"`
	// Same type reference list as used in Fluids Program         
	TestFluidTypeID                                      *string  `json:"TestFluidTypeID,omitempty"`
}

// The relationship between a well license and the geographic or geopolitical areas that
// contain this license provides useful insight into which legislation may be relevant, what
// environmental controls may be in place, what citizens require notification and more.
// This subset primarily provides a place to describe the intersections between the license
// and areas.
type WellLicense struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellLicenseData               `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type WellLicenseData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                                
	ExistenceKind                                                                                *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                         
	ResourceCurationStatus                                                                       *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                 
	ResourceHomeRegionID                                                                         *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                              
	ResourceHostRegionIDs                                                                        []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                               
	ResourceLifecycleStatus                                                                      *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                 
	ResourceSecurityClassification                                                               *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                 
	// organization, agency, system, internal team, or individual. For informational purposes                                         
	// only, the list of sources is not governed.                                                                                     
	Source                                                                                       *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                          
	// based on data quality. Clarifications: Since Certified is the highest classification of                                        
	// suitable quality, any further change or versioning of a Certified record should be                                             
	// carefully considered and justified. If a Technical Assurance value is not populated then                                       
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                       
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceID                                                                         *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                         
	// multiple types or multiple values of the same type.                                                                            
	GeoContexts                                                                                  []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                       
	// should include all the identifiers).                                                                                           
	NameAliases                                                                                  []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                         
	// not appropriate).                                                                                                              
	SpatialLocation                                                                              *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                        
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                 
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                         
	// further change or versioning of a Certified record should be carefully considered and                                          
	// justified. If a Technical Assurance value is not populated then one can assume the data                                        
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                           
	// values are not intended to be used for the identification of a single "preferred" or                                           
	// "definitive" record by comparison with other records.                                                                          
	TechnicalAssurances                                                                          []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                 
	// master-data record's overall suitability for general business consumption based on data                                        
	// quality. Clarifications: Since Certified is the highest classification of suitable                                             
	// quality, any further change or versioning of a Certified record should be carefully                                            
	// considered and justified. If a Technical Assurance value is not populated then one can                                         
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                               
	// Technical Assurance values are not intended to be used for the identification of a single                                      
	// "preferred" or "definitive" record by comparison with other records.                                                           
	TechnicalAssuranceTypeID                                                                     *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                       
	VersionCreationReason                                                                        *string                              `json:"VersionCreationReason,omitempty"`
	// The validated contractor for this license, as approved.  The term contractor has variable                                      
	// interpretations globally, in this instance the contractor is generally meant to be the                                         
	// contractor who will conduct initial operations on the well for drilling to final TD.                                           
	ApprovedContractorID                                                                         *string                              `json:"ApprovedContractorID,omitempty"`
	// Number for the approved drill slot on the offshore platform. Platforms have 24 to 32                                           
	// slots in which to position derricks for drilling. Each slot may require a different                                            
	// license in some jurisdictions, while others approve all operations on a platform at the                                        
	// same time. If this property is absent, the license applies to all slots.                                                       
	ApprovedDrillSlot                                                                            *string                              `json:"ApprovedDrillSlot,omitempty"`
	// The approved purpose for the well proposal in narrative form.  This often contains                                             
	// formation or depth information along with aggregated information from the Well Status and                                      
	// Classifications facets Business Intention, Play Type, Role, Product Type and Fluid                                             
	// Direction. The Well License Status subset allows this information to be decomposed into                                        
	// facets for better clarity.                                                                                                     
	ApprovedPurposeDescription                                                                   *string                              `json:"ApprovedPurposeDescription,omitempty"`
	// Sometimes specific rigs may be authorized by a license, particularly where environmental                                       
	// or access restrictions set specific requirements.  This attribute identifies the specific                                      
	// rig approved, where needed.                                                                                                    
	ApprovedRigID                                                                                *string                              `json:"ApprovedRigID,omitempty"`
	// The height of the foundation on which the derrick and engine sits.                                                             
	ApprovedRigSubstructureHeight                                                                *float64                             `json:"ApprovedRigSubstructureHeight,omitempty"`
	// The type of rig installation the license is approved for, where this is relevant. For                                          
	// example land, barge, submersible, platform, jackup, drillship, semisub, artificial                                             
	// island...                                                                                                                      
	ApprovedRigTypeID                                                                            *string                              `json:"ApprovedRigTypeID,omitempty"`
	// The approved spud date, can be the same as shown on the license application or may be                                          
	// changed as a result of the discussions involved in the approval process or changes to the                                      
	// circumstances surrounding the well plan.                                                                                       
	ApprovedSpudDate                                                                             *string                              `json:"ApprovedSpudDate,omitempty"`
	// Surveying is a specialized skill that requires certification before it can be practiced                                        
	// in most regions.  The name of the surveyor or surveying company provides evidence that a                                       
	// properly qualified individual will conduct the survey.                                                                         
	ApprovedSurveyorID                                                                           *string                              `json:"ApprovedSurveyorID,omitempty"`
	// The WellProductType(s) (e.g., fluid) that is/are approved for the well license.  In some                                       
	// regions, WellProductTypes are approved individually or as a group.  Similarly, in some                                         
	// regions, specific WellProductTypes may be excluded from the well license, particularly if                                      
	// the land right obtained does not include those WellProductTypes.                                                               
	ApprovedTargetObjectiveProductIDs                                                            []string                             `json:"ApprovedTargetObjectiveProductIDs,omitempty"`
	// A well license may be assigned to one or more wellbores at the time the license is                                             
	// granted. Other licenses may be assigned to specific well components as defined in What is                                      
	// a Well.  Where the component is known, specific relationships are needed.                                                      
	ApprovedWellboreIDs                                                                          []string                             `json:"ApprovedWellboreIDs,omitempty"`
	// The number of wells that are approved under this license.  Not all regulators define                                           
	// wells the same way.  Some regulators may identify the number of wellbores, others the                                          
	// number of well origins. Refer to PPDM "What is a Well" for more information about well                                         
	// components.                                                                                                                    
	ApprovedWellCount                                                                            *int64                               `json:"ApprovedWellCount,omitempty"`
	// A well license may be assigned to an entire planned well configuration at the time the                                         
	// license is granted. Other licenses may be assigned to specific well components.  Where                                         
	// the component is known, specific relationships are needed.                                                                     
	ApprovedWellIDs                                                                              []string                             `json:"ApprovedWellIDs,omitempty"`
	// The formation authorized for use. May not be the same as the projected formation at the                                        
	// final depth of a wellbore.                                                                                                     
	AuthorizedStratigraphicUnit                                                                  *string                              `json:"AuthorizedStratigraphicUnit,omitempty"`
	// For the formation specified in the license, the use that this formation may be used for,                                       
	// such as production, injection, disposal, storage etc.                                                                          
	AuthorizedStratigraphicUnitUseRoleID                                                         *string                              `json:"AuthorizedStratigraphicUnitUseRoleID,omitempty"`
	// Bidding round number for drilling rights that resulted in this license.                                                        
	BiddingRoundIdentifier                                                                       *string                              `json:"BiddingRoundIdentifier,omitempty"`
	// The date on which a license has expired.  Note that this may be different than the due                                         
	// date, particularly where extensions are granted or specific conditions as stated in the                                        
	// license are met or not met.                                                                                                    
	ExpiredDate                                                                                  *string                              `json:"ExpiredDate,omitempty"`
	// The date when the license has or is due to expire.  In many cases, the date when the                                           
	// license term will expire is stated in the license.  This date may therefore be a date in                                       
	// the future. There may be conditions under which the license can be extended.  Where this                                       
	// occurs, the extension should usually be captured as a new version of the license.                                              
	ExpiryDueDate                                                                                *string                              `json:"ExpiryDueDate,omitempty"`
	// Identify the business associate, most often a regulator or authorized agency, has granted                                      
	// the license.  In some cases, other authorities may grant licenses, attribute is not                                            
	// intended to be proscriptive.                                                                                                   
	GrantedByBusinessAssociateID                                                                 *string                              `json:"GrantedByBusinessAssociateID,omitempty"`
	// A Y/N flag indicating whether this license is currently either active / valid (Y) or                                           
	// inactive / invalid (N).                                                                                                        
	IsActive                                                                                     *bool                                `json:"IsActive,omitempty"`
	// When a license is delayed, set this flag to True.  Details about the application can be                                        
	// found in the application object.                                                                                               
	IsDelayed                                                                                    *bool                                `json:"IsDelayed,omitempty"`
	// When the license expires, set the expiry date to the appropriate date, and set this flag                                       
	// to True.                                                                                                                       
	IsExpired                                                                                    *bool                                `json:"IsExpired,omitempty"`
	// Details about conditions imposed on a license by an authority, a partner or other                                              
	// stakeholder.                                                                                                                   
	LicenseConditions                                                                            []AbstractWellLicenseCondition       `json:"LicenseConditions,omitempty"`
	// Date the well license was issued.  This date may not be the same as the date entered into                                      
	// the system.                                                                                                                    
	LicenseDate                                                                                  *string                              `json:"LicenseDate,omitempty"`
	// The business associate who is the contact representing the licensee for this license.                                          
	LicenseeContactBusinessAssociateID                                                           *string                              `json:"LicenseeContactBusinessAssociateID,omitempty"`
	// The licensee to whom this license has been granted.  Sometimes, the licensees may be an                                        
	// address for service, particularly for confidential operations. This is not necessarily                                         
	// the name of the operator or the owner of the well.                                                                             
	LicenseeID                                                                                   *string                              `json:"LicenseeID,omitempty"`
	// The date on which the license has been issued and comes into effect.  Normally, no                                             
	// operations that involve surface or subsurface disturbance may be started before this date.                                     
	LicenseIssuedDate                                                                            *string                              `json:"LicenseIssuedDate,omitempty"`
	// The primary term of the license as set by the agency granting the license.                                                     
	LicensePrimaryTerm                                                                           *float64                             `json:"LicensePrimaryTerm,omitempty"`
	// The date the permit or license was reissued. The regulatory approval normally expires                                          
	// after the primary term unless an extension is requested and granted.                                                           
	LicenseReissueDate                                                                           *string                              `json:"LicenseReissueDate,omitempty"`
	// The secondary term of the license, often 6 - 12 months in duration.  These are granted by                                      
	// the regulatory authority after requests for renewal are submitted by the operator or the                                       
	// address for service.                                                                                                           
	LicenseReissueTerm                                                                           *float64                             `json:"LicenseReissueTerm,omitempty"`
	// Remarks and narratives associated to the license.                                                                              
	LicenseRemarks                                                                               []AbstractRemark                     `json:"LicenseRemarks,omitempty"`
	// Services associated with the license.                                                                                          
	LicenseServices                                                                              []LicenseServiceElement              `json:"LicenseServices,omitempty"`
	// Details about LicenseStates, past and present.                                                                                 
	LicenseStates                                                                                []LicenseStateElement                `json:"LicenseStates,omitempty"`
	// The type of license granted is often based on codes and rules set out in legislation or                                        
	// regulation.  This license type attribute should indicate the exact type as specified in                                        
	// the license document.                                                                                                          
	LicenseType                                                                                  *string                              `json:"LicenseType,omitempty"`
	// Details about violations of conditions, past and present.                                                                      
	LicenseViolations                                                                            []AbstractWellLicenseViolation       `json:"LicenseViolations,omitempty"`
	// The reference to the operating environment of the well/wellbore this license applies to.                                       
	OperatingEnvironmentID                                                                       *string                              `json:"OperatingEnvironmentID,omitempty"`
	// Projected measured depth at which the drilling of the primary wellbore is planned to be                                        
	// terminated. When multiple wellbores are planned, this may be the depth of the deepest                                          
	// wellbore, depending on local rules.                                                                                            
	ProjectedMeasuredDepth                                                                       *float64                             `json:"ProjectedMeasuredDepth,omitempty"`
	// The stratigraphic unit that is proposed for final completion and production (or                                                
	// injection). Note that this may not be the formation at the planned final depth of the                                          
	// wellbore. The stratigraphic unit should be part of the ProjectedStratigraphicColumn.                                           
	ProjectedStratigraphicUnitID                                                                 *string                              `json:"ProjectedStratigraphicUnitID,omitempty"`
	// Projected true vertical depth of the well determined during the permitting of the well.                                        
	ProjectedTrueVerticalDepth                                                                   *float64                             `json:"ProjectedTrueVerticalDepth,omitempty"`
	// The section of  the regulation under which the license was granted. For Example, the type                                      
	// of permit (such as Rule 37 or Rule 38 in the State of Texas) that is given for the well.                                       
	RegulationSection                                                                            *string                              `json:"RegulationSection,omitempty"`
	// A reference table describing the overall structure of the rig with respect to the                                              
	// environment and function. For example land, barge, submersible, platform, jackup,                                              
	// drillship, semisub or artificial island.                                                                                       
	//                                                                                                                                
	// Sometimes specific types of rigs may be authorized by a license, particularly where                                            
	// environmental or access restrictions set specific requirements.                                                                
	RigTypeID                                                                                    *string                              `json:"RigTypeID,omitempty"`
	// The name of the set of formation names used for interpretations.  Different name sets may                                      
	// exist on a regional or basin basis, or may be developed by regulatory agencies, data                                           
	// vendors or operating companies.  Clarity about which name set is used is critical to                                           
	// ensuring that the name of the formation is not ambiguous.                                                                      
	StratigraphicColumnID                                                                        *string                              `json:"StratigraphicColumnID,omitempty"`
	// The measured elevation from a known reference datum to a permanent geodetic datum.  This                                       
	// measurement is the foundation for calculating and correlating depths from geodetic                                             
	// datums, which in turn allow depth correlation between wellbores.                                                               
	VerticalMeasurement                                                                          *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// The Well License Condition subset is necessarily abstract, because it is not possible to
// explicitly capture every kind of condition that may be imposed on a license by an
// authority, a partner or other stakeholder.  Conditions may be simple or complex, and are
// usually triggered by date or activity.  They also may specify requirements for how and
// when they must be completed.  License conditions are increasingly more rigorous,  and
// data submissions are  considered critical elements by most regulators. Some conditions
// are one time, and others are repeating.  In general, repeating conditions are tracked as
// obligations.
//
// Conditions often have to do with regulatory compliance, environmental stewardship,
// reporting operations, providing technical or business data, paying fees or obtaining
// additional approvals under specific circumstances.
//
// Failure to comply with license conditions can result in fines or other penalties, and
// license suspension or even revocation.
type AbstractWellLicenseCondition struct {
	// Narrative descriptive remarks that accompany the license condition. Could include the              
	// definition at which the values apply (such as 101.325 kilopascals and 15 degrees Celsius).         
	ConditionDescription                                                                         *string  `json:"ConditionDescription,omitempty"`
	// Names or code values assigned to a well license condition. Can include any type of                 
	// condition with the exception of values related to stratigraphic units (explicit),                  
	// Products (explicit) or values (use numeric values).                                                
	ConditionNames                                                                               []string `json:"ConditionNames,omitempty"`
	// The type of condition applied to the well license, such as flaring rate, venting rate,             
	// production rate, H2S content limit, emissions etc.                                                 
	ConditionTypeID                                                                              *string  `json:"ConditionTypeID,omitempty"`
	// The value applied to this condition. For example, an NOX emission limitation may be set            
	// at 0.02 kg / hr and the production rate for oil set at 10 m3/day.                                  
	ConditionValue                                                                               *float64 `json:"ConditionValue,omitempty"`
	// The contact person or organization that provides support for this condition.  Normally             
	// this would be someone at the agency who imposed the condition.                                     
	ContactBusinessAssociateID                                                                   *string  `json:"ContactBusinessAssociateID,omitempty"`
	// The state that must be achieved for the condition to become effective. For example, a              
	// report may be due 60 days after operations commence (or cease).                                    
	DueCondition                                                                                 *string  `json:"DueCondition,omitempty"`
	// The date that this condition must be fulfilled.                                                    
	DueDate                                                                                      *string  `json:"DueDate,omitempty"`
	// The frequency with which this condition must be met, such as an annual review. Where               
	// conditions are cycling in this way, please use the project (for work flow) or obligations          
	// ( for payments) module to track completions.                                                       
	DueFrequency                                                                                 *string  `json:"DueFrequency,omitempty"`
	// The period within which this condition must be satisfied, usually following completion of          
	// operations.                                                                                        
	DueTerm                                                                                      *float64 `json:"DueTerm,omitempty"`
	// The date on which this row of data first came into effect from a business perspective.             
	EffectiveDate                                                                                *string  `json:"EffectiveDate,omitempty"`
	// Unique identifier of this element in the parent's list of license conditions.                      
	ElementIdentifier                                                                            *string  `json:"ElementIdentifier,omitempty"`
	// The date on which this condition is no longer in effect for the well license.                      
	ExpiryDate                                                                                   *string  `json:"ExpiryDate,omitempty"`
	// The business associate who fulfilled this condition.                                               
	FulfilledBy                                                                                  *string  `json:"FulfilledBy,omitempty"`
	// Fulfilled data is the date that this condition was entirely completed or fulfilled.                
	// This date is assigned from the perspective of the business associate who fulfilled the             
	// condition.  Some conditions are ongoing, or repeat over time and are tracked as an                 
	// obligation.                                                                                        
	FulfilledDate                                                                                *string  `json:"FulfilledDate,omitempty"`
	// A flag indicating whether this condition is currently either active / valid (true) or              
	// inactive / invalid (false).                                                                        
	IsActive                                                                                     *bool    `json:"IsActive,omitempty"`
	// A Y/N flag indicating that the holder of the license is exempt from this condition.                
	IsExempt                                                                                     *string  `json:"IsExempt,omitempty"`
	// A flag indicating that this condition has been fulfilled. This is applicable when a                
	// condition is met once.                                                                             
	IsFulfilled                                                                                  *bool    `json:"IsFulfilled,omitempty"`
	// A stratigraphic column aggregating StratigraphicColumnInterpretations and eventually               
	// StratigraphicUnitInterpretations.                                                                  
	StratigraphicColumnID                                                                        *string  `json:"StratigraphicColumnID,omitempty"`
	// The optional column rank or level of StratigraphicRoleType (see StratigraphicRoleTypeID)           
	// that is identified.                                                                                
	StratigraphicColumnRankUnitTypeID                                                            *string  `json:"StratigraphicColumnRankUnitTypeID,omitempty"`
	// The type of stratigraphy, such as chronostratigraphic, lithostratigraphic,                         
	// biostratigraphic or sequence stratigraphic.                                                        
	StratigraphicRoleTypeID                                                                      *string  `json:"StratigraphicRoleTypeID,omitempty"`
	// The name of a stratigraphic unit that is named in a license condition.  This could be a            
	// formation in which aquifers must be protected, formations into which water or other waste          
	// disposal is authorized etc.                                                                        
	StratigraphicUnitInterpretationID                                                            *string  `json:"StratigraphicUnitInterpretationID,omitempty"`
	// When a product or other substance is named as an element in a well license condition, use          
	// this reference list to select the product or products.  Production, disposal, analysis,            
	// additives and other substances are valid as necessary to describe the condition.                   
	SubstanceID                                                                                  *string  `json:"SubstanceID,omitempty"`
	// The identity of any substance that escapes or spills, particularly when unintended.                
	// Intended substances and volumes are recorded as production values.                                 
	SubstanceLossID                                                                              *string  `json:"SubstanceLossID,omitempty"`
	// The type of loss experienced.  This may include fuel spills from a vehicle, gas emissions          
	// from a wellhead or feeder line, or any other substance.  This is an important part of              
	// carbon footprint analysis.                                                                         
	SubstanceLossTypeID                                                                          *string  `json:"SubstanceLossTypeID,omitempty"`
}

// Services for a well license may involve field work, office work, legal representation and
// more.  These services are specific to the license and its management.  Avoid using this
// subset for other services such as logging, coring, testing, drilling and so on.
type LicenseServiceElement struct {
	// The person or organization group who is the primary contact for this service.                       
	ContactBusinessAssociateID                                                                  *string    `json:"ContactBusinessAssociateID,omitempty"`
	// Narrative remarks about the service provided for the license.                                       
	Description                                                                                 *string    `json:"Description,omitempty"`
	// Unique identifier of this element in the parent's list of license services.                         
	ElementIdentifier                                                                           *string    `json:"ElementIdentifier,omitempty"`
	// The time of day on the end date when the service was completed.                                     
	EndTime                                                                                     *time.Time `json:"EndTime,omitempty"`
	// The business associate on whose behalf the service was provided.                                    
	RepresentedBusinessAssociateID                                                              *string    `json:"RepresentedBusinessAssociateID,omitempty"`
	// Service agents work on behalf of a licensee, and must be approved by the regulator. The             
	// service agent has legal authority, and the relationship between a regulator, a licensee             
	// is formal.  If the service agent changes, the regulator must be notified and approval for           
	// the change given. This is the date that the authority who granted the license gave                  
	// consent to change the service agent.                                                                
	ServiceAgentApprovedDate                                                                    *string    `json:"ServiceAgentApprovedDate,omitempty"`
	// The relationship between a licensee and service agent is formal.  When a service agent is           
	// discharged, regulatory notification, and sometimes approval, is required.                           
	ServiceAgentDischargeDate                                                                   *string    `json:"ServiceAgentDischargeDate,omitempty"`
	// The agent through whom a service is brokered or otherwise obtained.  Commonly used where            
	// regulations require the use of local agents, or where confidentiality is a concern.                 
	ServiceAgentID                                                                              *string    `json:"ServiceAgentID,omitempty"`
	// The business associate who provided the service, generally the supplier.                            
	ServiceByBusinessAssociateID                                                                *string    `json:"ServiceByBusinessAssociateID,omitempty"`
	// The business associate for whom this service was provided, generally the client or                  
	// customer.                                                                                           
	ServiceForBusinessAssociate                                                                 *string    `json:"ServiceForBusinessAssociate,omitempty"`
	// This attribute can be used to capture information about the quality of service.  Users of           
	// this attribute should be aware that this information may be considered private or                   
	// privileged, and in some situations data may become public, resulting in violation of                
	// certain laws.                                                                                       
	ServiceQualityTypeID                                                                        *string    `json:"ServiceQualityTypeID,omitempty"`
	// In some cases, it is necessary to order services in the sequence provided, particularly             
	// when there are relationships between the services. Use this number to organize services             
	// in the order that they were done in.  Note that some services are not necessarily                   
	// associated with a date sufficiently accurate to allow this sequencing to be reliably                
	// derived.                                                                                            
	ServiceSequenceNumber                                                                       *float64   `json:"ServiceSequenceNumber,omitempty"`
	// The service provided for the license.  Examples of services may be field related, such as           
	// surveys, or back office services such as address for service, accounting, or legal                  
	// representative.                                                                                     
	ServiceTypeID                                                                               *string    `json:"ServiceTypeID,omitempty"`
	// The time of start day when the service started.                                                     
	StartTime                                                                                   *time.Time `json:"StartTime,omitempty"`
}

// A specific well license status value belonging to a well license status class facet,
// which is assigned by a business
// associate and valid for a time interval. It identifies the facility the license status is
// valid for.
type LicenseStateElement struct {
	// Unique identifier of this element in the parent's list of license states.                        
	ElementIdentifier                                                                           *string `json:"ElementIdentifier,omitempty"`
	// A flag that indicates whether a particular status is currently in effect.  Historical            
	// status information can be retained for legal, administrative or analysis purposes.               
	// Future status information can be projected based on the terms of a license and may also          
	// be captured in this data object.                                                                 
	IsActive                                                                                    *bool   `json:"IsActive,omitempty"`
	// The specific status that is applicable, which belongs to a status class.  They are               
	// selected from values organized in a faceted taxonomy, where the status class is the name         
	// of a facet. Each status class should represent an element in a faceted taxonomy that             
	// reflects one perspective of the state or condition of a data object.                             
	LicenseStatusTypeID                                                                         *string `json:"LicenseStatusTypeID,omitempty"`
	// Identify the business associate who assigned this status.  A status is most commonly             
	// assigned by the operator, field contractor, contact for service or the regulatory agency.        
	StatusAssignedByID                                                                          *string `json:"StatusAssignedByID,omitempty"`
	// The date on which this status was first valid.  Note that a data object can have more            
	// than one status in effect at the same time, provided that there is no conflict or                
	// confusion created by doing so.                                                                   
	StatusEffectiveDate                                                                         *string `json:"StatusEffectiveDate,omitempty"`
	// The reason why this status has been assigned to a well license.  This is particularly            
	// important if a license has been cancelled, suspended or terminated by a regulatory               
	// authority.                                                                                       
	StatusReason                                                                                *string `json:"StatusReason,omitempty"`
	// The date on which this status is no longer valid.  A status can become invalid based on          
	// events or activities, because they have been superseded by a different status or even            
	// because status information is no longer relevant.                                                
	StatusTerminationDate                                                                       *string `json:"StatusTerminationDate,omitempty"`
	// Identify the wellbore for which this status is valid, particularly useful when a status          
	// is not applicable for the entire well configuration.  In the license, each wellbore may          
	// have a different status in terms of the license. Note that these are not well statuses,          
	// but license statuses.                                                                            
	WellboreID                                                                                  *string `json:"WellboreID,omitempty"`
	// Identify the well for which this status is valid, particularly useful when a status is           
	// applicable for the entire well configuration . Note that these are not well statuses, but        
	// license statuses.                                                                                
	WellID                                                                                      *string `json:"WellID,omitempty"`
}

// Violations of license conditions may have serious consequences, including penalties or
// suspension or revocation of the license.  Any condition may be violated, and the
// regulator may provide notice to the address for service that the violation must be
// remedied. These processes are complex, but this simplified subset of attributes allows
// basic information to be captured.
type AbstractWellLicenseViolation struct {
	// Unique identifier of this element in the parent's list of license violations.                     
	ElementIdentifier                                                                           *string  `json:"ElementIdentifier,omitempty"`
	// Indicates whether this violation is still in effect, or has not been fully resolved.              
	IsActive                                                                                    *bool    `json:"IsActive,omitempty"`
	// The liquid or gaseous volume or other quantity that was lost or that escaped.                     
	QuantityLost                                                                                *float64 `json:"QuantityLost,omitempty"`
	// The duration over which the volume loss was recorded, usually in hours or days.                   
	QuantityLostDuration                                                                        *float64 `json:"QuantityLostDuration,omitempty"`
	// The condition(s) in a license that have been violated.  This may be a relationship to the         
	// specific conditions. The ViolatedCondition value refers to an array element in                    
	// data.LicenseConditions[].                                                                         
	ViolatedCondition                                                                           *string  `json:"ViolatedCondition,omitempty"`
	// The consequence of the violation as assigned by the regulatory or other authority.                
	// Consequence may be financial, work to be done, reports to be submitted. In addition, the          
	// authority may suspend, terminate or otherwise revise a license by adding new conditions           
	// or obligations.  For each violation, there may be more than one consequences.                     
	ViolationConsequenceTypeIDs                                                                 []string `json:"ViolationConsequenceTypeIDs,omitempty"`
	// The date on which the violation was first on record, such as the date that the regulatory         
	// agency notified you about a problem, or the date when something such as a report was              
	// overdue. Violations may be triggered by operations or events (or failure to complete              
	// something) or may be reported by another party.                                                   
	ViolationDate                                                                               *string  `json:"ViolationDate,omitempty"`
	// A supporting narrative that describes the violation.  While in some cases the nature of           
	// the violations, others require detailed explanations.  For example, environmental                 
	// violations often require explanatory text).                                                       
	//                                                                                                   
	// In populating descriptions of the violation and the resolution, ensure that the contents          
	// are appropriate to the attribute.  Do not put resolution information in the violation             
	// description, for example.                                                                         
	ViolationDescription                                                                        *string  `json:"ViolationDescription,omitempty"`
	// The date on which a violation is determined to have been fully resolved.                          
	ViolationEndDate                                                                            *string  `json:"ViolationEndDate,omitempty"`
	// A short narrative description of the specific resolution of the violation, such as                
	// procedures modified, fence repaired, water disposal corrected etc.                                
	ViolationResolutionDescription                                                              *string  `json:"ViolationResolutionDescription,omitempty"`
	// The method by which a license violation has been resolved.  In some cases, more than one          
	// method must be used, so multiple entries may be required, with appropriate dates                  
	// associated.  Methods may be financial (fines or other payments), operational (procedures          
	// altered),  rectification (things fixed or moved) or conciliatory (remedies to citizens or         
	// other stakeholders).                                                                              
	ViolationResolutionMethodTypeIDs                                                            []string `json:"ViolationResolutionMethodTypeIDs,omitempty"`
	// The date that this violation was resolved by submitting required information, paying              
	// fines, amending procedures etc. and necessary release notice provided (usually by the             
	// regulator).  This may or may not be the same as the ViolationEndDate.                             
	ViolationResolvedDate                                                                       *string  `json:"ViolationResolvedDate,omitempty"`
	// The date on which this violation was determined to be in effect.  This may not be the             
	// same date as the violation actually first began, ViolationDate.                                   
	ViolationStartDate                                                                          *string  `json:"ViolationStartDate,omitempty"`
	// The type of violation of a license that is being recorded. Can be as simple as failure to         
	// submit necessary reports or something more difficult such as improper procedures.                 
	// Grouping these violations by class supports reporting, metrics and analysis.                      
	ViolationTypeID                                                                             *string  `json:"ViolationTypeID,omitempty"`
	// Identify the wellbore  that is in violation. The condition violated can be tracked via            
	// ViolatedCondition referring to an object in data.LicenseConditions[].                             
	WellboreID                                                                                  *string  `json:"WellboreID,omitempty"`
	// Identify the well  that is in violation. The condition violated can be tracked via                
	// ViolatedCondition referring to an object in data.LicenseConditions[].                             
	WellID                                                                                      *string  `json:"WellID,omitempty"`
}

// A well log acquisition project includes the mobilization of resources i.e. financial,
// equipment and people, to the well site to conduct a well logging activity and acquisition
// of well log information. May be referred to as a Logging Job.
type WellLogAcquisition struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellLogAcquisitionData        `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type WellLogAcquisitionData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                           
	ContractIDs                                                                                 []string                             `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                           
	Contractors                                                                                 []Contractors                        `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                         
	FundsAuthorizations                                                                         []FundsAuthorizations                `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                                 
	Operator                                                                                    *string                              `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                                     
	// could reference a separate Persons master data object.                                                                        
	Personnel                                                                                   []PurplePersonnel                    `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                             
	ProjectBeginDate                                                                            *time.Time                           `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                             
	ProjectEndDate                                                                              *time.Time                           `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                       
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                      
	// If used, the "Source" property should identify that source system.                                                            
	ProjectID                                                                                   *string                              `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                                    
	ProjectName                                                                                 *string                              `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                                       
	// business identifiers.                                                                                                         
	ProjectNames                                                                                []AbstractAliasNames                 `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                                       
	// acquisition project it is like receiver interval, source depth, source type.  In the case                                     
	// of a processing project, it is like replacement velocity, reference datum above mean sea                                      
	// level.                                                                                                                        
	ProjectSpecifications                                                                       []ProjectSpecifications              `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                          
	ProjectStates                                                                               []ProjectStates                      `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                                   
	Purpose                                                                                     *string                              `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                          
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                                      
	ActivityStates                                                                              []AbstractActivityState              `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                                      
	// values.                                                                                                                       
	ActivityTemplateID                                                                          *string                              `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                                     
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                                       
	// empty.                                                                                                                        
	LastActivityState                                                                           *AbstractActivityState               `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                         
	// objects which are inputs and outputs of the activity.                                                                         
	Parameters                                                                                  []DefaultValueElement                `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                             
	ParentProjectID                                                                             *string                              `json:"ParentProjectID,omitempty"`
	// The tools run in the hole for the purpose of acquiring well log measurements. Defined as                                      
	// a single tool string run below the reference datum e.g. KB, RT. A log run may consist of                                      
	// one or many Log Passes.                                                                                                       
	LogRuns                                                                                     []LogRuns                            `json:"LogRuns,omitempty"`
	// The vertical measurement reference for this well logging acquisition activity. This                                           
	// object defines the vertical reference datum for the measured depths.                                                          
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// The Wellbore where the well log acquisition was recorded.                                                                     
	WellboreID                                                                                  *string                              `json:"WellboreID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// A log run identifies a single series of combinable logging tools that are entered into
// the wellbore below the reference depth (e.g. KB, the).
type LogRuns struct {
	// The relationship to a service or contractor organisation, typically the producer or                       
	// logging contractor for this particular and identifiable Log Run. Typically this is the                    
	// same as the overall well log acquisition.                                                                 
	// Only populate this property if a particular and identifiable Log Run has a different or                   
	// specifically identifiable service or contracting company to the Well Log Acquisition                      
	// project as a whole.                                                                                       
	// The overall contracting company is captured under the `Project.Contractors[]` array. This                 
	// `Project.Contractors[]` array can capture all Contractors associated with the overall                     
	// Well Log Acquisition project activity, but can not be associated to a specific Log Run.                   
	ContractorCompanyID                                                                         *string          `json:"ContractorCompanyID,omitempty"`
	// The conveyance method used to acquire the log data e.g. wireline, LWD, pipe conveyed.                     
	ConveyanceMethodID                                                                          *string          `json:"ConveyanceMethodID,omitempty"`
	// An array of well log generic tool types used in this Log Run.                                             
	GenericToolTypeIDs                                                                          []string         `json:"GenericToolTypeIDs,omitempty"`
	// The logging passes within this single logging run.                                                        
	LogPasses                                                                                   []LogPasses      `json:"LogPasses,omitempty"`
	// A unique identifier for a specific log run. This can be a number or alphanumeric.                         
	LogRunID                                                                                    *string          `json:"LogRunID,omitempty"`
	// Remarks specific to this log run.                                                                         
	Remarks                                                                                     []AbstractRemark `json:"Remarks,omitempty"`
	// The smallest value/first value of the log index for this log run.                                         
	SamplingStart                                                                               *float64         `json:"SamplingStart,omitempty"`
	// The largest value/last value of the log index for this log run.                                           
	SamplingStop                                                                                *float64         `json:"SamplingStop,omitempty"`
	// A relationship to the document record within the OSDU Platform containing the tool sensor                 
	// offsets, for example a tool string diagram or report.                                                     
	SensorOffsetDocumentID                                                                      *string          `json:"SensorOffsetDocumentID,omitempty"`
	// An array of PWLS tool mnemonics used in this Log Run.                                                     
	ToolMnemonicIDs                                                                             []string         `json:"ToolMnemonicIDs,omitempty"`
	// The type of fluid in the wellbore at time of logging                                                      
	// e.g. oil based mud, water based mud, water. This property could be overridden by the                      
	// LogPass wellbore fluid type.                                                                              
	WellboreFluidTypeID                                                                         *string          `json:"WellboreFluidTypeID,omitempty"`
}

// A log pass identifies a single acquisition event or job.  A log run my contain one or
// multiple log passes.
type LogPasses struct {
	// The flowing condition of the wellbore during the log acquisition e.g. Static or Dynamic                  
	FlowingConditionID                                                                         *string          `json:"FlowingConditionID,omitempty"`
	// The type of hole logged in this pass e.g. open hole, cased hole, cemented hole.                          
	HoleTypeIDs                                                                                []string         `json:"HoleTypeIDs,omitempty"`
	// The index reference type for this log pass e.g. depth, time, counter, calendar time.                     
	// IndexTypeID corresponds to WellLog data.SamplingDomainTypeID.                                            
	IndexTypeID                                                                                *string          `json:"IndexTypeID,omitempty"`
	// A boolean property indicating the sampling mode of the index or reference curve for this                 
	// Log Pass.                                                                                                
	//                                                                                                          
	// True means all reference curve values are regularly spaced (see SamplingInterval). False                 
	// means irregular or discrete sample spacing.                                                              
	IsRegularSamplingInterval                                                                  *bool            `json:"IsRegularSamplingInterval,omitempty"`
	// The direction of logging for this log pass.                                                              
	// Specifies whether the logging information was collected in an downward or upward                         
	// direction or stationary.                                                                                 
	LoggingDirectionID                                                                         *string          `json:"LoggingDirectionID,omitempty"`
	LogPassID                                                                                  *string          `json:"LogPassID,omitempty"`
	// The type of log pass such as Calibration Pass, Main Pass, Repeated Pass.                                 
	PassTypeID                                                                                 *string          `json:"PassTypeID,omitempty"`
	// Remarks specific to this log pass.                                                                       
	Remarks                                                                                    []AbstractRemark `json:"Remarks,omitempty"`
	// A reference to the Sample Acquisition Job for samples acquired in the same logging pass.                 
	// This can be one or more Sample Acquisition Jobs.                                                         
	SampleAcquisitionJobIDs                                                                    []string         `json:"SampleAcquisitionJobIDs,omitempty"`
	// For regularly sampled curves this property holds the sampling interval for this Log                      
	// Pass.                                                                                                    
	// For a non regular sampling interval this property is not set. The                                        
	// IsRegularSamplingInterval flag indicates whether the SamplingInterval is required.                       
	SamplingInterval                                                                           *float64         `json:"SamplingInterval,omitempty"`
	// The smallest value/first value of the log index for this log pass.                                       
	SamplingStart                                                                              *float64         `json:"SamplingStart,omitempty"`
	// The largest value/last value of the log index for this log pass.                                         
	SamplingStop                                                                               *float64         `json:"SamplingStop,omitempty"`
	// The type of fluid in the wellbore at time of acquisition of the log pass e.g. oil based                  
	// mud, water based mud, water.                                                                             
	// Only populate if it is different to the wellbore fluid identified in the log run.                        
	WellboreFluidTypeID                                                                        *string          `json:"WellboreFluidTypeID,omitempty"`
}

// Information about a single well. A well is a unique surface location from which wellbores
// are drilled into the Earth for the purpose of either (1) finding or producing underground
// resources; or (2) providing services related to the production of underground resources.
type WellPlanningWell struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellPlanningWellData          `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type WellPlanningWellData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Identifier of the Geopolitical Entity that describes the Block associated to the Licence                              
	BlockID                                                                                     *string                      `json:"BlockID,omitempty"`
	// Date and time license was issued                                                                                      
	IssueDateTime                                                                               *float64                     `json:"IssueDateTime,omitempty"`
	// Legal name of the well as described within the Licence                                                                
	LicenceName                                                                                 *string                      `json:"LicenceName,omitempty"`
	// License number of the well                                                                                            
	LicenceNumber                                                                               *string                      `json:"LicenceNumber,omitempty"`
	// Name of Well Planning well. Derived from the record identified by WellID.                                             
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// Interest for Operator, Commonly in percent                                                                            
	OperatorPercentInterest                                                                     *float64                     `json:"OperatorPercentInterest,omitempty"`
	// The UTC time zone in which  well is located - expressed as ISO 8601.                                                  
	TimeZone                                                                                    *string                      `json:"TimeZone,omitempty"`
	// Proposed values : Mining, Petroleum, Scientific, Geothermal, Storage, Surface Coring,                                 
	// Water well                                                                                                            
	TypeWell                                                                                    *string                      `json:"TypeWell,omitempty"`
	// Identifier of the parent well.                                                                                        
	WellID                                                                                      *string                      `json:"WellID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A planned wellbore extending from a point at the earth's surface to the maximum point of
// penetration (planned total depth).
type WellPlanningWellbore struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellPlanningWellboreData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type WellPlanningWellboreData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// The definitive description of the hole section associated with this wellbore                                                  
	HoleSectionID                                                                               *string                              `json:"HoleSectionID,omitempty"`
	// Name of Well Planning wellbore. Derived from the record identified by WellboreID.                                             
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// A reference to a set of one or more CasingDesigns associated to the planned Wellbore.                                         
	PlannedCasingDesigns                                                                        []string                             `json:"PlannedCasingDesigns,omitempty"`
	// A reference to a set of one or more HoleSections associated to the planned Wellbore.                                          
	PlannedHoleSections                                                                         []string                             `json:"PlannedHoleSections,omitempty"`
	// A reference to the descriptive object that holds the information about the planned                                            
	// lithology associated with the wellbore                                                                                        
	PlannedLithologyID                                                                          *string                              `json:"PlannedLithologyID,omitempty"`
	// A reference to the Well Activity Program that holds the planned programs for each phase                                       
	// of the Wellbore                                                                                                               
	PlannedWellActivityProgramID                                                                *string                              `json:"PlannedWellActivityProgramID,omitempty"`
	// A reference to the PPFGDataset that holds the information about the pore pressure                                             
	// associated with the definitive drilling program                                                                               
	PPFGDatasetID                                                                               *string                              `json:"PPFGDatasetID,omitempty"`
	// A reference to the objects that holds the information about the definitive version of the                                     
	// different survey programs associated with the wellbore                                                                        
	SurveyProgramIDs                                                                            []string                             `json:"SurveyProgramIDs,omitempty"`
	// The drill targets associated with this definitive Drilling Program                                                            
	TargetID                                                                                    *string                              `json:"TargetID,omitempty"`
	// The zero depth point (ZDP) definition for the all measured depths related to this                                             
	// WellPlanningWellbore.                                                                                                         
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Identifier of the parent wellbore.                                                                                            
	WellboreID                                                                                  *string                              `json:"WellboreID,omitempty"`
	// The formation markers associated with the definitive Drilling Program                                                         
	WellboreMarkerSetID                                                                         *string                              `json:"WellboreMarkerSetID,omitempty"`
	// Identifier of the parent well side-car for the well planning domain.                                                          
	WellPlanningWellID                                                                          *string                              `json:"WellPlanningWellID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// A Well Pressure Test Acquisition Job is a subset of a Well Pressure Test Acquisition
// Program - usually assigned to a single contracting company and summarizing the overall
// testing phases (multiple measurement stations, run over multiple passes from one or more
// runs).
// The Acquisition String can change between two different runs - and at each station, only
// a subset of the "in place" string can be activated - which subset can evolve from 1
// measurement to the other.
type WellPressureTestAcquisitionJob struct {
	// The access control tags associated with this entity.                                                                          
	ACL                                                                                          AccessControlList                   `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                            
	// derived.                                                                                                                      
	Ancestry                                                                                     *ParentList                         `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                      
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                         
	CreateTime                                                                                   *time.Time                          `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                       
	// System.                                                                                                                       
	CreateUser                                                                                   *string                             `json:"createUser,omitempty"`
	Data                                                                                         *WellPressureTestAcquisitionJobData `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                        
	// version.                                                                                                                      
	ID                                                                                           *string                             `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                                  
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                      
	// scheme follows the semantic versioning, https://semver.org/.                                                                  
	Kind                                                                                         string                              `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                        
	// legal tags is managed by the Compliance Service.                                                                              
	Legal                                                                                        LegalMetaData                       `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                       
	// definitions.                                                                                                                  
	Meta                                                                                         []FrameOfReferenceMetaDataItem      `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                      
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                             
	ModifyTime                                                                                   *time.Time                          `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                                    
	ModifyUser                                                                                   *string                             `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                       
	// as keys and values.                                                                                                           
	Tags                                                                                         map[string]string                   `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                               
	Version                                                                                      *int64                              `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// A Project is a business activity that consumes financial and human resources and produces
// (digital) work products.
//
// The activity abstraction for projects and surveys (master-data).
type WellPressureTestAcquisitionJobData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// DEPRECATED: This security classification is merely decorative; the security                                           
	// classification associated to the legal.legaltags[] is evaluated by platform services                                  
	// instead. Previously:  Classifies the security level of the resource.                                                  
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// References to applicable agreements in external contract database system of record.                                   
	ContractIDs                                                                                 []string                     `json:"ContractIDs,omitempty"`
	// References to organisations which supplied services to the Project.                                                   
	Contractors                                                                                 []Contractors                `json:"Contractors,omitempty"`
	// The history of expenditure approvals.                                                                                 
	FundsAuthorizations                                                                         []FundsAuthorizations        `json:"FundsAuthorizations,omitempty"`
	// The organisation which controlled the conduct of the project.                                                         
	Operator                                                                                    *string                      `json:"Operator,omitempty"`
	// List of key individuals supporting the Project.  This could be Abstracted for re-use, and                             
	// could reference a separate Persons master data object.                                                                
	Personnel                                                                                   []PurplePersonnel            `json:"Personnel,omitempty"`
	// The date and time when the Project was initiated.                                                                     
	ProjectBeginDate                                                                            *time.Time                   `json:"ProjectBeginDate,omitempty"`
	// The date and time when the Project was completed.                                                                     
	ProjectEndDate                                                                              *time.Time                   `json:"ProjectEndDate,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                               
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                              
	// If used, the "Source" property should identify that source system.                                                    
	ProjectID                                                                                   *string                      `json:"ProjectID,omitempty"`
	// The common or preferred name of a Project.                                                                            
	ProjectName                                                                                 *string                      `json:"ProjectName,omitempty"`
	// DEPRECATED: please use data.NameAliases. The history of Project names, codes, and other                               
	// business identifiers.                                                                                                 
	ProjectNames                                                                                []AbstractAliasNames         `json:"ProjectNames,omitempty"`
	// General parameters defining the configuration of the Project.  In the case of a seismic                               
	// acquisition project it is like receiver interval, source depth, source type.  In the case                             
	// of a processing project, it is like replacement velocity, reference datum above mean sea                              
	// level.                                                                                                                
	ProjectSpecifications                                                                       []ProjectSpecifications      `json:"ProjectSpecifications,omitempty"`
	// The history of life cycle states that the Project has been through..                                                  
	ProjectStates                                                                               []ProjectStates              `json:"ProjectStates,omitempty"`
	// Description of the objectives of a Project.                                                                           
	Purpose                                                                                     *string                      `json:"Purpose,omitempty"`
	// The (non-overlapping) historical activity states and effective start and termination                                  
	// dates. The last state is replicated in the single LastActivityState for simpler queries.                              
	ActivityStates                                                                              []AbstractActivityState      `json:"ActivityStates,omitempty"`
	// The relation to the ActivityTemplate carrying expected parameter definitions and default                              
	// values.                                                                                                               
	ActivityTemplateID                                                                          *string                      `json:"ActivityTemplateID,omitempty"`
	// The current or last state this activity transitioned to. It is a copy of the last element                             
	// in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay                               
	// empty.                                                                                                                
	LastActivityState                                                                           *AbstractActivityState       `json:"LastActivityState,omitempty"`
	// General parameter value used in one instance of activity.  Includes reference to data                                 
	// objects which are inputs and outputs of the activity.                                                                 
	Parameters                                                                                  []DefaultValueElement        `json:"Parameters,omitempty"`
	// The relationship to a parent project acting as a parent activity.                                                     
	ParentProjectID                                                                             *string                      `json:"ParentProjectID,omitempty"`
	// The Identifier (from any external system) of the Acquisition Program, this specific                                   
	// acquisition job is derived from                                                                                       
	AcquisitionProgramExternalID                                                                *string                      `json:"AcquisitionProgramExternalID,omitempty"`
	// Array of unitary Acquisition Runs - eg. Period of the job included between two                                        
	// consecutive extraction of the acquisition string from the ground.                                                     
	PressureTestsAcquisitionRuns                                                                []AcquisitionRun             `json:"PressureTestsAcquisitionRuns"`
	// Identifier of the InterpretationSet (can be MarkerSet or IntervalSet) array, used as a                                
	// prognosed reference to define the test stations                                                                       
	PrognosedInterpretationSetID                                                                *string                      `json:"PrognosedInterpretationSetID,omitempty"`
	// Identifier of the WellLog capturing the final processed measures along the wellbore                                   
	ReferencePressureProcessedLogID                                                             *string                      `json:"ReferencePressureProcessedLogID,omitempty"`
	// Time stamped remarks associated with the pressure test acquisition activity                                           
	Remarks                                                                                     *string                      `json:"Remarks,omitempty"`
	// The identifier of the wellbore where Pressure Test was conducted                                                      
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// A Run is defined between two consecutive "extractions" from the ground" from acquisition
// string - meaning a single run has necessarily the same probes and gauges installed. A run
// is made of multiple (at least 2) passes.
type AcquisitionRun struct {
	// Identifiers of he conveyance method used to acquire the pressure test data - if not an                                        
	// acquired log leave empty/absent.                                                                                              
	// Mainly a unique ID - but can be multiple in case of stuck pipe,…                                                              
	ConveyanceMethodIDs                                                                         []string                             `json:"ConveyanceMethodIDs,omitempty"`
	// The vertical measurement reference for this well testing acquisition activity. This                                           
	// object defines the vertical reference datum for the measured depths.                                                          
	DepthReferenceSystem                                                                        *AbstractFacilityVerticalMeasurement `json:"DepthReferenceSystem,omitempty"`
	// Type of gauge used for the test                                                                                               
	InstalledGaugeTypeIDs                                                                       []string                             `json:"InstalledGaugeTypeIDs,omitempty"`
	// Type of probe used for the test                                                                                               
	InstalledProbeTypeIDs                                                                       []string                             `json:"InstalledProbeTypeIDs"`
	// Main Category of the Presssure Test - could be Formation Test, Transient Test,                                                
	// Interference Transient Tests,…                                                                                                
	PressureTestCategoryID                                                                      []string                             `json:"PressureTestCategoryID,omitempty"`
	// Array of unitary Acquisition Stations - which is defined as a depth constant, stop, of                                        
	// the acquisition string, within a hole - where one or many tests can be tried out                                              
	PressureTestsAcquisitionStations                                                            []AcquisitionStation                 `json:"PressureTestsAcquisitionStations"`
	// Identifier of the tubular assembly this run went through                                                                      
	RunAssemblyID                                                                               *string                              `json:"RunAssemblyID,omitempty"`
	// Date and Time of the end of this specific run                                                                                 
	RunEndDate                                                                                  *time.Time                           `json:"RunEndDate,omitempty"`
	// Identifier of this specific run within the Job. (Can be a Sequential Number, a GUID,… but                                     
	// must be unique)                                                                                                               
	RunIdentifier                                                                               *int64                               `json:"RunIdentifier,omitempty"`
	// Alphanumeric Name of the Run as captured in the acquisition report                                                            
	RunName                                                                                     *string                              `json:"RunName,omitempty"`
	// Date and Time of the start of this specific run                                                                               
	RunStartDate                                                                                *time.Time                           `json:"RunStartDate,omitempty"`
	// Identifier of the Tool Name (Branded Model Name) in the associated reference data list                                        
	ToolNameID                                                                                  string                               `json:"ToolNameID"`
	// Tool String Description - a long concatenation of the tools used for testing services                                         
	// such as MDT                                                                                                                   
	ToolStringDescription                                                                       *string                              `json:"ToolStringDescription,omitempty"`
	// The type of fluid in the wellbore at time of logging                                                                          
	// e.g. oil based mud, water based mud, water.                                                                                   
	WellboreFluidTypeID                                                                         *string                              `json:"WellboreFluidTypeID,omitempty"`
}

// A Station is defined as a static point within the pass - where one or many tests can be
// tried out.
type AcquisitionStation struct {
	// / Isolated Interval) present at this test station                                                 
	CompletionID                                                                                *string  `json:"CompletionID,omitempty"`
	// Measured Depth of the station                                                                     
	PressurePointMeasuredDepth                                                                  *float64 `json:"PressurePointMeasuredDepth,omitempty"`
	// List of Names - in the reference InterpretationSet (Marker or Interval) array - of the            
	// prognosed interpretations to be tested at this station                                            
	PrognosedInterpretationNames                                                                []string `json:"PrognosedInterpretationNames,omitempty"`
	// Array of Identifier of the reservoir units (Reservoir, Segment, Sectors,…) expected to be         
	// tested at this station                                                                            
	PrognosedReservoirUnitsIDs                                                                  []string `json:"PrognosedReservoirUnitsIDs,omitempty"`
	StationIdentifier                                                                           *int64   `json:"StationIdentifier,omitempty"`
}

// A fixed location hosting one or more wells e.g. a Pad, Platform, Subsea Template for the
// purpose of oil and gas development. A WellSiteStructure can host an array of one or more
// Well Slot Locations. The WellSiteStructure schema is not intended to describe equipments
// and non-well facilities also present on location.
type WellSiteStructure struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellSiteStructureData         `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type WellSiteStructureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                          
	ExistenceKind                                                                               *string                         `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                   
	ResourceCurationStatus                                                                      *string                         `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                           
	ResourceHomeRegionID                                                                        *string                         `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                        
	ResourceHostRegionIDs                                                                       []string                        `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                         
	ResourceLifecycleStatus                                                                     *string                         `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                           
	ResourceSecurityClassification                                                              *string                         `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                           
	// organization, agency, system, internal team, or individual. For informational purposes                                   
	// only, the list of sources is not governed.                                                                               
	Source                                                                                      *string                         `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                    
	// based on data quality. Clarifications: Since Certified is the highest classification of                                  
	// suitable quality, any further change or versioning of a Certified record should be                                       
	// carefully considered and justified. If a Technical Assurance value is not populated then                                 
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                 
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceID                                                                        *string                         `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                   
	// multiple types or multiple values of the same type.                                                                      
	GeoContexts                                                                                 []AbstractGeoContext            `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                 
	// should include all the identifiers).                                                                                     
	NameAliases                                                                                 []AbstractAliasNames            `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                   
	// not appropriate).                                                                                                        
	SpatialLocation                                                                             *AbstractSpatialLocation        `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                  
	// one or more workflows/personas based on data quality and reviewer's decisions.                                           
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                   
	// further change or versioning of a Certified record should be carefully considered and                                    
	// justified. If a Technical Assurance value is not populated then one can assume the data                                  
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                     
	// values are not intended to be used for the identification of a single "preferred" or                                     
	// "definitive" record by comparison with other records.                                                                    
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance    `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                           
	// master-data record's overall suitability for general business consumption based on data                                  
	// quality. Clarifications: Since Certified is the highest classification of suitable                                       
	// quality, any further change or versioning of a Certified record should be carefully                                      
	// considered and justified. If a Technical Assurance value is not populated then one can                                   
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                         
	// Technical Assurance values are not intended to be used for the identification of a single                                
	// "preferred" or "definitive" record by comparison with other records.                                                     
	TechnicalAssuranceTypeID                                                                    *string                         `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                 
	VersionCreationReason                                                                       *string                         `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                       
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	CurrentOperatorID                                                                           *string                         `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                               
	DataSourceOrganisationID                                                                    *string                         `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                         
	FacilityDescription                                                                         *string                         `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                           
	FacilityEvents                                                                              []AbstractFacilityEvent         `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                  
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                 
	// If used, the "Source" property should identify that source system.                                                       
	FacilityID                                                                                  *string                         `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                    
	FacilityName                                                                                *string                         `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                     
	// which this facility is/has been known.                                                                                   
	FacilityNameAliases                                                                         []AbstractAliasNames            `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                   
	FacilityOperators                                                                           []AbstractFacilityOperator      `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                      
	// permit number, rig name etc.                                                                                             
	FacilitySpecifications                                                                      []AbstractFacilitySpecification `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                          
	FacilityStates                                                                              []AbstractFacilityState         `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                      
	FacilityTypeID                                                                              *string                         `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                         
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                 
	InitialOperatorID                                                                           *string                         `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                
	OperatingEnvironmentID                                                                      *string                         `json:"OperatingEnvironmentID,omitempty"`
	// The default vertical coordinate reference system used in the vertical measurements for a                                 
	// well or wellbore if absent from input vertical measurements and there is no other                                        
	// recourse for obtaining a valid CRS.                                                                                      
	DefaultVerticalCRSID                                                                        *string                         `json:"DefaultVerticalCRSID,omitempty"`
	// The default datum reference point, or zero depth point, used to determine other points                                   
	// vertically in a well.  References an entry in the VerticalMeasurements array.                                            
	DefaultVerticalMeasurementID                                                                *string                         `json:"DefaultVerticalMeasurementID,omitempty"`
	// Description on how to drive to the location                                                                              
	DrivingInstructions                                                                         *string                         `json:"DrivingInstructions,omitempty"`
	// Is the WellSiteStructure origin coordinate for the Field                                                                 
	IsFieldCentre                                                                               *bool                           `json:"IsFieldCentre,omitempty"`
	// Location Description text                                                                                                
	LocationDescription                                                                         *string                         `json:"LocationDescription,omitempty"`
	// Location Uncertainty for the WellsiteStructure location coordinates                                                      
	LocationUncertainty                                                                         *AbstractLocationUncertainty    `json:"LocationUncertainty,omitempty"`
	// Free text remarks                                                                                                        
	Remarks                                                                                     []AbstractRemark                `json:"Remarks,omitempty"`
	// Diameter or Radius of the Slot                                                                                           
	SlotSize                                                                                    *float64                        `json:"SlotSize,omitempty"`
	// The type of Wellsite Structure                                                                                           
	StructureTypeID                                                                             *string                         `json:"StructureTypeID,omitempty"`
	// List of all elevations pertaining to the well site structure like, ground level/water                                    
	// depth, default rig elevation, mud line elevation, etc.                                                                   
	VerticalMeasurements                                                                        []FluffyVerticalMeasurementID   `json:"VerticalMeasurements,omitempty"`
	// List of Well Slots and their coordinates                                                                                 
	WellSlots                                                                                   []WellSlots                     `json:"WellSlots,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}          `json:"ExtensionProperties,omitempty"`
}

// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference elevation for all measured depths within
// the BHA Run record. If this is not populated, the VerticalMeasurement is derived from the
// Wellbore default Vertical Measure Elevation.
//
// A location along a wellbore, _usually_ associated with some aspect of the drilling of the
// wellbore, but not with any intersecting _subsurface_ natural surfaces.
//
// Either a self-contained vertical reference for the depths in this blowout preventer or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the Coring record.
//
// The vertical measurement reference for a wellbore or borehole acquisition platform,
// defining the vertical reference datum, elevation and relevant depths.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the HoleSection record. If this is not populated, the
// VerticalMeasurement is derived from the Wellbore.
//
// The vertical measurement reference for the interval tops and bases. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
//
// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,
// depth correction used to correlate MDs to original drilling rig MD. References an entry
// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the RockSample record. If this is not populated, the
// VerticalMeasurement is derived from the Coring.
//
// Information on the list of all depths and elevations pertaining to the target wellbore
// involved in the Sample Acquisition event, like, plug back measured depth, total measured
// depth, KB elevation. The property is always used except with WellheadSampleAcquisition,
// SeparatorSampleAcquisition, FacilitySampleAcquisition
//
// The vertical measurement reference for VSP surveys, which defines the vertical reference
// datum for the measured depths.
//
// References an entry in the VerticalMeasurements array of the Rig, Well or Wellbore
// identified by VerticalReferenceEntityID or a standalone vertical reference which defines
// the vertical reference datum for all measured depths of the SurveyProgram record. For
// planned SurveyPrograms, this property may be absent; then depths are relative to Planned
// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds
// the depth reference in data.VerticalMeasurement.
//
// Either a self-contained vertical reference for the depths in this TubularAssembly or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// The measured elevation from a known reference datum to a permanent geodetic datum.  This
// measurement is the foundation for calculating and correlating depths from geodetic
// datums, which in turn allow depth correlation between wellbores.
//
// The vertical measurement reference for this well logging acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The zero depth point (ZDP) definition for the all measured depths related to this
// WellPlanningWellbore.
//
// The vertical measurement reference for this well testing acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The vertical measurement reference for the interval top and base. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
type FluffyVerticalMeasurementID struct {
	// The optional relationship to the rig, which was used while this vertical measurement was             
	// in active use.                                                                                       
	RigID                                                                                        *string    `json:"RigID,omitempty"`
	// The ID for a distinct vertical measurement within the WellSiteStructure                              
	// VerticalMeasurements array so that it may be referenced by other vertical measurements if            
	// necessary.                                                                                           
	VerticalMeasurementID                                                                        *string    `json:"VerticalMeasurementID,omitempty"`
	// The date and time at which a vertical measurement instance becomes effective.                        
	EffectiveDateTime                                                                            *time.Time `json:"EffectiveDateTime,omitempty"`
	// The date and time at which a vertical measurement instance is no longer in effect.                   
	TerminationDateTime                                                                          *time.Time `json:"TerminationDateTime,omitempty"`
	// A vertical coordinate reference system defines the origin for height or depth values. It             
	// is expected that either VerticalCRSID or VerticalReferenceID reference is provided in a              
	// given vertical measurement array object, but not both.                                               
	VerticalCRSID                                                                                *string    `json:"VerticalCRSID,omitempty"`
	// The value of the elevation or depth. Depth is positive downwards from a vertical                     
	// reference or geodetic datum along a path, which can be vertical; elevation is positive               
	// upwards from a geodetic datum along a vertical path. Either can be negative.                         
	VerticalMeasurement                                                                          *float64   `json:"VerticalMeasurement,omitempty"`
	// Text which describes a vertical measurement in detail.                                               
	VerticalMeasurementDescription                                                               *string    `json:"VerticalMeasurementDescription,omitempty"`
	// Specifies Measured Depth, True Vertical Depth, or Elevation.                                         
	VerticalMeasurementPathID                                                                    *string    `json:"VerticalMeasurementPathID,omitempty"`
	// Specifies Driller vs Logger.                                                                         
	VerticalMeasurementSourceID                                                                  *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (TD, Plugback, Kickoff, Drill Floor, Rotary               
	// Table...).                                                                                           
	VerticalMeasurementTypeID                                                                    *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The unit of measure for the vertical measurement. If a unit of measure and a vertical CRS            
	// are provided, the unit of measure provided is taken over the unit of measure from the CRS.           
	VerticalMeasurementUnitOfMeasureID                                                           *string    `json:"VerticalMeasurementUnitOfMeasureID,omitempty"`
	// This relationship identifies the entity (aka record) in which the VerticalReferenceID is             
	// found; It could be a different OSDU entity or a self-reference. For example, a Wellbore              
	// VerticalMeasurement may reference a member of a VerticalMeasurements[] array in its                  
	// parent Well record. Alternatively, VerticalReferenceEntityID may be populated with the ID            
	// of its own Wellbore record to make explicit that VerticalReferenceID is intended to be               
	// found in this record, not another.                                                                   
	VerticalReferenceEntityID                                                                    *string    `json:"VerticalReferenceEntityID,omitempty"`
	// The reference point from which the relative vertical measurement is made. This is only               
	// populated if the measurement has no VerticalCRSID specified. The value entered must match            
	// the VerticalMeasurementID for another vertical measurement array element in Wellbore or              
	// Well or in a related parent facility. The relationship should be  declared explicitly in             
	// VerticalReferenceEntityID. Any chain of measurements must ultimately resolve to a                    
	// Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID is provided in            
	// a given vertical measurement array object, but not both.                                             
	VerticalReferenceID                                                                          *string    `json:"VerticalReferenceID,omitempty"`
	// Specifies what directional survey or wellpath was used to calculate the TVD.                         
	WellboreTVDTrajectoryID                                                                      *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// List of slots for the WellSiteStructure. A slot is a circular opening on a platform
// wellhead deck or subsea template from which to construct a well.
type WellSlots struct {
	// Remarks                                                                                                      
	Remarks                                                                            *string                      `json:"Remarks,omitempty"`
	// Slot Identifier, may be used by a Well to associate to a Slot                                                
	SlotID                                                                             *string                      `json:"SlotID,omitempty"`
	// Slot Local East/-West Coordinate offset from WellSiteStructure Centre location                               
	SlotLocalEWOffset                                                                  *float64                     `json:"SlotLocalEWOffset,omitempty"`
	// Slot Local North/-South Coordinate offset from WellSiteStructure Centre location                             
	SlotLocalNSOffset                                                                  *float64                     `json:"SlotLocalNSOffset,omitempty"`
	// Slot Location                                                                                                
	SlotLocation                                                                       *AbstractSpatialLocation     `json:"SlotLocation,omitempty"`
	// Slot Local Uncertainty within the Wellsite Structure                                                         
	SlotLocationUncertainty                                                            *AbstractLocationUncertainty `json:"SlotLocationUncertainty,omitempty"`
	// Slot Name or Number                                                                                          
	SlotName                                                                           *string                      `json:"SlotName,omitempty"`
}

// A hole in the ground extending from a point at the earth's surface to the maximum point
// of penetration.
type Wellbore struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreData                  `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
//
// The schema fragment included by facilities. A facility is a grouping of equipment that is
// located within a specific geographic boundary or site and that is used in the context of
// energy-related activities such as exploration, extraction, generation, storage,
// processing, disposal, supply, or transfer. Clarifications: (1) A facility may be surface
// or subsurface located. (2) Usually facility equipment is commonly owned or operated. (3)
// Industry definitions may vary and differ from this one. This schema fragment is included
// by Well, Wellbore, Rig, as well as Tank Batteries, Compression Stations, Storage
// Facilities, Wind Farms, Wind Turbines, Mining Facilities, etc., once these types are
// included in to the OSDU.
type WellboreData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                            
	ExistenceKind                                                                                *string                          `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                     
	ResourceCurationStatus                                                                       *string                          `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                             
	ResourceHomeRegionID                                                                         *string                          `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                          
	ResourceHostRegionIDs                                                                        []string                         `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                           
	ResourceLifecycleStatus                                                                      *string                          `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                             
	ResourceSecurityClassification                                                               *string                          `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                             
	// organization, agency, system, internal team, or individual. For informational purposes                                     
	// only, the list of sources is not governed.                                                                                 
	Source                                                                                       *string                          `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                      
	// based on data quality. Clarifications: Since Certified is the highest classification of                                    
	// suitable quality, any further change or versioning of a Certified record should be                                         
	// carefully considered and justified. If a Technical Assurance value is not populated then                                   
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                   
	// Technical Assurance values are not intended to be used for the identification of a single                                  
	// "preferred" or "definitive" record by comparison with other records.                                                       
	TechnicalAssuranceID                                                                         *string                          `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                     
	// multiple types or multiple values of the same type.                                                                        
	GeoContexts                                                                                  []AbstractGeoContext             `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                   
	// should include all the identifiers).                                                                                       
	NameAliases                                                                                  []AbstractAliasNames             `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                     
	// not appropriate).                                                                                                          
	SpatialLocation                                                                              *AbstractSpatialLocation         `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                    
	// one or more workflows/personas based on data quality and reviewer's decisions.                                             
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                     
	// further change or versioning of a Certified record should be carefully considered and                                      
	// justified. If a Technical Assurance value is not populated then one can assume the data                                    
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                       
	// values are not intended to be used for the identification of a single "preferred" or                                       
	// "definitive" record by comparison with other records.                                                                      
	TechnicalAssurances                                                                          []AbstractTechnicalAssurance     `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                             
	// master-data record's overall suitability for general business consumption based on data                                    
	// quality. Clarifications: Since Certified is the highest classification of suitable                                         
	// quality, any further change or versioning of a Certified record should be carefully                                        
	// considered and justified. If a Technical Assurance value is not populated then one can                                     
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                           
	// Technical Assurance values are not intended to be used for the identification of a single                                  
	// "preferred" or "definitive" record by comparison with other records.                                                       
	TechnicalAssuranceTypeID                                                                     *string                          `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                   
	VersionCreationReason                                                                        *string                          `json:"VersionCreationReason,omitempty"`
	// The current operator organization ID; the organization ID may also be found in the                                         
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                   
	CurrentOperatorID                                                                            *string                          `json:"CurrentOperatorID,omitempty"`
	// The main source of the header information.                                                                                 
	DataSourceOrganisationID                                                                     *string                          `json:"DataSourceOrganisationID,omitempty"`
	// A descriptive text or remark about the Facility.                                                                           
	FacilityDescription                                                                          *string                          `json:"FacilityDescription,omitempty"`
	// A list of key facility events.                                                                                             
	FacilityEvents                                                                               []AbstractFacilityEvent          `json:"FacilityEvents,omitempty"`
	// Native identifier from a Master Data Management System or other trusted source external                                    
	// to OSDU - stored here in order to allow for multi-system connection and synchronization.                                   
	// If used, the "Source" property should identify that source system.                                                         
	FacilityID                                                                                   *string                          `json:"FacilityID,omitempty"`
	// Name of the Facility.                                                                                                      
	FacilityName                                                                                 *string                          `json:"FacilityName,omitempty"`
	// DEPRECATED: please use data.NameAliases. Alternative names, including historical, by                                       
	// which this facility is/has been known.                                                                                     
	FacilityNameAliases                                                                          []AbstractAliasNames             `json:"FacilityNameAliases,omitempty"`
	// The history of operator organizations of the facility.                                                                     
	FacilityOperators                                                                            []AbstractFacilityOperator       `json:"FacilityOperators,omitempty"`
	// facilitySpecification maintains the specification like slot name, wellbore drilling                                        
	// permit number, rig name etc.                                                                                               
	FacilitySpecifications                                                                       []AbstractFacilitySpecification  `json:"FacilitySpecifications,omitempty"`
	// The history of life cycle states the facility has been through.                                                            
	FacilityStates                                                                               []AbstractFacilityState          `json:"FacilityStates,omitempty"`
	// The definition of a kind of capability to perform a business function or a service.                                        
	FacilityTypeID                                                                               *string                          `json:"FacilityTypeID,omitempty"`
	// A initial operator organization ID; the organization ID may also be found in the                                           
	// FacilityOperatorOrganisationID of the FacilityOperator array providing the actual dates.                                   
	InitialOperatorID                                                                            *string                          `json:"InitialOperatorID,omitempty"`
	// Identifies the Facility's general location as being onshore vs. offshore.                                                  
	OperatingEnvironmentID                                                                       *string                          `json:"OperatingEnvironmentID,omitempty"`
	// Business Intention [Well Business Intention] is the general purpose for which resources                                    
	// are approved for drilling a new well or subsequent wellbore(s).                                                            
	BusinessIntentionID                                                                          *string                          `json:"BusinessIntentionID,omitempty"`
	// Condition [Well Condition] is the operational state of a wellbore component relative to                                    
	// the Role [Well Role].                                                                                                      
	ConditionID                                                                                  *string                          `json:"ConditionID,omitempty"`
	// The default datum reference point, or zero depth point, used to determine other points                                     
	// vertically in a wellbore.  References an entry in the Vertical Measurements array of this                                  
	// wellbore.                                                                                                                  
	DefaultVerticalMeasurementID                                                                 *string                          `json:"DefaultVerticalMeasurementID,omitempty"`
	// SRN of Wellbore Trajectory which is considered the authoritative or preferred version.                                     
	DefinitiveTrajectoryID                                                                       *string                          `json:"DefinitiveTrajectoryID,omitempty"`
	// The history of drilling reasons of the wellbore.                                                                           
	DrillingReasons                                                                              []AbstractWellboreDrillingReason `json:"DrillingReasons,omitempty"`
	// Fluid Direction [Well Fluid Direction] is the flow direction of the wellhead stream. The                                   
	// facet value can change over the life of the wellbore.                                                                      
	FluidDirectionID                                                                             *string                          `json:"FluidDirectionID,omitempty"`
	// The name of the formation encountered at total depth. The value is not controlled by any                                   
	// reference value list.                                                                                                      
	FormationNameAtTotalDepth                                                                    *string                          `json:"FormationNameAtTotalDepth,omitempty"`
	// The bottom hole location of the wellbore denoted by a specified geographic horizontal                                      
	// coordinate reference system (Horizontal CRS), such as WGS84, NAD27, or ED50. If both                                       
	// GeographicBottomHoleLocation and ProjectedBottomHoleLocation properties are populated on                                   
	// this wellbore, they must identify the same point, just in different CRSs.                                                  
	GeographicBottomHoleLocation                                                                 *AbstractSpatialLocation         `json:"GeographicBottomHoleLocation,omitempty"`
	// The list of past and present interests associated with the time period they were/are valid                                 
	HistoricalInterests                                                                          []FluffyHistoricalInterest       `json:"HistoricalInterests,omitempty"`
	// Business Interest [Well Interest Type] describes whether a company currently considers a                                   
	// wellbore entity or its data to be a real or planned asset, and if so, the nature of and                                    
	// motivation for that company's interest.                                                                                    
	InterestTypeID                                                                               *string                          `json:"InterestTypeID,omitempty"`
	// This is a pointer to the parent wellbore. The wellbore that starts from top has no parent.                                 
	KickOffWellbore                                                                              *string                          `json:"KickOffWellbore,omitempty"`
	// Outcome [Well Drilling Outcome] is the result of attempting to accomplish the Business                                     
	// Intention [Well Business Intention].                                                                                       
	OutcomeID                                                                                    *string                          `json:"OutcomeID,omitempty"`
	// DEPRECATED: Please use PrimaryProductTypeID instead, which refers to the narrower                                          
	// WellProductType. The primary material injected/produced from the wellbore.                                                 
	PrimaryMaterialID                                                                            *string                          `json:"PrimaryMaterialID,omitempty"`
	// Product Type [Well Product Type] is the physical product(s) that can be attributed to any                                  
	// wellbore component. A Primary Product Significance identifies the Product Type that is                                     
	// most significant.                                                                                                          
	PrimaryProductTypeID                                                                         *string                          `json:"PrimaryProductTypeID,omitempty"`
	// The bottom hole location of the wellbore denoted by a projected horizontal coordinate                                      
	// reference system (Horizontal CRS), such a UTM zone. 'Projected' in this property does not                                  
	// mean 'planned' or 'projected-to-bit'. If both GeographicBottomHoleLocation and                                             
	// ProjectedBottomHoleLocation properties are populated on this wellbore, they must identify                                  
	// the same point, just in different CRSs.                                                                                    
	ProjectedBottomHoleLocation                                                                  *AbstractSpatialLocation         `json:"ProjectedBottomHoleLocation,omitempty"`
	// Role [Well Role] is the current purpose, whether planned or actual. If there are multiple                                  
	// Roles among a wellbore's components, the well may be assigned the facet value with the                                     
	// highest significance. The value of Role may change over the Life Cycle.                                                    
	RoleID                                                                                       *string                          `json:"RoleID,omitempty"`
	// Product Type [Well Product Type] is the physical product(s) that can be attributed to any                                  
	// wellbore component. A Secondary Product Significance identifies the Product Type that is                                   
	// the second most significant.                                                                                               
	SecondaryProductTypeID                                                                       *string                          `json:"SecondaryProductTypeID,omitempty"`
	// A number that indicates the order in which wellbores were drilled.                                                         
	SequenceNumber                                                                               *int64                           `json:"SequenceNumber,omitempty"`
	// Product Type [Well Product Type] is the physical product(s) that can be attributed to any                                  
	// wellbore component. A Show Product Significance identifies a Product Type present in                                       
	// non-commercial quantity.                                                                                                   
	ShowProductTypeID                                                                            *string                          `json:"ShowProductTypeID,omitempty"`
	// Identifies the status of a wellbore component in a way that may combine and-or summarize                                   
	// concepts found in other status facets. For example, a Wellbore Status Summary of Gas                                       
	// Injector Shut-in, which contains commonly desired business information, combines concepts                                  
	// from Product Type, Fluid Direction, and Condition.                                                                         
	StatusSummaryID                                                                              *string                          `json:"StatusSummaryID,omitempty"`
	// The Formation of interest for which the Wellbore is drilled to interact with. The                                          
	// Wellbore may terminate in a lower formation if the requirement is to drill through the                                     
	// entirety of the target formation, therefore this is not necessarily the Formation at TD.                                   
	TargetFormation                                                                              *string                          `json:"TargetFormation,omitempty"`
	// Product Type [Well Product Type] is the physical product(s) that can be attributed to any                                  
	// wellbore component. A Tertiary Product Significance identifies the Product Type that is                                    
	// the third most significant.                                                                                                
	TertiaryProductTypeID                                                                        *string                          `json:"TertiaryProductTypeID,omitempty"`
	// Profile Type [Wellbore Trajectory Type] is the general geometry of the wellbore relative                                   
	// to the vertical plane. The specific criteria for Profile Type may vary by operator or                                      
	// regulator. The facet value may change if conditions encountered during drilling are not                                    
	// what was planned or permitted.                                                                                             
	TrajectoryTypeID                                                                             *string                          `json:"TrajectoryTypeID,omitempty"`
	// List of all depths and elevations pertaining to the wellbore, like, plug back measured                                     
	// depth, total measured depth, KB elevation                                                                                  
	VerticalMeasurements                                                                         []TentacledVerticalMeasurementID `json:"VerticalMeasurements,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                  
	// for this Well has ever been FinancialNonOperated in the past.                                                              
	WasBusinessInterestFinancialNonOperated                                                      *bool                            `json:"WasBusinessInterestFinancialNonOperated,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                  
	// for this Well has ever been FinancialOperated in the past.                                                                 
	WasBusinessInterestFinancialOperated                                                         *bool                            `json:"WasBusinessInterestFinancialOperated,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                  
	// for this Well has ever been Obligatory in the past.                                                                        
	WasBusinessInterestObligatory                                                                *bool                            `json:"WasBusinessInterestObligatory,omitempty"`
	// Identifies, for the purpose of current use, if the Business Interest [Well Interest Type]                                  
	// for this Well has ever been Technical in the past.                                                                         
	WasBusinessInterestTechnical                                                                 *bool                            `json:"WasBusinessInterestTechnical,omitempty"`
	// The array of WellActivityPhaseType and associated Cost values.                                                             
	WellboreCosts                                                                                []WellboreCost                   `json:"WellboreCosts,omitempty"`
	// The relationship to a reference-data record explaining the reason why this wellbore was                                    
	// drilled.                                                                                                                   
	WellboreReasonID                                                                             *string                          `json:"WellboreReasonID,omitempty"`
	// DEPRECATED: Added accidentally in version 1.1.0. Please use the original TrajectoryTypeID                                  
	// instead. Profile Type [Wellbore Trajectory Type] is the general geometry of the wellbore                                   
	// relative to the vertical plane. The specific criteria for Profile Type may vary by                                         
	// operator or regulator. The facet value may change if conditions encountered during                                         
	// drilling are not what was planned or permitted.                                                                            
	WellboreTrajectoryTypeID                                                                     *string                          `json:"WellboreTrajectoryTypeID,omitempty"`
	WellID                                                                                       *string                          `json:"WellID,omitempty"`
	ExtensionProperties                                                                          map[string]interface{}           `json:"ExtensionProperties,omitempty"`
}

// Purpose for drilling a wellbore, which often is an indication of the level of risk.
type AbstractWellboreDrillingReason struct {
	// Identifier of the drilling reason type for the corresponding time period.                       
	DrillingReasonTypeID                                                                    *string    `json:"DrillingReasonTypeID,omitempty"`
	// The date and time at which the event becomes effective.                                         
	EffectiveDateTime                                                                       *time.Time `json:"EffectiveDateTime,omitempty"`
	// The Lahee classification, based on the traditional, commonly accepted, scheme to                
	// categorize wells by the general degree of risk assumed by the operator at the time of           
	// drilling.                                                                                       
	LaheeClassID                                                                            *string    `json:"LaheeClassID,omitempty"`
	// A remark or comment explaining the drilling reason or LaheeClass assignment.                    
	Remark                                                                                  *string    `json:"Remark,omitempty"`
	// The date and time at which the event is no longer in effect.                                    
	TerminationDateTime                                                                     *time.Time `json:"TerminationDateTime,omitempty"`
}

// A 'well interest' at some time period as defined by effective and termination date.
type FluffyHistoricalInterest struct {
	// The date and time at which the well interest type becomes effective.                            
	EffectiveDateTime                                                                          *string `json:"EffectiveDateTime,omitempty"`
	// Business Interest [Well Interest Type] describes whether a company currently considers a        
	// wellbore or its data to be a real or planned asset, and if so, the nature of and                
	// motivation for that company's interest.                                                         
	InterestTypeID                                                                             *string `json:"InterestTypeID,omitempty"`
	// The date and time at which the well interest type is no longer in effect.                       
	TerminationDateTime                                                                        *string `json:"TerminationDateTime,omitempty"`
}

// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference elevation for all measured depths within
// the BHA Run record. If this is not populated, the VerticalMeasurement is derived from the
// Wellbore default Vertical Measure Elevation.
//
// A location along a wellbore, _usually_ associated with some aspect of the drilling of the
// wellbore, but not with any intersecting _subsurface_ natural surfaces.
//
// Either a self-contained vertical reference for the depths in this blowout preventer or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the Coring record.
//
// The vertical measurement reference for a wellbore or borehole acquisition platform,
// defining the vertical reference datum, elevation and relevant depths.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the HoleSection record. If this is not populated, the
// VerticalMeasurement is derived from the Wellbore.
//
// The vertical measurement reference for the interval tops and bases. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
//
// ID to the Zero Depth Point elevation for depths contained in the perf job incl intervals,
// depth correction used to correlate MDs to original drilling rig MD. References an entry
// in the Vertical Measurement array for the Well parented by the wellbore via WellboreID.
//
// References an entry in the VerticalMeasurements array for the Wellbore identified by
// WellboreID, or a standalone vertical reference which defines the vertical reference datum
// for all measured depths of the RockSample record. If this is not populated, the
// VerticalMeasurement is derived from the Coring.
//
// Information on the list of all depths and elevations pertaining to the target wellbore
// involved in the Sample Acquisition event, like, plug back measured depth, total measured
// depth, KB elevation. The property is always used except with WellheadSampleAcquisition,
// SeparatorSampleAcquisition, FacilitySampleAcquisition
//
// The vertical measurement reference for VSP surveys, which defines the vertical reference
// datum for the measured depths.
//
// References an entry in the VerticalMeasurements array of the Rig, Well or Wellbore
// identified by VerticalReferenceEntityID or a standalone vertical reference which defines
// the vertical reference datum for all measured depths of the SurveyProgram record. For
// planned SurveyPrograms, this property may be absent; then depths are relative to Planned
// wellbore ZDP. Navigate via WellboreID to the side-car WellPlanningWellbore, which holds
// the depth reference in data.VerticalMeasurement.
//
// Either a self-contained vertical reference for the depths in this TubularAssembly or a
// reference (VerticalReferenceID) to an element in data.VerticalMeasurements[] in the
// entity defined by VerticalReferenceEntityID e.g. the parent Well.
//
// The measured elevation from a known reference datum to a permanent geodetic datum.  This
// measurement is the foundation for calculating and correlating depths from geodetic
// datums, which in turn allow depth correlation between wellbores.
//
// The vertical measurement reference for this well logging acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The zero depth point (ZDP) definition for the all measured depths related to this
// WellPlanningWellbore.
//
// The vertical measurement reference for this well testing acquisition activity. This
// object defines the vertical reference datum for the measured depths.
//
// The vertical measurement reference for the interval top and base. Either
// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an
// external vertical reference defined in the object VerticalReferenceEntityID) are
// populated.
type TentacledVerticalMeasurementID struct {
	// The relationship to the rig, which was used while this vertical measurement was in active            
	// use.                                                                                                 
	RigID                                                                                        *string    `json:"RigID,omitempty"`
	// The ID for a distinct vertical measurement within the Wellbore VerticalMeasurements array            
	// so that it may be referenced by other vertical measurements if necessary.                            
	VerticalMeasurementID                                                                        *string    `json:"VerticalMeasurementID,omitempty"`
	// The date and time at which a vertical measurement instance becomes effective.                        
	EffectiveDateTime                                                                            *time.Time `json:"EffectiveDateTime,omitempty"`
	// The date and time at which a vertical measurement instance is no longer in effect.                   
	TerminationDateTime                                                                          *time.Time `json:"TerminationDateTime,omitempty"`
	// A vertical coordinate reference system defines the origin for height or depth values. It             
	// is expected that either VerticalCRSID or VerticalReferenceID reference is provided in a              
	// given vertical measurement array object, but not both.                                               
	VerticalCRSID                                                                                *string    `json:"VerticalCRSID,omitempty"`
	// The value of the elevation or depth. Depth is positive downwards from a vertical                     
	// reference or geodetic datum along a path, which can be vertical; elevation is positive               
	// upwards from a geodetic datum along a vertical path. Either can be negative.                         
	VerticalMeasurement                                                                          *float64   `json:"VerticalMeasurement,omitempty"`
	// Text which describes a vertical measurement in detail.                                               
	VerticalMeasurementDescription                                                               *string    `json:"VerticalMeasurementDescription,omitempty"`
	// Specifies Measured Depth, True Vertical Depth, or Elevation.                                         
	VerticalMeasurementPathID                                                                    *string    `json:"VerticalMeasurementPathID,omitempty"`
	// Specifies Driller vs Logger.                                                                         
	VerticalMeasurementSourceID                                                                  *string    `json:"VerticalMeasurementSourceID,omitempty"`
	// Specifies the type of vertical measurement (TD, Plugback, Kickoff, Drill Floor, Rotary               
	// Table...).                                                                                           
	VerticalMeasurementTypeID                                                                    *string    `json:"VerticalMeasurementTypeID,omitempty"`
	// The unit of measure for the vertical measurement. If a unit of measure and a vertical CRS            
	// are provided, the unit of measure provided is taken over the unit of measure from the CRS.           
	VerticalMeasurementUnitOfMeasureID                                                           *string    `json:"VerticalMeasurementUnitOfMeasureID,omitempty"`
	// This relationship identifies the entity (aka record) in which the VerticalReferenceID is             
	// found; It could be a different OSDU entity or a self-reference. For example, a Wellbore              
	// VerticalMeasurement may reference a member of a VerticalMeasurements[] array in its                  
	// parent Well record. Alternatively, VerticalReferenceEntityID may be populated with the ID            
	// of its own Wellbore record to make explicit that VerticalReferenceID is intended to be               
	// found in this record, not another.                                                                   
	VerticalReferenceEntityID                                                                    *string    `json:"VerticalReferenceEntityID,omitempty"`
	// The reference point from which the relative vertical measurement is made. This is only               
	// populated if the measurement has no VerticalCRSID specified. The value entered must match            
	// the VerticalMeasurementID for another vertical measurement array element in Wellbore or              
	// Well or in a related parent facility. The relationship should be  declared explicitly in             
	// VerticalReferenceEntityID. Any chain of measurements must ultimately resolve to a                    
	// Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID is provided in            
	// a given vertical measurement array object, but not both.                                             
	VerticalReferenceID                                                                          *string    `json:"VerticalReferenceID,omitempty"`
	// Specifies what directional survey or wellpath was used to calculate the TVD.                         
	WellboreTVDTrajectoryID                                                                      *string    `json:"WellboreTVDTrajectoryID,omitempty"`
}

// A cost value associated to a WellActivityPhaseType value.
type WellboreCost struct {
	// The activity type, to which the Cost property is attributed to. The intended target         
	// reference-data type is WellActivityType; Wellbore:1.3.0 and Wellbore:1.4.0 used             
	// WellActivityPhaseType incorrectly.                                                          
	ActivityTypeID                                                                        *string  `json:"ActivityTypeID,omitempty"`
	// The cost value associated with the WellActivityPhaseType.                                   
	Cost                                                                                  *float64 `json:"Cost,omitempty"`
}

// Describes the physical structures for a borehole
type WellboreArchitecture struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreArchitectureData      `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type WellboreArchitectureData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                       
	ExistenceKind                                                                               *string                      `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                
	ResourceCurationStatus                                                                      *string                      `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                        
	ResourceHomeRegionID                                                                        *string                      `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                     
	ResourceHostRegionIDs                                                                       []string                     `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                      
	ResourceLifecycleStatus                                                                     *string                      `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                        
	ResourceSecurityClassification                                                              *string                      `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                        
	// organization, agency, system, internal team, or individual. For informational purposes                                
	// only, the list of sources is not governed.                                                                            
	Source                                                                                      *string                      `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                 
	// based on data quality. Clarifications: Since Certified is the highest classification of                               
	// suitable quality, any further change or versioning of a Certified record should be                                    
	// carefully considered and justified. If a Technical Assurance value is not populated then                              
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                              
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceID                                                                        *string                      `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                
	// multiple types or multiple values of the same type.                                                                   
	GeoContexts                                                                                 []AbstractGeoContext         `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                              
	// should include all the identifiers).                                                                                  
	NameAliases                                                                                 []AbstractAliasNames         `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                
	// not appropriate).                                                                                                     
	SpatialLocation                                                                             *AbstractSpatialLocation     `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                               
	// one or more workflows/personas based on data quality and reviewer's decisions.                                        
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                
	// further change or versioning of a Certified record should be carefully considered and                                 
	// justified. If a Technical Assurance value is not populated then one can assume the data                               
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                  
	// values are not intended to be used for the identification of a single "preferred" or                                  
	// "definitive" record by comparison with other records.                                                                 
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                        
	// master-data record's overall suitability for general business consumption based on data                               
	// quality. Clarifications: Since Certified is the highest classification of suitable                                    
	// quality, any further change or versioning of a Certified record should be carefully                                   
	// considered and justified. If a Technical Assurance value is not populated then one can                                
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                             
	// "preferred" or "definitive" record by comparison with other records.                                                  
	TechnicalAssuranceTypeID                                                                    *string                      `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                              
	VersionCreationReason                                                                       *string                      `json:"VersionCreationReason,omitempty"`
	// Description of the Hole Sections for this architecture                                                                
	HoleSectionIDs                                                                              []string                     `json:"HoleSectionIDs"`
	// Description of the Installed tubular associated to this architecture                                                  
	InstalledTubulars                                                                           []InstalledTubular           `json:"InstalledTubulars"`
	// Name of Wellbore Architecture                                                                                         
	Name                                                                                        *string                      `json:"Name,omitempty"`
	// A reference to the wellbore that is the subject of this activity plan                                                 
	WellboreID                                                                                  string                       `json:"WellboreID"`
	ExtensionProperties                                                                         map[string]interface{}       `json:"ExtensionProperties,omitempty"`
}

// Geometrical Description of tubular assembly as installed in the wellbore
type InstalledTubular struct {
	// The measured depth at the base of the tubular                                    
	MeasuredDepthBase                                                          *float64 `json:"MeasuredDepthBase,omitempty"`
	// The  error associated with the measured depth at the base of the tubular         
	MeasuredDepthErrorBase                                                     *float64 `json:"MeasuredDepthErrorBase,omitempty"`
	// The error associated with the measured depth at the top of the tubular           
	MeasuredDepthErrorTop                                                      *float64 `json:"MeasuredDepthErrorTop,omitempty"`
	// The measured depth at the top of the tubular                                     
	MeasuredDepthTop                                                           *float64 `json:"MeasuredDepthTop,omitempty"`
	// Identifier of the tubular assembly actually installed or to be installed         
	TubularAssemblyID                                                          string   `json:"TubularAssemblyID"`
}

// A measured depth range within a Wellbore that is constructed to put the Wellbore annulus
// in contact with one or more stratigraphic zones for the purpose of injection, production
// or service. WellboreOpening interval ranges are always stratigraphically aligned,
// regardless of type.
type WellboreOpening struct {
	// The access control tags associated with this entity.                                                                     
	ACL                                                                                          AccessControlList              `json:"acl"`
	// The links to data, which constitute the inputs, from which this record instance is                                       
	// derived.                                                                                                                 
	Ancestry                                                                                     *ParentList                    `json:"ancestry,omitempty"`
	// Timestamp of the time at which initial version of this OSDU resource object was created.                                 
	// Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                    
	CreateTime                                                                                   *time.Time                     `json:"createTime,omitempty"`
	// The user reference, which created the first version of this resource object. Set by the                                  
	// System.                                                                                                                  
	CreateUser                                                                                   *string                        `json:"createUser,omitempty"`
	Data                                                                                         *WellboreOpeningData           `json:"data,omitempty"`
	// Previously called ResourceID or SRN which identifies this OSDU resource object without                                   
	// version.                                                                                                                 
	ID                                                                                           *string                        `json:"id,omitempty"`
	// The schema identification for the OSDU resource object following the pattern                                             
	// {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning                                 
	// scheme follows the semantic versioning, https://semver.org/.                                                             
	Kind                                                                                         string                         `json:"kind"`
	// The entity's legal tags and compliance status. The actual contents associated with the                                   
	// legal tags is managed by the Compliance Service.                                                                         
	Legal                                                                                        LegalMetaData                  `json:"legal"`
	// The Frame of Reference meta data section linking the named properties to self-contained                                  
	// definitions.                                                                                                             
	Meta                                                                                         []FrameOfReferenceMetaDataItem `json:"meta,omitempty"`
	// Timestamp of the time at which this version of the OSDU resource object was created. Set                                 
	// by the System. The value is a combined date-time string in ISO-8601 given in UTC.                                        
	ModifyTime                                                                                   *time.Time                     `json:"modifyTime,omitempty"`
	// The user reference, which created this version of this resource object. Set by the System.                               
	ModifyUser                                                                                   *string                        `json:"modifyUser,omitempty"`
	// A generic dictionary of string keys mapping to string value. Only strings are permitted                                  
	// as keys and values.                                                                                                      
	Tags                                                                                         map[string]string              `json:"tags,omitempty"`
	// The version number of this OSDU resource; set by the framework.                                                          
	Version                                                                                      *int64                         `json:"version,omitempty"`
}

// Common resources to be injected at root 'data' level for every entity, which is
// persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
//
// Properties shared with all master-data schema instances.
type WellboreOpeningData struct {
	// Where does this data resource sit in the cradle-to-grave span of its existence?                                               
	ExistenceKind                                                                               *string                              `json:"ExistenceKind,omitempty"`
	// Describes the current Curation status.                                                                                        
	ResourceCurationStatus                                                                      *string                              `json:"ResourceCurationStatus,omitempty"`
	// The name of the home [cloud environment] region for this OSDU resource object.                                                
	ResourceHomeRegionID                                                                        *string                              `json:"ResourceHomeRegionID,omitempty"`
	// The name of the host [cloud environment] region(s) for this OSDU resource object.                                             
	ResourceHostRegionIDs                                                                       []string                             `json:"ResourceHostRegionIDs,omitempty"`
	// Describes the current Resource Lifecycle status.                                                                              
	ResourceLifecycleStatus                                                                     *string                              `json:"ResourceLifecycleStatus,omitempty"`
	// Classifies the security level of the resource.                                                                                
	ResourceSecurityClassification                                                              *string                              `json:"ResourceSecurityClassification,omitempty"`
	// The entity that produced the record, or from which it is received; could be an                                                
	// organization, agency, system, internal team, or individual. For informational purposes                                        
	// only, the list of sources is not governed.                                                                                    
	Source                                                                                      *string                              `json:"Source,omitempty"`
	// DEPRECATED: Describes a record's overall suitability for general business consumption                                         
	// based on data quality. Clarifications: Since Certified is the highest classification of                                       
	// suitable quality, any further change or versioning of a Certified record should be                                            
	// carefully considered and justified. If a Technical Assurance value is not populated then                                      
	// one can assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                      
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceID                                                                        *string                              `json:"TechnicalAssuranceID,omitempty"`
	// List of geographic entities which provide context to the master data. This may include                                        
	// multiple types or multiple values of the same type.                                                                           
	GeoContexts                                                                                 []AbstractGeoContext                 `json:"GeoContexts,omitempty"`
	// Alternative names, including historical, by which this master data is/has been known (it                                      
	// should include all the identifiers).                                                                                          
	NameAliases                                                                                 []AbstractAliasNames                 `json:"NameAliases,omitempty"`
	// The spatial location information such as coordinates, CRS information (left empty when                                        
	// not appropriate).                                                                                                             
	SpatialLocation                                                                             *AbstractSpatialLocation             `json:"SpatialLocation,omitempty"`
	// Describes a record's overall suitability for general business consumption in context of                                       
	// one or more workflows/personas based on data quality and reviewer's decisions.                                                
	// Clarifications: Since Certified is the highest classification of suitable quality, any                                        
	// further change or versioning of a Certified record should be carefully considered and                                         
	// justified. If a Technical Assurance value is not populated then one can assume the data                                       
	// has not been evaluated or its quality is unknown (=Unevaluated). Technical Assurance                                          
	// values are not intended to be used for the identification of a single "preferred" or                                          
	// "definitive" record by comparison with other records.                                                                         
	TechnicalAssurances                                                                         []AbstractTechnicalAssurance         `json:"TechnicalAssurances,omitempty"`
	// DEPRECATED: (in favor of more nuanced TechnicalAssurances[] array) Describes a                                                
	// master-data record's overall suitability for general business consumption based on data                                       
	// quality. Clarifications: Since Certified is the highest classification of suitable                                            
	// quality, any further change or versioning of a Certified record should be carefully                                           
	// considered and justified. If a Technical Assurance value is not populated then one can                                        
	// assume the data has not been evaluated or its quality is unknown (=Unevaluated).                                              
	// Technical Assurance values are not intended to be used for the identification of a single                                     
	// "preferred" or "definitive" record by comparison with other records.                                                          
	TechnicalAssuranceTypeID                                                                    *string                              `json:"TechnicalAssuranceTypeID,omitempty"`
	// This describes the reason that caused the creation of a new version of this master data.                                      
	VersionCreationReason                                                                       *string                              `json:"VersionCreationReason,omitempty"`
	// A remark, comment or generic description.                                                                                     
	Description                                                                                 *string                              `json:"Description,omitempty"`
	// Has the wellbore opening interval been gravel-packed.                                                                         
	IsGravelPack                                                                                *bool                                `json:"IsGravelPack,omitempty"`
	// A list of Associated Isolated Interval IDs                                                                                    
	IsolatedIntervalIDs                                                                         []string                             `json:"IsolatedIntervalIDs,omitempty"`
	// This is the bottom MD of the interval (copied from Perf Interval)                                                             
	MeasuredDepthBase                                                                           *float64                             `json:"MeasuredDepthBase,omitempty"`
	// This is the top MD of the interval (copied from Perf Interval). For the instance of a                                         
	// Packer being set mid-Interval, you'd split into 2 Wellbore Openings w/ the top of the                                         
	// bottom interval being the bottom of the packer. Note that the original Perf Interval                                          
	// would not be changed for this occurrence; instead the Wellbore Opening would be split to                                      
	// reflect this.                                                                                                                 
	MeasuredDepthTop                                                                            *float64                             `json:"MeasuredDepthTop,omitempty"`
	// Name/Label for WellboreOpening i.e. for display on log                                                                        
	Name                                                                                        *string                              `json:"Name,omitempty"`
	// Perf Interval which created the Wellbore Opening — this would be absent for open hole or                                      
	// slotted liner.                                                                                                                
	PerforationIntervalID                                                                       *string                              `json:"PerforationIntervalID,omitempty"`
	// The relationships to reservoirs, to which this WellboreOpening connects. In the most                                          
	// common cases this will be a single reservoir. This array can be left empty when the                                           
	// ReservoirSegmentIDs property is populated since each ReservoirSegment will identify a                                         
	// unique Reservoir.                                                                                                             
	ReservoirIDs                                                                                []string                             `json:"ReservoirIDs,omitempty"`
	// The relationship to the ReservoirSegments, to which this WellboreOpening connects.                                            
	// ReservoirSegments offer a finer granularity of connection. ReservoirSegmentIDs may stay                                       
	// empty in case of reservoirs not sub-divided into ReservoirSegments.                                                           
	ReservoirSegmentIDs                                                                         []string                             `json:"ReservoirSegmentIDs,omitempty"`
	// The vertical measurement reference for the interval top and base. Either                                                      
	// VerticalMeasurement with supplementing type properties or VerticalMeasurementID (an                                           
	// external vertical reference defined in the object VerticalReferenceEntityID) are                                              
	// populated.                                                                                                                    
	VerticalMeasurement                                                                         *AbstractFacilityVerticalMeasurement `json:"VerticalMeasurement,omitempty"`
	// Business natural key or code of the Wellbore to which this record belongs                                                     
	WellboreID                                                                                  string                               `json:"WellboreID"`
	// The history of life cycle states this WellboreOpening has been through.                                                       
	WellboreOpeningStates                                                                       []WellboreOpeningState               `json:"WellboreOpeningStates,omitempty"`
	// The type of Wellbore Opening created along the wellbore reservoir interval. Note: does                                        
	// not include GravelPack which is placed behind the opening, see IsGravelPack.                                                  
	WellboreOpeningTypeID                                                                       *string                              `json:"WellboreOpeningTypeID,omitempty"`
	ExtensionProperties                                                                         map[string]interface{}               `json:"ExtensionProperties,omitempty"`
}

// The life cycle status of a WellboreOpening at some point in time.
type WellboreOpeningState struct {
	// The date and time at which the WellboreOpening state becomes effective.                          
	EffectiveDateTime                                                                        *time.Time `json:"EffectiveDateTime,omitempty"`
	// A comment or remark attributed to the state.                                                     
	Remark                                                                                   *string    `json:"Remark,omitempty"`
	// The date and time at which the WellboreOpening state is no longer in effect.                     
	TerminationDateTime                                                                      *time.Time `json:"TerminationDateTime,omitempty"`
	// WellboreOpening State Type is a set of major phases that are significant to regulators           
	// and/or business stakeholders.                                                                    
	WellboreOpeningStateTypeID                                                               *string    `json:"WellboreOpeningStateTypeID,omitempty"`
}

type PurpleType string

const (
	PurpleAnyCRSLineString      PurpleType = "AnyCrsLineString"
	PurpleAnyCRSMultiLineString PurpleType = "AnyCrsMultiLineString"
	PurpleAnyCRSMultiPoint      PurpleType = "AnyCrsMultiPoint"
	PurpleAnyCRSMultiPolygon    PurpleType = "AnyCrsMultiPolygon"
	PurpleAnyCRSPoint           PurpleType = "AnyCrsPoint"
	PurpleAnyCRSPolygon         PurpleType = "AnyCrsPolygon"
)

type AnyCRSGeoJSONPointType string

const (
	AnyCRSGeometryCollection    AnyCRSGeoJSONPointType = "AnyCrsGeometryCollection"
	FluffyAnyCRSLineString      AnyCRSGeoJSONPointType = "AnyCrsLineString"
	FluffyAnyCRSMultiLineString AnyCRSGeoJSONPointType = "AnyCrsMultiLineString"
	FluffyAnyCRSMultiPoint      AnyCRSGeoJSONPointType = "AnyCrsMultiPoint"
	FluffyAnyCRSMultiPolygon    AnyCRSGeoJSONPointType = "AnyCrsMultiPolygon"
	FluffyAnyCRSPoint           AnyCRSGeoJSONPointType = "AnyCrsPoint"
	FluffyAnyCRSPolygon         AnyCRSGeoJSONPointType = "AnyCrsPolygon"
)

type FluffyType string

const (
	AnyCRSFeature FluffyType = "AnyCrsFeature"
)

type AsIngestedCoordinatesType string

const (
	AnyCRSFeatureCollection AsIngestedCoordinatesType = "AnyCrsFeatureCollection"
)

type TentacledType string

const (
	PurpleLineString      TentacledType = "LineString"
	PurpleMultiLineString TentacledType = "MultiLineString"
	PurpleMultiPoint      TentacledType = "MultiPoint"
	PurpleMultiPolygon    TentacledType = "MultiPolygon"
	PurplePoint           TentacledType = "Point"
	PurplePolygon         TentacledType = "Polygon"
)

type GeoJSONPointType string

const (
	FluffyLineString      GeoJSONPointType = "LineString"
	FluffyMultiLineString GeoJSONPointType = "MultiLineString"
	FluffyMultiPoint      GeoJSONPointType = "MultiPoint"
	FluffyMultiPolygon    GeoJSONPointType = "MultiPolygon"
	FluffyPoint           GeoJSONPointType = "Point"
	FluffyPolygon         GeoJSONPointType = "Polygon"
	GeometryCollection    GeoJSONPointType = "GeometryCollection"
)

type StickyType string

const (
	Feature StickyType = "Feature"
)

type Wgs84CoordinatesType string

const (
	FeatureCollection Wgs84CoordinatesType = "FeatureCollection"
)

type ReferenceKind string

const (
	AzimuthReference ReferenceKind = "AzimuthReference"
	CRS              ReferenceKind = "CRS"
	DateTime         ReferenceKind = "DateTime"
	Unit             ReferenceKind = "Unit"
)

type AnyCRSGeoJSONPointCoordinate struct {
	Double     *float64
	UnionArray []PurpleCoordinate
}

func (x *AnyCRSGeoJSONPointCoordinate) UnmarshalJSON(data []byte) error {
	x.UnionArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.UnionArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *AnyCRSGeoJSONPointCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.UnionArray != nil, x.UnionArray, false, nil, false, nil, false, nil, false)
}

type PurpleCoordinate struct {
	Double     *float64
	UnionArray []FluffyCoordinate
}

func (x *PurpleCoordinate) UnmarshalJSON(data []byte) error {
	x.UnionArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.UnionArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *PurpleCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.UnionArray != nil, x.UnionArray, false, nil, false, nil, false, nil, false)
}

type FluffyCoordinate struct {
	Double      *float64
	DoubleArray []float64
}

func (x *FluffyCoordinate) UnmarshalJSON(data []byte) error {
	x.DoubleArray = nil
	object, err := unmarshalUnion(data, nil, &x.Double, nil, nil, true, &x.DoubleArray, false, nil, false, nil, false, nil, false)
	if err != nil {
		return err
	}
	if object {
	}
	return nil
}

func (x *FluffyCoordinate) MarshalJSON() ([]byte, error) {
	return marshalUnion(nil, x.Double, nil, nil, x.DoubleArray != nil, x.DoubleArray, false, nil, false, nil, false, nil, false)
}

func unmarshalUnion(data []byte, pi **int64, pf **float64, pb **bool, ps **string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) (bool, error) {
	if pi != nil {
			*pi = nil
	}
	if pf != nil {
			*pf = nil
	}
	if pb != nil {
			*pb = nil
	}
	if ps != nil {
			*ps = nil
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.UseNumber()
	tok, err := dec.Token()
	if err != nil {
			return false, err
	}

	switch v := tok.(type) {
	case json.Number:
			if pi != nil {
					i, err := v.Int64()
					if err == nil {
							*pi = &i
							return false, nil
					}
			}
			if pf != nil {
					f, err := v.Float64()
					if err == nil {
							*pf = &f
							return false, nil
					}
					return false, errors.New("Unparsable number")
			}
			return false, errors.New("Union does not contain number")
	case float64:
			return false, errors.New("Decoder should not return float64")
	case bool:
			if pb != nil {
					*pb = &v
					return false, nil
			}
			return false, errors.New("Union does not contain bool")
	case string:
			if haveEnum {
					return false, json.Unmarshal(data, pe)
			}
			if ps != nil {
					*ps = &v
					return false, nil
			}
			return false, errors.New("Union does not contain string")
	case nil:
			if nullable {
					return false, nil
			}
			return false, errors.New("Union does not contain null")
	case json.Delim:
			if v == '{' {
					if haveObject {
							return true, json.Unmarshal(data, pc)
					}
					if haveMap {
							return false, json.Unmarshal(data, pm)
					}
					return false, errors.New("Union does not contain object")
			}
			if v == '[' {
					if haveArray {
							return false, json.Unmarshal(data, pa)
					}
					return false, errors.New("Union does not contain array")
			}
			return false, errors.New("Cannot handle delimiter")
	}
	return false, errors.New("Cannot unmarshal union")
}

func marshalUnion(pi *int64, pf *float64, pb *bool, ps *string, haveArray bool, pa interface{}, haveObject bool, pc interface{}, haveMap bool, pm interface{}, haveEnum bool, pe interface{}, nullable bool) ([]byte, error) {
	if pi != nil {
			return json.Marshal(*pi)
	}
	if pf != nil {
			return json.Marshal(*pf)
	}
	if pb != nil {
			return json.Marshal(*pb)
	}
	if ps != nil {
			return json.Marshal(*ps)
	}
	if haveArray {
			return json.Marshal(pa)
	}
	if haveObject {
			return json.Marshal(pc)
	}
	if haveMap {
			return json.Marshal(pm)
	}
	if haveEnum {
			return json.Marshal(pe)
	}
	if nullable {
			return json.Marshal(nil)
	}
	return nil, errors.New("Union must not be null")
}
